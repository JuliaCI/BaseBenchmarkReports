cset: moving following pidspec: 29424
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.645577227 seconds)
loading group "shootout"... done (took 1.119144467 seconds)
loading group "string"... done (took 0.418705908 seconds)
loading group "linalg"... done (took 7.75056058 seconds)
loading group "parallel"... done (took 0.159738822 seconds)
loading group "find"... done (took 1.29044857 seconds)
loading group "tuple"... done (took 1.898242705 seconds)
loading group "union"... done (took 12.367608618 seconds)
loading group "dates"... done (took 1.339991985 seconds)
loading group "micro"... done (took 0.201736355 seconds)
loading group "simd"... done (took 4.308850823 seconds)
loading group "io"... done (took 0.980877659 seconds)
loading group "random"... done (took 8.597278998 seconds)
loading group "problem"... done (took 1.449237014 seconds)
loading group "array"... done (took 19.315779441 seconds)
loading group "misc"... done (took 1.471260969 seconds)
loading group "scalar"... done (took 39.380140926 seconds)
loading group "sort"... done (took 3.094796918 seconds)
loading group "sparse"... done (took 11.680541637 seconds)
loading group "collection"... done (took 17.075395661 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.49260485 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.117873527 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.122355749 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.115391578 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.191822294 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.116098792 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.117980016 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.080536965 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.801305878 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.133604181 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.106343201 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.410804397 seconds)
done (took 5.136678097 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.161991641 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083195705 seconds)
    (2/2) benchmarking "String"...
    done (took 0.07512028 seconds)
  done (took 1.270209982 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.060925674 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128244956 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.061811486 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.0620363 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.061677123 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.061921593 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.061766897 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.061527031 seconds)
  done (took 1.610961917 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.067546579 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.063586185 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.060922798 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.062840287 seconds)
  done (took 1.370649052 seconds)
done (took 5.603724253 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.229764744 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.094634508 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.275774638 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.375144776 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.456969052 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.089792697 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.070563717 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.065315151 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.125281087 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.32833442 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.096939488 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.172550036 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.084436107 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.165423002 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.949852442 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.113944008 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081577259 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.116621151 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.08915982 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127798857 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.36800241 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.07319075 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.06894034 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.065875786 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.063129281 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.641181505 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.651681217 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.12442556 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079349049 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.09512355 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.112083181 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.642391119 seconds)
  done (took 10.241495147 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.087498354 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.08438365 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.06466021 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.118608451 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.088694864 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.065041862 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070075038 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.06295276 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.082681742 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.117205962 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.085887155 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.092220547 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.061972489 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.064107294 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.069542602 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.190346421 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.074944171 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.075781889 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.062855882 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075341445 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.100360796 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.072790943 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.072678569 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.072570836 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.123109037 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.163905974 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.091966535 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.093487081 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.061471278 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.073402507 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.110484813 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.120707788 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.063581081 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.061109954 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.117557796 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.090430597 seconds)
  done (took 4.346854652 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.931039644 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.088827134 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.094254269 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.585347355 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.061731095 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.142239773 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.224305184 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.068157577 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.294524083 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.140732264 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.131989218 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.139584 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.110412463 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.06777873 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.15207904 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.110418238 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.44811457 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.063416304 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.062572134 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.061260523 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.063163526 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.062946861 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.059219551 seconds)
    (23/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.059593358 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.064482919 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.089440538 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.081819419 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.155428409 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.909447681 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.273452986 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.063191929 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.161701252 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.08324204 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.351026874 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.065780781 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.077063165 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.400397479 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.079326987 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.118004102 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.061502666 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.159974326 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.111425041 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.060212948 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.113856848 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.073110224 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.064516718 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.064485626 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.063952916 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066519344 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.076709045 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.096498509 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.063243853 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.060981467 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.160699223 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.060257924 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.06225083 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.062468827 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.145837337 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.060103714 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.13346921 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.060525375 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.064415323 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.095567681 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.063969298 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.081590744 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.089471784 seconds)
    (66/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.059821787 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.329999045 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.025620463 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.06343394 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.085094752 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.073599025 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.061339924 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.065622599 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.061977254 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.063038444 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.062765092 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.067592199 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.065597499 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.064064034 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.103180175 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.06258707 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.065338604 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.062030469 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.06714523 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.092625368 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.06272181 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.463180674 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.095550155 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.061818769 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.070996348 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.100215319 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.06271682 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.066915412 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.063165746 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.062548543 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.061960237 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.062261257 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.065322457 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.05994081 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.089864888 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.065224859 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.108241975 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.134753463 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.064732136 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.062216121 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.068162312 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.064945959 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.065358215 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.06262599 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.064562156 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.063698354 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.061244383 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.101601174 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.062525165 seconds)
  done (took 20.947210891 seconds)
done (took 37.578895845 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.237795373 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.07317007 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075926017 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.073461396 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.073535222 seconds)
  done (took 1.749676262 seconds)
done (took 2.954491255 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.101810577 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.059968995 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.094416014 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.092874361 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.059763141 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.059823153 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.095248524 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.060214973 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.092132306 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.09345369 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.095159135 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.094481546 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.059883535 seconds)
  done (took 2.272061834 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.065824542 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.076396346 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.078032199 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.057814593 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.067413182 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.076889823 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.057808342 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.076183456 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.082598702 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.077108671 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.076565392 seconds)
  done (took 1.993179778 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.065030775 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.076302206 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.078425688 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.057522471 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.068367088 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.07633736 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.058138334 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.076723017 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.079073174 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.076380288 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.076042088 seconds)
  done (took 1.981762469 seconds)
done (took 7.440801797 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.061582234 seconds)
  done (took 1.239662951 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.482439943 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.10866979 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.063455477 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.080855329 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.176511356 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.086521604 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.189834886 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.066347054 seconds)
  done (took 7.598331965 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.090570875 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.063915014 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.064410303 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.066398799 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.064009595 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.062876559 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.06464303 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.064311431 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.062826343 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.06479196 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.064942012 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.064859117 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.063183018 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.063434502 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.063260032 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.064372056 seconds)
  done (took 2.330069802 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092295229 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091128503 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.067597004 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.068150683 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.066183369 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.065990451 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.068177399 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.067114465 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.064854206 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.066473586 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.067346793 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.066228108 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.066308034 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.058182934 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.068025817 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.068297409 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.064446151 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.067768803 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.068162605 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.069118866 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.067692802 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.057999778 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.066177746 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.067326579 seconds)
  done (took 2.940418252 seconds)
done (took 15.302303124 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.169052809 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.069335044 seconds)
  done (took 1.424507424 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.06343068 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.064573397 seconds)
  done (took 1.329196551 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.068974702 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.056675734 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.073555331 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.065437933 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.057295994 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.056601201 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.071733298 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.05751154 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.056580216 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.057421667 seconds)
  done (took 1.82331367 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.058904638 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.064360386 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.062447685 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.063681146 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.062140755 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.057898043 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.060455315 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.058122105 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.064252691 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.057782435 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.061405919 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.075899743 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.060718826 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.077001545 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.06040897 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.061347887 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.062747705 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.060421476 seconds)
  done (took 2.333770056 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.057153279 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.058119272 seconds)
  done (took 1.326071984 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.06034828 seconds)
    (2/7) benchmarking "second"...
    done (took 0.057828016 seconds)
    (3/7) benchmarking "month"...
    done (took 0.060284861 seconds)
    (4/7) benchmarking "year"...
    done (took 0.060044788 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.057184862 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.057519492 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.057344604 seconds)
  done (took 1.613758518 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.387108629 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.114622416 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.318071324 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.06355744 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.071319452 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.238284402 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.059483954 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.063810619 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.063412355 seconds)
  done (took 2.625780107 seconds)
done (took 13.688828195 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.076246078 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.167685217 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.083173422 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.392697669 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.086338504 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.063262531 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.109166894 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.162840022 seconds)
done (took 2.366908121 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.223204895 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.246580941 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.85635753 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.065249786 seconds)
  done (took 3.381123856 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.305249643 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.073919527 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.073044846 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.06303632 seconds)
  done (took 1.735560155 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.060905216 seconds)
    (2/2) benchmarking "read"...
    done (took 0.066619019 seconds)
  done (took 1.346585207 seconds)
done (took 7.910370419 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.060216942 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.059317524 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.08618692 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.059694231 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.059178628 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.059603531 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.059457449 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.058986285 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.059279346 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.058897471 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.058809428 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.058785404 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059123299 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.059124872 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.059186713 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058857154 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.058732268 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.059657039 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.059155942 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.05991016 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060630352 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.059340899 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.059772991 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.059513763 seconds)
  done (took 2.697955983 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.074780441 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.0613989 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.062620716 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.062159283 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.062494357 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.061812317 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.061966557 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.060923202 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.062211307 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.060611522 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06229257 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.062656852 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.060681843 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.06254324 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060788511 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.0623866 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.062410303 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062588722 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062053458 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.063821947 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.062511951 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060933524 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.06321 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062693292 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.062238011 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062275017 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.061136769 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.061079882 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062216723 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.062599863 seconds)
  done (took 3.103221797 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.060517947 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.055574231 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.056268733 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.065234092 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.056358183 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.056270975 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.056736082 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.056017571 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.056380784 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.057210108 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.05632688 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.056040267 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.057020515 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.055757213 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.056241005 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.056952914 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.061610497 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.07487975 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.057388713 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.056738305 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.060931588 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.057125383 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.056596418 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.056575541 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.057377787 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.056996996 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.056638395 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.057856856 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.057224407 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.057518801 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.057028536 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.061208954 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.061904219 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.057310791 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.066665438 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.071154081 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.057299631 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.061326499 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.058610328 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.056868299 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.056724245 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.05670157 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.056840611 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.05692831 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.06644835 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.057903833 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.058266865 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.057455535 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.057178811 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.056830087 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.056814392 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.0584327 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.062153806 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.058609871 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.05691641 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.058027942 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.057073321 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.058068682 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.05687489 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.057746886 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.056769756 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.060254552 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.058502081 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.057716459 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.075357072 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.058529792 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.06626079 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.058725604 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.05662467 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.059124853 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.056030298 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.071915463 seconds)
  done (took 5.479154193 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.07661619 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079838754 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06120278 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.060431388 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.056507244 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.055812277 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.063208542 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.056402776 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060321263 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.074573317 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.056266364 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.060097583 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060708591 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.060534133 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.056967804 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.061932395 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.065422065 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.057762601 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.057496835 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.061375476 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.057350227 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.063667157 seconds)
  done (took 2.610390068 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.129980214 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.061713443 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.097367125 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.069249054 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063901741 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069177299 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.061852852 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.061092075 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061619699 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061832277 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061908547 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061133971 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063624332 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062118175 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061669528 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.061628544 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061667118 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.061923717 seconds)
  done (took 2.471822745 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.071304567 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.061731189 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.080926 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.061342723 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.062488218 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.060758215 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0643139 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.065008267 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.060875751 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06121716 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.064759178 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06075063 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.060499589 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061293873 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060472484 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.061398432 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.060594054 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06162414 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064513273 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064550972 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.064329017 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064931822 seconds)
  done (took 2.639486899 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071466719 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.061050125 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074445925 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.061741212 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.056094602 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.055986896 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.061153614 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.060875702 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.060986686 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.059881425 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060502856 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.056201685 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.061637329 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.060320139 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.062195145 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060479709 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.060359749 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.060578528 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060736493 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.056290886 seconds)
  done (took 2.463903031 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080927109 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.058395156 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.058817693 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076743802 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.058857162 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.058988955 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076550738 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.058208378 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.058617609 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07886841 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.058404461 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.058523815 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077159242 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07626756 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.05861221 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076830366 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076496499 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076502573 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.058192956 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058461792 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078643105 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.058197299 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076685044 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.058260437 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.05879868 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.058697142 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.058574159 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076728687 seconds)
  done (took 3.10572313 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.060053153 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.059358131 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.059554817 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.05930734 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.059241 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.059548001 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.059236733 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.059343972 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.058974251 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.05973561 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.059022468 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.05888644 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.059443979 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.059282227 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.059168088 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.058914077 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058964944 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.058995645 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.059271957 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.059210338 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.059024723 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059818989 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.058849513 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.058973357 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.059243407 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.058690296 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.05928695 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.059713942 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.058844751 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.05945926 seconds)
  done (took 3.022505176 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.068580425 seconds)
    (2/2) benchmarking "in"...
    done (took 0.066858368 seconds)
  done (took 1.379764628 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.057519069 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07205035 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.056143317 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067291419 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.063841012 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.059517935 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.064213044 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063824428 seconds)
  done (took 1.746073268 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.062147076 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.084331719 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.057591726 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.058800077 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.060701859 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.113813794 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.069322165 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.071443037 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.070238512 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.060415624 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.058001279 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.068812039 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.057192875 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.069808985 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.058754121 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065936984 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06456018 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069014437 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.06940838 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.056070503 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068517528 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.058049716 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.05639166 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.058284543 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.057167888 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.063757093 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.071673699 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.068623412 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.065176106 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.055422935 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.074819458 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.056238038 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.057465941 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.065697353 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.060591049 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.056121185 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.090375562 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.056935709 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.061348809 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.056055828 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.06769374 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075535542 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.069486737 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.07296184 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.057912216 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.058433861 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.056296046 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.057971551 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.059886734 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.066153585 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.057592172 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064588956 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.056266358 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.058628638 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.06675234 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.056770309 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.061368841 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.064888267 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069098572 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.066185932 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.06427844 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.071680963 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.066010822 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.06502365 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.058700679 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075869577 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.059312195 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069982565 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.0717681 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.058633266 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070540383 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.057312641 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.057154846 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.057359454 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087719996 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.058261301 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.057230575 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.056846329 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.056389016 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.057692818 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.065378652 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061013569 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063342168 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.059535355 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070644665 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.065183798 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.056448118 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.062563718 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.07247996 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.059990344 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.0564711 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.071120269 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.059247732 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.055695073 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.072365105 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.06501155 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.058049617 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.057026717 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.059390085 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.068760468 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.057155792 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.055433189 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06370373 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.057407636 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.058479954 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.060144777 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.063523476 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.055861987 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.06580127 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.059944888 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.057778694 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.05468246 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.05935697 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.056590208 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.054384486 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.063614509 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.055552409 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.068645423 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.061416509 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.068633681 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.068770473 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.064710241 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069783209 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.054939082 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.054585089 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.071458267 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.063987105 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.056332846 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.070984594 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.054936878 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.064834348 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.187648218 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.059082802 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.067052518 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.056821469 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.060371755 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.058388456 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.061802298 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.059268019 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.059054826 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.061533418 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.06556394 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.067956633 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.058241015 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.065288229 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.057418898 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.071885189 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.066395972 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.061603505 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.060664897 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.057453647 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.067815954 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.063088127 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.065883495 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.056602437 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.057484892 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.057365274 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.066143647 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.066032525 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.058248234 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.063351642 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.060842625 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.057552565 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.056971229 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.058271211 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.0602382 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059914727 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.05717301 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.063663761 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.065128141 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.072377577 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064202636 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.065403653 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.055827133 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.056684614 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.058562941 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.056388783 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.060444454 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.065518916 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.070985951 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.067571649 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.075948129 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.056331154 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.065496516 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.057799284 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.071984778 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.068686799 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.057540872 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.06096655 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.05573495 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.057952298 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.065136392 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.067386359 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.069269335 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.0702395 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.061184941 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.061032736 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.056163419 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.070206567 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.057775392 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065994922 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.067023472 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.062029106 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.05798844 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.059032485 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.06463629 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.060880259 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.056582109 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.070843051 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.06227624 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.05626126 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.069825086 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.056705506 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.066403312 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.05631105 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.059792742 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.061679992 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.058322701 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.065284336 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070454087 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.055721487 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.057257891 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070777627 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.05858181 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.057956666 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.064283968 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.070577979 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.0612921 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.064094671 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066474869 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.065604997 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.060491047 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.065013473 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.057052726 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.064943968 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.059324354 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.067410597 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.055843915 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.072299221 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.055236107 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.069835922 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.056330724 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.065931155 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.056571092 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.064593844 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.056795272 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.071269368 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.057629173 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.056163212 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.066637387 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.05477112 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.06410772 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.055164581 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.060211402 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.061442495 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.064259457 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.05676959 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.063718636 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.056801264 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.06347188 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.059698543 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.062518012 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.063715902 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.059252598 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.054763911 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.062696223 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.065246999 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.19954515 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.059873658 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.059376993 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.058222358 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.066864562 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.058831724 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.059083916 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065387386 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.061553243 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.06256056 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.058219552 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.059046203 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.05811254 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.064708627 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.067030238 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.074559331 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.065051911 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.063741507 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.065711282 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.056802829 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071221646 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.056604344 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.063965005 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.055869817 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.0626403 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.065553454 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.056997146 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.074485811 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.058286369 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.064592038 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068488242 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.064954378 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.060046699 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.073314194 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.060277308 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.065065535 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.064475031 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06093325 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.062766879 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.058445269 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.064456258 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.065959448 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.06704843 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.057351018 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.063432523 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064917727 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.058480068 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.064469502 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.058230153 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.064394635 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.057924916 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.055893694 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.060842557 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.067311386 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.060883914 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.061294845 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.056846956 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.055631176 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.057048851 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.062472916 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.060887076 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.064561528 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.070514525 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.055632092 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.05760985 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.056547144 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.062927978 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.073195277 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.065952579 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.064294593 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.060664645 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.055684144 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.058939099 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.05964617 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.058289481 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.061214225 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.057084151 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.056248878 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066569519 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.058417038 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.060787091 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.057178999 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.057421548 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.065580163 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.060920481 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.057165994 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.063209366 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.056589304 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.061733985 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.055598046 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.057874143 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.060839689 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.056294771 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.060073545 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.066377156 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.07137233 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.06260283 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.064390983 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.057289285 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.063733933 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070675673 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.063012936 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.05724639 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.065050066 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.056184891 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.073243152 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.064986045 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.063933081 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.065056099 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.056909403 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.071816545 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.060158717 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.065543536 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.070442818 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.057072429 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.0620921 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.055439186 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.070046306 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.060010765 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.055795448 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.063181679 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063094171 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.061316348 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.066462671 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.056189309 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.062615549 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.059965013 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.058902363 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.056687007 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.056522863 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.063917774 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.070422324 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.056232593 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.058972467 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.063026532 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.062977546 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.200816958 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069542867 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.066032574 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.058980188 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.059629366 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.061535562 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.058441041 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.068636356 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.057371002 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.061409978 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.061333991 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.057238643 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.063627226 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072547653 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.065770433 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.065601195 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.056672322 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.056556672 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.073294797 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.060541405 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.060363159 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.064464233 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.066184686 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.068621525 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.065446235 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.07243291 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.057525934 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.06219538 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.068012865 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.057262696 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.057198937 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.060738257 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.058376184 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.065551225 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.06656637 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.064206185 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.059123546 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.063263027 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069162383 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.058307341 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.061597817 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.062030755 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.057736515 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.066286963 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.064003208 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.064968392 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.058785868 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.056890193 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.060223634 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.065346954 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.064311128 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.065369125 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.057555029 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.062609855 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.069381971 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.063773941 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.059601314 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.056250226 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.059744814 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.064800683 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.061014383 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.056083172 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.061151159 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.060353962 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.062662564 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.064782782 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.060889023 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.056360001 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.072191273 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.06385156 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.064989617 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.058782926 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.058290735 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.057168012 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.056221687 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.066965282 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.056296023 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.05874343 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.061370232 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.058124102 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.072716251 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.0642287 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.071223784 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.057758819 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.060831232 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.056289466 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.065667568 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.061850324 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.056754306 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.066657878 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.056015086 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.070703628 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.067783935 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.064486691 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.056414426 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.061572221 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.064523257 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.070549263 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.065467698 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.06464723 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.059859921 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.065471652 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.058137241 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.06655283 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.056538442 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.055799855 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.065699321 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.064483016 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.067897915 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.056251304 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.065708473 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.058142958 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.064121747 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.064014278 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.057722729 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.057698914 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.057725946 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.064913915 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.060436991 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.064637189 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.060778242 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.071336198 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.056523592 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.065857955 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.064044082 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.065297137 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068306287 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.066656906 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.063307874 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.055919616 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.062504655 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.063485494 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.056821556 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.060772063 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.058840481 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.07516648 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.196486495 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.059835737 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.071857041 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.063877745 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.057809959 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.063873473 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.063076578 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.067572127 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.058087295 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.066766242 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.060921558 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.057794604 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.061518173 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.061664276 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.056124412 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.056479058 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.057195073 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.066589474 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.061453652 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.057347495 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.074644543 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.058420419 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.065400173 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.067041134 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.063088541 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.058652084 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.055721159 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.057907962 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069475891 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.071272612 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.060881116 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065697968 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.059077529 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.065674849 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.056233715 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.065288836 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.064692271 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065090304 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.056842855 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.057762928 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.087897992 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.071227696 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.061554852 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.065453775 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.065476353 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.058163747 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.076951205 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.065073567 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.058322189 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.066996863 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059108503 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.056117195 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.055917232 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.058204767 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.066999393 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.056494088 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.058959183 seconds)
  done (took 39.080061086 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.092780892 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.058292846 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.057036006 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.057456886 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067194039 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.058027899 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.056611037 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.057719359 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.057630041 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.058958913 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.056802318 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.056539222 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.066459778 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.068449449 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066403506 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.059785479 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.056603605 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.057388763 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.056334438 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.057160799 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.065740486 seconds)
  done (took 2.651928201 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.063143233 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.071090043 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067310501 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071675996 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06397783 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.060186637 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066846171 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060575563 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067603079 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065953819 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.067081088 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060222593 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.0652367 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.065451693 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065303003 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060414772 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.067513405 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063873576 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.060002947 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066853808 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.060435923 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066588623 seconds)
  done (took 2.767735516 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.058017357 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.057290622 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.065890555 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.056403815 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.056037529 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.060754998 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.057556222 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.061403805 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.061639755 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.06098845 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.064938033 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.056725415 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.055810534 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.061539584 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.056527689 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.057226812 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.095617349 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.057164119 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.057098783 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.056100487 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.06157237 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.064745189 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.056385345 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.056730522 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.060789923 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.059016934 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.056436761 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.05846955 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.056960432 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.060325639 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.057318097 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.056040562 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.064640094 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.064020717 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.060318117 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.060889622 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.05765476 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.057002475 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.056057173 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.056177627 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.064294807 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.05760067 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.056426398 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.057561605 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.064855691 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.056266979 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.055879787 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.064809489 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.056861509 seconds)
  done (took 4.27743068 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.066199669 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.10402868 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.062168377 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086520178 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.068175036 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.061659842 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.061808823 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.087183991 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.057185493 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.059011202 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.068689359 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.069533961 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.058977799 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.061008875 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.061218503 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.05922959 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.059398862 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.058100049 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.061487688 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.058290967 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.061255806 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.062560469 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.068086994 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.068722734 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.059865481 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.057882873 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.058574595 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.059843945 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.068605984 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.061753132 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.060329541 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.060504204 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.068388206 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.063608904 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.058616103 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.058603031 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.068693328 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.059011995 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.058819749 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.057375594 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.058725416 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.060090483 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.063255454 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.069075211 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.059087179 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.063312879 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.059172404 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.057148174 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.068811932 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.058898815 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.062839124 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.069709748 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.060249454 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.059202933 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.060283326 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.068649168 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.059346865 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.057987437 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.059458161 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.068555221 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.057685607 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.060022595 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.069246117 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.058433651 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.06205491 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.069549261 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.063988335 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.05998567 seconds)
  done (took 5.771774883 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065608814 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.088055169 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067122482 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066649251 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06595995 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.066085848 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066362622 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.066762903 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.06624444 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.066481072 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066305761 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.102671177 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.062742026 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.070634838 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.066095344 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065962914 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.066183619 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066238499 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06634934 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066513242 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.066140712 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.06653749 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.065984729 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.066578505 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.068376478 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062523258 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065634039 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.065769231 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066414457 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.065977705 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.068715302 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.065995617 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.066074513 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.066414196 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.068576979 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.065700342 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.057345277 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065855009 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.065809314 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066274309 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062929291 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066882077 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066499753 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.062592753 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066357473 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.067131238 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.068219981 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.070520785 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074320865 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.068439572 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.068474849 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.06871042 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068472042 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067087193 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.06672278 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.073173778 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067217809 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067159502 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066625861 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.067026094 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066880772 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.07271452 seconds)
  done (took 5.576474003 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069870512 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.063465015 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.074286163 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.059194791 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.056482353 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065435445 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.056420202 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.056568092 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.062461287 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.062736803 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064532041 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064756085 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066728939 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064984118 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066525423 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068762166 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066990917 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066444778 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06457146 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066807129 seconds)
  done (took 2.659971262 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.070571801 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.073850625 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.063066026 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067078775 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.063683356 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066372609 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.0622314 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063405972 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061911508 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062278542 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066229112 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066233939 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063296615 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06544468 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.065825515 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.065034896 seconds)
  done (took 2.407099278 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.063221399 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.064309924 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.06331307 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.058242961 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.061355201 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.056935742 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.057578023 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.056030497 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.056941036 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.069612917 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.057217597 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068476354 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.057597626 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.056935792 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.057274517 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.062205814 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.056821954 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.057767481 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.057452851 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.061763066 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.063565295 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.058501539 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.061383112 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.05731752 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.062445218 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.063849323 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.058805285 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.060925811 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.057390665 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.057678511 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.062412954 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.063559488 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.057200289 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.057744129 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.056791619 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.057623058 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.057529026 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.057650434 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.062292374 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.057436089 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.056557141 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.061791389 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.057450477 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.058025234 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.056605148 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.057686453 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.056647061 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.062715232 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.057766551 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.062129567 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.057562041 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.058823722 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.058248638 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.063642073 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.059686313 seconds)
  done (took 4.64079779 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072110846 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.061684711 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.056558961 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.056421383 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.061343823 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.062141423 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.061400772 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.061146597 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061792637 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.056430154 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06187908 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.060746663 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061574386 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06179291 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.061413277 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060929741 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.055974879 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.061192247 seconds)
  done (took 2.473993818 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.066986347 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.061932918 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.066309056 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.061655135 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.061391684 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06110793 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.056694171 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.057058379 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.056280513 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.060807477 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060979235 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.060599215 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.057164525 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.060437283 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.061276452 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061069688 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.060581101 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.056960411 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.061357102 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.057079242 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.060556148 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.05704494 seconds)
  done (took 2.694033229 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.082281045 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.078989165 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.118749887 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.074746506 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.082686418 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.067322565 seconds)
  done (took 1.873294117 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087491121 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096943977 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.060760113 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.061365402 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069164321 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.063929962 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.063576357 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.063806509 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068989713 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067389453 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064041884 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068964776 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069387491 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065710973 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069254097 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071224096 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.063839322 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06367759 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.061369101 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071381021 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064130979 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069070297 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064077617 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.063872194 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064034251 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06542476 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071164744 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067317526 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066354257 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069413919 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07116658 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064193436 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06968017 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067617727 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.061494726 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069348191 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064082423 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071722118 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069157886 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065912412 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.060835086 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068907959 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069074253 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066030719 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071527275 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064451121 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065888511 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06437346 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064734103 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073938647 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069083804 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06587494 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069326879 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072104903 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071879772 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075533337 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067941297 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065577034 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069198719 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068143739 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066330277 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070110703 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065533598 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067896401 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071669954 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06546121 seconds)
  done (took 5.859604907 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093849173 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062123253 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064666429 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068401514 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066490146 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064292544 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06420148 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064563522 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.064117808 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.061708295 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096958043 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064996435 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065915902 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066439315 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064400565 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064359104 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.064326073 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065451572 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.061790272 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07356281 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.063928422 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066207614 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065936078 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066026575 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067511281 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071542008 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064195627 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064021715 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064322649 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064272317 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066085512 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064083431 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065810325 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06137572 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065584861 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064130761 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064418091 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06569257 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064099031 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069342567 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065545432 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071568973 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064113515 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064304137 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068238314 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.063994922 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064094516 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.061549798 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.063839827 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.061550527 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067950922 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067975776 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068033219 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066025877 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064660682 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06465894 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064365081 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064425064 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06404048 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071481178 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065799035 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064038735 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073492698 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064136936 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064173838 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065611972 seconds)
  done (took 5.777127501 seconds)
done (took 120.454601383 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.205640222 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.181009284 seconds)
  done (took 1.746066444 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069634294 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.090832489 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.069865277 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128789792 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.067427822 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.10021565 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099761723 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.070776124 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066818635 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066536536 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066594433 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068935799 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131441755 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067183407 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066986293 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069103461 seconds)
  done (took 2.679986021 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.100250253 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.171999272 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.106158871 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06501517 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099693239 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.070952404 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064799395 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074855121 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.068203235 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.066419848 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.071046009 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069522274 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.06668224 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069618927 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.068446766 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.07096709 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066792566 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.070991392 seconds)
  done (took 2.825765955 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.088261653 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.080410038 seconds)
  done (took 1.555173953 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.146920016 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.100811041 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.137979793 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.306420861 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.123834199 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.121024464 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.126284203 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.120400052 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.104361496 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.116886288 seconds)
  done (took 2.78759544 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099614479 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.16641099 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.293108319 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.113496867 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.070931733 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.092436231 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.114159821 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.07676072 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.074292986 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.073705755 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.07666606 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.071458758 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.094621758 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.070747576 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.069891575 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.071682546 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.097531357 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.069161367 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.069963428 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.070432878 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.098081739 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065696657 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.0707755 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.069371438 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.072151368 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.07213436 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066927884 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065589441 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.070433595 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.069945004 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.07297097 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.089720184 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.072731801 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.092073582 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069526008 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.093108228 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.069362131 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.068843682 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.069810934 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.068780582 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.071263969 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.071362203 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.074146846 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.071141162 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.06685548 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.069513195 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.066573202 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065005551 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.073774278 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.065999309 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.072950603 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.072498658 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.092195045 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066644502 seconds)
  done (took 5.822183545 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101288645 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.099746959 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065904482 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.105800636 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098630678 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065322629 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.097378822 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093428229 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.101679992 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065077338 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.064411002 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.064927989 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.071303673 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.073918656 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.109123019 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.100644648 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066893039 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.065236993 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.100903085 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.100423935 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.064692261 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094223127 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.09311464 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.099128326 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.063741059 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.065198612 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.063307123 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.064453535 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.069124328 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.070059726 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.063958073 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.071078675 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.075869077 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.070343205 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.063253997 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.063746311 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.063678294 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.070656014 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.071549718 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.071460261 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.069738534 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.063279331 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.063670616 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.06411079 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.064679287 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.063645023 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.069963778 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.070969932 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.069604019 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.063549613 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.06419478 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.063566759 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.064026618 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.070059401 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.069247164 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.071134674 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.071023426 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.063470613 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.063848355 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.065122067 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.071661063 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.071331728 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.070727475 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.064363353 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.071584067 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.063616116 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.07277492 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.074814446 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.064139251 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.064120736 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.064180429 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.063907078 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.064824539 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.069096156 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.069385326 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.064507624 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.063646186 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0636232 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.071708888 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07012918 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.063919074 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.069150751 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.063381169 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.063577611 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.063883221 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06385872 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.068583769 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.070473665 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.064434172 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.063373327 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.063861829 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.063850629 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.063204564 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.06929388 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.070513276 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.070512037 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.069341437 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.064335276 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.06961277 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.069008245 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.063657921 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.068680146 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.062702198 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06312212 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.062943881 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.068147182 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.06750411 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.069689372 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.062981317 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.062777707 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.068080875 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.070493694 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06272217 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.067325743 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.069993044 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.204423123 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.065025563 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077215963 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064944164 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.072853429 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065019839 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07325984 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064722484 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.070808004 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.064794808 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.064111934 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.064892919 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.070745883 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065085096 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.064297644 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.064749402 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.064897556 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.07104434 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.073448736 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.064997097 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.070559821 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.071282519 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.065038757 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.07003164 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065176858 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.071378788 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.064455167 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.064542529 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.063879439 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.073151446 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.064573443 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.064950516 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.064662427 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.072224346 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.064481556 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.072156441 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.069881194 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.063747492 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.073702402 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.072596879 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.069854979 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.073170953 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065284735 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.065014394 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.064223611 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.064562632 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.0696592 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07080539 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065115129 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.064279571 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.069472238 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.072512198 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.063662217 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.069816833 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.069539606 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.069978105 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.064397869 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.064396851 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.072692464 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.071839057 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.070385657 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.070060939 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.070747133 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.064042057 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.069571358 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.070597819 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06412286 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076147577 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.063990138 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.073595387 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.069895629 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.069053096 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.070752979 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.07193924 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.072214842 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.072402589 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.07360518 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.063723015 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.064243082 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.070351604 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.064363105 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.063823016 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.069794642 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.064370771 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.064679805 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.074150092 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.064030983 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.072318922 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.063414075 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.070724021 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.064004563 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064422664 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.074759847 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06472735 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.064611004 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.069489675 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.064257755 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.069928379 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.071999651 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.069847721 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.063883053 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064125238 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.070368228 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.070444566 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.063333039 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.0629106 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06333483 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.067927438 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.06722725 seconds)
  done (took 17.11737899 seconds)
done (took 35.931563023 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.195291388 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152859249 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.186302512 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.109161508 seconds)
  done (took 2.129550233 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.086073001 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.093482332 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.07105083 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.060820036 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.075932851 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.060820262 seconds)
  done (took 1.879960015 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.250732128 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.177211912 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.162801522 seconds)
  done (took 2.018401162 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.203913002 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.180858395 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.458370465 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.279023735 seconds)
  done (took 2.644574977 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.121604499 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.072748732 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.058958562 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.069242756 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.097259637 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.124488127 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.080403747 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.101050193 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.069557859 seconds)
  done (took 2.284225153 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.122018305 seconds)
done (took 12.530660521 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Float64, false)...
    done (took 0.155646793 seconds)
    (2/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.076265985 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067059619 seconds)
    (4/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.071982345 seconds)
    (5/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.073459657 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.150478242 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.063290506 seconds)
    (8/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.253812576 seconds)
    (9/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.070974871 seconds)
    (10/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.069129958 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.112124551 seconds)
    (12/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.23690136 seconds)
    (13/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.205632871 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.07129793 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.116625782 seconds)
    (16/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.165037669 seconds)
    (17/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.064695366 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.091826285 seconds)
    (19/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.069473916 seconds)
    (20/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.178943225 seconds)
    (21/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.425126939 seconds)
    (22/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.1635981 seconds)
    (23/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.183362675 seconds)
    (24/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075280803 seconds)
    (25/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.088559763 seconds)
    (26/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.069359762 seconds)
    (27/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.172370297 seconds)
    (28/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.089262887 seconds)
    (29/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.071761802 seconds)
    (30/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.084296678 seconds)
    (31/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.167032229 seconds)
    (32/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.071526863 seconds)
    (33/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.06214195 seconds)
    (34/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.092442651 seconds)
    (35/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.068147184 seconds)
    (36/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.213176436 seconds)
    (37/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.160379858 seconds)
    (38/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.155713258 seconds)
    (39/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.155503895 seconds)
    (40/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.061960332 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.08244649 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.082021956 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.068459446 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.08545228 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.061231063 seconds)
    (46/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.169476248 seconds)
    (47/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.071472859 seconds)
    (48/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.059453259 seconds)
    (49/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.069211788 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.113959318 seconds)
    (51/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.068871627 seconds)
    (52/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.071711172 seconds)
    (53/309) benchmarking ("sort", Bool, false)...
    done (took 0.140205378 seconds)
    (54/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066200997 seconds)
    (55/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.06164828 seconds)
    (56/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.14052339 seconds)
    (57/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.163245745 seconds)
    (58/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.069392015 seconds)
    (59/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.159907978 seconds)
    (60/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.067896757 seconds)
    (61/309) benchmarking ("sort", Int64, false)...
    done (took 0.062584016 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.076805458 seconds)
    (63/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.060760231 seconds)
    (64/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.060555268 seconds)
    (65/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.069995615 seconds)
    (66/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.163978511 seconds)
    (67/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.137977697 seconds)
    (68/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.059393024 seconds)
    (69/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.176435653 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.085029848 seconds)
    (71/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.06900199 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.085163368 seconds)
    (73/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.14626256 seconds)
    (74/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.063273354 seconds)
    (75/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.070658468 seconds)
    (76/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070609218 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.121464755 seconds)
    (78/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.067150365 seconds)
    (79/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.060790945 seconds)
    (80/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.063277061 seconds)
    (81/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.071774463 seconds)
    (82/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066237427 seconds)
    (83/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.192595345 seconds)
    (84/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.060959467 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.115110037 seconds)
    (86/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.131236335 seconds)
    (87/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.148836719 seconds)
    (88/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.17421499 seconds)
    (89/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.071595768 seconds)
    (90/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.377989424 seconds)
    (91/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072559785 seconds)
    (92/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.06294879 seconds)
    (93/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.177048873 seconds)
    (94/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.179124963 seconds)
    (95/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.223084805 seconds)
    (96/309) benchmarking ("sort", Float32, false)...
    done (took 0.130793923 seconds)
    (97/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.062099636 seconds)
    (98/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.070272508 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.076051824 seconds)
    (100/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.069746063 seconds)
    (101/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.069993975 seconds)
    (102/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.220941567 seconds)
    (103/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.175271293 seconds)
    (104/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.062808666 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.113976654 seconds)
    (106/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.088356254 seconds)
    (107/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.069108867 seconds)
    (108/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.163115572 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.136789545 seconds)
    (110/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.168326245 seconds)
    (111/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.068622373 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.141920967 seconds)
    (113/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.063478387 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.142684153 seconds)
    (115/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.156021181 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.083129296 seconds)
    (117/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.065893462 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.082587359 seconds)
    (119/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.212587624 seconds)
    (120/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.204617629 seconds)
    (121/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.212016903 seconds)
    (122/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.061244169 seconds)
    (123/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.189991941 seconds)
    (124/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.061810185 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.082384002 seconds)
    (126/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.098648135 seconds)
    (127/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.171022978 seconds)
    (128/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.135253382 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.061418548 seconds)
    (130/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.088536949 seconds)
    (131/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072024973 seconds)
    (132/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.06927703 seconds)
    (133/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.142594596 seconds)
    (134/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.069261769 seconds)
    (135/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.083303696 seconds)
    (136/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.062017539 seconds)
    (137/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.061847834 seconds)
    (138/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.060345518 seconds)
    (139/309) benchmarking ("sort", BigInt, false)...
    done (took 0.243648234 seconds)
    (140/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.140821664 seconds)
    (141/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.187974036 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.061654726 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.082431304 seconds)
    (144/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071041692 seconds)
    (145/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.062058656 seconds)
    (146/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.070366286 seconds)
    (147/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.181758618 seconds)
    (148/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071162475 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.110622585 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.090114926 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.119327842 seconds)
    (152/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.060172504 seconds)
    (153/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.059768501 seconds)
    (154/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.07042996 seconds)
    (155/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.133581554 seconds)
    (156/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.06886156 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.085636675 seconds)
    (158/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.139501472 seconds)
    (159/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.067832701 seconds)
    (160/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.061928401 seconds)
    (161/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.067468915 seconds)
    (162/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.061256551 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.082590071 seconds)
    (164/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.069200487 seconds)
    (165/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.06004713 seconds)
    (166/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.062120747 seconds)
    (167/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.061554034 seconds)
    (168/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.060343255 seconds)
    (169/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.059549159 seconds)
    (170/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.071277195 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.128496596 seconds)
    (172/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.061387519 seconds)
    (173/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.062568869 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.061095113 seconds)
    (175/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.084411271 seconds)
    (176/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.072208099 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.112800437 seconds)
    (178/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.067505861 seconds)
    (179/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.199930344 seconds)
    (180/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.060503442 seconds)
    (181/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.061293992 seconds)
    (182/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.139133305 seconds)
    (183/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.06109964 seconds)
    (184/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.061801372 seconds)
    (185/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.061569321 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.080785439 seconds)
    (187/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.059916455 seconds)
    (188/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.062066671 seconds)
    (189/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.077832346 seconds)
    (190/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.068190105 seconds)
    (191/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.060516547 seconds)
    (192/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.061125554 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.060651231 seconds)
    (194/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.132710983 seconds)
    (195/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.0673918 seconds)
    (196/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.218799866 seconds)
    (197/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.064096176 seconds)
    (198/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.063721037 seconds)
    (199/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.063532499 seconds)
    (200/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.067257768 seconds)
    (201/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.06391934 seconds)
    (202/309) benchmarking ("sort", Int8, false)...
    done (took 0.161368574 seconds)
    (203/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.069817381 seconds)
    (204/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.069265417 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.085582596 seconds)
    (206/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.15718282 seconds)
    (207/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.064509617 seconds)
    (208/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.060757748 seconds)
    (209/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.061189719 seconds)
    (210/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.062880733 seconds)
    (211/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.062536033 seconds)
    (212/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.061942123 seconds)
    (213/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.061902452 seconds)
    (214/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.068416686 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.138856452 seconds)
    (216/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.139869165 seconds)
    (217/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.062161135 seconds)
    (218/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.07326071 seconds)
    (219/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.063805616 seconds)
    (220/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.063011665 seconds)
    (221/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.06293379 seconds)
    (222/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.068697298 seconds)
    (223/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.134501773 seconds)
    (224/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.060905583 seconds)
    (225/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.06079605 seconds)
    (226/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.180714717 seconds)
    (227/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.162407248 seconds)
    (228/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.064317165 seconds)
    (229/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.07300467 seconds)
    (230/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.071385479 seconds)
    (231/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.121816674 seconds)
    (232/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.071922525 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.136543307 seconds)
    (234/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.075984664 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.061522702 seconds)
    (236/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.062763211 seconds)
    (237/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.06860719 seconds)
    (238/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.060963493 seconds)
    (239/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.06343608 seconds)
    (240/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.062194594 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.105087824 seconds)
    (242/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.060827768 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.061556599 seconds)
    (244/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.060556723 seconds)
    (245/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.060408348 seconds)
    (246/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.061891296 seconds)
    (247/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.060871862 seconds)
    (248/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.062428084 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.081742458 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.061873281 seconds)
    (251/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.189392343 seconds)
    (252/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.063724595 seconds)
    (253/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.061118822 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.082692517 seconds)
    (255/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.060594551 seconds)
    (256/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.072428411 seconds)
    (257/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.061100755 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.080363108 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.120764398 seconds)
    (260/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.060014526 seconds)
    (261/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.060652503 seconds)
    (262/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.061559387 seconds)
    (263/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.062438342 seconds)
    (264/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.072220655 seconds)
    (265/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.06064671 seconds)
    (266/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.063448078 seconds)
    (267/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.062052682 seconds)
    (268/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.068486986 seconds)
    (269/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.062258452 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.124081973 seconds)
    (271/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.06825692 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.061049588 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.084551398 seconds)
    (274/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.062464841 seconds)
    (275/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.061995221 seconds)
    (276/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.060492606 seconds)
    (277/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.061537412 seconds)
    (278/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.06103471 seconds)
    (279/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.062112808 seconds)
    (280/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.154845757 seconds)
    (281/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.060660864 seconds)
    (282/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.150515107 seconds)
    (283/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.168977245 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.061119587 seconds)
    (285/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.067939562 seconds)
    (286/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.061042843 seconds)
    (287/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.062341666 seconds)
    (288/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.068532445 seconds)
    (289/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.060493239 seconds)
    (290/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.061751505 seconds)
    (291/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.065702938 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071902356 seconds)
    (293/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.061159627 seconds)
    (294/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.074948411 seconds)
    (295/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.060808386 seconds)
    (296/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.060371829 seconds)
    (297/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.061044279 seconds)
    (298/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.135772736 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.068605355 seconds)
    (300/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.071959695 seconds)
    (301/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.06045444 seconds)
    (302/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.085029546 seconds)
    (303/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.060848612 seconds)
    (304/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.060383704 seconds)
    (305/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.060762963 seconds)
    (306/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.06155693 seconds)
    (307/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.08697531 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.061281458 seconds)
    (309/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.069291557 seconds)
  done (took 31.331352104 seconds)
done (took 32.779699469 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.080384912 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.084263138 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.068969203 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.079539576 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.075590813 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.090427602 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.06883522 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.073101017 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.075299071 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.073881072 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.073310059 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.068164648 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.070117145 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.070458394 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.068380888 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.082348295 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.075558044 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.069196395 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.069534281 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.060407833 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.069172802 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.061643214 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.060595869 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.067535427 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.07254714 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.067902743 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.070817188 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.070219444 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.061973501 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.061823742 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.066531278 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.069812975 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064129566 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.072409372 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.069181264 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.069406406 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.070746722 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.073562211 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.060269682 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.061807372 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.071290308 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.061799867 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.069505631 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.067578647 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.066497097 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.068199718 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.069566183 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.072917115 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.082571285 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065608472 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.072019701 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.071604118 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.072283525 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.066536565 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.066525646 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.069347057 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.067401522 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.082188501 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.069590248 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065736548 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.071096929 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.070167571 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.068135823 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.069284772 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.069092732 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.072162115 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.072285779 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.068150688 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.071517671 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.068291966 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.06067482 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.069609436 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.065933156 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.06140807 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.072274309 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.074726969 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.059760057 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.065390165 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.069691575 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.069604988 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.060688587 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065223415 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.060062982 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.06651709 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065443859 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.067807368 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.066302796 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.068763027 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.060789668 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.069698432 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.068778365 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.068927807 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.060128928 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.072456628 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.060713406 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.067479462 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.061707916 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06124861 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.060253648 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.066605166 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.060809596 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065490723 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.068995067 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.059853654 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.066093432 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.073839244 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.061277466 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.06876698 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.060307779 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.060598852 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.07112761 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.071387848 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.061217596 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065743122 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.06031926 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.066522131 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.060731287 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.06132588 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.061412712 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.06142436 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.065547468 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.061101052 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065320906 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.066368799 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.072422499 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.061000952 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.065615426 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065369601 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.061605721 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.067603825 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.061530503 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.061015445 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.060095441 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.073869501 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065141391 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.060634779 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.06624149 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.064824004 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.067860026 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.059224958 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.068839261 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.066139445 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.06475368 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.066517749 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.059065513 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.071265165 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.064891862 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.064214429 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.202529713 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.062424586 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.061035161 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.062233092 seconds)
done (took 11.973062931 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.063417893 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.099650828 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.06886486 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.076882172 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.07313592 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.062597589 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.065106989 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.076836833 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.065014621 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.079840524 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.084700227 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.082070854 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.086703307 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.060554308 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.062056208 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.06251569 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.060649486 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.069050063 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.075532467 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.083029785 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.088459803 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.061755454 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.069878023 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.076976216 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.071464516 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.076987156 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.062881655 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.062163937 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.06406024 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.078297128 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085692962 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.062082953 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.062868624 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.074705666 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.074752147 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.06789991 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.062367822 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.065477733 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.06256067 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.061872879 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.063729532 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.074941079 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.067728522 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.065280652 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.062889019 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.062641472 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.061612648 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.064895797 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.074110796 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.064543775 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.069037868 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.072472989 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.063671009 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.062510344 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.059964955 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.065522909 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.061598902 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.062485568 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.062185586 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.061869362 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.062613959 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.064530002 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.062733615 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.062719153 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.06506524 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.063938965 seconds)
  done (took 6.044537303 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.07912995 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.088287775 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.078181749 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.077747746 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.061878005 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.06251303 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.062644159 seconds)
  done (took 2.065284696 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.063372703 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.074083142 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.077113117 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.076855206 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.069367519 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.079609987 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.063269789 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.091142667 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.062039556 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.073682353 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.104636873 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.077894175 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.06524253 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073410806 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.062478651 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.069161153 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.06287601 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070310527 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069494948 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.077158226 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.065901344 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.089066179 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.075709429 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.062909117 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.081064473 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.06580524 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.061426188 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.063141522 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.063643621 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.063043064 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063234589 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.098948518 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.065665539 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.073764255 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.063601064 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.062532365 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.067449458 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06511665 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.064383176 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.070780497 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.067248415 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.063407842 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.061833125 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063305782 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.064320754 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.065861117 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.061021394 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.063121041 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.062959828 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.073439783 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.061600126 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.065759547 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.06494314 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.066619467 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068876628 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06657122 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.070790085 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.063727438 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.072745397 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.069616712 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063259109 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.069699475 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.06949365 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.066793991 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.069411802 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.099522345 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.065541955 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.067092267 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.06282676 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.064719936 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.063609469 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.069371396 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.061789271 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.064209987 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065522228 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.063823176 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.065622302 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.078039205 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.077477297 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.074352583 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.064407482 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.063488134 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.065964687 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.077847651 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.066263812 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063363793 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065414522 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.061695875 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.067013212 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.063192127 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068087665 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.063610978 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.069879378 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.064880696 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.065971831 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.070337098 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.062711094 seconds)
  done (took 8.215334962 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.06515422 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.0638497 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.064589609 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.063418607 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.063478682 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.064307326 seconds)
  done (took 1.970924709 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.083628742 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.062806296 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.077205688 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.063338089 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.096774211 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.069209308 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.069073114 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070340738 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.075416921 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.074459254 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.068183888 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.07110398 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.069472666 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.064229143 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.068617061 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.063679897 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.068725602 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.065463014 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.074138753 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.064352838 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.074565175 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.064080408 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.064312414 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.073386566 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.065489792 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.06312623 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.063783538 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.074896188 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.076130918 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.069700551 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.064051286 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.065668507 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070255963 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.069534635 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.068892063 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070308689 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.062772354 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.067979983 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.064677744 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.065291053 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.070589454 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.064111198 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.06470545 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.067888052 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.069478368 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070185565 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.067523031 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.066267135 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.068553264 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.06792082 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.06775708 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.063489954 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.065383173 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.06784879 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070421801 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070132741 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.067867171 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.06857132 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.064538531 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070345353 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.062822439 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.06515415 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.069889841 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.065512082 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.06728757 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.068129408 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070461165 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.064468441 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.064557994 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.062842962 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.067933244 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.062562802 seconds)
  done (took 6.480508455 seconds)
done (took 26.314226421 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.90765049 seconds)
  done (took 2.443912896 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.553724591 seconds)
  done (took 2.127418004 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.278629454 seconds)
  done (took 8.848924363 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.286933021 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.298273176 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.698894253 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.124329766 seconds)
  done (took 3.010913773 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.711291009 seconds)
  done (took 2.292895514 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.224597275 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.216977906 seconds)
  done (took 2.032756655 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.335311048 seconds)
  done (took 1.907162766 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.082016732 seconds)
  done (took 2.650592345 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.214552786 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.153224291 seconds)
  done (took 1.947765198 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.457689064 seconds)
  done (took 2.031915859 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.083042081 seconds)
  done (took 5.66168716 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.226771766 seconds)
  done (took 1.844620923 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.226948099 seconds)
  done (took 1.807332729 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.766352209 seconds)
  done (took 3.340489978 seconds)
done (took 43.529394462 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078268397 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081161143 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081140157 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077115145 seconds)
  done (took 1.870169935 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.069246288 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.065272765 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.068810496 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.068322941 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.067239873 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.068099143 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.068140285 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.065207259 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.066982326 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.065037975 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.063656531 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.065051673 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.067707683 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.064968755 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.067728934 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.068498925 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.065469343 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.06480419 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.067887616 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.064813597 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.067573015 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.065118242 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.064297681 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.065255251 seconds)
  done (took 3.17106572 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.073820562 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.068010684 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.070419639 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.067081918 seconds)
  done (took 1.862473265 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.070775993 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.079338477 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.080617693 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.085482526 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.071683872 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.071459718 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.077352973 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.07967352 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.061257937 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.080404588 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.063737154 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.062482113 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.062672818 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.079953103 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.077426785 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.05850082 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.05967877 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.071361824 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.070880278 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.072893051 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.064064756 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.061532975 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.071733491 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.070549174 seconds)
  done (took 3.28965362 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.075077308 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.061823877 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.073678279 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.08551843 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.087768386 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.061217856 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074125566 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.087218774 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.116768062 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.061738454 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.067070872 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.061604091 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.098230966 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.061253537 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075753323 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.099615734 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.102185805 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.064917191 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.091835361 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.061589899 seconds)
  done (took 3.160515192 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.071678374 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.065856329 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066436309 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.06208197 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.072231146 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.069069157 seconds)
  done (took 2.003155194 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.064905639 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.063998841 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.063700097 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.063222015 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.06795435 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.063330937 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.062124784 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.063739847 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.063661199 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.062777427 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.062774538 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.061535164 seconds)
  done (took 2.352017216 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.152783971 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.065236573 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.066508248 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.064936671 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.066881885 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.062405704 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.076138957 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.064161158 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.079321743 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.062709823 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.062673224 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.064596498 seconds)
  done (took 2.477570186 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.093250029 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.094573294 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.13759776 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109687334 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088288722 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.084746107 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.14930006 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.127468956 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109364142 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.0650712 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08113481 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093971083 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093072816 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.125140133 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.10532545 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.067914743 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.104723801 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075823803 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.107223616 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.11516901 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108086373 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.11522985 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.087292326 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.093007443 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100701677 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.110800059 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.06688466 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.066271936 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.140405318 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.09416658 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.086683419 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.093182659 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104444317 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.064779835 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.081254999 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.099154933 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077680147 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.10843793 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.086587039 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092508727 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075567181 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.123582194 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.099504619 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097495035 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.123923208 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087282439 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.103883917 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.099782299 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.077354329 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.111464786 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09232291 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085258123 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074581818 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.150193838 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.083933859 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.105233647 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105570924 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.075584004 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.081727285 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.094252777 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.120041067 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.098293223 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.105605781 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.252241196 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.086552345 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087102969 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.125036386 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.080335284 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.09461369 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.12383224 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.086339599 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.071529413 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.090278731 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.065786257 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.090739858 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.100500514 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.087208084 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105680369 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.072714682 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.120951213 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.102497468 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.068533859 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.110563258 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092953198 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.14781136 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089807499 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.09538167 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086172003 seconds)
    (89/481) benchmarking "5d"...
    done (took 0.140874049 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080132037 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.075238724 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092219621 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.121863351 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088421809 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.090003728 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.120925833 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090594855 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.081810601 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.071355614 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.084141841 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095668174 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101651917 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.094766035 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083914578 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.081367148 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090180802 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.070574139 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.076250541 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.094840794 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08189959 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.116472025 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.102761545 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.11595621 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.074082955 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09883463 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.090542266 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.121395992 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.110498485 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.078818768 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101901329 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132520255 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.106993096 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.079854412 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.094747338 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.103578777 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100488685 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.089896953 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.127718844 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109401732 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082699066 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.086600535 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.242208965 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.106860263 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.147106983 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085663966 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.098919367 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.132061799 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.107523585 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087594557 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.079096412 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.08927435 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100234895 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.134074016 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.090449099 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.066481518 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08703937 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.124336892 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07160607 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.093805716 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.087472529 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.078551957 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.076343964 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.064007007 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.09871808 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.130036214 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.108013663 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.093632652 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.09783933 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.065904146 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.094242948 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098278877 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.134342214 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.110101183 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092329758 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.092303089 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098171998 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.074398465 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.125650349 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.126330237 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086441162 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.085085942 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.116396732 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.089865801 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.099107034 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.107581251 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097806905 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.096019907 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.133463285 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.112899663 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.117043391 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098388542 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.116779994 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.076836009 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108991749 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.069739258 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097727141 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.071818942 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09921693 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.073926615 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.103940183 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.073418138 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.093150371 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.064577906 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.069641795 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.261033248 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084740388 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081761835 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.128116381 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.124284419 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.076875135 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.095421208 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.094528354 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096291519 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.103523605 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.084887148 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.086163512 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.073696526 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.075636449 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092592879 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088467183 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.102222067 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.073856084 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.071147399 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.131266206 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097907541 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08547647 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089756344 seconds)
    (218/481) benchmarking "4d"...
    done (took 0.11286717 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.083946212 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.082716781 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097630372 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.131101701 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.111493816 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.075755634 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.086013974 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.065728402 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.07953118 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.071458922 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102499593 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.070076099 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.105345513 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.064671637 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.121793018 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081749982 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.096111272 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091685115 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.121262216 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.085456976 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.120998258 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.081790376 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10156531 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088090941 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.088840954 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.102987283 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.089763522 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.099295817 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.105364441 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087931259 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084702779 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.114198216 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099565517 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.110985539 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.100426706 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.128796919 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105672946 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.070592134 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098156753 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.093260872 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.145050189 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.093814241 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.084828436 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.088957327 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096658829 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.075419862 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.290925887 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082653526 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.081758645 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.107488273 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.085735094 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.091236315 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072372567 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.095730182 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.088776758 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.106656902 seconds)
    (275/481) benchmarking "3d"...
    done (took 0.092968102 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 0.088362342 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103317386 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10425874 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.081183804 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.082377964 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.116957008 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.122171816 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.096368976 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088418496 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082985253 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.094678784 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089016038 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.103514468 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075901674 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.071631782 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.064250824 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.06881956 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.110867847 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102181197 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092691119 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092820688 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.096701813 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.067769276 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082344497 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.085456929 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.078442068 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084619827 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.108171491 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.097826823 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.121659157 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.096011045 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087124562 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.133922465 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.122022087 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084984287 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086695324 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095414488 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.072817609 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.139695352 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.112249072 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.073086039 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.07792331 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.072334852 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.080103041 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.067364453 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097955285 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097799628 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07128289 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.096862699 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091847522 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.116788133 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091282643 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072147099 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.075044126 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.069985688 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.070729902 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.095888763 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.072669829 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.071398121 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.120769986 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097084478 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099898706 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.078440959 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.069441975 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.120473787 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.064188284 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.121385266 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.075590753 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.101740836 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.074165262 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073061726 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.08172454 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.097231601 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096837662 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.102787298 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.065388436 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.094397167 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.142269294 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.06903148 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.069486095 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.068568354 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.098519265 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.077504183 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.125677447 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.080953478 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084432307 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.069655455 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.115385692 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.093179865 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.075547795 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.114333567 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.073332124 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.064453206 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.078742584 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.100638669 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.067062579 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.068679934 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.103443909 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 0.620813473 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.08206222 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.069461752 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.080606801 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.112825221 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076501543 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097086204 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.106218368 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095215883 seconds)
    (383/481) benchmarking "6d"...
    done (took 0.172259973 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.068948795 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.081665043 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.09255531 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.088708193 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.083543971 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.072291248 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.079258815 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.079118881 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.077549263 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095104539 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.07271914 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.081956597 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.072791833 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.092194672 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.115592521 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.076266845 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.094109665 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.078924146 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.081389582 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088396015 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100282878 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.095614057 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.079192062 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.080830648 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.098406159 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.347010656 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.075965356 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097502749 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.075699807 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076523192 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.114409001 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.081745296 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.091971516 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100304923 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.087432426 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.11061598 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.114069178 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108084171 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.095032095 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076575861 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082927264 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.085127492 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.071475516 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075411592 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.072111646 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.068417256 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103357238 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082067901 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.078476841 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.095162077 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.104114569 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.09561847 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.101193986 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.086286959 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091903236 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.095235662 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.121168221 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.147485422 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.095382203 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.117179543 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.125503728 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.072842153 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.071819915 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.07647163 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.125511124 seconds)
    (449/481) benchmarking "2d"...
    done (took 0.076751785 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087740134 seconds)
    (451/481) benchmarking "7d"...
    done (took 0.228854137 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.073844954 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.077058318 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08650384 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101942872 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.078518742 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076033163 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093497227 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10529605 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.079889434 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076308774 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088104105 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.101318174 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.122672178 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.084410482 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.070878143 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.103276936 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.096236165 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.117292756 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.069418827 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076364927 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.121611288 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082479705 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.098788443 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.075508349 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.118636325 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.124920306 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.069994348 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.085076568 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.066487555 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082623133 seconds)
  done (took 48.283348616 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.144478641 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.137296769 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.078544975 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.094158318 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.181984047 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.190938677 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.113769129 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.090595352 seconds)
  done (took 2.812907589 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.063736313 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.077797773 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.094406102 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.078334887 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.062751291 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.064081528 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.189713236 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.07661493 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.06254209 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.100845991 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.070838928 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.064815898 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.341144421 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.062517443 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.06373068 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.070701468 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.062813176 seconds)
  done (took 3.340430619 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.351635968 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.601884074 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.311657236 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.070211146 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.701921025 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.087800879 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.099520285 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.135422746 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.077608908 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.515119571 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.364802153 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.127198672 seconds)
  done (took 18.188183803 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.071532087 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070534361 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.073704259 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.073964499 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.070500093 seconds)
  done (took 2.102083687 seconds)
done (took 96.512456339 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.077760796 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.160935815 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.06356314 seconds)
  done (took 1.999782714 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.077168741 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.076102839 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.076816954 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.074051265 seconds)
  done (took 2.051814475 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.069988275 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.071393784 seconds)
  done (took 1.880780761 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.222002859 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.15704919 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.086012367 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.077784997 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.074973597 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.075790768 seconds)
  done (took 1.981938958 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.067443959 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.066766819 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.067863399 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.067908642 seconds)
  done (took 2.01185515 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.063763274 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.062567457 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.064413128 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.066712749 seconds)
  done (took 2.001036462 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.078159066 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079114742 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.073435511 seconds)
  done (took 1.97451203 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.103774165 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.092000609 seconds)
  done (took 1.939109476 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.075019067 seconds)
  done (took 1.821590996 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.084044312 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.090028418 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.134695609 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.101319252 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.134556032 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.120225473 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.072817697 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.073788653 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.06924276 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.06823283 seconds)
  done (took 2.692852134 seconds)
done (took 22.638854145 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074674892 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.366984269 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.356184134 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.081568042 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.666026848 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.352994891 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.985178202 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.085450093 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.093192248 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064236791 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.079505994 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.643451141 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.976342875 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.326097337 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.957274039 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.325008794 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.646332455 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.064417724 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.063758718 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.064388172 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.969025518 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.063651792 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.063840449 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.064293862 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.646105942 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.36854183 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.064697342 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.324270632 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.063991952 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.065936458 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.35151448 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06499733 seconds)
  done (took 16.108801127 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.066441653 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.116109696 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.068368602 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.079236838 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.066692923 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.066163556 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.067223144 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.064988581 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.103762628 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064467287 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.080528423 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.064296598 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.06814492 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.065469041 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.082727638 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.064104656 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06561722 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065287685 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067807106 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.065886578 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.082536918 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064547575 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.065504301 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.065881604 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.065263175 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.077312083 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.066010264 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.065486959 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.065342448 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06740703 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.068342079 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06676174 seconds)
  done (took 4.037626704 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115748718 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118808555 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.069494925 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102746051 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111772869 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.066371253 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.14324036 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.087464462 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.107388054 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064788485 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.080992012 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.064715909 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.099018615 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.066134715 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.084473261 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.065300101 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.066638136 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065546102 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.065089637 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.065824074 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.082753268 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064418952 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06532181 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.065708733 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.065746091 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079172649 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.066325517 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.065420206 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.065113746 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.067466012 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.068857676 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.066158466 seconds)
  done (took 4.299985806 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.065961569 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.067576076 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.074828244 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.076493911 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.062677027 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.064706361 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.066111356 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.063298474 seconds)
  done (took 2.305466362 seconds)
done (took 28.512844825 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.074037918 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.063957061 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.067445271 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082339006 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.069833524 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.066707783 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.061274933 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.06999119 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.06738934 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.066997426 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.06915888 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.062958872 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.066520598 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.061122114 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.068290267 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.062699374 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.068643144 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.066842458 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.067576658 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.068215675 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.065841913 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.068133191 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.070841375 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.067794937 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.067317234 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.067694155 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.071254201 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.068023123 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.062942247 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.065364041 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.065209481 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.072977796 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068655772 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.069034238 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.062742436 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.062917805 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.066458364 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.064855372 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.068487056 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.071182497 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.064772338 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.071006872 seconds)
  done (took 4.567760259 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.079677044 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.085522385 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.078825043 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.07762795 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.095623275 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.077980646 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.081331984 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.074917811 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.073262914 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.081146812 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.069735435 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.074660216 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.075617868 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.068638845 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.073624941 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.070680304 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.076250851 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.069731551 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.074990683 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.07467972 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.082548244 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.067964762 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.074425771 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.076278456 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.070281122 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.075648967 seconds)
  done (took 3.754654942 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.068630255 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.082480615 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.086635763 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133448949 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.10392142 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077690406 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078008118 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091882333 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.095710937 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.064764066 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.067881856 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.089211287 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090260043 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.070625334 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.100941582 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.080978446 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.074896869 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.065905509 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.070739266 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096651059 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.086613576 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.081786805 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.095431913 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.082863218 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.063681563 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07286275 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070646644 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.078682482 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072473346 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.07740322 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.0705697 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073303428 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.067179781 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.077938669 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070652592 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.061983778 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.083915862 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075597413 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.07705474 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.10256706 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.07284096 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.065012994 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.091524678 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.12383777 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.063304939 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.065778872 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.067373952 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.075701328 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.065047016 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091602557 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080727638 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.063072172 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.081698351 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.065121459 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.064781674 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078297784 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.064744268 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.065270495 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075025035 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.069554532 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.083020897 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.068370867 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082330759 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.063371189 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074383499 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.065095349 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.065323576 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.062731097 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097214331 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07038789 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112303532 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.064690346 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.061940664 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075531234 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074715103 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.070156282 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.063857973 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081419706 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074627982 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.067046491 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.074834131 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.06616947 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.067104492 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.096716802 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.062529191 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.061832077 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.061958934 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.065648496 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.067110971 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.06409127 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.076282322 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.063243065 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.067181702 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.077295986 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.064014498 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.064503414 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.065945436 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.064461742 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.062987073 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.073607644 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.066961371 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.065610356 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.074989039 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.064780924 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.067114259 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077750743 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072614581 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.062900117 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.064617078 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.065679639 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.064891042 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.067944643 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.067290057 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.065665043 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.069147172 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.070252235 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.068770071 seconds)
  done (took 10.504735523 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.152393258 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.143982094 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.06497835 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.13999925 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.072075927 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.067858037 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.139896713 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.082723193 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.064567258 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.06567908 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.063933282 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.090388526 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.085822338 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.097046705 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.068576674 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.064855041 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.088382871 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.094987952 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.141621957 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.137071873 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.086686961 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.071245937 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.06648547 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.065568003 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.065679292 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.072236727 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.080780559 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.072217452 seconds)
  done (took 4.319336608 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.071243549 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.10436015 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.068348335 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.087041378 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.081412361 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.064385689 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.0661737 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.065044996 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.0806625 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.070816263 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.064163271 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.068675373 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.068186015 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.066911872 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.064992654 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.070548353 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.070562896 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.063297788 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.068361917 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.068483645 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.073950161 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.087882474 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.06852893 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.063990674 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.066515204 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.064212876 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.070529021 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.073344264 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.063822313 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.092510216 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.061477535 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.06850256 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.077332812 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.064977967 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.063999614 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.064387638 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.06402137 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.06410677 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.064555167 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.062520401 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.06243674 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.068945379 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.063214228 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.069727745 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.07703163 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.070792044 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.065261054 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.066259681 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.066432976 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.061274476 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.066924507 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.066988132 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.066683699 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.071932521 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.068055241 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.066104096 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.06784538 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.088550801 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.069791194 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.063624202 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063468314 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.062528992 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.065207783 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.071654951 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.080300444 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.06515365 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.063049235 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.06422822 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069079872 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.077685614 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.063656556 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.068841929 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.06154509 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.064523479 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.06642644 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.066803447 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.065608475 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.062526017 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.063764869 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.064288696 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.064983845 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.064295394 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.0636633 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.06673805 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.062065777 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.062723834 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.064656522 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.065537234 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.069925738 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.062822528 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.066443878 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.065281876 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.063208486 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.06717164 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.069058684 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.066784802 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082133048 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.072360774 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.064512146 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.062439041 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.07751099 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.065846927 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.063295269 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.070053204 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.068265228 seconds)
  done (took 8.995000337 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.084801618 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.065743237 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.082895408 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.088757468 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.073716886 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.069134678 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077173296 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.065553619 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.079109836 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.06393848 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.073056883 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.06275848 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.075498153 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.072281953 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.065304702 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.073180025 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.066593282 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082974874 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.078615468 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.06280289 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.072289028 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.07573967 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.075814493 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.081164201 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.080510477 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.081301089 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.075922203 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.067129895 seconds)
  done (took 3.899085585 seconds)
done (took 37.798114485 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.837757874 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.014704044 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.84251644 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.034779144 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.026978078 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.956950745 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.888153567 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.841190885 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 8.055386634 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.878560555 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.102606106 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.239303723 seconds)
done (took 67.557032978 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.858937051 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.989332467 seconds)
    (2/2) benchmarking "String"...
    done (took 2.056033348 seconds)
  done (took 5.822017176 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.979408001 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.485333423 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.097499251 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.838064508 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.844565579 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.238007838 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.607994195 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.276452937 seconds)
  done (took 31.166350109 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.950417565 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.066528659 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.516034082 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.548627861 seconds)
  done (took 15.901663905 seconds)
done (took 64.597838439 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.877765527 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.841910691 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.852338286 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.871840886 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.847243915 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.844317718 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.843567356 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.844930102 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.889733578 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.033920352 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.842828286 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.846443599 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.843718815 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.89508895 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.514669046 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.90200389 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.849970092 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.855728665 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.869472367 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.874917048 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.843307394 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.846828447 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.313659383 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 2.028723718 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.459241108 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.216752507 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.375341654 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.251057066 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.850428564 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.841410519 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.926257948 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.179396431 seconds)
  done (took 206.95440882 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.841794127 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.805461369 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.875242669 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.876681555 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.315107078 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.019952262 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.939596096 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.363180663 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.846560738 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.851819561 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.951850356 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.843973051 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.968399964 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.801082115 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.878773055 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.851536219 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.06332458 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.985457663 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.882238805 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.989741415 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.85246613 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.811039772 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.783528495 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.946100949 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.887869732 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.882133561 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.85338417 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.847559723 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.026480242 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.040308925 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.868029014 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.846442379 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.006059392 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.7138038 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.856373163 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.84749215 seconds)
  done (took 171.802736198 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.062718364 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.850047738 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.843848182 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.903422911 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.968760168 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.844465913 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.482824295 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.858144283 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.584319518 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.845345206 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.844935772 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.844022045 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.845452412 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.857494608 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.923937357 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.846408549 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.85922552 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.8448335 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.871365015 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.845082536 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.845361014 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.844869287 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.845425749 seconds)
    (23/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.8450461 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.844408079 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.843913303 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.84471756 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.417950481 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.088301838 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.847029393 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.845451512 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.961963497 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.857622022 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.348158338 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.849407299 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.936669909 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.906098073 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.846258595 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.958941267 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.845848457 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.062865178 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.919968621 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.846911158 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.845702578 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.910717213 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.8581588 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.850462361 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.851615521 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.852040716 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.911250249 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.089436286 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.848073194 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.970719663 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.328227226 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.847872628 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.84685684 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.846532811 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.428698355 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.847038842 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.846633536 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.853548236 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.853128228 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.847396815 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.847789479 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.234122385 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.917974672 seconds)
    (66/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.846724592 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.015353656 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.354665811 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.853066679 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.413045743 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.916470012 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.847075244 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.84792145 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.848416282 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.849628861 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.847594045 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.850803391 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.970935497 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.856036737 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.967016394 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.930396109 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.969649582 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.850318751 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.864418288 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.673616757 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.918418884 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.889778386 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.672355138 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.848637497 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.221772675 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.613724462 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.84838299 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.848473444 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.86131718 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.849659535 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.849965076 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.852387194 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.928855162 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.848776911 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.849004872 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.97045362 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.571928889 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.494918413 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.851943654 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.84904742 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.861761211 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.930042934 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.970466311 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.850616297 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.91489264 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.854788269 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.851582293 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.947294782 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.850728686 seconds)
  done (took 410.799643948 seconds)
done (took 793.45793866 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.423852493 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.395477588 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.489636191 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.414353247 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.38889995 seconds)
  done (took 13.899326508 seconds)
done (took 15.686906822 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.863963369 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.855625037 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.907271881 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.936379834 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.869417636 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.870792787 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.93119632 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.87145167 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.900701986 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.905825818 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.933439383 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.935266216 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.875156737 seconds)
  done (took 26.445293364 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.860912924 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.999521088 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.072177397 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.890860654 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.860440137 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.070198183 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.918345952 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.992492414 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.994513708 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.071631119 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.077925415 seconds)
  done (took 23.599305111 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.859197709 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.998968963 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.078276667 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.89398215 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.86000683 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.076093449 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.920808596 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.989579253 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.994980102 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.081969901 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.105623532 seconds)
  done (took 23.654815454 seconds)
done (took 75.489356655 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.854211445 seconds)
  done (took 3.642907962 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.870731762 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.996907127 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.854958853 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.856840063 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.855725761 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.857106427 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.855955061 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.85524651 seconds)
  done (took 16.792950816 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.85474249 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.858834686 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.855684154 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.856389068 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.856337823 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.856312317 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.856358075 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.856754108 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.855855692 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.855889224 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.8557307 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.856860967 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.855965127 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.856374249 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.856740939 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.856882746 seconds)
  done (took 31.493062229 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.858392233 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.855307437 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.857208226 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.856965703 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.856684658 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.856084983 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.857402491 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.857446576 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.856183104 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.85645338 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.857599124 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.856806136 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.855779396 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.857082199 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.856763631 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.857867661 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.858405399 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.859236827 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.861015523 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.857741917 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.8574219 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.857692152 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.856294758 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.857780845 seconds)
  done (took 46.367889354 seconds)
done (took 100.094099617 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.547526287 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.868597669 seconds)
  done (took 10.20791055 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.858127935 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.858537119 seconds)
  done (took 5.512756623 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.857525433 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.857558274 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.858153664 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.858735241 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.858203043 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.858320089 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.858500336 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.858448321 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.858439446 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.85845887 seconds)
  done (took 20.375258873 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.857664737 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.858554951 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.859354554 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.859521844 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.860276009 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.859310648 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.859488032 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.859330064 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.860267579 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.859424925 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.860142316 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.859147191 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.859472352 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.859790565 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.860051614 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.860260251 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.860184106 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.860116991 seconds)
  done (took 35.266501497 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.860060111 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.860115635 seconds)
  done (took 5.513398065 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.860371067 seconds)
    (2/7) benchmarking "second"...
    done (took 1.85926567 seconds)
    (3/7) benchmarking "month"...
    done (took 1.86049772 seconds)
    (4/7) benchmarking "year"...
    done (took 1.860813853 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.859555805 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.859567813 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.860552225 seconds)
  done (took 14.814707968 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.860361563 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.02047601 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.07182648 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.457461922 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.861274708 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.862916415 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.752279322 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.866242045 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.865545654 seconds)
  done (took 20.413053471 seconds)
done (took 113.896774112 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.686114111 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.862026317 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.143542049 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.975558731 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.885442439 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.158142338 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.901825364 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.505045183 seconds)
done (took 42.91279288 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.880941623 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.859889574 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.903736579 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.905298228 seconds)
  done (took 22.464848301 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.861656471 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.177131965 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.885150853 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.703791139 seconds)
  done (took 22.442100972 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.239314738 seconds)
    (2/2) benchmarking "read"...
    done (took 2.208054407 seconds)
  done (took 6.247981237 seconds)
done (took 59.833355851 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.861720898 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.862242532 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.861853691 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.863063346 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.862306393 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.862194368 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.861971138 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.862099961 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.86164211 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.861693541 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.861640392 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.862057425 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.862766324 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.862824073 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.863030931 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.862228869 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.861763365 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.862700985 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.862417843 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.863440647 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.863076722 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.862719481 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.862417669 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.862821382 seconds)
  done (took 46.494385652 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.863647909 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.862704536 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.863197171 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.862797855 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.863477832 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.863727809 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.864437394 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.86391092 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.863834821 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.864149294 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.863191505 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.864849318 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.86378328 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.864638796 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.863450526 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.864157329 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.864026967 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.86428045 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.865640848 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.865316071 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.864885892 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.865154565 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.864222308 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.865132052 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.863919973 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.863315618 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.863205684 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.867739806 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.864448956 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.865600628 seconds)
  done (took 57.725458486 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.865199048 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.865260323 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.865750215 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.864983734 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.865672289 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.865586073 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.86628514 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.865428133 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.865416014 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.864797248 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.865493504 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.865760773 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.86779354 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.86641826 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.866059222 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.866670061 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.86477987 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.865738208 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.866324998 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.866163304 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.865558758 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.865029185 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.866409692 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.866723297 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.866297181 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.866774624 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.865928392 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.865405737 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.867638181 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.866486729 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.866674413 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.866411733 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.865843877 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.866389227 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.866078991 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.866556256 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.866619263 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.866135464 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.866846782 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.866818739 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.867255385 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.868061909 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.866476028 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.867002202 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.86827021 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.868589208 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.868431578 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.866997492 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.867690251 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.866813418 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.868103838 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.867747996 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.866740933 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.867306931 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.867649193 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.868011178 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.869015242 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.868115116 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.868322566 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.868744559 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.868883369 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.869048735 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.868753957 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.868695109 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.868522644 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.868800742 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.868830863 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.868227248 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.868601061 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.869023336 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.868851521 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.868662768 seconds)
  done (took 136.225412276 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.868354888 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.868629901 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.868455954 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.868838745 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.870011835 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.868839979 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.869438091 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.868170638 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.869208057 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.869059198 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.870007629 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.868497436 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.86860395 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.869780649 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.86844124 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.868573422 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.869308367 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.869218085 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.869374708 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.870712908 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.871292619 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.870148501 seconds)
  done (took 42.926454799 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.869790551 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.870278271 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.869796617 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.869507787 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.870375031 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.870358716 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.869741852 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.869748682 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.86992904 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.87016176 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.869637189 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.870550706 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.870547662 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.873645811 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.87130499 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.869988229 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.870456515 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.871845086 seconds)
  done (took 35.472650839 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.871516293 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.870540876 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.870483531 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.871096334 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.871456723 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.871617792 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.873701125 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.871141841 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.871936594 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.8713709 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.87303523 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.872447408 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.871811328 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.871007028 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.871002061 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.871410933 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.871473411 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.873067487 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.87159728 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.871286512 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.872048594 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.872083306 seconds)
  done (took 42.983276958 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.872244067 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.872342665 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.872378359 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.872713783 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.872519125 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.871979613 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.872270513 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.871938695 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.872693665 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.872977511 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.873122812 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.87327841 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.872723965 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.871753246 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.872656476 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.872821145 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.872710721 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.875210484 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.872185988 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.873610336 seconds)
  done (took 39.261303541 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.873282222 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.872324305 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.872981598 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.874614113 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.873725766 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.872791976 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.872826203 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.87400792 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.873112487 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.8746377 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.874475289 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.874346675 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.873651647 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.874394977 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.876421862 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.87505338 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.874987608 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.875136567 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.873844922 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.874591353 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.874762371 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.873410256 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.874178117 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.873955909 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.874011729 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.87329721 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.873990498 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.874082377 seconds)
  done (took 54.2809919 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.874072293 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.876159456 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.874543542 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.874802323 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.875675599 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.874623668 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.87528609 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.875844341 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.874337908 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.875395906 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.874774556 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.874764515 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.875019687 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.875146138 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.87422212 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.874608504 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.874434833 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.875408917 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.875907693 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.875303424 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.87496035 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.875347729 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.875301405 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.875410361 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.875486555 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.876132141 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.876207925 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.877320518 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.876651485 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.87665981 seconds)
  done (took 58.069519178 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.896992527 seconds)
    (2/2) benchmarking "in"...
    done (took 1.896714447 seconds)
  done (took 5.603892052 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.876205289 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.876235692 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.876876 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.876879602 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.875848325 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.876786771 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.876482998 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.877259208 seconds)
  done (took 16.823761577 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.877397288 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.879877938 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.877853814 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.876752386 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.876010644 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.885539526 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.879796015 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.878577742 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.879733713 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.877828858 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.882559129 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.880515066 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.885225905 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.881977394 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.877808757 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.878446225 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.879335492 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.880854551 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.879296348 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.877861824 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.880891924 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.878979851 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.879024277 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.878273817 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.878656492 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.879885454 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.888855206 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.879102313 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.879774476 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.878926016 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.885627366 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.878971381 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.87830449 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.879836705 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.879097384 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.878257733 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.886464913 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.878463359 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.879126204 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.879518111 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.882493133 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.881932802 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.884025672 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.888138839 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.879750383 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.880129948 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.879210617 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.880450787 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.879889635 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.882887891 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.887244255 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.880546364 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.880928451 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.880602228 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.884265844 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.880231025 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.87985928 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.882819346 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.887562929 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.888580941 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.884118635 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.901111655 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.889320795 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.879711764 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.880639116 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.890201324 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.904610226 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.882088142 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.883303675 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.880743432 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.889505298 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.881409936 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.88087541 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.880230126 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.895247513 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.889735034 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.881861697 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.881751621 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.881069682 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.881873842 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.882475432 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.881908879 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.88252019 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.883223734 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.89068635 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.906575985 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.883458716 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.881946825 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.883360598 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.882992967 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.887461667 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.885599447 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.882904869 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.882409885 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.883825245 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.885387134 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.882883346 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.882921466 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.882963417 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.892626946 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.883377893 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.882936697 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.887572512 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.890135144 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.882996215 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.883329067 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.884121623 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.882895847 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.89117285 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.882915527 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.882792001 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.883227192 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.883474809 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.887863637 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.882495895 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.888344195 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.891492407 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.892806871 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.885606356 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.888606159 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.886934239 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.886144328 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.893183627 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.907964642 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.883475402 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.886302643 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.888491807 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.895139804 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.887815007 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.88436355 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.886762569 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.884337042 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.88487355 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.885505642 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.886011408 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.885250626 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.884093473 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.884581035 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.884058703 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.884529806 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.888168204 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.886523517 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.886690961 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.884663204 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.888319241 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.884362859 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.888793808 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.89397075 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.885772973 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.886150601 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.886774654 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.888101802 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.887757344 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.886688675 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.885903103 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.88594404 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.886698563 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.88680107 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.888208949 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.886321631 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.886666726 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.888400534 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.890888653 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.886717295 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.885891492 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.887277402 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.889116377 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.886756701 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.887608645 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.886539307 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.887974748 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.885891384 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.890836586 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.886976653 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.885942661 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.886175519 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.887152666 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.885282203 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.88899291 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.897414651 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.890709631 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.897190321 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.887202285 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.894414975 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.887486449 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.888117977 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.888092424 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.887072878 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.888313374 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.887286168 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.888545923 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.891801876 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.908397865 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.89866007 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.89063844 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.889287531 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.892684034 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.893618436 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.895178331 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.888806547 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.889596481 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.891700358 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.888929559 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.888180365 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.889424406 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.891362846 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.888314035 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.888594143 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.891945356 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.889762973 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.890706203 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.891661258 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.890980869 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.893998438 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.890863805 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.888848423 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.891528972 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.890293957 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.898766816 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.892437241 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.891133883 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.891397157 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.893126404 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.891706916 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.890546703 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.891119952 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.893239491 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.889746792 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.891616397 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.898988 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.890414443 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.890325553 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.889058917 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.89049325 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.891964283 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.890337808 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.892884655 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.897530282 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.89247893 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.891957137 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.895231891 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.89122524 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.892857839 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.891995493 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.891900112 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.891904533 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.893615124 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.890481509 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.891903653 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.899430344 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.890747644 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.891571323 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.890989619 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.893985662 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.892107084 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.893140828 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.891686402 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.894774023 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.899513803 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.897452788 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.891320337 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.895454001 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.894322752 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.893402115 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.89618429 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.893255837 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.90587489 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.902029359 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.893084911 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.891219863 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.89182601 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.89579947 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.891867924 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.892935917 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.901191783 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.892619204 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.894201939 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.897536815 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.89313156 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.892733946 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.898770196 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.894506624 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.895864956 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.894550274 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.894349361 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.894303022 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.892709164 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.895274337 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.893486981 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.895176608 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.898125019 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.893853422 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.895078471 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.896805005 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.903393319 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.894099422 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.894263518 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.901514115 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.895744702 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.893345232 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.894964555 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.894298379 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.895572965 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.897393372 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.894046905 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.897025157 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.894487325 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.898514142 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.90570092 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.901815823 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.90525359 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.896801081 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.906477834 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.896095746 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.895897466 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.896414757 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.89898266 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.902556838 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.896510729 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.895780711 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.904731066 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.896928515 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.896582339 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.898782867 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.896636167 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.898133804 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.896016213 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.896860482 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.90033202 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.898112945 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.894708976 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.89462027 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.895812809 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.895541657 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.89902932 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.897113354 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.896786825 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.89663546 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.896813246 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.896562189 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.897897696 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.898198466 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.896665417 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.896194323 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.895998068 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.90456037 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.897137994 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.896433419 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.901286903 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.897019657 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.906193584 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.897435918 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.896972623 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.898948499 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.89643828 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.900052553 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.900582016 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.898174922 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.897078062 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.897810343 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.898631357 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.909601666 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.906147942 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.902366035 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.899498584 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.897961961 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.898678773 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.907574155 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.92158191 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.897726419 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.899516465 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.902268743 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.907738123 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.900437594 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.903839448 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.902397255 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.905730188 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.899257142 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.898660983 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.901060775 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.91035131 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.899792457 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.900204973 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.899326784 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.90210387 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.89975799 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.898310802 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.900432297 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.902634599 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.900161909 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.911745854 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.900753735 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.901185171 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.899457257 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.89944543 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.900212826 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.900773899 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.901774706 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.90123846 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.899669546 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.899101112 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.902478451 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.905476422 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.900156734 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.905213632 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.910077235 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.901617495 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.900263913 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.903343163 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.900766107 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.90377664 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.901595778 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.902141749 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.903531083 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.901222169 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.902536923 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.905125687 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.910466049 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.903436473 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.905461984 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.902286453 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.906113002 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.901713965 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.901745279 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.903789376 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.912180586 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.905342174 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.913181334 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.912469864 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.902576188 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.903362353 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.909959207 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.910290988 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.902077504 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.901426633 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.904772916 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.905066192 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.904815931 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.903982978 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.902743094 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.902954739 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.907220141 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.90257203 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.902512086 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.903062536 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.901685354 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.904794976 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.904179579 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.908155802 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.902213435 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.902482979 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.902577927 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.902505727 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.904093001 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.905286305 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.902816938 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.903341782 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.905313138 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.905132568 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.907225503 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.903641055 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.902764668 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.905226706 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.904020301 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.904099756 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.903840556 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.903486458 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.904485262 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.907441471 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.912136419 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.903813618 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.905143099 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.905967206 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.908793473 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.905315288 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.905309567 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.904809098 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.904690181 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.912760093 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.904561579 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.904570718 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.904550558 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.906237143 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.909525368 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.905789093 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.90888156 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.904242265 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.903870887 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.904983194 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.907221866 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.914142708 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.909674012 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.908472742 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.912948406 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.909966336 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.906484898 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.905172455 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.904789149 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.907924076 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.907332664 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.908890368 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.906716701 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.907349022 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.906010294 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.906788136 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.906045654 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.907815936 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.906386326 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.906193355 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.908790932 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.916140174 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.915807844 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.906727214 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.907142499 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.908430533 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.909175842 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.917240121 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.906386796 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.906083825 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.907016296 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.908230836 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.908316453 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.914410813 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.915570774 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.910301902 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.906948429 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.913240903 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.925690912 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.910809633 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.916931618 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.940318721 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.909209115 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.907118338 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.907915501 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.908452451 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.907402229 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.910540756 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.906588738 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.913901277 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.907896537 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.907426644 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.916388924 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.908175626 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.908044107 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.908360555 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.910962831 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.915604647 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.908409258 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.916451889 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.908393414 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.908326135 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.908917465 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.910475152 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.908887681 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.908380655 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.90840212 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.910581545 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.907976269 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.908026755 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.916977553 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.908318194 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.910136413 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.921779448 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.920037273 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.908323431 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.908366951 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.90909754 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.913975672 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.911516495 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.909773631 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.912805419 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.917794769 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.91305618 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.916624279 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.911116277 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.909673262 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.910663961 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.910830945 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.909229798 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.922294864 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.920575919 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.910849977 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.909943077 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.916734862 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.910698423 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.916888137 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.917226262 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.909879377 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.912090791 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.910977837 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.910105584 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.910732716 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.91092867 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.914858397 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.918431467 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.911286049 seconds)
  done (took 1132.252194747 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.911137168 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.910576394 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.91118183 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.912358071 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.910921602 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.910439561 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.911367505 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.910747823 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.910785194 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.910468385 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.910937311 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.912428436 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.910013479 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.911533795 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.911138449 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.911180114 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.911238617 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.912438004 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.911930718 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.911034234 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.911132217 seconds)
  done (took 41.979200089 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.91210143 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.9118756 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.911540636 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.912409187 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.911914933 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.912680955 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.911445965 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.910814035 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.911890697 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.911794282 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.911323769 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.912549891 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.912054638 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.911762752 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.912515479 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.913067501 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.912330571 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.912638473 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.91263953 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.91285423 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.913878598 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.914308002 seconds)
  done (took 43.91531423 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.91286875 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.913255718 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.914643605 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.913363385 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.912109144 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.913618565 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.91224786 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.914421155 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.9123852 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.914576934 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.920960041 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.920955745 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.913180636 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.917780471 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.91436838 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.913831709 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.059762825 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.914471443 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.914207424 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.914957121 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.914548151 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.92100011 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.915203031 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.914686777 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.913291012 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.913775957 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.914662394 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.913927328 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.914782796 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.917452001 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.91967587 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.915798536 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.917587609 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.918605903 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.915530597 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.916237535 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.921103006 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.916237633 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.91554009 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.915543823 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.925220057 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.938880725 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.91644883 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.915960944 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.9239881 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.917219055 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.91706685 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.919149254 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.925352775 seconds)
  done (took 95.910488067 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.916002587 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.916298247 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.918335997 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.91583355 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.916778037 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.91755684 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.915742896 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.915947928 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.917203581 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.916978261 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.917657971 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.917986776 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.917902572 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.917685445 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.916705339 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.917507761 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.91660336 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.916717022 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.917392772 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.917477802 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.916988459 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.916623659 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.917272624 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.917645493 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.917744981 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.918365833 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.918134949 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.91674276 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.917795303 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.91722234 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.917665138 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.918800094 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.918198692 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.917931697 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.918308161 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.917373457 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.91786723 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.920064284 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.91727026 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.919823065 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.916710241 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.917757611 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.918890419 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.917666969 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.917331729 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.918989601 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.91657116 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.915809897 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.916643347 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.916904516 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.917095088 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.915998593 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.915385262 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.915226156 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.915068555 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.915554076 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.915560041 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.916492907 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.916344259 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.915376979 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.916063321 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.91560376 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.915963315 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.916072607 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.915703921 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.915131339 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.917155924 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.915608763 seconds)
  done (took 132.209006333 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.916069973 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.915191305 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.916578289 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.914680306 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.916111478 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.915353281 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.915401723 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.916272122 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.914694883 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.915398293 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.914441588 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.915261714 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.913688261 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.908518971 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.909826003 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.909814551 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.909173887 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.91025445 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.908501713 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.908396369 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.908789409 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.908346781 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.908473904 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.90906488 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.909186632 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.908204935 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.908346041 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.908765231 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.909886633 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.908456952 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.909777565 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.908392493 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.908158239 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.909593483 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.908983329 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.908624601 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.908530413 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.906954371 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.909796406 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.907461462 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.908564777 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.908950054 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.908476464 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.908036405 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.908760373 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.908870547 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.908931476 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.909146295 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.908909978 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.908914245 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.90932736 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.908286749 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.908862066 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.908541297 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.909332361 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.906123415 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.906623367 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.907458945 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.906783169 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.907610809 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.905884357 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.905633152 seconds)
  done (took 120.267145014 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.905287541 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.905528961 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.906042205 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.905707426 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.907083092 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.907213644 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.906092983 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.9069704 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.90560451 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.904407259 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.905751472 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.905269982 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.906854833 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.90597446 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.905297036 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.907099048 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.906194956 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.907125781 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.905813659 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.906525852 seconds)
  done (took 39.961092321 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.90585279 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.905810325 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.906759773 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.905293317 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.90585467 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.905457213 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.905661999 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.906141751 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.905085925 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.905495774 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.904563556 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.904407359 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.906074546 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.906307949 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.905118901 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.908803505 seconds)
  done (took 32.334805467 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.906376651 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.905318773 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.906011531 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.905633439 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.9052168 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.906392783 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.90785328 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.906415959 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.906170881 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.905500171 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.905428344 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.906340199 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.905687601 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.905303996 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.907728453 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.905517868 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.906831819 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.906550435 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.905901248 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.905184004 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.906431293 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.906455892 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.90650508 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.905609393 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.905614782 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.906713561 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.905854901 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.907778198 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.905920529 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.907372888 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.907715322 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.906529396 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.908583642 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.906486625 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.906106162 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.906687168 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.906500247 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.909118923 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.907328661 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.906962743 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.906690659 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.905947587 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.909076181 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.906350638 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.906569277 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.907677197 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.906341122 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.906624663 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.904098148 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.900999371 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.899964153 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.899490668 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.901111149 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.900615662 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.899628471 seconds)
  done (took 106.66111169 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.899524035 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.899624908 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.901071675 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.898914004 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.898946608 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.900579035 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.898487852 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.90012685 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.902669423 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.898476642 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.898356645 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.897383381 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.898932496 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.899992534 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.898771009 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.898811065 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.899124186 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.898603265 seconds)
  done (took 36.020735478 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.899305194 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.898088003 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.900425408 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.898437536 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.899702782 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.896694812 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.896631927 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.896903681 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.897538596 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.89750093 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.896939198 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.895615139 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.897008885 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.898013185 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.898537963 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.896997283 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.897085461 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.89647927 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.898574579 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.897668887 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.899206527 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.895633789 seconds)
  done (took 43.581927627 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.89529834 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.895582165 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.911335938 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.915920036 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.915715539 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.930671923 seconds)
  done (took 13.293581366 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.895899295 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.896728205 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.8961012 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.896436142 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.899522741 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.896291942 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.896971787 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.896137564 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.895782242 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.896575614 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.897188389 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.897021195 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.895112646 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.89659982 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.900835774 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.896506181 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.895525729 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.897128875 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.895780065 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.895894626 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.896361115 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.895447362 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.89593642 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.896265604 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.89513641 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.895840535 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.896058702 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.89657144 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.895230906 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.895154201 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.895045494 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.895042497 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.895670179 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.894904019 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.894399009 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.895539885 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.894100594 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.894884528 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.896182567 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.893974527 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.895527614 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.894581088 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.894392925 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.896649797 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.894863165 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.894579567 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.89385844 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.896061769 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.897390375 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.897166116 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.897578653 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.898615778 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.896726306 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.897382143 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.894422656 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.892491163 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.893018701 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.892885586 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.893380158 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.895661131 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.894639312 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.894158066 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.895074711 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.894143811 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.896628232 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.894096275 seconds)
  done (took 126.94991371 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.894647635 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.89319401 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.895365752 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.894168803 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.893541661 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.89391873 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.893540002 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.893459161 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.895323218 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.893217421 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.893656561 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.894283233 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.894015314 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.895717141 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.894072108 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.893526372 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.893873479 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.894243386 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.894706451 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.893930424 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.894216549 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.894063573 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.894564421 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.894775051 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.893780269 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.893248453 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.893674057 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.893565663 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.894823317 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.895422316 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.894285298 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.893198943 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.89428844 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.894484208 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.894871237 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.89292978 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.893533864 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.89427936 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.893939315 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.894313017 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.893563023 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.894014036 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.893879645 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.893720654 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.894335835 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.893338388 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.893616124 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.893628154 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.895047025 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.893577137 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.896594058 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.893666182 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.893371535 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.89341726 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.894025396 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.896077697 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.893362325 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.892972354 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.893086545 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.892736171 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.894797028 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.892668663 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.892748559 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.894273597 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.893963643 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.89428975 seconds)
  done (took 126.836474341 seconds)
done (took 2629.84433721 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.937833818 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.003675648 seconds)
  done (took 15.767509399 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.062741762 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.012090975 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.899831524 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.902898148 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.899672259 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.899791425 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.901461425 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.90033992 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.900756198 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.899742676 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.900726205 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.088747971 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.89996773 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.899223614 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.900435931 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.99020415 seconds)
  done (took 52.789446547 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.903413575 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.896849192 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.915625875 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.897752862 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.905545219 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.915668259 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.926812665 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.908294879 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.941975553 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.9173381 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.976092613 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.915775344 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.9048875 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.955660985 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.919110975 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.918534874 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.997097595 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.980705559 seconds)
  done (took 36.522571364 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.983192995 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.907990667 seconds)
  done (took 10.721067139 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.917121822 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.907532932 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.918940163 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.911212009 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.912027056 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.900937439 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.901205473 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.89707709 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.900700484 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.925874036 seconds)
  done (took 70.920039802 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.902012734 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.899327945 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.899272476 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.895295394 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.89273101 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.900306003 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.895269319 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.899238778 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.599526019 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.942066306 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.913003117 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.905631145 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.898661397 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.897669289 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.894185166 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.921233037 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.018119204 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.895794825 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.893255991 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.902800486 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.896653039 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.953668233 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.909708252 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.898261121 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.935262569 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.591745042 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.914085424 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.901420359 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.006053465 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.893657649 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.895747521 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.109297034 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.908252752 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.356363155 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.169392469 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.910475388 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.907668701 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.903620761 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.894207254 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.008184191 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.899667616 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.902302517 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.798632734 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.14650096 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.002337976 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.942913933 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.248424858 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.901363699 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.896610241 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.930416735 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.899118001 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.897768516 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.922459319 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.410257381 seconds)
  done (took 134.457037339 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.896147107 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.246448894 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.061393276 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.89669279 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.178245283 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.098772845 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.896510149 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.940738465 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.896872797 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.125458865 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.15023329 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.998154986 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.900167908 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.896108804 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.895885329 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.895561284 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.040734058 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.966479308 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.89780019 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.89698118 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.924149469 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.13544353 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.020302068 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.899766315 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.924904615 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.101241259 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.01590242 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.997074601 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.663812041 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.894396557 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.957635668 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.901381294 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.897519995 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.895088028 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.048400322 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.988671217 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.976485058 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.900420561 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.896944652 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.894928232 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.550611303 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.098783781 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.990765605 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.020998082 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.148771903 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.100270179 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.679234386 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.896488084 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.62860332 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.057578696 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.122053606 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.128196347 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.018379431 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.899704697 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.160621782 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.898553059 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.89707369 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.140732955 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.120457061 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.993694079 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.899262502 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.898597552 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.897671617 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.132576545 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.900998234 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.992901177 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.902018854 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.901057872 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.996235257 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.996163454 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.129049177 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.108408498 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.927515148 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.223489875 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.400959859 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.141963335 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.965479833 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.14750884 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.901438143 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.897372415 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.976012854 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.732694287 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.150996476 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.142732414 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.141767009 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.934198193 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.61573062 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.898481412 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.122452034 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.116645004 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.146429997 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.144692213 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.135571137 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.221977252 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.89804917 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.898332544 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.135381915 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.017029921 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.903313393 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.242448926 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.129769269 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.446188819 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.925090545 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.201658618 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.026703724 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.905089818 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.524358807 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.899877555 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.123133811 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.937476811 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.903518373 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.900482923 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.116807232 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.873161056 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.903347912 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.54441866 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.959385412 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.905031757 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.132759844 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.903265726 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.161119131 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.902123356 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.127403901 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.945051181 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.929397282 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.071003702 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.14682733 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.903771146 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.143267646 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.13684966 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.013735924 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.119308727 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.600418328 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.902482528 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.185443732 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.904818008 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.902796132 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.070155587 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.904212056 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.041808218 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.903364097 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.182870633 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.921166985 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.132853002 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.904470856 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.15688509 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.934252208 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.9511354 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.905030153 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.025885589 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.903196184 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.733622598 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.057957865 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.903603097 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.90186481 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.469896421 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.903437459 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.049632434 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.123466932 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.922203486 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.972925457 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.568625292 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.902021947 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.983674555 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.923961499 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.29941986 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.903900632 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.152440191 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.905479933 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.902867798 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.903815901 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.134444053 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.084880112 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.907976397 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.904420924 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.798514204 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.903031319 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.903212558 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.085241817 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.25934095 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.904933328 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.102295471 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.906264192 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.030265009 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.906762101 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.968318342 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.237306824 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.906522326 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.904397019 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.903937394 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.909113979 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.907274671 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.108348305 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.927541687 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.421489969 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.040257721 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.16981988 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.212770255 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.142936382 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.947640038 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.906884358 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.158293283 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.908827429 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.967142264 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.90838153 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.9238396 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.133921258 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.907340091 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.111705375 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.172535468 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.752797112 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.951001283 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.907975079 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.90524912 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.905346807 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.048715403 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.990548843 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.907223752 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.905253864 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.018658116 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.023778069 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.114832168 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.906775655 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.990941093 seconds)
  done (took 909.788512749 seconds)
done (took 1232.795177604 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.907328908 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.9077949 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.907025026 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.909735646 seconds)
  done (took 29.472222806 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.914060077 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.906766004 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.908369835 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.907506885 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.908730166 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.90821408 seconds)
  done (took 13.292952753 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.96880129 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.909004237 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.907774289 seconds)
  done (took 21.62515604 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.98932918 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.321784345 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.053321943 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.338757061 seconds)
  done (took 10.543241234 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.908741501 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.907924163 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.908416889 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.909109639 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.915742052 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.916543468 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.909149712 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.909395645 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.916243535 seconds)
  done (took 19.042691999 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.001410608 seconds)
done (took 99.818012059 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Float64, false)...
    done (took 5.616660726 seconds)
    (2/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.908662481 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 2.074924456 seconds)
    (4/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.084959741 seconds)
    (5/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.039988754 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.011963629 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.006480853 seconds)
    (8/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.748280091 seconds)
    (9/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.984094564 seconds)
    (10/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.01346367 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.748365663 seconds)
    (12/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.248137767 seconds)
    (13/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.119291559 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.92778409 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.4474477 seconds)
    (16/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.16585109 seconds)
    (17/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.975042907 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.850602051 seconds)
    (19/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.064634222 seconds)
    (20/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.173905176 seconds)
    (21/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.159554713 seconds)
    (22/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.15421108 seconds)
    (23/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.289283302 seconds)
    (24/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.913317375 seconds)
    (25/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.607639813 seconds)
    (26/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.934775881 seconds)
    (27/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.908726621 seconds)
    (28/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.910220503 seconds)
    (29/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.366966162 seconds)
    (30/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.009647374 seconds)
    (31/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 3.728790098 seconds)
    (32/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.999920023 seconds)
    (33/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.033725455 seconds)
    (34/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.927173033 seconds)
    (35/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.150250886 seconds)
    (36/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.940107988 seconds)
    (37/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.152594131 seconds)
    (38/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.049474338 seconds)
    (39/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.025587852 seconds)
    (40/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.124944473 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.200674474 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.809903005 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.48329871 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.656331984 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.265966708 seconds)
    (46/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.91426592 seconds)
    (47/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.25391219 seconds)
    (48/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.126919886 seconds)
    (49/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.933509292 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.043164207 seconds)
    (51/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.934632892 seconds)
    (52/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.326701991 seconds)
    (53/309) benchmarking ("sort", Bool, false)...
    done (took 2.12703183 seconds)
    (54/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.011562055 seconds)
    (55/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.991232486 seconds)
    (56/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.91353631 seconds)
    (57/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.911494539 seconds)
    (58/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.042275144 seconds)
    (59/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.911740791 seconds)
    (60/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.309854637 seconds)
    (61/309) benchmarking ("sort", Int64, false)...
    done (took 5.563199988 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.164712886 seconds)
    (63/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.911230565 seconds)
    (64/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.082730832 seconds)
    (65/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.931825503 seconds)
    (66/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.913488594 seconds)
    (67/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.070074545 seconds)
    (68/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.993284322 seconds)
    (69/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.773308898 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.307584267 seconds)
    (71/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.992452588 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.306258348 seconds)
    (73/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.914199882 seconds)
    (74/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.233089965 seconds)
    (75/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 7.037924743 seconds)
    (76/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.148181237 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.018585578 seconds)
    (78/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.216857916 seconds)
    (79/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.54140547 seconds)
    (80/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.973714345 seconds)
    (81/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.932562089 seconds)
    (82/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.991153032 seconds)
    (83/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.285895156 seconds)
    (84/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.914057849 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.992811302 seconds)
    (86/309) benchmarking ("map", abs, BigInt, false)...
    done (took 8.478080666 seconds)
    (87/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.13840576 seconds)
    (88/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.931375418 seconds)
    (89/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.921151508 seconds)
    (90/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.911791865 seconds)
    (91/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.938639301 seconds)
    (92/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.206550366 seconds)
    (93/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.915853034 seconds)
    (94/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.366076267 seconds)
    (95/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.253608757 seconds)
    (96/309) benchmarking ("sort", Float32, false)...
    done (took 5.589398216 seconds)
    (97/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.296198738 seconds)
    (98/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.411526471 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.259242343 seconds)
    (100/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.422859461 seconds)
    (101/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 2.04645709 seconds)
    (102/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.223478629 seconds)
    (103/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.025337292 seconds)
    (104/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.917317041 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.537277948 seconds)
    (106/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 2.037133598 seconds)
    (107/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.936951636 seconds)
    (108/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.115477629 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.915191232 seconds)
    (110/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.05693252 seconds)
    (111/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.93545716 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.940691365 seconds)
    (113/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.914346854 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.928443325 seconds)
    (115/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.172334596 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.293876783 seconds)
    (117/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.052930365 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.010395192 seconds)
    (119/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.228458448 seconds)
    (120/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.699613655 seconds)
    (121/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.215854383 seconds)
    (122/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.121302053 seconds)
    (123/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.299771002 seconds)
    (124/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.170801513 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.245277516 seconds)
    (126/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.575582109 seconds)
    (127/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.922135078 seconds)
    (128/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.085131453 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.254130307 seconds)
    (130/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.92047753 seconds)
    (131/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.309306215 seconds)
    (132/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.938371375 seconds)
    (133/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.096772859 seconds)
    (134/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.002904909 seconds)
    (135/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.925454213 seconds)
    (136/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.991978594 seconds)
    (137/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.335546495 seconds)
    (138/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.297221431 seconds)
    (139/309) benchmarking ("sort", BigInt, false)...
    done (took 6.91555822 seconds)
    (140/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.173930853 seconds)
    (141/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.299107554 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.154470749 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.794015671 seconds)
    (144/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.959757395 seconds)
    (145/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.116393378 seconds)
    (146/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.168318293 seconds)
    (147/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.232295016 seconds)
    (148/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.221250868 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.047656257 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.508371209 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.04900932 seconds)
    (152/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.281865213 seconds)
    (153/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.000534104 seconds)
    (154/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.934959576 seconds)
    (155/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.99269165 seconds)
    (156/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.942935748 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.565004617 seconds)
    (158/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.393392715 seconds)
    (159/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 2.006216207 seconds)
    (160/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.25333843 seconds)
    (161/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.946548563 seconds)
    (162/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.938642602 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.085934335 seconds)
    (164/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.946865639 seconds)
    (165/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.014270033 seconds)
    (166/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.120195533 seconds)
    (167/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.084027625 seconds)
    (168/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.222897404 seconds)
    (169/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.940822646 seconds)
    (170/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.918344508 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.112719059 seconds)
    (172/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.017858298 seconds)
    (173/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.967671765 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.308723077 seconds)
    (175/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.936363593 seconds)
    (176/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.38964211 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.927578056 seconds)
    (178/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.081901336 seconds)
    (179/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.126278514 seconds)
    (180/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.180657366 seconds)
    (181/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.143673984 seconds)
    (182/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.919734932 seconds)
    (183/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.61248314 seconds)
    (184/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.918777246 seconds)
    (185/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.239948471 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.911538244 seconds)
    (187/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.108100496 seconds)
    (188/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.920891826 seconds)
    (189/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.210395239 seconds)
    (190/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.952817028 seconds)
    (191/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.078581282 seconds)
    (192/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.918809718 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.299306084 seconds)
    (194/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.34287093 seconds)
    (195/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.924807643 seconds)
    (196/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.310103595 seconds)
    (197/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.175623094 seconds)
    (198/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.147020145 seconds)
    (199/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.3201639 seconds)
    (200/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.072813701 seconds)
    (201/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.975032218 seconds)
    (202/309) benchmarking ("sort", Int8, false)...
    done (took 4.887954689 seconds)
    (203/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.936448017 seconds)
    (204/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.930522903 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.672348205 seconds)
    (206/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.190373242 seconds)
    (207/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.982600929 seconds)
    (208/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.020401666 seconds)
    (209/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.021976042 seconds)
    (210/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.243499105 seconds)
    (211/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.923383315 seconds)
    (212/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 8.47767052 seconds)
    (213/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 4.111016372 seconds)
    (214/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.987358411 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.95562628 seconds)
    (216/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.102427215 seconds)
    (217/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.018477809 seconds)
    (218/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.476064598 seconds)
    (219/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.015815642 seconds)
    (220/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.18780362 seconds)
    (221/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.486255153 seconds)
    (222/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.155008039 seconds)
    (223/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.078335978 seconds)
    (224/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.03575335 seconds)
    (225/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.066201302 seconds)
    (226/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.101833593 seconds)
    (227/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.159817723 seconds)
    (228/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.984992275 seconds)
    (229/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.538153775 seconds)
    (230/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.245059507 seconds)
    (231/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.922497205 seconds)
    (232/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.051782375 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.921010281 seconds)
    (234/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.709988672 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.326034392 seconds)
    (236/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.751383295 seconds)
    (237/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 2.045047098 seconds)
    (238/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.008003938 seconds)
    (239/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.92449676 seconds)
    (240/309) benchmarking ("map", abs, Float64, false)...
    done (took 3.818152244 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.048928575 seconds)
    (242/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.225656248 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.319472423 seconds)
    (244/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.032613908 seconds)
    (245/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.929767113 seconds)
    (246/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.920780399 seconds)
    (247/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 3.909922527 seconds)
    (248/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.612961958 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.914242832 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.286826502 seconds)
    (251/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.331090757 seconds)
    (252/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.923984167 seconds)
    (253/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.681846857 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.793230421 seconds)
    (255/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.035723726 seconds)
    (256/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.926290742 seconds)
    (257/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.289395858 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.795297879 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.059378678 seconds)
    (260/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.023520998 seconds)
    (261/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.004350748 seconds)
    (262/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.923943562 seconds)
    (263/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.390905386 seconds)
    (264/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.391830891 seconds)
    (265/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.237580055 seconds)
    (266/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.00811347 seconds)
    (267/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.000003477 seconds)
    (268/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.930782766 seconds)
    (269/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.164434396 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.02524381 seconds)
    (271/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.94028775 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.255416276 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.545653256 seconds)
    (274/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.243795833 seconds)
    (275/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.655432575 seconds)
    (276/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.543846795 seconds)
    (277/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 7.029547448 seconds)
    (278/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.114870607 seconds)
    (279/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.202136754 seconds)
    (280/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.37054627 seconds)
    (281/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.670546646 seconds)
    (282/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.186771504 seconds)
    (283/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.923406917 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.241960618 seconds)
    (285/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.157833392 seconds)
    (286/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.387141347 seconds)
    (287/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.685899063 seconds)
    (288/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.948870436 seconds)
    (289/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.032620784 seconds)
    (290/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.020689093 seconds)
    (291/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 2.014926285 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.834823097 seconds)
    (293/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.058379888 seconds)
    (294/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.800620813 seconds)
    (295/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.198156643 seconds)
    (296/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.031376254 seconds)
    (297/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.06439487 seconds)
    (298/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.065062554 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.956181468 seconds)
    (300/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.569868457 seconds)
    (301/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.107601619 seconds)
    (302/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.695479501 seconds)
    (303/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.244237567 seconds)
    (304/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.12251255 seconds)
    (305/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.109427314 seconds)
    (306/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.932302008 seconds)
    (307/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 2.022315288 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.136431434 seconds)
    (309/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.953631971 seconds)
  done (took 1024.185002041 seconds)
done (took 1026.104131054 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.956936146 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.94770283 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.932264403 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.954626514 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.043405522 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.977130038 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.946174781 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.936811623 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.983062089 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.982614042 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.928370766 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.97174839 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.931826417 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.931177529 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.933473447 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.94672472 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.229504583 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.955792627 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.949315473 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.945277372 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.950941302 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.93005031 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.983363924 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.971656674 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.937713298 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.937948265 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.935267478 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.95230866 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.044811459 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.935929004 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.939638016 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.945499297 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.231051223 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.957815767 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.931869243 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.952405858 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.947612427 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.947782959 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.939643582 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.965015805 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.36520596 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.936054038 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.933204808 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.935967541 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.935661464 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.942947995 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.933569622 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.943528778 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.948815248 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.948029199 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.361626467 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.955056281 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.935848627 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.936068694 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.948546823 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.933394562 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.94041129 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.950124032 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.952974838 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.950442932 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.221537496 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.966634708 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.940073494 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.951808677 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.943196795 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.397723643 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.942839512 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.944726207 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.366255289 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.950020919 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.398925349 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.949217079 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.939813672 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.949593384 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.966974445 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.232666265 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.958311544 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.935983543 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.942412312 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.932711499 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.949973642 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.950215879 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.942547826 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.940084521 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.950180923 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.978128548 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.951255702 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.935380396 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.950547224 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.955623329 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.944621414 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.948690654 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.942172082 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.93635433 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.950313495 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.942507398 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.938958697 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.938499462 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.942225668 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.952120744 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.365921517 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.956592801 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.934839348 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.93466695 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.937099402 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.949949469 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.36507823 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.942154986 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.961554152 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.988425717 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.939716906 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.223282718 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.962640768 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.953661297 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.951358133 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.94199909 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.937081393 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.224215462 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.389183294 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.956308878 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.945570497 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.935803656 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.954409315 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.941553332 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.937135439 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.241396047 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.966793514 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.954375011 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.059780584 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.954874691 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.974897229 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.93553291 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.94450243 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.984282217 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.955773888 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.973766614 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.94301067 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.953906437 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.955274402 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.937512596 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.956058718 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.955486023 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.940514224 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.949313953 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.938465681 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.983425412 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.954760299 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.95298312 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.961549813 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.060961656 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.938599093 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.23238169 seconds)
done (took 304.141205782 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.02137279 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.933643352 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.028824846 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.93546731 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.032026432 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.006324409 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.936736205 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.93649323 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.936318493 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.46016481 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.936835518 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.941026189 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.935873008 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.94005412 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.009647009 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.935802122 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.937313027 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.22193185 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.938038826 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.016609467 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.935272594 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.943196858 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.940143354 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.438885473 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.940863087 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.937950329 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.019013489 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.939843003 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.225150106 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.93895624 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.939584608 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.225913059 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.019699217 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.952987846 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.950829406 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.945520143 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.026121311 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.949325627 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.005863573 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.015553968 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.033117728 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.975419998 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.940456595 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.940262729 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.943863985 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.94131863 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.941214409 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.972818608 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.940588722 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.946565463 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.234376929 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.94718409 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.950174311 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.942474457 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.94197056 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.95506788 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.942323737 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.94349661 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.020977385 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.942875644 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.00783425 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.453348286 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.44116835 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.942747232 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.941475484 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.944439932 seconds)
  done (took 189.329662233 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.00532976 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.014666743 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.00869358 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.945187978 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.993818757 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.009795133 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.946037744 seconds)
  done (took 15.796558008 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.948951932 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.942984714 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.992700498 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.993066725 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.943413248 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.121523418 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.954184003 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.946885133 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.968908312 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.944350457 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.618620367 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.99394564 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.948098637 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.942225534 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.953922104 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 2.014909745 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.945080199 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.945651844 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.053410698 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.09350906 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.947815655 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.95075005 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.970697527 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.955915056 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.945213084 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.944313274 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.944021159 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.952492849 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.943971876 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.94409288 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.944173731 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.995888145 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.947833022 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.94539451 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.94725069 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.945675868 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.944308315 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.944600922 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.944112789 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.942898168 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.943752153 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.944781331 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.946614537 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.946562154 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.944686017 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.967967366 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.94460266 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.948130877 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.944320442 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.945011446 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.970635277 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.945197812 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.947004033 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.950597973 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.987588399 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.95247749 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.944833599 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.947380871 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.947999539 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.94576678 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.945265908 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.093447238 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.997739773 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.946179975 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.996879891 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.103219335 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.945562626 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.945895063 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.94925169 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.039316018 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.94581456 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.998663642 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.946595755 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.089535669 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.946581347 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.124663332 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.969689777 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.949888948 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.953526456 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.945644898 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.955039805 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.946586269 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.947218028 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.952994045 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.951450496 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.947842397 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.947402625 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.947526246 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.954467943 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.947406919 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.998494326 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.946239609 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.947345021 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.089565223 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.946649495 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.058190373 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.974556193 seconds)
  done (took 213.455919295 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.953402602 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.954170681 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.948523318 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.964648435 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.948866865 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.947162332 seconds)
  done (took 13.594355474 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.950355542 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.954811704 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.947318156 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.948616317 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.947632938 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.948103644 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.949144017 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.949069717 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.950573027 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.947484017 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.947641932 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.949372202 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.949160373 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.948840994 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.949541314 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.948988927 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.950798508 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.949780925 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.948154691 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.948533467 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.083263213 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.952785871 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.94899349 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.959744707 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.953312367 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.949824072 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.964257019 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.950450556 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.950665234 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.957981664 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.95448307 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.952463112 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.960387821 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.955026681 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.955046401 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.961138418 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.95467073 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.951720838 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.949559668 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.950476823 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.951318672 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.954170524 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.95150235 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.951547644 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.952004486 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.964809962 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.955705283 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.962458369 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.95159104 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.952137832 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.953452177 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.953006743 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.951171984 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.951720147 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.964263059 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.95672869 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.959452089 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.954116116 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.952174966 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.962204806 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.955892808 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.951876835 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.955177274 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.955151861 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.959167791 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.95296616 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.961672061 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.959039427 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.952355832 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.952284482 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.953043603 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.95360599 seconds)
  done (took 143.650020576 seconds)
done (took 577.706126885 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.392772331 seconds)
  done (took 9.274591181 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.968826251 seconds)
  done (took 8.853404056 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.523069721 seconds)
  done (took 10.408138462 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.969054323 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.982792507 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.963904588 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.959685121 seconds)
  done (took 29.76411961 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.145052234 seconds)
  done (took 9.026568823 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.961558788 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.951119958 seconds)
  done (took 15.863878329 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.971145985 seconds)
  done (took 8.853356249 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.343748644 seconds)
  done (took 9.236894248 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.972811915 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.966469085 seconds)
  done (took 15.842005446 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.954375243 seconds)
  done (took 8.83638429 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.636795226 seconds)
  done (took 9.60892887 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.966759365 seconds)
  done (took 8.867256154 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.005301727 seconds)
  done (took 8.887436004 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.120341567 seconds)
  done (took 10.001796147 seconds)
done (took 165.208800192 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.956952685 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.952306195 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.954033374 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.953196297 seconds)
  done (took 29.697958836 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.989076383 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.98894112 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.997562332 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.989045097 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.97969452 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.980348664 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.989014319 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.992377363 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.978872641 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.987364906 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.98953882 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.986942059 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.988984425 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.998782951 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.997598948 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.987895023 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.989882868 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.989123255 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.980590563 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.998542491 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.987678859 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.990258667 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.959484279 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.955491003 seconds)
  done (took 49.556384464 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.148561831 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.022002998 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.109175673 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.999674826 seconds)
  done (took 10.162945545 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.954958259 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.018993819 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 2.007212913 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 2.002245024 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.090445273 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.059177491 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 2.008991062 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.184474952 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.070621913 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.085538648 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.963541845 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.977769765 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.979464383 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 2.004484503 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.058762488 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.958870361 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.956859763 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.075326893 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 2.01913761 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.166433152 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.957949743 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 2.011000116 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.043192611 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 2.009428482 seconds)
  done (took 50.55026057 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.957846502 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.965938552 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.96484089 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.957858131 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.958383833 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.958670489 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.963463805 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.959416402 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.979825983 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.960304044 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.958078984 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.958506334 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.967375689 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.959038714 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.957788478 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.971195163 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.972592215 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.958136872 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.963298242 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.965070567 seconds)
  done (took 41.144105344 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.955883148 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.802595674 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.303072154 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.207950928 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.956898207 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.955319248 seconds)
  done (took 32.067495842 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.969817108 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.963335133 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.959240046 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.013860038 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.092265729 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.965057055 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.958674528 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.968358167 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.002199403 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.023205033 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.975494689 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.983870171 seconds)
  done (took 25.762582673 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.958446496 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.955598334 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.961794333 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.971042626 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.96983546 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.964994074 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.965262514 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.959883818 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.970061337 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.974924713 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.964239612 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.968970517 seconds)
  done (took 45.474454623 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.173853849 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.18342683 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.172857055 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.321278906 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.942357034 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.859195917 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.669476912 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.703224986 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.258536306 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.937019335 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.925404014 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.842056354 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.201265832 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.959885692 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.215460027 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.886883376 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.959750598 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.229542528 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.961072218 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.965852961 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.264066138 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.00856502 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.173145692 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.00630873 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.173618 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.277119101 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.197799048 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.224091304 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.298531835 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 7.098695554 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 4.917853774 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.997151359 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.969706253 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.970992104 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.962545415 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.973265711 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.230878493 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.961424795 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 7.052739436 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.947959548 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.887105461 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.35253252 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.076864483 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.372408503 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.092639266 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.202003822 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.965778888 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.913949778 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.01058999 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.285855399 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.068219407 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.174493279 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.887137444 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.406318643 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.087252369 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.963263411 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.965772973 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.660605147 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.201767173 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.041957132 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.350384421 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.074941095 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.964496981 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.053625439 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.963515153 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.075492334 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.151008527 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.967093097 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.961857761 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.969844766 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.060183352 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.178430126 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.962704476 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.96396061 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.980545315 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.965882353 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.314500958 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.293840591 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.944336655 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.520156148 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.243053435 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.921817529 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.227052333 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.998989391 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.243055247 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.175867323 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.042163041 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.20614659 seconds)
    (89/481) benchmarking "5d"...
    done (took 3.828139554 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.96793337 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.769700997 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.044601235 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.027400257 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.963347169 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.915262344 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.335060992 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.081386862 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.964091027 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.889858076 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.976057361 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.166294896 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.238157766 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.014645589 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.964489195 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.962596631 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.965157831 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.964138407 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.981267375 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.976827372 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.882620453 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.250546467 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.069090437 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.233710149 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.956153129 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.643274576 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.235321066 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.092904945 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.579183335 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.095439831 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.820676135 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.103159077 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.979891365 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.967451167 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.152970802 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.372769065 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.92019914 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.20220178 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.059771104 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.992751714 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.972097558 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.048301496 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.191771233 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.966609796 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.216011417 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.209578915 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.606123833 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.054256563 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.039385371 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.975086367 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.180143747 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.047927297 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.49128122 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.183647558 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.322818373 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.948298806 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.467025756 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.320576669 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.354077246 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.982108352 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 4.926020357 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.994667372 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.667685877 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.891933392 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.971251414 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.305908616 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 7.011944843 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.028043822 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.967745045 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.969876143 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.976052419 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.049293512 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.038278261 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.044295986 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.895191324 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.969765096 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.969660636 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.969000786 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.504397911 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.733022172 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.25710871 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.967764639 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.041917092 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.969835327 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.559357239 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.971067975 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.089495927 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.967971701 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.87211463 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.995744835 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.31757547 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.387307327 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.09206077 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.967838039 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.970571256 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.66907617 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.977013563 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.668429714 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.255878827 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.970328021 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.446273798 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.0358332 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.047237982 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 1.981640147 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.969455773 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.970676425 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.970582635 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.172296609 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.475868146 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.393703163 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.325091892 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.053341108 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.241388886 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.162968257 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.241913743 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.656215625 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.5017755 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.196233889 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.970238882 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.973569008 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.615760969 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.978401502 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.186329148 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.173049821 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.243113261 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.273694687 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.388636808 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.975376819 seconds)
    (218/481) benchmarking "4d"...
    done (took 2.985063663 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.21209997 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.969845365 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.397421237 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.078298218 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.419293893 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.788613187 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.245612869 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 2.038052038 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.982120653 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.626124366 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.110297426 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.930206171 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.098494598 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.896275642 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.743161196 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.263951796 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.249455487 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.95226383 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.314491217 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.269285741 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.329611086 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.603075911 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.84430276 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.02016437 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.052480427 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.98005538 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.287748078 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.007115034 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.020676069 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.977591177 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.973275081 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.97493414 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.64731365 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.04956615 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.104799043 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.768170427 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.273325753 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.876207766 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.245830967 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.03127101 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.418828356 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.013148527 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.185544418 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.977320974 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.311703532 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.015108824 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.247199984 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.928197574 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.186892365 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.176485111 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.99046314 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.978213842 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.900640119 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.852687537 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.97807963 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.935843847 seconds)
    (275/481) benchmarking "3d"...
    done (took 2.854285506 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 1.975130121 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.273685933 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.360911249 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.003273962 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.976874939 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.375694008 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.486512441 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.155072932 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.981659325 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.188709398 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.093694261 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.893921495 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.460376476 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.553858626 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.67542596 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 1.985384183 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.177388003 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.380036213 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.042022384 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.005955796 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.046385007 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.246597876 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.95692762 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.975563241 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.495175795 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.072620945 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.215100726 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.297875845 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.284439275 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.455431901 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.22087105 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.989161589 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.205405872 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.346167326 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.220769437 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.97817485 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.068958824 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.191567597 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.254544252 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.85279647 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.686399244 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.220185901 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.981191518 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.903927368 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.185829051 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.472801885 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.329728393 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.517193849 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.939508543 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.999286836 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.471094983 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.992955614 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.913631553 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.978116002 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.920098596 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.191014238 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.940359192 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.010005188 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.534815021 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.305051358 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.382120911 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.992156569 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.009284872 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.90366548 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.676497589 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.926185859 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.070291019 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.016677865 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.049469082 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.980837965 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.180824426 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.415465349 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.024844656 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.505888193 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.189519302 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.278744516 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.246090232 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.288451716 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.936002823 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.25051362 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.926737422 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.40759134 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.059455876 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.070412669 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.978738025 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.981777651 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.250446263 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.370479422 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.366385717 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.009289569 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.386329151 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.080509208 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.98145058 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.98461468 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.263489681 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.207467273 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.193334817 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.057361017 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 7.176811973 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.053349469 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.494164648 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.984770735 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.982983109 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.115308093 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.844942037 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.711423815 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.276281614 seconds)
    (383/481) benchmarking "6d"...
    done (took 3.722389989 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.182797955 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.500179594 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.902884482 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.945994979 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.01864999 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.980036325 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 7.096628581 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.984519969 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.221244166 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.253463467 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.742632434 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.985840668 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.979581794 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.842615399 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.677067148 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.217592244 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.985877902 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.015399528 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.984018571 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.098138423 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.982108728 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.246334345 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.034496202 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.980813701 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.98856448 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.195340693 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.496794041 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.998188203 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.681940516 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.18451092 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.983737262 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.467038306 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.458139436 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.016530841 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 2.01800813 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.945572619 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.220596346 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.500257828 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.948683037 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.973673096 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.209116143 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.984774129 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.253063428 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.256020405 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.983788464 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.198851611 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.292037786 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.26489476 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.992074648 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.850215477 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.990520922 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.249154273 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.035859777 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.982813819 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.991907462 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.523548778 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.679601175 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.447785694 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.132524286 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.356762428 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.782107203 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.740299667 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.986258876 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.989575826 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.737978294 seconds)
    (449/481) benchmarking "2d"...
    done (took 2.703334848 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.198237891 seconds)
    (451/481) benchmarking "7d"...
    done (took 2.268840207 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.930732462 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.186663959 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.688712442 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.878032946 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.251377867 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.911363861 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.987346154 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.420742885 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.250282789 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.919912729 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.989134324 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.599401337 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.986190181 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.067670468 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.986056789 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.112313105 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.252136503 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.403834091 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 2.096961953 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.625778607 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.715416195 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.928458246 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.029043528 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.792456062 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.545310423 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.718503676 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.008171098 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.003416898 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.912009975 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.988039085 seconds)
  done (took 1683.013220985 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.056902131 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.063920001 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.053806611 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.027871866 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.119121142 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.085426757 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.057672904 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 7.063625461 seconds)
  done (took 58.442970745 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.986399752 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.001256902 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.989792326 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.987820024 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.019321269 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.986652581 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.142058294 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.994367478 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.990235481 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.991489186 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.986711157 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.986816133 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.264173952 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.002122908 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.987820517 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.985941385 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.990613439 seconds)
  done (took 76.219754751 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.98981086 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.116733178 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.04378098 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.988799589 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.456634899 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.992761371 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.845608065 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.036985523 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.029893405 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.216102782 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.286662173 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.988943544 seconds)
  done (took 90.909519387 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.993245211 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.988744959 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.9894097 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.988908025 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.988768727 seconds)
  done (took 11.869776562 seconds)
done (took 2206.786218325 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.231870055 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.045977542 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.085697264 seconds)
  done (took 6.050383997 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.13504873 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.1816196 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.293016478 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.053922096 seconds)
  done (took 10.585222026 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.242114436 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.372631148 seconds)
  done (took 6.531732541 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.337992074 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.00032425 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.355501831 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.992575846 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.992813076 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.992212264 seconds)
  done (took 22.900888087 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.991345396 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.991306965 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.99115167 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.99076332 seconds)
  done (took 9.881108066 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.988933926 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.715429114 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.991237681 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.003672833 seconds)
  done (took 21.617057097 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.134328298 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.101873727 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.128843541 seconds)
  done (took 8.282760506 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.211547882 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.823474917 seconds)
  done (took 6.952381258 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.134143139 seconds)
  done (took 4.052431824 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.018397857 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.261146932 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.490654418 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.985021732 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.635240723 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.086073615 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.375514792 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.257932266 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.415258561 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.462569548 seconds)
  done (took 26.907083364 seconds)
done (took 139.604927178 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.550233584 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.034174835 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.213447131 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.425885978 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.237249486 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.211940778 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.219824858 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.408692782 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.075707295 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.084447977 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.408883942 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.239017363 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.167093447 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.030880853 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.170319748 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.030580333 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.236345583 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.406109383 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.069274361 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.335366639 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.225590797 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.048372141 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.250962609 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.056216706 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.238606102 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.161429419 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.602454429 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.031489893 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.229580631 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.597769158 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.168787398 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.493335485 seconds)
  done (took 173.595846074 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.008977023 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.009220172 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.009856118 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.028446584 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.296232556 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.00976851 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.01214445 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.010935325 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.252084972 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.270514078 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.010992997 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.300197439 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.009624091 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.009522037 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.010855226 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.010297081 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.409033714 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.010472294 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.010487396 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.011285131 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.011805982 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.155214022 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.010701822 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.153568128 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.410446378 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.012160926 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.01135113 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.012456895 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.01173546 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.01114656 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.011324992 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.010483468 seconds)
  done (took 212.462430404 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.01033051 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.013445756 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.012726929 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.012532146 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.013893685 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.012801089 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.011505594 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.011232973 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.758378863 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.756804497 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.0110859 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.014627108 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.013077476 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.01135603 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.012053187 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.012322511 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.011740083 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.013471616 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.013145806 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.011786437 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.015266192 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.71238703 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.021409754 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.711341912 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.01492556 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.013793298 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.012853385 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.013605948 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.018300995 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.015291112 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.010448528 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.014178344 seconds)
  done (took 225.252717589 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.255739422 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.017678356 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.016403636 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 3.065904874 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.015035603 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.015951871 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.016444942 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.262879524 seconds)
  done (took 20.610983135 seconds)
done (took 633.872703406 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.395735383 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.758354461 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.159363401 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.041522056 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.274341108 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.081289279 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.033396972 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.096946087 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.861302668 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.10927351 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.423182541 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.042140158 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.783922795 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.062682454 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.15217396 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.090567558 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.3773074 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.692272741 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.173550428 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.681897004 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.203583911 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.989506824 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.116231813 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.906109922 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.446116022 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.023300953 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.057415291 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.3822799 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.041632643 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.199876016 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.665399006 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.306512444 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.055183529 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.038513233 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.088419272 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.064348536 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.24436334 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.045562959 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.158169171 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.786324779 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.705427985 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.750473641 seconds)
  done (took 106.511238347 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.024686336 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.022130209 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.02326282 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.021496203 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.03015195 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.021157326 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.021285251 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.02187532 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.021676935 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.02253804 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.021980882 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.031788665 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.022929427 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.031606567 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.022288597 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.022738168 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.023020023 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.033097439 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.023509397 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.023425505 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.022602387 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.021931997 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.018780673 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.023640798 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.023115849 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.024631738 seconds)
  done (took 54.580737183 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.018438667 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.207392324 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.261061718 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.038115981 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.018687123 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.022352771 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.047310753 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.025596924 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.020660676 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.020775358 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.136829006 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.023740106 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.032125657 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.258880838 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.036478451 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.019656877 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.019600753 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.019464797 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.216196776 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.034753023 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.049482877 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.026943561 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.047670829 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.035206474 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.021660922 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.019894196 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.022959545 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.458178693 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.033387617 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.138174299 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.094044484 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.052016396 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.347118705 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.272699794 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.075566666 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.025685365 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.019737577 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.143549207 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.02614967 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.021579184 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.049416676 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.029844331 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.26675911 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.542258455 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.036268949 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.020900331 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.455344395 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.156540983 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.063447514 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.034352154 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.271573153 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.039513561 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.021359224 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.022077199 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.058655897 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.034430294 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.023044091 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.284601801 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.038456675 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.05056643 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.03041077 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.022462369 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.221860516 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.031460575 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.209855858 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.031318354 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.028127699 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.02384958 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.265828613 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.039602618 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.558991357 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.037489435 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.022290512 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.140377548 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.215470563 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.482454392 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.036270684 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.224185262 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.366117381 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.060456563 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.034186466 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.444413083 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.063723964 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.034345311 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.023061876 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.023418917 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.023340153 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.069739521 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.05031812 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.47443737 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.554458867 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.302780404 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.063467422 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.038486475 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.025116762 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.286824017 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.035818742 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.024549951 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.260600303 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.56874387 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.041063567 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.030581395 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.532900242 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.039787507 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.053072283 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.035318293 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.277608737 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.042686372 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.071466028 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.024249057 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.031267089 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.02819518 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.055278383 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.035338605 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.025631009 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.526125485 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.163434495 seconds)
  done (took 250.328376753 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.02476838 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.024840524 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.024254932 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.025193349 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.024778702 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.026213137 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.024372404 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.024227281 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.026000687 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.024864222 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.0242963 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.024042751 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.025703455 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.030010191 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.069268669 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.025944923 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.516439753 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.024742065 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.02450806 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.026588044 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.582623619 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.030361976 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.025281782 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.027109247 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.026886294 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.027707695 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.027041133 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.059340334 seconds)
  done (took 171.803279438 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.028626032 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.081137037 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.038925827 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.074384706 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.039385893 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.027225555 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.123382877 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.045992577 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.032422665 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.028246684 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.026836202 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.058778719 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.035484 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.127608637 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.058424809 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.133387411 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.13133599 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.036085491 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.028678411 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.028518432 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.075958322 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.043647382 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.058801352 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.091177002 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.041382669 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.084084606 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.041465612 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.030650315 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.030475922 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.143551461 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.048567686 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.060980624 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.062822202 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.048711331 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.146947299 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.143532336 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.133239857 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.133611243 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.034412252 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.029135818 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.028639997 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.030037856 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.085188871 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.042453396 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.029736743 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.1447958 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.046777391 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.030052442 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.02890699 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.029681919 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.04305589 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.048215011 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.066272392 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.155566317 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.078150985 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.063223484 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.12752918 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.14791342 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.03083967 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.126924468 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.037738415 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.144012159 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.048274505 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.031035769 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.03188068 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.033959597 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.080573026 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.142190827 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.134293125 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.037977843 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.126934566 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.088184921 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.045860563 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.032815284 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.032447798 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.085694361 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.142017025 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.086056005 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.093500785 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.070106993 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.041108798 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.030501913 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.033924827 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.05916184 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.039884362 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.145981637 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.147149841 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.03780581 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.032393549 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.0322199 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.034296266 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.056151999 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.095487409 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.074598154 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.140220446 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.069834896 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.071218801 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.041034887 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.046524301 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.037704595 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.068983604 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.041343818 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.044608907 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.309860806 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.062959913 seconds)
  done (took 219.332660989 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.388064755 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.076435308 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.106607404 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.303070555 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.386982952 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.933399145 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.070286242 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.082786394 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.09156746 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.209526513 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.13835253 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.121594238 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.070798817 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.054156754 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.07608254 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.093062174 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.106113831 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.381363156 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.285144412 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.56488209 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.068805729 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.380038909 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.397821684 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.429785483 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.124269857 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.444844812 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.689723165 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.181327001 seconds)
  done (took 67.221740569 seconds)
done (took 871.721467472 seconds)
SAVING RESULT...
DONE!
