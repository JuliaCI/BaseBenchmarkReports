cset: moving following pidspec: 12785
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.462077481 seconds)
loading group "string"... done (took 0.520054351 seconds)
loading group "linalg"... done (took 9.829575196 seconds)
loading group "parallel"... done (took 0.178606219 seconds)
loading group "find"... done (took 6.509165734 seconds)
loading group "tuple"... done (took 2.220248302 seconds)
loading group "dates"... done (took 1.518810422 seconds)
loading group "micro"... done (took 0.215710003 seconds)
loading group "io"... done (took 0.54829439 seconds)
loading group "scalar"... done (took 61.95706647 seconds)
loading group "sparse"... done (took 14.654064705 seconds)
loading group "broadcast"... done (took 1.388549191 seconds)
loading group "union"... done (took 11.528018432 seconds)
loading group "simd"... done (took 3.986593265 seconds)
loading group "random"... done (took 14.496768502 seconds)
loading group "problem"... done (took 2.208088422 seconds)
loading group "array"... done (took 26.093588109 seconds)
loading group "misc"... done (took 1.174330727 seconds)
loading group "sort"... done (took 3.908859079 seconds)
loading group "collection"... done (took 22.69484256 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.626319031 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.132135783 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.206376594 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.231243953 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.231901418 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.170586226 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.147048948 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.24126151 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.55576734 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.197609209 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.156120614 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.42800865 seconds)
done (took 6.077498409 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.256236974 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.246601034 seconds)
    (2/2) benchmarking "String"...
    done (took 0.166818709 seconds)
  done (took 1.111325175 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.079303833 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.161705287 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.11189737 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.096931697 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.096272667 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.111251083 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095931458 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.111132676 seconds)
  done (took 1.487408568 seconds)
done (took 3.63645197 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.503005466 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.856403903 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.484821264 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.148336337 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.317879381 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.294979487 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.270415953 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.204008576 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.096077822 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.091192697 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.176833726 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.417311082 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.401576723 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.936399215 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.091875149 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.111699609 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.119126353 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.76732914 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.081965065 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.122873638 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.502938241 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.194735235 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.1158546 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.107117197 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.187144664 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.144684175 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.161323241 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.10382047 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.664613053 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.132859813 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.180937574 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.098373338 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.15808316 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.188768717 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.2130902 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.096034036 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.670415157 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.200786468 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098099183 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.102270112 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.685104692 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.120441809 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.189401294 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.105845006 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.090824404 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.180600682 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.10250898 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.096192619 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.097008252 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.089841598 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.165003203 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.435994971 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.106820871 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.172223542 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.09466766 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.685782267 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098579407 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.274022876 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.128907452 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.09699646 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.093692378 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.090695694 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.16131727 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.09596295 seconds)
  done (took 20.010904556 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.150609516 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.167327845 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.08051118 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.1590777 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.12526933 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.083137798 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.102984411 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.080785346 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.126838629 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.181820079 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.141980179 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.156986116 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094715864 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.092561593 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.149627611 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.233983314 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.112195591 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.124182386 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.091305564 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.092081876 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.141593757 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.099468848 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110781883 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094912588 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.172467655 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.205847266 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113354474 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124260711 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.090951922 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.098926719 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143987563 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.146438506 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.092591646 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.090089771 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.19071919 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.107647752 seconds)
  done (took 5.289025949 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.172604486 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.225021661 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.124170456 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.232268109 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.19827942 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.138999444 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.186467646 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.155395636 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.274866259 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.221412519 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.18282354 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117451781 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.116122695 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082151113 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08378384 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096763273 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.471706424 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.150924618 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.194290975 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.167631393 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115645553 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.086030178 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.366628964 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102273857 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.088819372 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.113700356 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.065502115 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.203499943 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096320814 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.25450083 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.088904613 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.104365653 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102495366 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131961796 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127915212 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.124108842 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.117402828 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.088043861 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.22548149 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.122594154 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.169909251 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.100781986 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.117270229 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137090997 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.117332079 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.114187565 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.12655387 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.22394208 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.090767132 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.113493772 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.054321433 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.198025399 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.127915485 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.086667848 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.295858896 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.130639479 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102867637 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.113757158 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.787114433 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.13144404 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.083951828 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080510689 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.115183112 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081084424 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.360710763 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.125173891 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.323938316 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.099103555 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.159654066 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098990112 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.121810339 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088836599 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104458909 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.11363614 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.089370495 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098340331 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.089251792 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.080701984 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.108298719 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.114452729 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102602826 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.084129801 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.148450524 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.114430483 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.110124118 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125071144 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.092859219 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.088363812 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131785019 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084863581 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.109283682 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.147672754 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.119559209 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.114891795 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115855305 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143470154 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.089416949 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.086933924 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.259333817 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.087705615 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126220088 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.102666763 seconds)
    (103/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.085308972 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129489893 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.117331375 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083563724 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085824683 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.097266985 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.084262393 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.148098977 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.103675522 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.084106322 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.090315212 seconds)
    (114/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.103299608 seconds)
  done (took 28.830885201 seconds)
done (took 54.832184767 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.448699279 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.082881993 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.082238123 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.101213907 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.084161852 seconds)
  done (took 1.575975992 seconds)
done (took 2.328852963 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.328003995 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.202514765 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.105139513 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.191305915 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087994987 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.197173131 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.183286965 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.10365853 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.209350962 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.086117526 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.187566817 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087393659 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.105238964 seconds)
  done (took 2.849268695 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.10491179 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10787696 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.121788123 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.104079172 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086437574 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102452486 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.121880186 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.110200617 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101443142 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.114779992 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088201176 seconds)
  done (took 1.91769021 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.100614406 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10704569 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.092801306 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.116837369 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087733065 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102605359 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116020221 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108792899 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100591428 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.113615809 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088191295 seconds)
  done (took 1.889712 seconds)
done (took 7.404528365 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.076866675 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.605672045 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.148734519 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.211777558 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.348216715 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.23945575 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.569547204 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.154489095 seconds)
  done (took 14.255584807 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.125452475 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.153983779 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.096563226 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.093085276 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.095607595 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.110783564 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.095669161 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.093512998 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.11267045 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.094333733 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.096681363 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.111250511 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.092612248 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.097667742 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.111455494 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.09530392 seconds)
  done (took 2.492789045 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.146262202 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.143060502 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.099593668 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.100563574 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.114742734 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.100693564 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.103417019 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.117426547 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.096203149 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.097549202 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.12061626 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.100837086 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.099622597 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.11134872 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.100189968 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.118629674 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.113307165 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.100792849 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.117325063 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.11757243 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.101428155 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097572153 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.114761585 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.100740366 seconds)
  done (took 3.4724569 seconds)
done (took 20.978020724 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.151680521 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.103080964 seconds)
  done (took 1.011445886 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.14338874 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.157729846 seconds)
  done (took 1.064522817 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.114459401 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.091350875 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.138856547 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.104519419 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.092179352 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.108314558 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.118387615 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.108433903 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.09319627 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.093548425 seconds)
  done (took 1.830751348 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.097231414 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.097512498 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.123525212 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.138922523 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.11807471 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.096247737 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.096684517 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.094702455 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.115310914 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.092761346 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.097257907 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.127332091 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.097696868 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.127455357 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.098004922 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.216069243 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.117511448 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097036287 seconds)
  done (took 2.815720781 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.091953049 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.093914879 seconds)
  done (took 0.952991049 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.095386629 seconds)
    (2/7) benchmarking "second"...
    done (took 0.091404006 seconds)
    (3/7) benchmarking "month"...
    done (took 0.094805624 seconds)
    (4/7) benchmarking "year"...
    done (took 0.111262717 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.092417664 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.09133875 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.108449659 seconds)
  done (took 1.451714846 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.504762594 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.264252641 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.363875072 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.111299062 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.151812895 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.356571635 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.15295933 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.106930351 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.125273511 seconds)
  done (took 2.940358491 seconds)
done (took 12.831866668 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.092797559 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.222050641 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.610996514 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.114419891 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.092351199 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.160643724 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.289460719 seconds)
done (took 2.355373905 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.346630898 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.14195095 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.082869071 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.09251916 seconds)
  done (took 1.432186482 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.085707282 seconds)
    (2/2) benchmarking "read"...
    done (took 0.102191629 seconds)
  done (took 0.963857663 seconds)
done (took 3.173783268 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090676851 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.122670924 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.107292518 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.090153816 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.090418195 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.089132361 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.108718182 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.090635538 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.088810902 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.107658526 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.090641722 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.090865898 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.089244965 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.107024894 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089842688 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090206107 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106167498 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090880315 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.089704159 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089645933 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.105642647 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09031077 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.089243838 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.105778136 seconds)
  done (took 3.12048139 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.108719738 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.091844987 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.112427454 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.096814685 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.094540958 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.111999783 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.094999318 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.092181774 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.11211609 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.093390156 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095289428 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.112043155 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.09302179 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.095871983 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.1090615 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.095245534 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.094739435 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108066736 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093312063 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.095721438 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.11132316 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093223539 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.096399086 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110541667 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.096018889 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095555195 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.109249293 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.093330901 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09433918 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.095702554 seconds)
  done (took 3.771090611 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.099984793 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.087138451 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.09009174 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.116111994 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.087767772 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.091531958 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.104936959 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.088228524 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.091937111 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.090252343 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.109743521 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.091225698 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.088089043 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.10820453 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.092933614 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.094040023 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.117208455 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.088964326 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.089222613 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.091625183 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.111470921 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.088292738 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.090814489 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.109365771 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.091401657 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.089447737 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.090662868 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.1078316 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.091393488 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.090506584 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.110728805 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.093530459 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.090983577 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.117717959 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.094085217 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.091346584 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.114348803 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.088426447 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.091754816 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.088187397 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.105099159 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.09107707 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.087902116 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.114058726 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.090772319 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.091331464 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.08787125 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.108864895 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.091329539 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.094489358 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.104877043 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.089381874 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.093043632 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.109750261 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.094141106 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.088393307 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.0911461 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.10507958 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.093057491 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.091888849 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.105043378 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.090124628 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096931059 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.091627185 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.123772461 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.09810592 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.088408945 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.110702099 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.092487716 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.098088938 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.109545682 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.102687457 seconds)
  done (took 7.774486439 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.104172257 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.099945987 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.091673936 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.10977383 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092111868 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.092136607 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113544237 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091233999 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093111221 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.115621546 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092826218 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.093134231 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108918768 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093102897 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092235817 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.092593804 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.114541767 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092590068 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.091823016 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.110124798 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093130542 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.09631281 seconds)
  done (took 2.956499975 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.240154193 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098137812 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141202589 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.125141841 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.112811053 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.124093715 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.097098371 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098701028 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113154868 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101031816 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100968342 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113440914 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110411655 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117124834 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102221849 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.102368271 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112058466 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.103083196 seconds)
  done (took 2.896472095 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.105493315 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.094746769 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.130658046 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.095332407 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.094230553 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.114440083 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100809928 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.114706113 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.111697178 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093748981 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.100619384 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110205069 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.093686165 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093537199 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093467381 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.111179108 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.09456747 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094397427 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116839234 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099941619 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.116562045 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101767316 seconds)
  done (took 3.067854311 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107773756 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.093391386 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.128611015 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.096566876 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.093425151 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.109614277 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.10004679 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.09470504 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.117446873 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.09373879 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094260518 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.091872294 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.124703765 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093354173 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.099225824 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.110227185 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.092796502 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093608004 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109965406 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.092468781 seconds)
  done (took 2.824777308 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.172518231 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12581429 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109707413 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116696642 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127638847 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.109494159 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117512337 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.126390336 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109782095 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137327453 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109187289 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109395001 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.135409237 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115785954 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12647614 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118510265 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.118186432 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.136375839 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10940396 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126061321 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122336878 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.109842898 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.134674493 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10846949 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.125703144 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110933983 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109007812 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.131863513 seconds)
  done (took 4.199369387 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09267248 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.091669585 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.092901777 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.10896641 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.092604159 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.091914556 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.109136129 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.09270097 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.093091939 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091915826 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.109641792 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.092386805 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.092682187 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.108829467 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.093050916 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.091543861 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091444639 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.108633764 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092105974 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09193521 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.109212615 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092720142 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.092209266 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091628309 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10983279 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.093360864 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092669521 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109058324 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093682704 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092309698 seconds)
  done (took 3.696341321 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.105717384 seconds)
    (2/2) benchmarking "in"...
    done (took 0.103761941 seconds)
  done (took 1.002223223 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.099472671 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108836272 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.091671239 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.110019374 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.101012561 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.094277349 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.118681887 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100122921 seconds)
  done (took 1.617643298 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.144089183 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.162819458 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.098755238 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.104960095 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.162872533 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.154172443 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134861906 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.097091259 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.109613635 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.086406713 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.157459872 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.086634587 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.093877144 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.108697238 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.094553435 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.099551018 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.111275373 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.103454327 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.101415122 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.112063351 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098477692 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098510861 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112377066 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.103318451 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.08833857 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.113982218 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.097767129 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.103881861 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107307784 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.096116465 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.0927381 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.110939187 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.098079532 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.097816113 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.093055833 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.163554794 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.10088066 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108724059 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.095080165 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098580883 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.14547271 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.093956326 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.09569402 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.110254254 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09637337 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.097302856 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.116132043 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094657963 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.086640424 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.10607995 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.09468598 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089612479 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.110291391 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.095221935 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.09497425 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.1170942 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.09606868 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.091058237 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.107814193 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.090045727 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.093281651 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.106824647 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.097747697 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.096481592 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.11301969 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.096037 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093390065 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.111265517 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.096262817 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.094977139 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.109750389 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109747892 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.095882987 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.116063786 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099413958 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.094845948 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109087352 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099765637 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092326711 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.111861241 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.097714188 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.12267682 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113166538 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091543893 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.090366311 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.117839846 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.096751255 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.097298399 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.086752645 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120446088 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.096548224 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.09442818 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.10493793 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.093089891 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089212325 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.114895838 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.087106116 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094281431 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.110608364 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.098434484 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099567542 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.109904455 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.096577971 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098409934 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.116891929 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.093616389 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.138003436 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.109513945 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.089352154 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.09509882 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.117543192 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.088806855 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.093894032 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.111322333 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092431892 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.089646777 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.115652204 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.09584352 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.095889925 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.114617536 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.097240585 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.095894284 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.112771057 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.093871065 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.090998206 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.098776236 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.120057532 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.096765279 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.096498278 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.113106702 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.09464797 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.09471939 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.116330568 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.092478443 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098849067 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109705763 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.094823532 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.096195455 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.115447009 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.095734558 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.090318734 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.111820603 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.096962279 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.093609188 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.114832217 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.096898045 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.089614613 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.104695302 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.096952334 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.091286931 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.111779571 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102641826 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.090748508 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.114529682 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.092766501 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103321364 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.10870261 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.099738278 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.096112909 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.098405899 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.117137627 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.087580719 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.092136805 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.116859112 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.097411272 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.091524568 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.113896135 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.094169569 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.101361233 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.105741482 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.098302072 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.087195445 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.108331797 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.100816947 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.09658494 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.106743523 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.109117882 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.135305734 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105507537 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.119942635 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.09439592 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093530726 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.116555826 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.094458373 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.097259156 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.11983045 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.099606965 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092375432 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.112039895 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101613489 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.091369746 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.1157967 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094286892 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096457051 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.10599147 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.096305733 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.087688132 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.117235395 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.097903957 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.099374443 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.117287179 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09797927 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.094236132 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103364575 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.111104454 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.099129139 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.087186972 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.118613585 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.105910165 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.111333282 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.119158068 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.098300317 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09296091 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.114843443 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104497285 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098075272 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.114071975 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.096557518 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.089099361 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.107161648 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.10082491 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.098555892 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.091726245 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.11457992 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09717942 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.097315563 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.11284451 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.0888174 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.099801135 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.117637009 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.091418497 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096078857 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.110679276 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.094019908 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.103260096 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.107537091 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.093160086 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.098252748 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.119379461 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.095129852 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.094781613 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.115856357 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.101263654 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.098075724 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.115671339 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093959956 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10307658 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.112839026 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.095559734 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.091206526 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.096750447 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.107832004 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.09724078 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.096167614 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.111242083 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.092185826 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099343355 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.119769409 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.101276447 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094121776 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.118250257 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101469462 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.10115226 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.112202032 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.102208434 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.091115025 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.106505791 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.093595609 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.088097721 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.097097662 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.111310519 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.101034517 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.093593556 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.113057376 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.099135735 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098469941 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.112314409 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.102403609 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.126383348 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.09093105 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.088650238 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093770815 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.114946404 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.093383708 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.092556465 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.116491178 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09820546 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.100041466 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.117630563 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.092390874 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.096237547 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.120525936 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.093810262 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.102465741 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.120658085 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102658163 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.091986492 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.118144593 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.094109655 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100948111 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.109174877 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.096197198 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095074429 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114516223 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.094131025 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.094652568 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.111465094 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.090357504 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.092983566 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.102229728 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.114405983 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.101316442 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.096557827 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.113067546 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.094248718 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091964447 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.122596609 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.095505733 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.102754068 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.116748105 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.090378599 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.090785137 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.120432949 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097987779 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.102077247 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.111113691 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.100123395 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104736494 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.098855411 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.117017533 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.104601059 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104555923 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.120670653 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.102158072 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.089014258 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.113248503 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101245221 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095501466 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.117493186 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.098515253 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.090215697 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.117088073 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102460636 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.097217713 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.113047711 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.090632657 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.097057514 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.119902982 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.100714824 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.100918938 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.09849401 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116438126 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.092251572 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101288897 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.120408559 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.097949345 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102299731 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115451639 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.1004975 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.093380974 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.119788656 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.096877676 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.090791749 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.107104607 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.094611771 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.103181527 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.090772487 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.12011531 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.10177855 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.093002777 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.114794304 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.101731124 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.092190458 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.118055461 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101582701 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.094023757 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.124594004 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.098363434 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.094555795 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.120233509 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.10252084 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.091228695 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.095710541 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.115876989 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103575048 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.094069039 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.120125465 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.097414294 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10078053 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.118758726 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.102810755 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.102140736 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.122425831 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.091282524 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.103092373 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.119088117 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.099343987 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.093622045 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.114596054 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.091610911 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.095772203 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.121526182 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.096017494 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105924419 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.103347606 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.115203633 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.096009487 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.102161762 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115538339 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103950975 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.093110122 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.118331554 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.090831396 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.100089711 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.115680965 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.103019597 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.093117046 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.110625969 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10310413 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.102037218 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.120408598 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.101132937 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.102949126 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.10908977 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.091133539 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.099484562 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.093982366 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.125657293 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.101233152 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.093939046 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.114449099 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.098984305 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.097867976 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.123229554 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.091204021 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.093975563 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.117064228 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.099154445 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.095721959 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.111220758 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.101621873 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.096083278 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.117824144 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.096408138 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.091708035 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.116335065 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.103572652 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.095324132 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.11196393 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.094989092 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104320274 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.115142848 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.096384047 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.091838661 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.121128628 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.102269715 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103901301 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.11259898 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.099068755 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.0947744 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.099589391 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.125843294 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.095520803 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096356175 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.115380423 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10259315 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10254115 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.109783179 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.095344444 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105381148 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.121078666 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.099548918 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.100269009 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.115843035 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104551078 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103703801 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.118902192 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.092558459 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.091916016 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.114670028 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.09243478 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.100121665 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121762468 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.097624458 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.095818034 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100678865 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.122086705 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.100612346 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.09912973 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.111041456 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104248171 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.095839243 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.120256376 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.092748033 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.091481541 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.119036018 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102709681 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095700631 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.117573391 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.099266888 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.099503165 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.091699185 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.114587754 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.102336128 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10147146 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.121628231 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097226281 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.094929918 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.118990314 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107468569 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.098317026 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.115493025 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105628046 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.102972074 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.117466065 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.098506287 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.100973901 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.122647533 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.100366219 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103980695 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.114009311 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.098442999 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.104006607 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.123480671 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.109252854 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095996909 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.111130783 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.10252704 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.095045267 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.091286015 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.122673589 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104578647 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.103420797 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.116727274 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.095068289 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106138479 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.122293108 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097939174 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.094720796 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.115320369 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.10233293 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.095122812 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.120131784 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.0955433 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.104394979 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.123992594 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102840884 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.105558443 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.111487191 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.104740936 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.099490647 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.12414249 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099030168 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.092080795 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.091712361 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.119439126 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.105009274 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.103838466 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.120684554 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.102050416 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.102131851 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.118451599 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09850379 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.095156478 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.12275826 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.103750665 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.098260642 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.118025159 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.097204836 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098845442 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.09817734 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.122864623 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.105801469 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.099954179 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.12763941 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.103910354 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.096268701 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.115373997 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.098633912 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.100188173 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.118041638 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102060598 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.095461753 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.109569616 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104345139 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104842321 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.116712753 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106532781 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105447934 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.115270879 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.101359311 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105817367 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.102089487 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.119037086 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.099283623 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.100206175 seconds)
  done (took 62.741044909 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.148750215 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106409406 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.119405308 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100456059 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118397339 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120453029 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100047199 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100697936 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.122131943 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109597412 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.100076253 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118932972 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11664815 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.139581022 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117813703 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10921027 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119218723 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101192704 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099910013 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120164645 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114358156 seconds)
  done (took 3.249316319 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.117530059 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.114216012 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.131343377 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.115645241 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106127539 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.131120813 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113696078 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.131325444 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.113889864 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10748453 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.133699003 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112007679 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.128539384 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.109226704 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10773555 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.128600781 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.115062255 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.125955109 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.113550471 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.112085254 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.128377136 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.111590162 seconds)
  done (took 3.45424033 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.130340031 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.103428871 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.097852814 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.119818781 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.103141998 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.099742748 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.123501078 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.100124378 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.108291887 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.113731077 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.091719148 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.096043322 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.098441678 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.118520441 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.094253066 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.099572963 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.12815894 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.10282498 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105450465 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.118832306 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.092079674 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.100315352 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.099929532 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.111585172 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.104546888 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.10501037 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.120065959 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.104685198 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.090610186 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.102768033 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.120669274 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.094508666 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.091209294 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.109631338 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.09170218 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.102476128 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.121563793 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.10117398 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.099887455 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.090790681 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.120239908 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.104185874 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.092259335 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.12066181 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.100837527 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.094997594 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.10301697 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.12042154 seconds)
  done (took 5.915429644 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.129746353 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.166260843 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.341948085 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.138628763 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.13679945 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.110875044 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.124272745 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.138529243 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101077802 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.124889376 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.11684736 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.135470072 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105610602 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.10699232 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.126195304 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.106198705 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.106244254 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.12115637 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.10882757 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104645096 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.128556222 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.106093833 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.113522425 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.134047174 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.106540303 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102925774 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.12436306 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.1059424 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.133445059 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109391935 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.107002721 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.12849842 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.116124474 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.105039114 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.123148458 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.104877851 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.115377742 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.124849434 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.104478201 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101770266 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.125075516 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.107020669 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.10567386 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.134797984 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104982781 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.12363613 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104113084 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101059742 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.132464806 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.104942654 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.110253356 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.134530941 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.106119134 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.103428622 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.126841708 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.116809189 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.123637377 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.103917295 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.106853792 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.131446427 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.102979234 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106641851 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.133416171 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.104808926 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.111202751 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.133941571 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.106357036 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.105364653 seconds)
  done (took 9.126831221 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.133986437 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.10824794 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.135238149 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116930076 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106764405 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.128321806 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108163279 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.126807742 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.109126408 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113936754 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127222192 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.19991842 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.124834918 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112529512 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.107893964 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.128101045 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.10802677 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.12779916 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.108621261 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108340687 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.127109619 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.117650131 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107938862 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.136987603 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.120210543 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.123174841 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10962295 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.107789372 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.136729289 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.109205958 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.119451386 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.128453407 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.10844193 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.135845467 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.120639914 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.108125435 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.121835332 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10853598 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.108814335 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.128362034 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.10492023 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.116734529 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.128739246 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105363345 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107484486 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.128468601 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.117590944 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.138888237 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113134415 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113664541 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.128403867 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116475979 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12923504 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109559869 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.11516708 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.143069874 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116088323 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.13584819 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10916499 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.116346951 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.136450603 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.12231362 seconds)
  done (took 8.339409766 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102543305 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100600833 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.100502233 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.120438948 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.101469429 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.101938754 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.121516224 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.103971485 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100885839 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.100994612 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122344087 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100983727 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100658333 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120243659 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.102784869 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101309498 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100199368 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.120918737 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101375244 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.101177821 seconds)
  done (took 2.991057651 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.110629072 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.119265857 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.123092086 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.110086982 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.103022588 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.129230091 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.104129218 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10461398 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.122964846 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105988932 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.11239347 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.131512891 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104427183 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.110133919 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.131562638 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109757205 seconds)
  done (took 2.698910635 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.122915329 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.120704637 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.188112505 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.10550638 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.124357918 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.111145037 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.104198499 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.126344748 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.103103975 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.108342248 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.126977962 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.106545898 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103425767 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.104170222 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.124210684 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.106264393 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101609685 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.128327847 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104153973 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.188506796 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.107471394 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105053518 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.125653226 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.107287159 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104697738 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.128267096 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.109705288 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103864889 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.125738707 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105578646 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.107255529 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.129960272 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.103131337 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.108420151 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.123159251 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.105852344 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104640924 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.10349852 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.127424909 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104494428 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.10487738 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.125090205 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.10474004 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105540042 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.123448438 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.104682925 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101832341 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.129039566 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.105778902 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.105559792 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.123424899 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.11138215 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.108155189 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.131617249 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.110840016 seconds)
  done (took 7.213888468 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.114652078 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.104439594 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.134478143 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103058614 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.105137885 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.104264215 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.125400538 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105594796 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104088209 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.124368365 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105254785 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.105622603 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.126004301 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105697824 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.105090768 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.125398439 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.102229153 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105501584 seconds)
  done (took 2.877587847 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.109275704 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10315188 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.107424303 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.124864567 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.102988535 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.104334566 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.122718032 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.102655247 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103105605 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.123804406 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105101308 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.104380062 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102166175 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.12422057 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103813942 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103529898 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.124610268 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103704207 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.103876918 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.123392842 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.104781924 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102196912 seconds)
  done (took 3.282542993 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.115970815 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.185398629 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.109982392 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.195194028 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.100218011 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.099252867 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.131558191 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.101259394 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.115779984 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.121269761 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.100983083 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.099744428 seconds)
  done (took 2.350993458 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130605577 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140075149 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125032974 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105697256 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11203366 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128742988 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108525107 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10819651 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137820448 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119500189 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127633072 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117051395 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114652048 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137368728 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114108292 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133612854 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108565773 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108039854 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124265443 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123530007 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108090458 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139337776 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109043373 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128678776 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110581827 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117272528 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137238839 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12141256 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129582179 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116961927 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113518285 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129058071 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117692407 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140476833 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106709992 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117806964 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12918513 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12586505 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113175225 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137596132 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105207735 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132012759 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117616218 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112908113 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137750769 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108812758 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133335075 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110255979 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109574636 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.150598883 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114494473 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.137852579 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114301165 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11586171 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137677398 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131522168 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141966036 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117712118 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133211403 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121995385 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116109479 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134410601 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118483122 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142827457 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114910048 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136427684 seconds)
  done (took 8.998310289 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.146251713 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105950802 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129959463 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121214202 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138455089 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112145425 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109785169 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129905987 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110129045 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106290711 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.172716361 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109734371 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138680343 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118177296 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109022572 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131408073 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109451858 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116975791 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126846192 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130971853 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130108332 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117993261 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116150479 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137920032 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119816885 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134183163 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109981955 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108820302 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130147999 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11045505 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13385905 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110370021 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11798989 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.12747955 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118133636 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108697197 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130468944 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115409755 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107816221 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135833667 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117103251 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145306093 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109726021 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109470779 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142795847 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111254635 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130888706 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106672389 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109806164 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127159741 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121956784 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.142934717 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122013208 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117927468 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13146587 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110546939 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110351825 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131387676 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111387497 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134233295 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11915542 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110167384 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.15289631 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110555221 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130967299 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118693595 seconds)
  done (took 8.960178329 seconds)
done (took 169.904484725 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.148648865 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.188235022 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.146083021 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.179713378 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.095603082 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.130312272 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.149086155 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.148074797 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.094675075 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.118710238 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.095983917 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.097641701 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.184322302 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.096440743 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.095599348 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.119348774 seconds)
  done (took 2.963690507 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.194964488 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.311112504 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110815314 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.122107504 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101559008 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.100027683 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.120784117 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.101970888 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.100506498 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.12915934 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.100107196 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.09639385 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.129833948 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096963924 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.100721152 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.120877323 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.108170653 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.100081191 seconds)
  done (took 3.131935426 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.121067295 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.144375841 seconds)
  done (took 1.154513304 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.130966002 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.214816116 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.283756773 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.170102132 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.122274376 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.142252469 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.149793013 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.136037847 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.190445195 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.135626767 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.113764519 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.120881446 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.127515108 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.1069495 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.140184401 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.099383785 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.128758553 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.137645925 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.116392654 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.102737858 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.146746334 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105457109 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.127317288 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.116629085 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.179913972 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.135827331 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.105017364 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.126083598 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.103827906 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.11431971 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.13014595 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.120223969 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.134666401 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.161350582 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.126763405 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.156239391 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.130721628 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.102078631 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.134502788 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.102369593 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.104296056 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.126939299 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.115573815 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.099480502 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.126614564 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.109476968 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.104331321 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.126203278 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.110214258 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.130300501 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.109882539 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.107538226 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.179173351 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.107767831 seconds)
  done (took 7.973598535 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.891451255 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.141400067 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101167192 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.019822347 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.152463411 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115113712 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.889236716 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.125311209 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.258111811 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.872288928 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115430858 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.137892173 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.243619693 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.283345075 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.274654833 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.360952552 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.734259769 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.136752791 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.131492821 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.165087949 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.111466694 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127140391 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.145529082 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.518947857 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.103100122 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.101517655 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.132049515 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.114780716 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.181448937 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.102915557 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.104479343 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.199554994 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.297587759 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.212862082 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.10148003 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.123462743 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10073221 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.187817898 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.275478471 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.221778273 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.199122647 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099397455 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.100571725 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.133782888 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122989158 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098153778 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.183712258 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.193815717 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.194526584 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.10673319 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.137483485 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.11367395 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.130793725 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.160911154 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121817279 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.365770831 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.366820312 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.10073603 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132845529 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.117060382 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270447474 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126135335 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.239261826 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.130604341 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.21825649 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.123347894 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.831540192 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.166835995 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.123637357 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.108218215 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.130397126 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.108490592 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.110705461 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.192490255 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.500165005 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.115277889 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.106531433 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12379116 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.235675404 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102474766 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101804174 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.184550473 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.103008566 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132877118 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.117824329 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137244683 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.192708616 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.25319026 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.137160424 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11248809 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.129240108 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116925367 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.103327291 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.234998176 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.233900984 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.179440163 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.234930359 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.112132287 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.186182302 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.18786352 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.109789126 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.194489239 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.110092591 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.140223616 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111119817 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.227086343 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.159925319 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.1065246 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.129332671 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.113048101 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.160037089 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.108758261 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117092873 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.191001836 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.556026748 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.187619585 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.09979102 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106960061 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134466541 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.16109082 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.133492024 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267641751 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.112813687 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.18853286 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.110587446 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.121663226 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.111637709 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.185729005 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111217584 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.134297514 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.110829172 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133173394 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.261688117 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.22473229 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.138110868 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.25767018 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.201834903 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.11072116 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.197290685 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.111669267 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.192171314 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11256766 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.134119078 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104347388 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.826552111 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.138427754 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.112127329 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.108241231 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.209253573 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.102215807 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127164764 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.103888112 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.100640753 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.808346226 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127468082 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.101107111 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.104618274 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.13122037 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.111910486 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.111665631 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.131043078 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.15941637 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.271375102 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.116106565 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.13082509 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103216776 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.182965845 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.104592832 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.103242129 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.12498919 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.10384987 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.111738648 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.130270641 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106831246 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.195380698 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.178524656 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.235070992 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.65799734 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.104056354 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.103406576 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.268009921 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104039408 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.33019335 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134040882 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.240481547 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.186686507 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.101023882 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.364388234 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.18998842 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.188671825 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.128579222 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.193646461 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101411684 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.112082796 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.182787161 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.102782161 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.132991489 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.158032452 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.141482417 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.116476865 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.302571597 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.104485673 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.253208574 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.100512994 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.190809035 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.103946097 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110244744 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.353231833 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102707211 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.1208781 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.183232712 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.129312186 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.104643696 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.626477521 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.103259817 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.137069668 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111137786 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.239694262 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.187952896 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.111788377 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.135906888 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.116270121 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.185714291 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.233407155 seconds)
  done (took 48.452273545 seconds)
done (took 64.561865164 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.268530925 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.178122494 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.282310422 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.178086639 seconds)
  done (took 1.890311099 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.244488256 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.157462114 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.202977493 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.121860563 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.207815496 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.121263081 seconds)
  done (took 1.971106332 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.178138423 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.170048789 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.147514832 seconds)
  done (took 1.410892321 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.200345312 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.216960853 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.325945612 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.260446759 seconds)
  done (took 2.005132987 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.264618361 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.117916497 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.12652443 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.205750329 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.223211185 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.206275909 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.124477405 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.175379525 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.131179635 seconds)
  done (took 2.531752998 seconds)
done (took 10.722797835 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.284416032 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.224344425 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.207656825 seconds)
    (4/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.255282127 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.139528871 seconds)
    (6/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.25044301 seconds)
    (7/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.113386417 seconds)
    (8/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.208977661 seconds)
    (9/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.204787997 seconds)
    (10/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.320205077 seconds)
    (11/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.198717579 seconds)
    (12/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.230141831 seconds)
    (13/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.173305757 seconds)
    (14/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.340423098 seconds)
    (15/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.195606067 seconds)
    (16/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.153006644 seconds)
    (17/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.178015068 seconds)
    (18/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.083482446 seconds)
    (19/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.273631062 seconds)
    (20/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.106813533 seconds)
    (21/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.127506908 seconds)
    (22/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.144407967 seconds)
    (23/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.102045281 seconds)
    (24/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.196594859 seconds)
    (25/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.349410903 seconds)
    (26/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.095692613 seconds)
    (27/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.123501759 seconds)
    (28/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.284935198 seconds)
    (29/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.102765176 seconds)
    (30/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.16208547 seconds)
    (31/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.21508396 seconds)
    (32/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.12393144 seconds)
    (33/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.152177632 seconds)
    (34/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.134400783 seconds)
    (35/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.355878247 seconds)
    (36/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.11194316 seconds)
    (37/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.126879739 seconds)
    (38/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.142949171 seconds)
    (39/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.286781402 seconds)
    (40/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.170801126 seconds)
    (41/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.158910681 seconds)
    (42/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.107483242 seconds)
    (43/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.10104694 seconds)
    (44/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.133314993 seconds)
    (45/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.104595812 seconds)
    (46/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.093051686 seconds)
    (47/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.083556102 seconds)
    (48/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.106318352 seconds)
    (49/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.125720175 seconds)
    (50/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.170044922 seconds)
    (51/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.187070112 seconds)
    (52/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.130673521 seconds)
    (53/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.084017334 seconds)
    (54/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.162977249 seconds)
    (55/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.083545478 seconds)
    (56/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.171540262 seconds)
    (57/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.079991091 seconds)
    (58/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.10403199 seconds)
    (59/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.169517562 seconds)
    (60/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.077066242 seconds)
    (61/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.163586999 seconds)
    (62/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.227654225 seconds)
    (63/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.082764402 seconds)
    (64/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.135044668 seconds)
    (65/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.132365173 seconds)
    (66/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.129490203 seconds)
    (67/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.135045931 seconds)
    (68/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.131287064 seconds)
    (69/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.206577278 seconds)
    (70/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.144605924 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.103583766 seconds)
    (72/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.105862997 seconds)
    (73/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.107374998 seconds)
    (74/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.124062683 seconds)
    (75/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.110419011 seconds)
    (76/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.076468199 seconds)
    (77/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.131156269 seconds)
    (78/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.125296227 seconds)
    (79/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.110464265 seconds)
    (80/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.246263621 seconds)
    (81/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.113706818 seconds)
    (82/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.104199306 seconds)
    (83/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.104109255 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.101591659 seconds)
    (85/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.134941885 seconds)
    (86/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.085598504 seconds)
    (87/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.077134724 seconds)
    (88/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.127576407 seconds)
    (89/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.13316241 seconds)
    (90/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.08673243 seconds)
    (91/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.144007935 seconds)
    (92/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.256627222 seconds)
    (93/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.12217387 seconds)
    (94/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.082850874 seconds)
    (95/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.177570585 seconds)
    (96/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.081072639 seconds)
    (97/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.184224763 seconds)
    (98/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.164071543 seconds)
    (99/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.122516461 seconds)
    (100/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.113253847 seconds)
    (101/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.108899179 seconds)
    (102/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.137630092 seconds)
    (103/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.084238929 seconds)
    (104/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.100900021 seconds)
    (105/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.128021573 seconds)
    (106/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.110476761 seconds)
    (107/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.077671262 seconds)
    (108/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.077368952 seconds)
    (109/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.148725361 seconds)
    (110/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.108289507 seconds)
    (111/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.10364545 seconds)
    (112/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.106580475 seconds)
    (113/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.10540094 seconds)
    (114/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.080993748 seconds)
    (115/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.117191269 seconds)
    (116/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.20971007 seconds)
    (117/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.129144712 seconds)
    (118/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.216469063 seconds)
    (119/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.104976238 seconds)
    (120/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.103220253 seconds)
    (121/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.195628072 seconds)
    (122/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.104532174 seconds)
    (123/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.210328 seconds)
    (124/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.125071335 seconds)
    (125/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.128120429 seconds)
    (126/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.108168768 seconds)
    (127/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.078619816 seconds)
    (128/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.080542624 seconds)
    (129/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.129035533 seconds)
    (130/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.108814768 seconds)
    (131/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.103829407 seconds)
    (132/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.111901674 seconds)
    (133/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.135048505 seconds)
    (134/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.105860577 seconds)
    (135/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.107194137 seconds)
    (136/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.207004885 seconds)
    (137/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.085369956 seconds)
    (138/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.110446624 seconds)
    (139/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.084590739 seconds)
    (140/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.149455876 seconds)
    (141/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.10158095 seconds)
    (142/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.080949903 seconds)
    (143/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.15001425 seconds)
    (144/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.103894448 seconds)
    (145/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.077136915 seconds)
    (146/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.076948736 seconds)
    (147/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.157662584 seconds)
    (148/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.111207013 seconds)
    (149/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.158105737 seconds)
    (150/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.126033385 seconds)
    (151/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.104144218 seconds)
    (152/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.080588824 seconds)
    (153/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.132907769 seconds)
    (154/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.110559425 seconds)
    (155/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.077982741 seconds)
    (156/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.103979158 seconds)
    (157/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.104314327 seconds)
    (158/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.127215948 seconds)
    (159/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.084880554 seconds)
    (160/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.080856274 seconds)
    (161/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.133648303 seconds)
    (162/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.085368724 seconds)
    (163/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.077890309 seconds)
    (164/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.078307359 seconds)
    (165/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.077351947 seconds)
    (166/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.101086823 seconds)
    (167/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.081876445 seconds)
    (168/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.101628616 seconds)
    (169/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.083458684 seconds)
    (170/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.137418936 seconds)
    (171/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.110828158 seconds)
    (172/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.085283965 seconds)
    (173/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.085368599 seconds)
    (174/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.100324104 seconds)
    (175/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.08190418 seconds)
    (176/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.08519397 seconds)
    (177/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.083937622 seconds)
    (178/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.079468178 seconds)
    (179/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.125126951 seconds)
    (180/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.086265065 seconds)
    (181/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.103773926 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.145191115 seconds)
    (183/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.079290612 seconds)
    (184/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.081409823 seconds)
    (185/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.081495307 seconds)
    (186/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.10427142 seconds)
    (187/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.108863677 seconds)
    (188/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.085422354 seconds)
    (189/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.084673947 seconds)
    (190/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.112839762 seconds)
    (191/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.13799356 seconds)
    (192/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.081952568 seconds)
  done (took 26.554520197 seconds)
done (took 27.476858572 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.210221128 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.127500272 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.111662683 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.111343702 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.202942591 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.119587208 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.150756095 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.114013014 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.121626609 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.135411689 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.102204718 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.12505833 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.13394261 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.182587499 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.139230178 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.105001778 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.102656094 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.144763759 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.127750003 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.127336196 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.204550201 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.105659187 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.145879828 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.104921388 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.178687784 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.131656688 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.112415265 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.111677138 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.149414375 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.112582335 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.111200492 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.128210026 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.128950842 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.126421441 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.127189252 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.112726163 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102225895 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.108906786 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.113504962 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113149165 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.1478288 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.113430128 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112262315 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.12759093 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.115253371 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.112323878 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102325397 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.139310581 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.102226561 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.111780671 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.132103096 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.12881239 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.111415763 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.126165823 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.102913886 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.104072729 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.146871711 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104448925 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.12470593 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.127707404 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.105137209 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104190142 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.138076552 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104130179 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.112333106 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.126496391 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.116765442 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.116318594 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110618269 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.13115769 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104489037 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.111961349 seconds)
done (took 9.955921882 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.109576197 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.148300693 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.200944153 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.211975872 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.134089126 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.143506666 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.11863763 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.128494595 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.140482286 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.124190514 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.140383596 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.159727983 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.183523342 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.144727894 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.119835449 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.138464025 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.115566732 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.111821064 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.207246582 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.128220097 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.1522889 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.12007773 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.129959528 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.14578185 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.107711144 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.162979417 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.113118772 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.115622838 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.130211414 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.117587315 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.128346586 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.129622784 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.112205861 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.127318563 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.148841782 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.118696526 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.119218458 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.139441484 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.109092551 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.107469241 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139155814 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.124230496 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.131181374 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.12163395 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.116364252 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.14528832 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.115097154 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120642191 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.131713414 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116071669 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.109764048 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157880846 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.121011774 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.125099175 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.144353177 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.12154615 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120786388 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.145876065 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112497866 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.119357835 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.132564192 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.108454704 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.109355547 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.15377067 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.111892213 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.119787858 seconds)
  done (took 9.670894674 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.12805142 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139166698 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.143038649 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.120133015 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.113171408 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.127262282 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.102893021 seconds)
  done (took 1.838337151 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.105411101 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.187354602 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.211007936 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.211311233 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.207065908 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.196265697 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.15095398 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.104127051 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.136748719 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.13878107 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.188811268 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.238465614 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.137810384 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120795373 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.213915371 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.103264947 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.216065956 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.103532523 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118293835 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.210932849 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119840033 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.160176318 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.116560908 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.103188887 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.208878618 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.130586877 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.231873664 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.148498669 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112997611 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.116069425 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.142494152 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.182787372 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.21011051 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.142180907 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112623693 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.20930257 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.182974898 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.142304168 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.198549115 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.132072153 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.183240419 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.142667107 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.121020814 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.118733982 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.142446121 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.172694554 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.147789958 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.1188263 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.117076354 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.213402907 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.115348834 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.209531815 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.115864508 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.14243781 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.116399924 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119217408 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.150972489 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.119886562 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.21611386 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.122024297 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.210247403 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.186585824 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.210028996 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.212671481 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128242171 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.21191924 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.179497792 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.144684952 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113877926 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117975441 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.213045653 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.141587813 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.117604352 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.199094316 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123181467 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.211605039 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.187202347 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.160634883 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.11754805 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.108597468 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.140770658 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.105180841 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.176186793 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.145164723 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.116533303 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.147071519 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.119394305 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.118523851 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.133232889 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.129476019 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.118426541 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.140294511 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.125125332 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.117323362 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.146306688 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.216351948 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.11728039 seconds)
  done (took 15.887911696 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.107064955 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.106055151 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.108861421 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.129801839 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.107178541 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.10558227 seconds)
  done (took 1.648051775 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.142953462 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119366849 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.151808123 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120883278 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.186402385 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.191632704 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.219718508 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.114588813 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.161039419 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128796973 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.217777068 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.193904762 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.218770952 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121668008 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.223209598 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120484012 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.222136414 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.142993138 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.129430086 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115952099 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.143357678 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.124956055 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115986659 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.208169437 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.120391765 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.145738248 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.114416698 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.127628815 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.152156122 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.115105868 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.121873756 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.144715818 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.133299404 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.13744165 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.199078735 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.137421616 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116436635 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121378839 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.147849432 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.121097961 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.221483995 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.117343703 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126006355 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.146909893 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.114115147 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.111220702 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.147950463 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.114047074 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.222380396 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121617747 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.14749094 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.120948902 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119749776 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.146983591 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.113327175 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112920097 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.146886039 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.199026723 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.148816813 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.112656801 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119754357 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.147092223 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.114956004 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.147977563 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.121497006 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121581946 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.136883347 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.121515629 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116800943 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.143943235 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.123333713 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.120075372 seconds)
  done (took 11.324820202 seconds)
done (took 41.33118484 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.57933029 seconds)
  done (took 2.553679375 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.894645154 seconds)
  done (took 1.874183624 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.56986212 seconds)
  done (took 18.579731781 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.424709547 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.469754617 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.17097761 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.150358664 seconds)
  done (took 3.19573412 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.824924094 seconds)
  done (took 1.82785485 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.327877393 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.238336039 seconds)
  done (took 1.552450214 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.714449331 seconds)
  done (took 1.714039129 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.508351573 seconds)
  done (took 2.493741876 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.288940818 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.243907936 seconds)
  done (took 1.533762239 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.611352647 seconds)
  done (took 1.609471267 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.544431208 seconds)
  done (took 20.546719367 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.258986776 seconds)
  done (took 1.265565129 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.290052205 seconds)
  done (took 1.295420841 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.46300982 seconds)
  done (took 4.467910272 seconds)
done (took 65.499006406 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.115840618 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.118623646 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.140663517 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.11711106 seconds)
  done (took 1.484606051 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.125301745 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119742263 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.145938476 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119813991 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125765376 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.142345922 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.119749832 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.120697345 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.118423168 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.146826269 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120178034 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.117887613 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.145655495 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.120230421 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.115862659 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.147085603 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.122827823 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.117656099 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.144182417 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.120087299 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.11928779 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.144573685 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.121714716 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.120844264 seconds)
  done (took 4.069186272 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.116019829 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.110241958 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.11198688 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.132746831 seconds)
  done (took 1.481493761 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.127889983 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131801481 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.154857724 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.127656677 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.131284617 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.15385249 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118441531 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.115897801 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.143288474 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.128827555 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.134925356 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.157067495 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.130543056 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.144880593 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.130670931 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.112713659 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.143475658 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.130958083 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125492868 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.152508146 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.120654832 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.12493527 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.148372802 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.127834999 seconds)
  done (took 4.226414539 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.193551721 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.131461861 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.17567174 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.162511475 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.177125249 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.118217835 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.144717862 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.150578059 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.125914594 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.145393734 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.123535924 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.163733934 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.150010072 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.122278678 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.11860144 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.149601929 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.13208626 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.148410173 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.167826248 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.123976906 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.149751078 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.130342349 seconds)
  done (took 4.222053118 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.122491031 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.110851806 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.12989485 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.110643061 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.122473689 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.1354743 seconds)
  done (took 1.751195996 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.109231394 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.104159791 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.104079725 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.128098673 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.10792621 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.103593985 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.126451358 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.105240171 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.103887793 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.1036834 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.128570374 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.105724695 seconds)
  done (took 2.343008135 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.334637012 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.109435047 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.135459711 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.112466472 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.114996513 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.106864653 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.146209939 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.10877353 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.270785464 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.104142912 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.133096958 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.199539481 seconds)
  done (took 2.894955165 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200850184 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148444454 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252490124 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.382308159 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185303443 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188268955 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.27788522 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189286695 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.2034897 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137159677 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211161317 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160030849 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180001435 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185740795 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166320808 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.157496011 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190708321 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207739967 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168861275 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238018345 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157096316 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200614425 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189746086 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17690242 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139187733 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187213706 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.119458378 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153289318 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168003887 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191030995 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198677894 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150813536 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140713921 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215547395 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25396458 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200719738 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272637088 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133460434 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.193656393 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.191373786 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2569295 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167546429 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213752099 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152775555 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129666541 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211765064 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179559079 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.185062123 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.160241994 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14429332 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208248149 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178346533 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.202808291 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135637127 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.320446134 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159012598 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.143340974 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206105601 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186447295 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226414802 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20456115 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.123903635 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.204067979 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217799039 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21259339 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.168116521 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.164474131 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152267619 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163911909 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.231868475 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207183853 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160304432 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.234358157 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158856154 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172555989 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19896047 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153378237 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232564404 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198916743 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.119807602 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177157409 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134268328 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125874647 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.217652592 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122352132 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242975322 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131571165 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.344875189 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212506122 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156904276 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188384746 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184989245 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164536851 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172683272 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.101975136 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142166493 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.188965393 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15687377 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156911471 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155934175 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165946729 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.127730535 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152006045 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.149130343 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168649479 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.159884791 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162432354 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197071949 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.131398343 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.204425571 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148337378 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.189346669 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167883291 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220005262 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156432447 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134755827 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246654074 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16972155 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.162945744 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174234782 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.224733728 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.174439568 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136308955 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192075902 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195289722 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170087155 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199841213 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166133979 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134334796 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.167545251 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171456977 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189024008 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.154289669 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155917114 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.165995677 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217426967 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.126364304 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166762013 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181181651 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161875687 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125270278 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162015041 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136374588 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.142105234 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.177299224 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.138578456 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180665656 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165240608 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191555831 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155302171 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162183391 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172087088 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159254798 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.168366006 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176027629 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.120672788 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.201586216 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195727978 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157475397 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179988032 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.190671631 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21306465 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172575733 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157266932 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183273222 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156362113 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.121531564 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189389899 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1730652 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.191670318 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.212407189 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185181503 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.191970698 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.18990864 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149998109 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196532885 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.184349391 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185551353 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.144832242 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199071456 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167795378 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.149133393 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.123935128 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.127773317 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164487188 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130725231 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164482798 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179666064 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191079302 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205767847 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168729844 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165559675 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192923211 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.15336656 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159560501 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.203091308 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13803736 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.217431849 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21674966 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178941815 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169249467 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162392486 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.147650559 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127480427 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.134041271 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18956427 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137596257 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162112435 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141992634 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.220892435 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171878464 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175380366 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22031316 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164375525 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.229044882 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.120793354 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.189858839 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169460447 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195133178 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.187364796 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159146743 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.160528498 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.222540008 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141458718 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221669593 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195073882 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180055855 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223230697 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.190413206 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132722332 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148031951 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18945564 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138022434 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191102232 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147210697 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159833261 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153161687 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.164661931 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141859444 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213010512 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143985069 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206424432 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.157131884 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198796201 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125050619 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1695806 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177544554 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173846941 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.105113655 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197715449 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221242138 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152027612 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182152841 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174144053 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129982857 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.345568685 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215806337 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175375975 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163946689 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138596864 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198753792 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162026579 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190219881 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185486147 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169494185 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236223737 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169990498 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.171279648 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131625993 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146825894 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179612135 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.137987559 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.181189922 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.187492691 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.145639515 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214998089 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136725781 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196428801 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178021034 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.172616864 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.15184145 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138435465 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252149906 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197220548 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172041187 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.194101656 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.192767739 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18321513 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124332834 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156007288 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.134062637 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.215830267 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131199608 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206279368 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.207551684 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186853351 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202084618 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191027603 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143018658 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.12840257 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195873424 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148329292 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217325649 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162663055 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.139505493 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217788244 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.128210631 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130886252 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189758445 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.30851032 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149724451 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201301973 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.106804813 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.304122074 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130995871 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132743713 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189790416 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195228931 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.135866563 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.181758322 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201281079 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142062072 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191939674 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134991199 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.210622473 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214262288 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166555334 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202044596 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.145149544 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19110856 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187720159 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176556843 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172812893 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.149384065 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157645268 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222995281 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.209171946 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.132337021 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197761625 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169479546 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197806521 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173775753 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168521066 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18337928 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156273677 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165035071 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166659655 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126286731 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189688894 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.179306131 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157512127 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17520102 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197820097 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131206353 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155948538 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147146247 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194374026 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140486568 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.157223666 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185670329 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.157999712 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181510072 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236935305 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130358076 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195382023 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148135545 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159862024 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140096808 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143802455 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160007355 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.174534499 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20981611 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.132210739 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206750592 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165358956 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191649329 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15772175 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173090764 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.335663919 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.157083296 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19169102 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180903974 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226200997 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151423609 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203697557 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17053892 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178322599 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165789957 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176286483 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.222875497 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193928109 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.166938539 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159595324 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143731867 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138806656 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.163655452 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153231307 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198925198 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140693844 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.164277441 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.167701553 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17324241 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.147976992 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168423845 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202464442 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179568344 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187302153 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.215879312 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136931693 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204628997 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205531723 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129094656 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.192984124 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171874046 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172896222 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152929137 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.162147199 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.138986433 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242388274 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.12663226 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15925734 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202734533 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197078478 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172286466 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.16275479 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178268051 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168131088 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175681992 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127477302 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.182733618 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.198216035 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137086364 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.127135961 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200351368 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159644776 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.193020014 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144221378 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.202928523 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197431791 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.151405895 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135967596 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.309439888 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160707408 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223193763 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.135991495 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166936274 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147178758 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186416609 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.166553813 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198622318 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.131967288 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129534802 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.175354052 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.15812007 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.16848183 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169382559 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214127443 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162488867 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214517793 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.135901194 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.285030978 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141755412 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201529082 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.117282954 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.158466525 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141296166 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134662193 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17275782 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.210868775 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213806204 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.191324687 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.148961287 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164807608 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.127463139 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129784176 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195335214 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150787738 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197709791 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147959368 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.132196338 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141715167 seconds)
  done (took 86.632959068 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.162675634 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.152081989 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.170496408 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.223379192 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.195807155 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.290784585 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.229558012 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.24629741 seconds)
  done (took 2.773913177 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.120109351 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.160399509 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.143659915 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.145055128 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.110903641 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.447020343 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.158548487 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.122365505 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.162436623 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.151756297 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.136350192 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.557023744 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.116839082 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.144009526 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.121876621 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.13529429 seconds)
  done (took 4.023867029 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.119078028 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.542862088 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.912157027 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.293833183 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.261589957 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.204397165 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.741285843 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.198721846 seconds)
  done (took 12.372841516 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.152473314 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.145580781 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.373932737 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.272895103 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.205935227 seconds)
  done (took 2.257849409 seconds)
done (took 131.53129179 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.123298312 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.123316951 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.123146689 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.152639346 seconds)
  done (took 1.61711076 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.176721964 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.090402293 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.092817592 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.116950554 seconds)
  done (took 1.583294547 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.511291485 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.091177042 seconds)
  done (took 1.734240011 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.153524369 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.14290214 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.166221999 seconds)
  done (took 1.581979847 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.144633941 seconds)
  done (took 1.254804977 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.125456088 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128426729 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.229895463 seconds)
  done (took 1.597816271 seconds)
done (took 10.480165794 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119208889 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.926342238 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.432960625 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132866537 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.711129067 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.427776228 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.421506533 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.176211535 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.174800101 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.138805336 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.131500459 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.688634755 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.434008068 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.874488217 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.394361212 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.907895591 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.694910131 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.111179954 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.145785909 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112380833 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.425303742 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110917182 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112274711 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.111197726 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.717815422 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.419940666 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.108205003 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.915255145 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.110302477 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.140173634 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.400281238 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.110658564 seconds)
  done (took 20.939147751 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117951025 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.166676471 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.145966389 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.112617702 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113218078 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.139486924 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.122796542 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.124041993 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.204264795 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.110249144 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.161815843 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.110502425 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.11573133 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.140474695 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.136487028 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111246481 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.14171584 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.114511451 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117454074 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.139998763 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.132762025 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109383774 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.141782182 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.113439592 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.110072949 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.15950718 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111653288 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122186661 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.138068412 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.114870832 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.115167169 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.139862378 seconds)
  done (took 5.277685331 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.158392691 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.176651377 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.148385762 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.149332497 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.18762285 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.114333931 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.225295485 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.149673783 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.205277844 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.113186712 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132839547 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.137910349 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.151713261 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.110420285 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.165399885 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111001178 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.138989689 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.11408398 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.1182502 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.13967872 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.135307221 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.111758132 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.139466349 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.1138146 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.111579937 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.161121414 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111695943 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.125043963 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.138094451 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.115266363 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.116116949 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.139136333 seconds)
  done (took 5.584423219 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.125623945 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127879564 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.132123274 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.162365578 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.120324462 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.123732945 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.153312763 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.121853993 seconds)
  done (took 2.186392824 seconds)
done (took 35.102367693 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.136926628 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.130405914 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.131717958 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.153810086 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.18834417 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.147239388 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.128603078 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.117495066 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.153777361 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.133042177 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.1117259 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.146259645 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.131958836 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.121532479 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.218826156 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.12513653 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.224195221 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.190751246 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.148834315 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.12628016 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.11923008 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.222974756 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.123104279 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.148926854 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.191202921 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.115532807 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.215426282 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.121852187 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.152554544 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.114422152 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.219469069 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.124330582 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.120037184 seconds)
  done (took 6.069000159 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.207099786 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.122679385 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.149327668 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.120947078 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.120118452 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.146708858 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.209237522 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.14909832 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.120308042 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.118730209 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.117914379 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.221854485 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.124135806 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.144578599 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.122457819 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.108872999 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.238144125 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.121988824 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.110851269 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.122070638 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.116514702 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.118751771 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.250021566 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.116231215 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.148421114 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.120345501 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.123061765 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.123928167 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.150268068 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.122431685 seconds)
  done (took 5.419301116 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.126505156 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.1337042 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.165315804 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.187317557 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.149049015 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.160946856 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.141166599 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.134989501 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.171007659 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.114374424 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.128157938 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.179874057 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130897323 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.124190709 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.146699125 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.134229114 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136314365 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.143802754 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.121724832 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.130267843 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.16462216 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.13132464 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.137394465 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.151640689 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.113275252 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122546069 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.15407676 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.12849136 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.121261772 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.157586786 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.117293353 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.117420701 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.145537338 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.150528485 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.115123898 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.157527075 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141310371 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126020514 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.156897875 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.146792261 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.117594382 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.147961988 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.140475062 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.195949026 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.117643404 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.127344985 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.12490094 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.159548837 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.114054548 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131877358 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.186636075 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.11438457 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.163641372 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.114006512 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.113507266 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.123039922 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.14421733 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.119085661 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.128931621 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.145726565 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.139870334 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.120441698 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.15465146 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.117413026 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.123486442 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.141476257 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.114042907 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.118164733 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.167764794 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122624034 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.150395988 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.141469327 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.127097817 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.126715428 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.12474818 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.155169054 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.11452935 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.124059187 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.154569507 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.121347252 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.125990919 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.146152494 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.118355769 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.130549068 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.164743632 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.129599006 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.126088556 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.156779028 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.118833705 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.115145891 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.160448329 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.116636651 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.118849288 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.156641122 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.115815888 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.118406966 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.1548241 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.12762407 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.112196504 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.166855684 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.120259465 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.114316881 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.139079557 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.147092682 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.120088504 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.123606631 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.187035425 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.115353685 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.125319595 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.158798873 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.114583603 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.121407125 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.14664442 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.115444781 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.131310967 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.158757245 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.122329846 seconds)
  done (took 17.089177127 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.31813254 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.30572217 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.18725225 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.246004494 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.127903799 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.239157019 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.300741287 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.305094327 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.114039182 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.185631839 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.169074138 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.274960311 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.14494913 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.144074782 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.30783445 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.361524441 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.17631138 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.154699878 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.183121597 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.128618729 seconds)
  done (took 5.518067281 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.137091852 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.150238215 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.167472567 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.144146409 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.125020918 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.160386251 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.115154135 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.138071781 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.155631845 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.124695672 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.115922983 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.159342226 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.12751885 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.13084437 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.159677463 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.145453088 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.122275825 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.148865784 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.137193701 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119791405 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.131140488 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141239903 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.152147985 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.13821297 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.134388698 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.154082632 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.114753113 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.120752291 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.12017293 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.152199854 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.121051029 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.133357821 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.153398241 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.105944773 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.125979038 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.160699661 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.121720206 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.116968892 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.14746827 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.120249238 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129939173 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.15748319 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.124044238 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.098544004 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.13417642 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.137768279 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.130506263 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.128880627 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.107083996 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.163720897 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127990489 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.129448063 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.152005447 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.138829153 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.120627375 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.161506436 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.126388227 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.12874794 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.149949267 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.114179308 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.112570047 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.147205096 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.12498942 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.129881025 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.155222441 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.137402363 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.13050413 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.144145901 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.121010812 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.117706779 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.147219779 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.13044901 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.13509916 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.15382257 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.122855662 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.126323718 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.151714745 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.094918359 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.124752749 seconds)
  done (took 11.773167698 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.140197714 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.125642147 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.160431376 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.151949376 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.129269109 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.14955347 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.126175999 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.136099016 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.156117025 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.135479446 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.130512193 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.155882654 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.138491891 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.125531517 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.124121578 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.161355728 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.129198521 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.182367849 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.135363241 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.142217242 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.160461562 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.121452366 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.127617121 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.157059698 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.145010631 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.126477076 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.172155857 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.130695258 seconds)
  done (took 5.131809353 seconds)
done (took 52.128400479 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.308039291 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.469634631 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.252659354 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.247141134 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.266784661 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.273648452 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.24717216 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.258584618 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.643749728 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.22002451 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.250593027 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.248876099 seconds)
done (took 28.836164288 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.323907223 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.780392583 seconds)
    (2/2) benchmarking "String"...
    done (took 1.536912226 seconds)
  done (took 4.45892759 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.238950117 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.239873558 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.488092283 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.238397137 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.26140043 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.239445357 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.239824741 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.241172021 seconds)
  done (took 16.088682507 seconds)
done (took 26.253842859 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.278712911 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.432898515 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.501821099 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.247056438 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.247716609 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.246621112 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.242477643 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.260595318 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.243823377 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.246064099 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.645787433 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.52268137 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.252135608 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.631605638 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.249084853 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.269193949 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.240194052 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.476987446 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.244567095 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.26990867 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.220153513 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.242018666 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.252624773 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.239726023 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.245797166 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.253515376 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.275293288 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.242095889 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.431522197 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.263862569 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.270748398 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.244674469 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.271087669 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.244039611 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.242000563 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.249152799 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.426310873 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.250317454 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.225364018 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.271108353 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.432090722 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.259696393 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.247023457 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.252826173 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.259453733 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.282833926 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.228609971 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.353535182 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.265393386 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.255125549 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.314083401 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.615910124 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.244703192 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.250765148 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.253102832 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.472965116 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.258907654 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.294572742 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.267392174 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.253236149 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.249842298 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.244128619 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.259989691 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.258942143 seconds)
  done (took 146.329975281 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.244379904 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.2471249 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.248097199 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.30618518 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.247950818 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.249569455 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.243727006 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.242482065 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.24890092 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.280031938 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.250132895 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.246984016 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.251880532 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.18905572 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.255438486 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.267205668 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.249998585 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.257411037 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.258156384 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.245353238 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.244855835 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.249227086 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.245634049 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.244673839 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.284768011 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.321739109 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.268104724 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.274284989 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.259725392 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.245975733 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.284801162 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.298468244 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.848708313 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.099230301 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.255177598 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.262092423 seconds)
  done (took 81.86429309 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.645553315 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.245199599 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.244569324 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.246566219 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.278387581 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.246162491 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.810291653 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.813174836 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.22744796 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.266943637 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.585483565 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.454928595 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.246655303 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.337041127 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.259771945 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.248680628 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.262658671 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.271138522 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.251375417 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.247480611 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.804920596 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.258249504 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.442299158 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.422792041 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.262595211 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.279330806 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.639804308 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.247354147 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.27947333 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.198135579 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.578058331 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.296338651 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.24721851 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.576462559 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.363339907 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.250881932 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.279153414 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.248105968 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.527922982 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.248411862 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.248253948 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.248904034 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.251616177 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.877330634 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.253375205 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.814092098 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.254234895 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.18933937 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.248664436 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.247941258 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.183720357 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.858594508 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.248957785 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.249613756 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.2518066 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.249083286 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.247837873 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.281437935 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.175861857 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.345241977 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.251161063 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.252751746 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.281204997 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.251069779 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.400544083 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.253693055 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.642553667 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.305453639 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.349015323 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.810199935 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.250826887 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.344163632 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.367970754 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.250274788 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.249669738 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.24868974 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.250176252 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.361349082 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.250371515 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.928804186 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.424844196 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.268564451 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.583773864 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.351059262 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.251734158 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.567794058 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.255334442 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.251095346 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.938476334 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.345010678 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.252101956 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.251345628 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.250453864 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.930407902 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.817871594 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.489831728 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.255447745 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.250990068 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.754937184 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.256106266 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.101955317 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.803544729 seconds)
    (103/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.251835546 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.884499218 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.256522167 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.361098269 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.426689141 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.269292649 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.252090123 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.595496442 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.256840664 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.311745638 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.253252824 seconds)
    (114/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.252908352 seconds)
  done (took 377.843024111 seconds)
done (took 607.181165814 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.158019082 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.100564054 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.248710418 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.119183092 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.095950192 seconds)
  done (took 11.875249706 seconds)
done (took 13.029175444 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.44457772 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.450522576 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.318159724 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.453522138 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.290276501 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.466849147 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.431054641 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.275737184 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.363651952 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.34022677 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.368266076 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.310358614 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.290607282 seconds)
  done (took 18.957589398 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.537234674 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.27061963 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.32024219 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.510882417 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.303095288 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.538826088 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.566797628 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.270209169 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.396673754 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.27850039 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.276508298 seconds)
  done (took 18.424310819 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.532472905 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.269908185 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.325993538 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.522410368 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.307171731 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.568325052 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.568808997 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.270004766 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.410098294 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.278551451 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.275327023 seconds)
  done (took 18.483469816 seconds)
done (took 57.021682675 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.294413583 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.35562657 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.293106984 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.274373736 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.272833057 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.272942956 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.276548708 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.273292558 seconds)
  done (took 11.468795567 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.273172811 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.272463574 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.272459836 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.270896973 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.272559039 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.270557869 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.272150185 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.273155374 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.272107693 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.27380661 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.273334321 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.273041166 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.273180068 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.272693656 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.271643559 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.273654523 seconds)
  done (took 21.516821747 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.275369969 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.274624994 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.272860208 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.272923387 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.273237235 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.275634142 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.275575738 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.273685194 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.274284543 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.274609101 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.273736901 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.272926641 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.273051331 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.275371663 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.275021452 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.276004088 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.274133375 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.274934119 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.278430021 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.275586511 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.274488587 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.275068212 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.276768405 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.274640464 seconds)
  done (took 31.750354366 seconds)
done (took 65.893268634 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.259413686 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.278745215 seconds)
  done (took 5.697052294 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.332049179 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.331495406 seconds)
  done (took 3.822354156 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.275869847 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.274861808 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.275640445 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.276278043 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.276544684 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.274346892 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.275473305 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.274807029 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.273843055 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.277627737 seconds)
  done (took 13.912515371 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.275406634 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.275471157 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.277401743 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.276706853 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.276770065 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.277066782 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.27616084 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.278419612 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.277450013 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.276260291 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.279716096 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.277258344 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.27536054 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.277748838 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.277751737 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.277871709 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.276243798 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.277695233 seconds)
  done (took 24.14575395 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.288769625 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.295007777 seconds)
  done (took 3.742605763 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.406318161 seconds)
    (2/7) benchmarking "second"...
    done (took 1.319357853 seconds)
    (3/7) benchmarking "month"...
    done (took 1.381253753 seconds)
    (4/7) benchmarking "year"...
    done (took 1.373874168 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.318407267 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.298510658 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.318277052 seconds)
  done (took 10.575708523 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.277094832 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.477856734 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.606596687 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.286254162 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.278833083 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.282303914 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.473952854 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.283036528 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.285335134 seconds)
  done (took 13.411212775 seconds)
done (took 76.468428348 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.263037736 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.31018034 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.288242959 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.281600679 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.571863663 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.27709867 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.267458161 seconds)
done (took 16.422995349 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.253364597 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.255315325 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.243540398 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.279219141 seconds)
  done (took 10.192906976 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.261339103 seconds)
    (2/2) benchmarking "read"...
    done (took 1.606703424 seconds)
  done (took 5.028548561 seconds)
done (took 16.386165149 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.279219339 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.278004933 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.280459381 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.278544755 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.278671908 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.279885905 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.281390204 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.279466899 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.279599286 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.279634297 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.28025111 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.279156432 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.279753916 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.279983884 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279243668 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.279122096 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.27902792 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.279822917 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.278951705 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.279921692 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.279813802 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.278932899 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.278333943 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.280764992 seconds)
  done (took 31.870089254 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.280421953 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.279051123 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.280653092 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.281158797 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.279714062 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.28035763 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.278829225 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.280280181 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.281040609 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.279849866 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.28099484 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.280120656 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.281482764 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.280236026 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.2806065 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.280147921 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.280918333 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.280208119 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.280271656 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.280491811 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.280209324 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.280217668 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.28176618 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.28071302 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.283310818 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.281217873 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.280664902 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.281668202 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.282206008 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.282040065 seconds)
  done (took 39.584131864 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.283114212 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.281559299 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.282614731 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.281955424 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.280742171 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.281696934 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.283402212 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.281130849 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.280968009 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.280207477 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.281381514 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.280859938 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.28174152 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.28230387 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.282861475 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.282687603 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.282480169 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.280794849 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.28148931 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.281278928 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.281369521 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.281169275 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.282227891 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.283189634 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.281170609 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.283138105 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.282870795 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.28395399 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.282367451 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.282706153 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.283098063 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.28227336 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.282413658 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.283280566 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.281648306 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.282958838 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.284986114 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.283439886 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.284448132 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.28354064 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.283665862 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.282915173 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.283007489 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.284517761 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.283521079 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.284442012 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.285248567 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.285599682 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.283555339 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.283275297 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.283949367 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.28476889 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.284800129 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.284352707 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.28435649 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.284536831 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.284071659 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.285065404 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.284880564 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.28366596 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.283284747 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.285108374 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.284148485 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.285299261 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.284430972 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.285237414 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.285912234 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.28567701 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.285379961 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.284612349 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.285975331 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.285973119 seconds)
  done (took 93.563293541 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.28586623 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.286429304 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.285510725 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.285049427 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.285080642 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.284822628 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.285509671 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.286370641 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.284911848 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.285272871 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.286654663 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.287753796 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.286194443 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.286493018 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.287502117 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.286523752 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.288004731 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.287088032 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.286887301 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.286631948 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.286221169 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.287541691 seconds)
  done (took 29.467175099 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.286760742 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.286968465 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.28704382 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.288115493 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.288159681 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.28765327 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.28681626 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.287893461 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.285520132 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.287665812 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.288263367 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.288324107 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.288057493 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.28702834 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.286660187 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.290798032 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.286011611 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.289088064 seconds)
  done (took 24.346213014 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.288001257 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.287226072 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.288270638 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.287245567 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.288831976 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.287268859 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.287812231 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.288155228 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.288233661 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.289047453 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.290442171 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.288354305 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.288242143 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.287678598 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.288073376 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.287067136 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.289280315 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288083265 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.288366465 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.289089467 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.288062345 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.2890807 seconds)
  done (took 29.513076514 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.290693378 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.290704758 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.28885971 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.288952824 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.289374234 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.289247085 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.290263569 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.288799015 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.290618744 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.290166367 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.290642884 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.289894063 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.291857727 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.290130248 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.290350533 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.29016056 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.289768503 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.291048741 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.295752112 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.290353685 seconds)
  done (took 26.978693269 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.291443256 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.291589924 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.290787087 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.291067927 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.289859677 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.291122996 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.291496857 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.292349648 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.29154452 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.291426395 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.291600317 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.29134364 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.291803027 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.29219936 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.290498768 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.293092705 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.292393908 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.291660508 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.290966248 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.292725627 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.291235148 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.293163098 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.293241817 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.292777411 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.292155546 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.292937694 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.292744688 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.293144281 seconds)
  done (took 37.344552544 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.292880667 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.292806003 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.292742339 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.291753653 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.292869621 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.293611393 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.292543016 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.292398871 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.292468901 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.292581899 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.294010061 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.293432278 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.292062043 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.294152306 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.290950335 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.293338785 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.292508436 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.293976102 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.293563228 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292734911 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.293775553 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.293582133 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.293208308 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.294440542 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.293799861 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.295589378 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.294270361 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.29424307 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.294073637 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.294186736 seconds)
  done (took 39.973028221 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.313700408 seconds)
    (2/2) benchmarking "in"...
    done (took 1.311809578 seconds)
  done (took 3.800616693 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.296001137 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.294805004 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.294047557 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.293921649 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.295104974 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.295091271 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.29514414 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.29428281 seconds)
  done (took 11.53453345 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.287453798 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.296295882 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.295067595 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.296422959 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.296305305 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.286348261 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.295295677 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.300643807 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.288460646 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.289371373 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.289149978 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.290250575 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.292564531 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.290480689 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.291003717 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.292053674 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.298222445 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.296711385 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.298064682 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.296853818 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.296931469 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.290803238 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.293086076 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.298330675 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.288523476 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.297650428 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.297716059 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.301802499 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.29058767 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.295338925 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.292330349 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.300459787 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.298570913 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.29797213 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.297572061 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.298828491 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.300486011 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.297195174 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.298963098 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.303003294 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.298862563 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.299571184 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.291495399 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.295749515 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.2948397 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.303155726 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.297960384 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.298506573 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.291467309 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.293110845 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.300625943 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.291636491 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.29995973 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.293913631 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.296822787 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.303386652 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.306899711 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.29207626 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.293419307 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.301013131 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.307422333 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.301512029 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.299418723 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.304004723 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.295410972 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.299703528 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.304535152 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.306642183 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.299983041 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.300176956 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.302441179 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.309047765 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.304371696 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.306734395 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.30239521 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.302365109 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.29356352 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.304750316 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.302618151 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.304678322 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.307849408 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.303205696 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.297501315 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.299484122 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.296474237 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.305026214 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.301046378 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.30234281 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.293291678 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.304704804 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.310678451 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.302283325 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.294093723 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.298281991 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.299649474 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.304285205 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.293414095 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.299051017 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.303861948 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.301650749 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.303729081 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.294842535 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.299608321 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.307180554 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.302761499 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.304575312 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.309827908 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.294474929 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.305508361 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.309804994 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.302969868 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.294460339 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.298691341 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.305597809 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.296050075 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.299920458 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.307482062 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.298373991 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.309181049 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.301835088 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.300000027 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.308243326 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.31020963 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.304041528 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.297206074 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.306963162 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.303886191 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.301176823 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.310108279 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.302572653 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.304688642 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.30191168 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.309414168 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.297453194 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.30761352 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.29767333 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.308780798 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.305064373 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.305146299 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.301137088 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.304188472 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.301367585 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.303451862 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.306887966 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.312983208 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.302209664 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.312499985 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.305636971 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.30382036 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.306118738 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.311267187 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.306659842 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.298506763 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.307615653 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.298405889 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.307572866 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.298782543 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.309847504 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.304821698 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.305515842 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.305309436 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.296884808 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.301054046 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.309565234 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.305726623 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.306890666 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.308963755 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.306446745 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.307307507 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.29853179 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.308439994 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.297994075 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.301979338 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.310446736 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.307960638 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.306557573 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.304527031 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.313541145 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.307054044 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.307736836 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.299981249 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.304266337 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.311356964 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.309670638 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.315813018 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.307244773 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.307605882 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.299993027 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.303086556 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.30946007 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.300028758 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.312836753 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.312875125 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.314862874 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.303843056 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.310008915 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.299727957 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.30985957 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.306164965 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.313806148 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.3073866 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.308719016 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.302033455 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.312065544 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.303237987 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.311681525 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.299329159 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.310298661 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.31021071 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.308316541 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.308906504 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.303070777 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.307152042 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.313376398 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.309200474 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.309384822 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.303159017 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.312315128 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.301488167 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.305232915 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.311599143 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.309443578 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.310798078 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.317456297 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.306951147 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.31247751 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.310257504 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.306106213 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.311603127 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.307837007 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.30900276 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.315064685 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.313754011 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.306403493 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.315836772 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.313900238 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.304715216 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.311316262 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.318273561 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.310169429 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.302701272 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.313531782 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.312013624 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.311883569 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.310416915 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.305623776 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.315033494 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.313632917 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.320928402 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.304484679 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.315506597 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.307337234 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.313490402 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.307723522 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.313460202 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.311358238 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.313867679 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.319732221 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.313666934 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.306850189 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.316365186 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.31189585 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.311498899 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.303831117 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.315108809 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.314458479 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.31358939 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.311256641 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.309470824 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.312740459 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.30527776 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.315293196 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.306787362 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.323863907 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.326759723 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.315645499 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.316613871 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.3174455 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.313659427 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.315937271 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.305769856 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.308231679 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.311424564 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.30823396 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.30934974 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.317318445 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.309000205 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.316418315 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.311008175 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.314310428 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.315511779 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.313448599 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.308076375 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.317014286 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.314222439 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.314097972 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.304734539 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.316448843 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.308099187 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.316219866 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.314987947 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.309511388 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.321401747 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.318776728 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.312560428 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.31130363 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.310782789 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.307847443 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.31303408 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.320741999 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.309003019 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.318275731 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.307342553 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.311932374 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.309594676 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.320234094 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.325358012 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.308820423 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.321243581 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.316534418 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.306944351 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.310059991 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.318156175 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.319191678 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.327853314 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.308092606 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.317538905 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.317758123 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.31650824 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.317413774 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.315866452 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.316988166 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.317421988 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.321603806 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.320911638 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.311853273 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.319344385 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.324639789 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.315912653 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.317748824 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.308886286 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.317798248 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.327405369 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.312141724 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.315878039 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.312622716 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.319439308 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.316874996 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.317433565 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.318409806 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.317882078 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.32202029 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.321538042 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.319110832 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.318386751 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.321592745 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.329229741 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.32216967 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.33048662 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.31303819 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.324347133 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.318257169 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.313608314 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.315520957 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.315279131 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.320782946 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.309069755 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.322755524 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.317799232 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.314698961 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.319181633 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.324516068 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.311062107 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.317002191 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.32640579 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.311741329 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.320805175 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.31834597 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.311140173 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.322180701 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.319041936 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.310256643 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.313377587 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.316276957 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.322403642 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.312632159 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.323301354 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.31305094 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.324681736 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.320482766 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.320584717 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.320129368 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.320743143 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.31380801 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.323743743 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.319531515 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.329977419 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.315917214 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.321061742 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.316245843 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.326639634 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.333345271 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.31668327 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.325600754 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.3232815 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.315799297 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.319019161 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.325683761 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.315087533 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.324273571 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.312873057 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.315348297 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.316522453 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.321538505 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.32568757 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.326265773 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.313388749 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.316282547 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.324013815 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.32463145 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.323645489 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.319822609 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.32955195 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.315819693 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.315722765 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.32435858 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.316511335 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.32772891 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.315458122 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.319227025 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.319601832 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.327802631 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.323216463 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.323986745 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.315026577 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.317202728 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.328570639 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.326077805 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.319675348 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.318199754 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.325595503 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.317268147 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.319973801 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.320092973 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.318236334 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.319903033 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.327202628 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.318807632 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.31826012 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.319506282 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.326035655 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.327628264 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.326674151 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.318631124 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.332167865 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.333286296 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.330721827 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.316341872 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.319985954 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.322252083 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.32786643 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.326471741 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.318947908 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.332675642 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.331907399 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.33005479 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.325804581 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.327241441 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.317429811 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.327967438 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.325497835 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.322157465 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.332054323 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.321967248 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.333125901 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.327676555 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.325826386 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.317698834 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.319949001 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.321770715 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.320505365 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.327794333 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.325850075 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.329125359 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.324161632 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.334015629 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.328570195 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.325817745 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.32700159 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.318843827 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.327964281 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.318409891 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.328041726 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.328150353 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.320855617 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.330017847 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.328167072 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.319343946 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.321746212 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.32853957 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.326265097 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.321334455 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.325847821 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.331139482 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.337964049 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.328570374 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.32147858 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.324259896 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.332589322 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.328012146 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.327413034 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.320453148 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.336366475 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.341897874 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.323624666 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.324377448 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.330584798 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.337504307 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.326620452 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.328787701 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.325021554 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.326477621 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.332127854 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.328938511 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.333418584 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.335617434 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.325670656 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.332075859 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.322180253 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.324795571 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.331604853 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.339991353 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.329637652 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.323907242 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.33725801 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.341795656 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.327617162 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.343083904 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.337618914 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.330924081 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.336217675 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.323493286 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.332772178 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.326780135 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.336160737 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.330828362 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.329819525 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.33041284 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.323440179 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.332193967 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.338588542 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.340347626 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.330249951 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.323747761 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.325907194 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.332642698 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.332624468 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.331421765 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.330629246 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.332436897 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.330143505 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.325978497 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.341998838 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.346733168 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.336301876 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.332659884 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.331596787 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.331689873 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.334974517 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.327188192 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.334934554 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.331756975 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.330901535 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.329408683 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.340543847 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.333539992 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.326863393 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.32825003 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.326240624 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.335160344 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.33971532 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.351569362 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.335848825 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.336080419 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.335388299 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.334799425 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.326965981 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.337414982 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.332573345 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.327009109 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.327774334 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.334792546 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.334125048 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.333186322 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.326042095 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.336589798 seconds)
  done (took 784.551463751 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.332937938 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.33267034 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.333620887 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.333712247 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.333357146 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.332948221 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.332823334 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.333667574 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.332483108 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.333076604 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.333031936 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.333974856 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.333671389 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.334782922 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.334428923 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.334471015 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.335300024 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.334469276 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.334621252 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.335082608 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.334028693 seconds)
  done (took 29.216599055 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.334335009 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.336812453 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.334677359 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.334555622 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.335405679 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.335598474 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.336661171 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.335992706 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.335609685 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.335805876 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.336625019 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.336007916 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.336464706 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.335657992 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.336048655 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.336275461 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.335251484 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.335412739 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.334913449 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.335645371 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.334816209 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.337856357 seconds)
  done (took 30.595560067 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.335878223 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.336774153 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.329475759 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.339516012 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.336590419 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.337234928 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.336988547 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.336762802 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.33689611 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.329428236 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.330361999 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.331552065 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.332703876 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.340223645 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.334372914 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.342803284 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.336679755 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.336808788 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.337832685 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.336774156 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.340263723 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.349783125 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.338973825 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.328697438 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.337751609 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.339047953 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.339050602 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.338680864 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.331778712 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.340894883 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.339899914 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.333283588 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.341210293 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.34021343 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.332167223 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.340216935 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.338974902 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.337796084 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.339817463 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.334954047 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.34583183 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.338231279 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.342120476 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.350880748 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.339354278 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.3330048 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.343735965 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.339589958 seconds)
  done (took 65.423803109 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.340821167 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.339961943 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.339189732 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.3384295 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.339445052 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.339564127 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.339620208 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.340799331 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.339585788 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.339476554 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.340314785 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.341823402 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.339859502 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.340745098 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.340811604 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.340432171 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.340981709 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.341938645 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.340567089 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.340280848 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.341548383 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.341869827 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.340578917 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.341053337 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.34103114 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.340926269 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.340638899 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.341555408 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.340830924 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.34078408 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.342278645 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.341841827 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.342556452 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.342068051 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.343397155 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.342575038 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.342258485 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.341873002 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.34107265 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.341157475 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.342064236 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.341729193 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.341334614 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.342289022 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.340291007 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.341674543 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.342307094 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.342973721 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.340918565 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.342491099 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.341430013 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.340792844 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.342538976 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.340751118 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.341824848 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.34253161 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.340577345 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.34121231 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.340130901 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.340842122 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.342586364 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.340550642 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.340867202 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.341981973 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.340089333 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.342192229 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.341478523 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.342358688 seconds)
  done (took 92.415247381 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.34316463 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.341513743 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.342709548 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.344072796 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.34169652 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.34214652 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.34379519 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.341444363 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.342023532 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.343304682 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.341635793 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.341939108 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.341707099 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.342071366 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.34136735 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.343527756 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.34258927 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.342123371 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.342453731 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.342469672 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.343166494 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.343708665 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.343176043 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.341822673 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.343344439 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.343777266 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.341141882 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.34022967 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.342690792 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.341688291 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.342694408 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.341790396 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.341382373 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.34305245 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.342748129 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.341739192 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.343583706 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.343071714 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.342207181 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.34270938 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.343572536 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.342751898 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.342543236 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.34279008 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.343067602 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.342606569 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.343449334 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.343724901 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.343208683 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.343631029 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.342304672 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.3431876 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.34260036 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.343779465 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.34323547 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.342404544 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.341975733 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.34309733 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.343454633 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.34341032 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.342805524 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.342621452 seconds)
  done (took 84.460297972 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.342984921 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.343360516 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.343691769 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.342471028 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.343371669 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.34462385 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.342480234 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.344280131 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.343684908 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.343688058 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.34456587 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.343034457 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.34479142 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.344639486 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.344283129 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.343807386 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.344427056 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.345018206 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.342996788 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.344761295 seconds)
  done (took 28.092021596 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.345027079 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.344473974 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.343646189 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.343218694 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.345518268 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.343937323 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.342816425 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.344106006 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.343542553 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.343277304 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.344582603 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.344948791 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.343433524 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.342431469 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.343129359 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.343372039 seconds)
  done (took 22.717288155 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.343643089 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.344700099 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.345030519 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.344070337 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.343648239 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.343869464 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.343585897 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.343148283 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.3440052 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.345388717 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.343674522 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.343415856 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.343331871 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.343326794 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.344282378 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.344303086 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.343124289 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.342711653 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.343897739 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.344307375 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.344081252 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.343678536 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.343588882 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.344799706 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.342770573 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.343286037 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.34514739 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.344529695 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.345880821 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.344678143 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.344287875 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.345735294 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.345562669 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.345953527 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.34632903 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.344512263 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.344951285 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.344038224 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.344691151 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.346048261 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.345516105 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.345685308 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.346945453 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.345664942 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.345503362 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.344882842 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.346398569 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.344922906 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.347159141 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.347798272 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.346748626 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.347928294 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.347487746 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.345287905 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.346562375 seconds)
  done (took 75.183992094 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.345790576 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.346412866 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.346102753 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.347097532 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.347577744 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.346837385 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.345910071 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.348944029 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.348407689 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.347236488 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.347402377 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.34869258 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.346550657 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.34718441 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.346678408 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.347835132 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.347424966 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.34679381 seconds)
  done (took 25.468058706 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.348120662 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.349016091 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.348789599 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.347751164 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.347755857 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.348163888 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.347463456 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.347371777 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.348259147 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.348171223 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.348464191 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.349066531 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.348043498 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.349685019 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.349137436 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.34970842 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.349238574 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.348476475 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.348231412 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.349486951 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.349864527 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.34884527 seconds)
  done (took 30.887877973 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.338819852 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.339271088 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.337221276 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.351990384 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.348286925 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.33996854 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.339045368 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.339074848 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.357123603 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.362890059 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.358574659 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.347944007 seconds)
  done (took 17.379834262 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.34875693 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.351077141 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.34999101 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.350467188 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.351445922 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.349341152 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.350103999 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.350796729 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.350913157 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.349952173 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.350652832 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.351145706 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.351479289 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.351566376 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.350728193 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.349557348 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.352580888 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.350947399 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.35189199 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.351374482 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.352036443 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.351287318 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.351659812 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.351750455 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.352243608 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.352337063 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.35272571 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.35158351 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.353890003 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.353270617 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.353350474 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.3519902 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.354680658 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.352174473 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.352467347 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.354066552 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.353813838 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.352823135 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.352036927 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.353558282 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.352262128 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.352218505 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.35175986 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.35228345 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.351875831 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.353288253 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.353461814 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.353190922 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.352430281 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.351368169 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.352928691 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.352989691 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.35291469 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.354128416 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.354296211 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.353431255 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.354383404 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.352951046 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.353438471 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.354458032 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.353927239 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.353042414 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.353292136 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.354573224 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.352958729 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.352835206 seconds)
  done (took 90.472238574 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.353288142 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.354407589 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.355155285 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.354350079 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.355732207 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.354587381 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.353755299 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.355559095 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.355091855 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.354773814 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.357513356 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.352829989 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.352805096 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.355225743 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.354052233 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.353822995 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.354119581 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.354893805 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.35227566 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.353222741 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.354055602 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.353891094 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.355638083 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.354388889 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.355668025 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.353121801 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.355225682 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.35493484 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.354587116 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.354755321 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.354157311 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.355223291 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.354207964 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.355491619 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.354449109 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.354310735 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.35423656 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.355317594 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.354908328 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.356258842 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.354452096 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.355549594 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.353342788 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.355262157 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.354009063 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.354449376 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.354465893 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.353658325 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.355803449 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.353973712 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.355044351 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.354539869 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.354803242 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.355691646 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.357111001 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.354854042 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.354470476 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.355157219 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.355080239 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.356129768 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.355224421 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.356180588 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.355704025 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.353976737 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.353385281 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.355795462 seconds)
  done (took 90.635872998 seconds)
done (took 1836.64000751 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.513089608 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.466086992 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.345156232 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.35500736 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.345965966 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.344854051 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.359301048 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.346179381 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.345522922 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.345522415 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.343870808 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.539923996 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.381263423 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.344995513 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.34579147 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.441553328 seconds)
  done (took 27.389357622 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.373469495 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.354405193 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.464084495 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.353820658 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.373450005 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.539097283 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.410247083 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.354051504 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.520163571 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.373394986 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.346788326 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.372944808 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.350377116 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.342742582 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.373343643 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.536976517 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.616988047 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.349152362 seconds)
  done (took 29.631083972 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.792291261 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.3558999 seconds)
  done (took 5.372501004 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.369539791 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.349209312 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.351085002 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.347655703 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.34041669 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.35620507 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.347648062 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.342781023 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.368600583 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.476875601 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.356773071 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.364382338 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.348854744 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.35032329 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.356981453 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.393077339 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.493245068 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.359161116 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.358423704 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.354880347 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.348773017 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.43908906 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.391284419 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.363480217 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.47220268 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.348807915 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.355763624 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.357394871 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.464411624 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.3579015 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.34892436 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.349573816 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.352179427 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.277543849 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.88341886 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.345794854 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.373203633 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.360533728 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.360100864 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.479655637 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.350670645 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.357905532 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.347464853 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.882690314 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.457878573 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.47469079 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.346747952 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.353106905 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.350855424 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.416615205 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.350702442 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.351550318 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.40906122 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.137553933 seconds)
  done (took 86.231105516 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.408012362 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.343579357 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.526964909 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.363645569 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.346456712 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.344106768 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.344300646 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.627482658 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.355297482 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.344604301 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.664100552 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.960367193 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.349275672 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.40848882 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.385496542 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.395075272 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.345646998 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.346394752 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.350590566 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.34737507 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.911350588 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.345955051 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.34463965 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.418710805 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.386046358 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.885749841 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.36428824 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.352073895 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.35360692 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.344199667 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.933736903 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.352537281 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.397029834 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.346321816 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.63289165 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.751839993 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.703288191 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.358365447 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.36608639 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.346699494 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.370278743 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.876003095 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.726927737 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.353010462 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.351979374 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.876292187 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.352199069 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.353327389 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.347357688 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.615346501 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.350975228 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.347621463 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.347868491 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.369719672 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.346087082 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.398302975 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.39046357 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.887748066 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.352081006 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.347115144 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.395782115 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.347665423 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.352286263 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.352362596 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.350887836 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.721199001 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.580948997 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.352014525 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.718549786 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.930727217 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.351150923 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.013177597 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.350935062 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.357357901 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.379043805 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.34757846 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.346557156 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.886268019 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.374519215 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.347111659 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.696000619 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.350975395 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.653745296 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.36614103 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.349210631 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.924745318 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.358401511 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.397876701 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.348154192 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.352778772 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.364081596 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.349592545 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.63747186 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.390018312 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.348184031 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.346722591 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.376098847 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.348509564 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.364068671 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.35550748 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.995553656 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.359969471 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.347701707 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.368702565 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.346310288 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.353542813 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.351080419 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.34853915 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.628280913 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.348246436 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.371822828 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.349629474 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.35223255 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.363236778 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.422503634 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.357999109 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.655189237 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.35710729 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.346974687 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.350714298 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.347753082 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.356463147 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.348734169 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.368926146 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.348555104 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.657715792 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.369651358 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.365777452 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.350787032 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.347982162 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.370727714 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.348010355 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.402482867 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.350420031 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.116113538 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.392290053 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.395773937 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.347066416 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.354054307 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.346736538 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.368402451 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.347155847 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.64957922 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.638400319 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.580095387 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.348510214 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.347477574 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.139168653 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.387642735 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.531263875 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.366143094 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.347961653 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.634162181 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.561911451 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.350694114 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.347945925 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.350230008 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.628531852 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.353994895 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.663577167 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.941098852 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.353731981 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.350496341 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.116748183 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.163941836 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.352794253 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.351792717 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.644984047 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.370095442 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.348889091 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.34870429 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.348157642 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.348633555 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.35208177 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.353911883 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.348961651 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.348756582 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.690425741 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.541226369 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.364263618 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.358444704 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.874361717 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.375155044 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.348800064 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.361461204 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.354902693 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.348117592 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.396525681 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.352591076 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.37569023 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.346108446 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.358673354 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.89683011 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.35230754 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.348601379 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.541512156 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.06266907 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.35397539 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.347952284 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.347550588 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.402784998 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.901697925 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.37635765 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.645078976 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.362460524 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.38737096 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.348491349 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.367387244 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.900385894 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.353478518 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.348896349 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.071578077 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.352898421 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.776999045 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.348331737 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.354885123 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.989598944 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.355190173 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.350041965 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.347904183 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.349979544 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.66499497 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.34814945 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.385107985 seconds)
  done (took 502.420892071 seconds)
done (took 652.271016714 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.347396694 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.352853659 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.352326049 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.352527187 seconds)
  done (took 10.636055486 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.364796282 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.354715755 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.363959602 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.352514329 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.367097321 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.355157971 seconds)
  done (took 9.38972257 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.347185265 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.353079188 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.354118634 seconds)
  done (took 8.284326004 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.546125031 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.367879119 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.686791093 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.363733408 seconds)
  done (took 9.193977574 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.365565267 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.364642202 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.364722761 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.36685029 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.366211568 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.365901844 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.368774464 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.367526018 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.367828379 seconds)
  done (took 13.527787356 seconds)
done (took 52.263306715 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.503413792 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.489732165 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.456840666 seconds)
    (4/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.328499224 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.429472158 seconds)
    (6/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.327905236 seconds)
    (7/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.40626785 seconds)
    (8/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.648282768 seconds)
    (9/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.508875186 seconds)
    (10/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.333419177 seconds)
    (11/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.551059495 seconds)
    (12/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.338288408 seconds)
    (13/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.448082048 seconds)
    (14/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.470894842 seconds)
    (15/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.329441325 seconds)
    (16/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.32892771 seconds)
    (17/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.328713186 seconds)
    (18/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.648991917 seconds)
    (19/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.381911378 seconds)
    (20/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.527398035 seconds)
    (21/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.435692436 seconds)
    (22/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.36268962 seconds)
    (23/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.447285741 seconds)
    (24/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.426969113 seconds)
    (25/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.581124463 seconds)
    (26/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.427330381 seconds)
    (27/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.448378597 seconds)
    (28/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.443530227 seconds)
    (29/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.357383508 seconds)
    (30/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.354774661 seconds)
    (31/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.329522822 seconds)
    (32/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.441376552 seconds)
    (33/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.363942775 seconds)
    (34/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.386236061 seconds)
    (35/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.328200449 seconds)
    (36/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.433014938 seconds)
    (37/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.525081025 seconds)
    (38/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.435828574 seconds)
    (39/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.528439288 seconds)
    (40/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.583138165 seconds)
    (41/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.502035167 seconds)
    (42/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.466117144 seconds)
    (43/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.439192752 seconds)
    (44/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.389735553 seconds)
    (45/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.379448416 seconds)
    (46/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.335061393 seconds)
    (47/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.363260075 seconds)
    (48/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.328936134 seconds)
    (49/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.5936193 seconds)
    (50/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.451240505 seconds)
    (51/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.478600351 seconds)
    (52/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.362557112 seconds)
    (53/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.334756256 seconds)
    (54/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.56809266 seconds)
    (55/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.562268925 seconds)
    (56/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.520531623 seconds)
    (57/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.435670098 seconds)
    (58/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.508079447 seconds)
    (59/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.329904168 seconds)
    (60/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.369381903 seconds)
    (61/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.392550815 seconds)
    (62/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.456018774 seconds)
    (63/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.597769535 seconds)
    (64/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.392301301 seconds)
    (65/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.441720168 seconds)
    (66/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.362889359 seconds)
    (67/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.385959996 seconds)
    (68/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.44515581 seconds)
    (69/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.534086519 seconds)
    (70/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.331009048 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.472236831 seconds)
    (72/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.419768952 seconds)
    (73/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.596935387 seconds)
    (74/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.443483174 seconds)
    (75/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.389548341 seconds)
    (76/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.330578797 seconds)
    (77/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.462623895 seconds)
    (78/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.442373407 seconds)
    (79/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.384348802 seconds)
    (80/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.585270345 seconds)
    (81/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.47509925 seconds)
    (82/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.510001342 seconds)
    (83/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.510926277 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.473490581 seconds)
    (85/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.390002779 seconds)
    (86/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.511974261 seconds)
    (87/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.333062894 seconds)
    (88/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.432927569 seconds)
    (89/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.390272192 seconds)
    (90/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.332027263 seconds)
    (91/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.536821697 seconds)
    (92/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.581620662 seconds)
    (93/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.356564531 seconds)
    (94/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.47094488 seconds)
    (95/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.629105981 seconds)
    (96/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.699974719 seconds)
    (97/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.537255712 seconds)
    (98/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.540202991 seconds)
    (99/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.594879715 seconds)
    (100/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.508699724 seconds)
    (101/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.470628758 seconds)
    (102/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.433304771 seconds)
    (103/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.537743475 seconds)
    (104/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.417800987 seconds)
    (105/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.589655878 seconds)
    (106/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.40048595 seconds)
    (107/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.333778426 seconds)
    (108/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.378384944 seconds)
    (109/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.593437651 seconds)
    (110/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.475921878 seconds)
    (111/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.46314603 seconds)
    (112/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.563614771 seconds)
    (113/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.460688667 seconds)
    (114/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.510626505 seconds)
    (115/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.364612987 seconds)
    (116/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.67514583 seconds)
    (117/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.426385986 seconds)
    (118/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.36202155 seconds)
    (119/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.375489816 seconds)
    (120/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.50308133 seconds)
    (121/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.337067306 seconds)
    (122/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.363308065 seconds)
    (123/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.478256012 seconds)
    (124/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.486991996 seconds)
    (125/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.449572976 seconds)
    (126/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.471370129 seconds)
    (127/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.337629548 seconds)
    (128/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.595002231 seconds)
    (129/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.431935326 seconds)
    (130/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.500122062 seconds)
    (131/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.504659272 seconds)
    (132/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.426779051 seconds)
    (133/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.398964147 seconds)
    (134/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.354959646 seconds)
    (135/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.470346273 seconds)
    (136/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.663326464 seconds)
    (137/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.579925897 seconds)
    (138/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.391891354 seconds)
    (139/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.580628289 seconds)
    (140/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.478043428 seconds)
    (141/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.463664465 seconds)
    (142/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.349783528 seconds)
    (143/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.470185997 seconds)
    (144/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.460476042 seconds)
    (145/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.334717512 seconds)
    (146/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.335474949 seconds)
    (147/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.386728527 seconds)
    (148/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.393937909 seconds)
    (149/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.421595813 seconds)
    (150/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.419354793 seconds)
    (151/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.357216134 seconds)
    (152/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.601698146 seconds)
    (153/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.396656778 seconds)
    (154/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.398668617 seconds)
    (155/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.33639762 seconds)
    (156/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.616878848 seconds)
    (157/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.517823578 seconds)
    (158/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.475819421 seconds)
    (159/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.578434941 seconds)
    (160/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.512961227 seconds)
    (161/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.392132129 seconds)
    (162/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.663499862 seconds)
    (163/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.340981997 seconds)
    (164/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.423577989 seconds)
    (165/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.336948988 seconds)
    (166/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.350897574 seconds)
    (167/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.44259098 seconds)
    (168/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.466559907 seconds)
    (169/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.487425852 seconds)
    (170/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.439054117 seconds)
    (171/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.388092108 seconds)
    (172/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.598602085 seconds)
    (173/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.354032658 seconds)
    (174/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.342907978 seconds)
    (175/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.521207012 seconds)
    (176/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.766909635 seconds)
    (177/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.475813557 seconds)
    (178/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.431428825 seconds)
    (179/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.469400533 seconds)
    (180/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.337731371 seconds)
    (181/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.493966847 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.5569351 seconds)
    (183/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.420499789 seconds)
    (184/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.420458562 seconds)
    (185/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.337892379 seconds)
    (186/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.531652283 seconds)
    (187/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.77294496 seconds)
    (188/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.702111165 seconds)
    (189/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.591479349 seconds)
    (190/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.438806386 seconds)
    (191/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.427169413 seconds)
    (192/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.514558582 seconds)
  done (took 328.77441272 seconds)
done (took 330.007597016 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.38910506 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.466022234 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.369624668 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.366599276 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.369144707 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.344095719 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.391035551 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.369278301 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.383440191 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.38395672 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.344965726 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.379438792 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.384112603 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.380050886 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.402177817 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.36934747 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.368913143 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.379919988 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.383866871 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.387030803 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.370478891 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.371050417 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.397738318 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.369940924 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.378587495 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.377887176 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.37600914 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.361070762 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.383406815 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.385552825 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.368447765 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.380277549 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.387747015 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.381251703 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.372567177 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.379425757 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.37168767 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.466261656 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.390185219 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.383053222 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.37862386 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.387215093 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.375933592 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.375317667 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.382496076 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.397749384 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.380646648 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.384725809 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.363547907 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.34656986 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.39665359 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.382810217 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.381198343 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.343174624 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.369259444 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.387334381 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.381269055 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.392375966 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.380154004 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.37246872 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.404145797 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.391354976 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.383728709 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.380737121 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.379788595 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.387827679 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.381081086 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.390186574 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.379035861 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.373701123 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.372062569 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.378747197 seconds)
done (took 108.669962703 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.496793697 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.368160825 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.52899777 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.379092652 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.536609599 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.498920397 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.378956358 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.38015081 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.378588733 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.171445699 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.3795102 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.379551212 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.367081773 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.37877252 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.495460821 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.379211172 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.379430723 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.071313446 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.380074582 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.506882917 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.368374971 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.378501326 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.379253978 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.177158517 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.367226379 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.36504036 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.50850807 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.380387098 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.077551424 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.363619412 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.367216359 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.077629713 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.507888659 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.3991236 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.389158051 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.389341841 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.538187508 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.382724143 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.496950373 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.497282951 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.531966093 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.419563123 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.364216752 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.370498737 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.381086848 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.382144123 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.38158272 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.409310211 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.370358729 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.382002086 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.074938331 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.391433765 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.392531567 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.381891697 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.381955561 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.401668598 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.382505542 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.383882077 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.511305376 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.383411902 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.498632862 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.180223775 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.175008192 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.383820734 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.369438861 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.382253903 seconds)
  done (took 111.157611462 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.44467686 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.447692246 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.481553415 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.377265865 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.423970559 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.483165518 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.377538581 seconds)
  done (took 11.280939778 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.380138524 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.382268507 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.422695861 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.42238632 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.382507239 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.546873212 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.384035962 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.387174791 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.383048778 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.425011514 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.385378568 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.385741233 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.391493502 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.373379075 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.422182473 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.386126427 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.494508031 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.376678774 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.383553261 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.527882523 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.38465397 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.394905878 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.426456709 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.38646862 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.383903609 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.382799431 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.158480091 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.384870982 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.382784713 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.383769766 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.383869733 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.442233459 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.383706973 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.373077663 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.383700449 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.489637486 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.385875487 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.386273214 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.386702396 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.377623973 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.386066387 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.383414412 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.386754833 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.385303301 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.384353945 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.400734492 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.386265661 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.38581023 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.386649078 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.385591476 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.427496277 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.385460553 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.38500389 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.385053633 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.430944747 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.395490465 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.385384166 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.385767969 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.388367686 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.386037371 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.531761297 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.424483022 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.387640381 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.425583945 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.386833248 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.386489777 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.387378669 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.38652044 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.468045523 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.386368316 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.426808358 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.38668565 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.561686772 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.404742532 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.388184157 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.381345004 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.381754716 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.389529473 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.37569827 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.385322064 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.385546671 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.381091096 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.385710207 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.386762632 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.386231432 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.540280931 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.486401927 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.388269991 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.395316304 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.386247082 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.388410898 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.431271969 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.390086684 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.387497048 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.43017084 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.498828927 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.43170094 seconds)
  done (took 142.312622648 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.392196757 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.3912072 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.383262917 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.407068212 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.382810133 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.380238944 seconds)
  done (took 9.587703793 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.383210738 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.391985771 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.388370949 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.389046634 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.391607595 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.390534892 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.390031598 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.381971911 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.392136062 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.390484286 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.39103801 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.391004484 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.392783462 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.391495806 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.390169429 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.390053589 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.389825081 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.390740809 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.390215595 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.393085128 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.378963194 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.390029397 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.391467882 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.382680478 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.394485634 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.391741919 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.406807971 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.391201021 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.391976688 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.389440547 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.394980771 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.393425257 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.382892901 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.386379488 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.393827383 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.384107827 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.393653613 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.392851578 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.391380114 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.393697044 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.393574294 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.393007357 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.391665626 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.393092025 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.383290575 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.386507246 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.396055541 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.407715238 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.394034913 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.394502945 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.394315002 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.392504534 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.394484986 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.395056188 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.386331967 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.38642088 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.395174397 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.393571391 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.394788735 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.386475045 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.3955678 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.39451988 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.38585846 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.394211566 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.39382232 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.393751217 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.386998619 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.395693193 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.396469736 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.394873309 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.395394224 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.39193493 seconds)
  done (took 102.44173354 seconds)
done (took 378.024578477 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.854758538 seconds)
  done (took 4.109203706 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.634970976 seconds)
  done (took 3.893090098 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.012638724 seconds)
  done (took 21.534529178 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.442085357 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.449032816 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.393949405 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.386916195 seconds)
  done (took 10.928202582 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.636746581 seconds)
  done (took 3.894685099 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.387902176 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.389980645 seconds)
  done (took 6.036470999 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.560287426 seconds)
  done (took 3.816751441 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.725417095 seconds)
  done (took 3.98211737 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.406539851 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.405780124 seconds)
  done (took 6.078943838 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.356397775 seconds)
  done (took 3.610188223 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.584794289 seconds)
  done (took 20.839833369 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.384715788 seconds)
  done (took 3.625217983 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.392459932 seconds)
  done (took 3.622520048 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.622728684 seconds)
  done (took 5.8531958 seconds)
done (took 103.081775883 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.338117497 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.344236351 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.344049724 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.343475826 seconds)
  done (took 10.594713483 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.411390975 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.410593057 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.41612893 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.405965763 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.407005428 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.409062139 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.367580716 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.367915788 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.396972961 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.393574929 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.409895952 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.396199149 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.410533493 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.365459166 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.389628033 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.406729419 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.39494095 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.410295733 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.365812292 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.395742799 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.337190541 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.394978949 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.38770122 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.337501292 seconds)
  done (took 34.608541527 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.822403327 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.397330497 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.480481151 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.378204087 seconds)
  done (took 7.288238428 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.441645278 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.4402834 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.457383706 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.495465858 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.530920495 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.455788235 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.357802586 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.358664824 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.344150231 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.442575442 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.518172172 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.439276083 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.655434142 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.336987669 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.654526833 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.335796141 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.335966066 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.441142689 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.488491802 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.520206642 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.336536358 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.439501318 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.443211286 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.438634209 seconds)
  done (took 35.91947813 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.342282894 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.351066569 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.336404535 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.349441157 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.335272635 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.336766247 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.337242589 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.340247134 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.334975641 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.334790613 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.334801931 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.347978385 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.334561618 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.334003403 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.341843532 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.334823323 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.333661608 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.338382608 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.340233311 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.334662891 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.333690672 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.338788237 seconds)
  done (took 30.655852619 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.313531044 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.314923301 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.667237448 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.570664779 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.315477232 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.319127714 seconds)
  done (took 13.707202083 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.384113349 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.51967017 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.326177528 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.646368796 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.735789763 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.331574111 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.327625807 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.553118138 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.826817981 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.819367044 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.381701209 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.391364586 seconds)
  done (took 19.452819514 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.325675591 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.325043526 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.324665321 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.341392446 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.375390198 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.330971179 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.332291201 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.320373374 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.380272317 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.379280644 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.330513443 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.376647103 seconds)
  done (took 21.354035807 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.410810404 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.330662893 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.344594701 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365011547 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333906556 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.33203797 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.360937916 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.997607211 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.337916756 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.609931257 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332814947 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418711718 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.583799213 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338406302 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.34149192 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.29872934 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.562385942 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.78780819 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338602719 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3364369 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383602988 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.337613829 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.35516627 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.523580942 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.341375612 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.336845629 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.633493509 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.336313743 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.598537322 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.581363162 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.582464905 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.345255545 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.613666049 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964565823 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.45035426 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.525272624 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342336048 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.341193038 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.32539751 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.339673001 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.344398928 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.341038839 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.5777914 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347696206 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.336359855 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.342384228 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.020902106 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.347781012 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.339941367 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.340486896 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.579641428 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449117158 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.345046392 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.338789191 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336611409 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338686672 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.346248313 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.461329486 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977512875 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339995798 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344492106 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.345555842 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.331361899 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341665504 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954594179 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.348253941 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.34746657 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.339002178 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333109905 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.333049486 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.358079999 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333156039 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.356116815 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328726674 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.069302463 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.331804176 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333633344 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.828185096 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331946079 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.332059595 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.553930849 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327000775 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326520943 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.327031904 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.326421776 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.023862822 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.336314122 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.295205561 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.384371651 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.990733525 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.515115468 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349978013 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356355768 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.548654989 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.297119567 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329660423 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.327458541 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343093534 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34953108 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.015816472 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331425009 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.334426603 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.576418673 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.539120068 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331490032 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.285896866 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.765679759 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337620412 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.358709819 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.33275153 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.520067348 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.915645588 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.574260703 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349317008 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362166449 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.328416453 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.088339164 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331379806 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.340057824 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.330714691 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.597005798 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.118337383 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331091927 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.402268438 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.329706269 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.330453917 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.330640308 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332181553 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.329756635 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.495145182 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.340541 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.57457861 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.338064525 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330967326 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.33286146 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339116721 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.331491835 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.553182424 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33016396 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.610384801 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330496679 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329983443 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331209535 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.54908734 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.330703438 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.343994556 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.671432934 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329737728 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.352541499 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.576294854 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371196081 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.443265606 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361851905 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.332861344 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.58531108 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.336669194 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.338299061 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.331539865 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.332561287 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33561437 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.340261889 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327709597 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.931961379 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312469635 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.336796321 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.33207637 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.347194852 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.405923615 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.340017755 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.519557469 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.347039832 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326823644 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.340466559 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.339308905 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.559904615 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.571129596 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.339848306 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.508005968 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.769243315 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.922850367 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.348236862 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.332247593 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.333340299 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.333291063 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333020909 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333222598 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.335601102 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.520592112 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.584110521 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.336864939 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.924200641 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335168912 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.339017133 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.341797468 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.573221089 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.350957003 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335925976 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.345579227 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339403337 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.363062155 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.579641868 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.562837322 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.350984904 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.333763999 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.853926835 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.341670993 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.334042545 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.335895057 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364814056 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.34187414 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.135344153 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.675490132 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.32947205 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.590718432 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.34501443 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.353959565 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.335650384 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335509173 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338536015 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.347604153 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347352482 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.523690145 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.340805426 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338153833 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97358375 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.091948174 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868743129 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.344082537 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.342023132 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.342843487 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.01021346 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336106303 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.336642552 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.571495 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.006704729 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335910323 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.771369273 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.341890132 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.050359396 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.583831308 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.571829627 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.344927085 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.344031146 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.579149543 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.557579937 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365215954 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.340127899 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341300984 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.306644309 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.84288282 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346589952 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.516657474 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.009670352 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337647199 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.338733337 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.334835388 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.349812923 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.699140945 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.342526916 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339312074 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.339897556 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.349194093 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.144477208 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.342857636 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.338842714 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954814639 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.341082415 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.794563057 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341190313 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.526439881 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.583619637 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.563417724 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.346394173 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.350811627 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.588679065 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.581182868 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345817727 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.339866572 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881377606 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.201879194 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.34885502 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34112431 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.099710299 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349886093 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.612250963 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.350813522 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.35215302 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342754197 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.341255318 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340146341 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.340485267 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.347967347 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315845195 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.796371675 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.346021386 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344641042 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.35022021 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346439528 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.587459517 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.355923419 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.927677734 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.57633188 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.333529331 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377554669 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.344571837 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34449831 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.31634245 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.339536639 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.341074305 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357469615 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.567791829 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.341179167 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.314941601 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.404978737 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.557629526 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.341037698 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.350599652 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546555892 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.349840631 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.357097663 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.093754405 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378976054 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.353656761 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347894441 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.339662347 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.385752744 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415993454 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.531507812 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.591859368 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.592486591 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.712741183 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360708097 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.351372414 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.358285483 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430285125 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348271515 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.35925274 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.342566387 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.931160976 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.094319428 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.942232741 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.593674484 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.351004026 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354177901 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344258858 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.584654598 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.34302748 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.618793859 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344957297 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.335357539 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373117142 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344892293 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34964663 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.561017099 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.618140694 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.344009108 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35082192 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348963926 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.345868447 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.593782518 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.563913853 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.804931408 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.858162544 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346611305 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.346987571 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.031003319 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.622667538 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345695775 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.347517596 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34648196 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.34723763 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.373917823 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.358467971 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345708552 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.591762086 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.587502055 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972828574 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.59203585 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.536891127 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.268949571 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347131632 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.599294146 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.177896269 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.534788102 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.947935596 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.039225495 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.604972133 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420885856 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.535505649 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.352798393 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.585376836 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.355976831 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.346696813 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.349532478 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348453275 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.34764379 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.588339783 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.947125072 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.607577444 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.353455524 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.355230133 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377281998 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.535869876 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.57598595 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.052096246 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.567652311 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.594305975 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.36097814 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.34799357 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.947866204 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.598825513 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356056251 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.353379004 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.548933517 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.354200689 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.383910107 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.220880562 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.349260673 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.860520886 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.561724544 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371596297 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356004029 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.042334564 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.952087231 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.357644 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.823717529 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.357265201 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355907956 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.63043756 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.35748848 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.350270939 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635638287 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.356321627 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.352681556 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.545700156 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.943169718 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.071442583 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.361302346 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373836938 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.358783863 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35187264 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406138925 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356235451 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.351610939 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.718904807 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.358445821 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352737703 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.365473561 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.351629426 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366596479 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.355766934 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352796611 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.360077105 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.332681247 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.33378914 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.370039572 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.475507626 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.865589596 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355351976 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.968281591 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.69226151 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.599570371 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.35272178 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.328112299 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.358917266 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354322806 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35246049 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353229204 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.345971697 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.8727901 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.364188907 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.601712019 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.366270237 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.565517173 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.564509159 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.353460087 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.54918829 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371990809 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.378336681 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.322942209 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354781912 seconds)
  done (took 962.494658871 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.380121342 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.35015669 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.37393241 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.402598247 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.344835068 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.349093707 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.349605609 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.402734968 seconds)
  done (took 20.184955018 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.34628711 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.357821066 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.344554128 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.359346653 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.350728838 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.867716192 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.349608293 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.357772154 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.367842741 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.350348763 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.354180374 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.993890447 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.360920365 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.358751739 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.365058569 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.362117984 seconds)
  done (took 32.079006129 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.975198108 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.654525012 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.745710077 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.414440268 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.359002044 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.357034569 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.443857098 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.358722129 seconds)
  done (took 25.542742386 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.362480253 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.360511854 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.358649846 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.361196312 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.363321086 seconds)
  done (took 8.036656174 seconds)
done (took 1223.146211187 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.36171954 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.361571932 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.361916857 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.362179242 seconds)
  done (took 6.679568621 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.327643467 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.326172129 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.327647195 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.347270138 seconds)
  done (took 9.561850034 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.002418994 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.842741649 seconds)
  done (took 5.078162024 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.874538336 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.8759726 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.872931642 seconds)
  done (took 6.857994538 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.645786952 seconds)
  done (took 2.880695294 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.322568663 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.354018496 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.062771722 seconds)
  done (took 7.975446848 seconds)
done (took 40.26690936 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.361656285 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.114252671 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.503926515 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.352055967 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.507890928 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.505039762 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.59802506 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.34795912 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.357775117 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.356131958 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.357754326 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.507752217 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.586621997 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.112278435 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.588018696 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.111479468 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.508352371 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.356965338 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.352690995 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.372808159 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.600751064 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.349441058 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.348655152 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.360601238 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.514428871 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.493422436 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.350565921 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.111009095 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.357180436 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.358745846 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.498945482 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.353484467 seconds)
  done (took 81.791580832 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.349619342 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.349834513 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.355911387 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.361842923 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.350582235 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.360637231 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.352949232 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.351579092 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.349030965 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.368495496 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.360569308 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.351571968 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.34985768 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.364027888 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.352903866 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.361423846 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.349912524 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.355645212 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.358128605 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.350776505 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.352420641 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.352215826 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.35288988 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.359855286 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.357163158 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.364557036 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.350976453 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.350618105 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.350988104 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.367253324 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.366651491 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.351807422 seconds)
  done (took 76.620470488 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.357174643 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.361150016 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.353562195 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.365351609 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.351362423 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.352162411 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.355322419 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.352855522 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.353143942 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.352483586 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.35199247 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.352262411 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.354340451 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.367693712 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.36686671 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.380712048 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.352580329 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.362460995 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.360717011 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.352769572 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.352541725 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.353501053 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.378089387 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.352714148 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.371268649 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.355458367 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.353357827 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.352258703 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.353571734 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.362224172 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.358173043 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.359726206 seconds)
  done (took 76.699426576 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.595520208 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.370399204 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.371891859 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.364884501 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.371758898 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.369016046 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.364570743 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.603382797 seconds)
  done (took 14.650903736 seconds)
done (took 250.997157172 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.364757358 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.825909076 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.397662041 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.364094528 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.403994921 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.391347916 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.575856314 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.396727615 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.577167108 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.384456731 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.384607428 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.365030785 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.121008515 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.51670435 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.163909447 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.271667545 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.192800357 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.362443158 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.894186938 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.642065801 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.396092985 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.368667921 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.151732153 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.205325503 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.335164496 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.439354135 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.459844084 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.591691022 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.526511896 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.442690805 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.840748582 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.366877825 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.378600507 seconds)
  done (took 63.341371733 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.363655743 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.372181506 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.371845717 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.373189224 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.372275823 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.372289816 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.363506223 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.371719959 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.373945094 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.37181768 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.373991432 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.374070289 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.374050293 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.374302722 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.373294261 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.346902735 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.362334125 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.372346092 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.363924593 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.34760698 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.373993341 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.374484057 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.375210668 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.373989796 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.372217824 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.37431902 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.37449056 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.376341696 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.373899933 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.375886445 seconds)
  done (took 42.35791041 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.37462931 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.892001441 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.077376658 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.378248306 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.367112212 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.370645007 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.633097955 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.382136914 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.368992515 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.370867232 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.817136544 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.382914068 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.398679604 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.071483573 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.374649925 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.376819308 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.37600916 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.367829542 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.909185761 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.378206999 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.632955585 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.377580852 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.635467214 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.378848805 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.371617013 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.368331881 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.373398681 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.158127479 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.387423344 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.816705474 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.063288941 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.632786451 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.08759358 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.117464775 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.063964907 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.383143406 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.378577774 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.82436669 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.3757699 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.369797763 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.632443761 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.372779228 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.077032237 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.051058277 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.389888252 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.377970269 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.18984451 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.820575992 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.596619322 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.376306682 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.109019465 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.375927942 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.379085216 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.371791529 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.592926384 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.371896313 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.369950308 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.179097123 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.375936273 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.63411014 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.379502476 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.370857361 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.903386581 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.375418189 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.897964458 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.37395125 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.379780809 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.372281897 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.08110788 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.374257513 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.063806771 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.392051475 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.379982054 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.821306679 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.90078183 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.2361323 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.373133026 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.910240396 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.118909176 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.649335882 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.375189068 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.139025667 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.652638903 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.374422867 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.3835393 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.383595716 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.382687256 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.456429118 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.633965525 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.978811187 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.065387735 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.192151809 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.636596525 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.379333043 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.372810744 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.1840778 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.381242991 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.381876564 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.086561322 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.071503103 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.392796807 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.379856251 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.058143992 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.39411446 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.63958346 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.378929856 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.122118645 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.374799831 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.457018712 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.383063791 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.378980399 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.377370357 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.638732217 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.376784003 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.383424726 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.068945959 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.856009798 seconds)
  done (took 190.884060109 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.369339032 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.36862331 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.367687512 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.36896741 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.36791863 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.376362921 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.36720282 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.369704188 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.374120946 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.366752325 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.36778945 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.376734186 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.375554491 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.369866236 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.368112332 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.369297587 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.366925512 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.37597551 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.369691917 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.369204609 seconds)
  done (took 44.657620693 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.384908666 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.893249644 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.867028112 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.385907219 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.384531035 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.376048072 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.428331685 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.389983551 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.385922336 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.6520856 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.533058014 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.391963994 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.385490554 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.386776701 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.867330075 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.358484112 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.653025381 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.892649538 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.385628605 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.894149832 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.357932438 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.385349092 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.375727152 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.893783923 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.661612417 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.641370913 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.431525536 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.897687092 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.385789072 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.386987147 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.89376003 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.3867448 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.37743822 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.881771465 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.387710569 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.400550324 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.386993733 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.430988588 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.436139481 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.659792374 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.901517012 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.65107983 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.397988526 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.531982817 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.395297177 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.359597477 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.9068333 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.388824826 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.361643407 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.387838103 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.393094923 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.88209677 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.380451762 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.881875342 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.388465774 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.388144957 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.898442945 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.882246773 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.873285953 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.535534008 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.38461862 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.64328548 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.389303951 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.909443442 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.390055726 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.388939475 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.389037994 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.538531745 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.904945195 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.645355126 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.658353319 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.657298634 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.389190272 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.444806288 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.394872437 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.658400933 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.442351817 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.751287419 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.663617918 seconds)
  done (took 124.240686877 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.647835863 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.493541438 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.741643599 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.930152529 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.85938945 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.520140312 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.49462169 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.615563914 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.390913601 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.489360674 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.98639798 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.46931227 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.114744761 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.446501076 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.492386809 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.510782902 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.760290957 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.306106224 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.995891366 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.982300999 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.3859961 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.476797238 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.903616656 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.571372449 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.389590545 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.928618081 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.263334516 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.876634816 seconds)
  done (took 52.302021705 seconds)
done (took 519.023669536 seconds)
SAVING RESULT...
DONE!
