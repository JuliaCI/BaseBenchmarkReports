cset: moving following pidspec: 10974
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.177584608 seconds)
loading group "string"... done (took 0.458703616 seconds)
loading group "linalg"... done (took 10.39445091 seconds)
loading group "parallel"... done (took 0.223404486 seconds)
loading group "find"... done (took 1.896619463 seconds)
loading group "tuple"... done (took 2.001927103 seconds)
loading group "dates"... done (took 1.348105727 seconds)
loading group "micro"... done (took 0.457161893 seconds)
loading group "io"... done (took 0.439060192 seconds)
loading group "scalar"... done (took 46.31791938 seconds)
loading group "sparse"... done (took 13.716399039 seconds)
loading group "broadcast"... done (took 1.162720948 seconds)
loading group "union"... done (took 10.67443717 seconds)
loading group "simd"... done (took 4.220102357 seconds)
loading group "random"... done (took 8.428879826 seconds)
loading group "problem"... done (took 2.220472123 seconds)
loading group "array"... done (took 24.264603806 seconds)
loading group "misc"... done (took 0.894988285 seconds)
loading group "sort"... done (took 3.348163755 seconds)
loading group "collection"... done (took 14.808882074 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.600675674 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.111233477 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.177562987 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.120280696 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.243451982 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.137603123 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.137545582 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.099840755 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.767549245 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.183508733 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.123538356 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.362448387 seconds)
done (took 5.947199943 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.334166738 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.082052558 seconds)
    (2/2) benchmarking "String"...
    done (took 0.146642928 seconds)
  done (took 1.087969603 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.088430674 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081829351 seconds)
  done (took 1.024423001 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.085073905 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.332429635 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.082713047 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.474102972 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.140208048 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.086245872 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.082897243 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.081569878 seconds)
  done (took 2.132980778 seconds)
done (took 5.519145827 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.377760534 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.873154247 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.577661463 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.14170781 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.282019157 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.234339689 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.207432499 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.219793761 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.088725781 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.087290039 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.172049841 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.448252631 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.295816556 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.783019839 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.098376063 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.099787085 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.137359275 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.83571054 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.084384921 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.13479238 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.368843238 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.117276624 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.107312457 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.149196083 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.191312915 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.111042833 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.166543031 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.084458133 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.740347719 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.1259158 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.209148758 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.087687282 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.164733049 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.128234706 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.180939505 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.120597486 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.736183684 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.191988542 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.146167395 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.087182561 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.738340738 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.10825115 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.170777684 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.097550375 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.086949787 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.17490719 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.118667572 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.084021893 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.106846525 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.083968282 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.172850663 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.499753564 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.110427617 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.186546937 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.100897747 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.747848469 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.106611009 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.260360377 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.132370464 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.113826508 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.083759957 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.087890921 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.156871807 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.089213888 seconds)
  done (took 19.898421244 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.145088872 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.136026803 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.086151137 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.134968224 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098120812 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.084123717 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083770262 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.089944917 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093026391 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.14566639 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089656276 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.151673403 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.083310995 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.086090279 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.148667057 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.206287563 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.091726554 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.096563384 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088121153 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.108809664 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.113729811 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.089944273 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.085121272 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.084630278 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.144605369 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.214264892 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.115634312 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.116942459 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.083523649 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.100604663 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.134476439 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.133033801 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.084023569 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082240662 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.122519423 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.12980794 seconds)
  done (took 4.963922633 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.188063263 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.102122756 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.166122983 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.139877738 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.1131055 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.152498765 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.1393251 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.250281975 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.700375025 seconds)
    (10/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 0.164339807 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.170735989 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.132578828 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.098576434 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101893067 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.086937707 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.084490961 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.560426156 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.142398761 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.115657446 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.171407937 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.086651819 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.088384408 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.7454502 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.089390444 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.084604061 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085160466 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.087014547 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.166732335 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088013126 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.584909822 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.085621878 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.0856711 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.146947428 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.202222372 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088205539 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122005937 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100319131 seconds)
    (38/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.177622301 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.082619199 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.084782125 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085433626 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.085459833 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.093981092 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136996657 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.126229739 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.084339598 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.089635593 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.190622733 seconds)
    (49/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.085847572 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.083602726 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.091571486 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.808880872 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.173168795 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.149917989 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.083775044 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.163252853 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.104238596 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083977763 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.082937958 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.141213844 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.09705263 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.08390317 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.085177879 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086005153 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.085129153 seconds)
    (66/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.086751919 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084667237 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.293549629 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.086278692 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.102896171 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084879238 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087270532 seconds)
    (73/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 0.716921022 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088538738 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088338672 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.103995442 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.085625767 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.08431495 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.082716655 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.085256779 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.085962105 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.086120645 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.120212618 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.089954948 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.087000578 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.148589674 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.084703498 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.105853131 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112001855 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.09858511 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.083185854 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11743682 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087431101 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.084480304 seconds)
    (95/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.156044686 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081749863 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.120944349 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.088166617 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.147943346 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.085982159 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.170525007 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.085982939 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.108313426 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.088967475 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131497617 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.086140807 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085457232 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089448308 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.087766773 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.083603971 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.148569884 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.087188042 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.087282272 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.088486655 seconds)
  done (took 22.112156449 seconds)
done (took 47.833347096 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.348929925 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.085325446 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.085189315 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.08545276 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.088066633 seconds)
  done (took 1.617778772 seconds)
done (took 2.518757473 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.179445392 seconds)
    (2/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103672736 seconds)
    (3/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.099447163 seconds)
    (4/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "10-90")...
    done (took 0.100986962 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.108550334 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.104352377 seconds)
    (7/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083272142 seconds)
    (8/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.100477369 seconds)
    (9/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.122903462 seconds)
    (10/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.097822816 seconds)
    (11/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.104221185 seconds)
    (12/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "50-50")...
    done (took 0.085297693 seconds)
    (13/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099902236 seconds)
    (14/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.102498283 seconds)
    (15/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.100587987 seconds)
    (16/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.087162695 seconds)
    (17/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.101062363 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.10087815 seconds)
    (19/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.11777983 seconds)
    (20/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "90-10")...
    done (took 0.084790833 seconds)
    (21/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084856018 seconds)
    (22/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.104169222 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084224776 seconds)
  done (took 3.289276626 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095597138 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.101281971 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093901013 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.096979822 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083146513 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.095508423 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.095841884 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102784437 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097710407 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.0899669 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084551716 seconds)
  done (took 1.948329241 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096249231 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.09973812 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086676887 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.099105718 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084531506 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.09679591 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.095757056 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100897711 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097917434 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.09071743 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083823896 seconds)
  done (took 1.943534114 seconds)
done (took 8.091264764 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.447538195 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.694228054 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.153116241 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.207444453 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.24555523 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.182402066 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.283418235 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.167218735 seconds)
  done (took 4.402607901 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.123539275 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.14895987 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.091298495 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.087095397 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.088021583 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.090888661 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.08747939 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.087274887 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.086324769 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.091645281 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.090204862 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.108336448 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.090858407 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.088114481 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.091886113 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.088803658 seconds)
  done (took 2.500496951 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.129511248 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.110889313 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.08814927 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.088554069 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.090125899 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.090979581 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.093209894 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089458191 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.087870013 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.089780531 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092852054 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.108898903 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.090670359 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.088229153 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.09146225 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.111040255 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.089112683 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.090675761 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.108350071 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091892528 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.090516178 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.088494868 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088730682 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.089394625 seconds)
  done (took 3.275629391 seconds)
done (took 11.092351456 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.103014607 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.086758514 seconds)
  done (took 1.104685605 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.161627805 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.156037004 seconds)
  done (took 1.237383818 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.090331981 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.083886747 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.08878228 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.08596069 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.084647004 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.083530307 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.087111867 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.085325547 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.085453448 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.085263066 seconds)
  done (took 1.785314901 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.087263315 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.086311114 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.086872857 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.15056877 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.08575364 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.083292131 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.084869974 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.084477713 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.085614241 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.08455654 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.085715384 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.112711257 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.08587868 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.093205537 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.086945097 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.08607372 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.086327697 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.086320278 seconds)
  done (took 2.568164764 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.085906574 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.085919126 seconds)
  done (took 1.100038189 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.085853776 seconds)
    (2/7) benchmarking "second"...
    done (took 0.085085474 seconds)
    (3/7) benchmarking "month"...
    done (took 0.087465568 seconds)
    (4/7) benchmarking "year"...
    done (took 0.08462809 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.084095933 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.084011801 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.085332548 seconds)
  done (took 1.523235359 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.450299998 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.206204554 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.29295148 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.102969008 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.085541061 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.292506157 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.08440045 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.08530034 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.090500852 seconds)
  done (took 2.650797441 seconds)
done (took 12.897720697 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.095039766 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.164480299 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.492082374 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.105399764 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.085587039 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.152407863 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.201816154 seconds)
done (took 2.233064863 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.256257285 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.144239839 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.112066335 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.086793891 seconds)
  done (took 1.520235739 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.088744369 seconds)
    (2/2) benchmarking "read"...
    done (took 0.09369465 seconds)
  done (took 1.115342598 seconds)
done (took 3.570954482 seconds)
(10/20) benchmarking "scalar"...
  (1/24) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086383318 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.110473545 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.085176178 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.085224713 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.085097397 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.084810864 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.085953319 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.085189871 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.08679692 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.08513407 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.087362052 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.084911204 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08520065 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10548215 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085957987 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.086309492 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085907333 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.085937203 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08545636 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.085252018 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085931814 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08744327 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.08549957 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.085317953 seconds)
  done (took 3.074933622 seconds)
  (2/24) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086261027 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.086219523 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.08541807 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.084807913 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.085441126 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.084793778 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.084863339 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.084865878 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.08723316 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.084592127 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085535831 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084901483 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.084474461 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.085293059 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103168263 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.086215334 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086294557 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08598668 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085070959 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.087527396 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.084966525 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086349372 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.084934074 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084828516 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.085695326 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085432371 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.08472625 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.085634778 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.085002761 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.104633226 seconds)
  done (took 3.544218757 seconds)
  (3/24) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.093668802 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.084063606 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.086030142 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.088716371 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.085768028 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.085566572 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.082804794 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.085471045 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.086241452 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.085100583 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.08624399 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.088304109 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.086394355 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.086887116 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.105650594 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.088427634 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.088383955 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.087179182 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.086096576 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.088025203 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.087308562 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.086727447 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.08851248 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.086464775 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.08608387 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.082826638 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.086000285 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.0848751 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.105245383 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.086730333 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.087467747 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.087507418 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.086316963 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.091425208 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.08653274 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.08611276 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.087173107 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.083609004 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.086522506 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.083317088 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.082893258 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.085976692 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.085854588 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.106070909 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.089319062 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.086773708 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.086817305 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.087148165 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.086251175 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.088113391 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.08605256 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.085913029 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.086579347 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.08679523 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.08679433 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.085514511 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.085621977 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.102605696 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.086921699 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.085999269 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.086781459 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.083524092 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.08686075 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.086052206 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.089532972 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.087850744 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.089610729 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.086355815 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.086429472 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.086665017 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.086925869 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.089795121 seconds)
  done (took 7.255037787 seconds)
  (4/24) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.086288634 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086252301 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.085575087 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.085187091 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084250565 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.086966198 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.084306469 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083723789 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084410112 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08452598 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083979278 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.085042111 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0855205 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.085759295 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106067222 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086691561 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.088698362 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085952209 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.08555533 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085936867 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.085440439 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.086407493 seconds)
  done (took 2.854714642 seconds)
  (5/24) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088384002 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090148261 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.087076968 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.088916614 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090414924 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09064729 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.086784783 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088516483 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086385612 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086966187 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08690244 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086505265 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.088609449 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088236998 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106221204 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089202596 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088661548 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08843289 seconds)
  done (took 2.557056941 seconds)
  (6/24) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.087624343 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.087484132 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087070078 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.086365765 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.086228491 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086816331 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086251872 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.085679267 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086716216 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.089035595 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.085841439 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086461861 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.08612638 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08613558 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104795669 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.087019717 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.08710026 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086757732 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086463512 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086291306 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086911276 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089866038 seconds)
  done (took 2.882031092 seconds)
  (7/24) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088675651 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.087308337 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.087495716 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08791192 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.08700502 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.086802442 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.087141726 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.086991701 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.09122812 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.086930643 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089288198 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087064003 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.090468347 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.087365389 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.10614368 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087355008 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.087044786 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087110327 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087291294 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.087200103 seconds)
  done (took 2.729675347 seconds)
  (8/24) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.14799938 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.089878099 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.087162898 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087606066 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.087334905 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.088944732 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.089428749 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.089117474 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.089498543 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088924711 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.089307535 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.089816372 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111647748 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.089734543 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.089477649 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090145545 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.089453037 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.090033599 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.089640073 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.089946512 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.090091803 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08945479 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.089059133 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091592997 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.088565624 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.088995355 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109932703 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089568883 seconds)
  done (took 3.560049837 seconds)
  (9/24) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087775916 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.08737345 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.087821264 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.087483195 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.087212135 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.087077434 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.090133756 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.087401172 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.086817579 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.087025799 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.086850148 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.086398067 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.087387714 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.087243641 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.106081395 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.087519172 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087516886 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.089802393 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0876219 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087440831 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.088009221 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086886894 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.087302255 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.087525482 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087047207 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.088876443 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08772277 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087140037 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.089219858 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.106910356 seconds)
  done (took 3.627464141 seconds)
  (10/24) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.09249418 seconds)
    (2/2) benchmarking "in"...
    done (took 0.091056321 seconds)
  done (took 1.144263 seconds)
  (11/24) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.089417461 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088604399 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.087550398 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.088284814 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087670305 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.087688587 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.087716997 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090267848 seconds)
  done (took 1.668131901 seconds)
  (12/24) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.150881556 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.166988084 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.089364188 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.094683817 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.177407666 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.162641112 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.121073337 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.087885427 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.090556081 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.087788228 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.146694834 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.086967117 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090716874 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091767054 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.092514613 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116634906 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.087713151 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.095102101 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.090706715 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.089688801 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.091244695 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097292475 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.094304404 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.093021838 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.091120655 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.107041813 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.094733032 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.092618253 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09217811 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.114806782 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.092471844 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.091454457 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.09295633 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.089047194 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.089005762 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.165869956 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097376453 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092552766 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.102216374 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08905141 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092736601 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.110796788 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.093880088 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.095826835 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094430373 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.090008457 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.089765585 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.088637514 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.091105082 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.091646562 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.08837826 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091895798 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.087731764 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094640241 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.097760925 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117976024 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.090076859 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.092860049 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.091314507 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.095232511 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.09298881 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.093374253 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095120415 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.089407832 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09475143 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.095699904 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093260299 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.088232999 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.090504901 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.109332388 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.098512415 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.118842397 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.095399237 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.090257727 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089825768 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.088250116 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095824206 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.09028642 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091935861 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.090926422 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.090190782 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092604885 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.114605068 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093091548 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.093803585 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.092779374 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.089608435 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.093212822 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.090297771 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098454856 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.089892803 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.089250407 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.089869919 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.093869566 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.092206092 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.091807359 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.089994895 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.11389463 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.092657575 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.090494331 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090203154 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.093608292 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.095703115 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091762992 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091522283 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.094282823 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.159607532 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.093128453 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.098629095 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.114611538 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091415143 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.094289485 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.094398321 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.088646341 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093721174 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.089476919 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.090105992 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.092980485 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.089925957 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.089952298 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095075222 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.09676664 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.091024384 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.109257696 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.094331498 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.090733788 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091081799 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.09133995 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.090567271 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.089190785 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.089135405 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.095441202 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.092725134 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.093954054 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091626698 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093281556 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.08909993 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.110299705 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.091372899 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.095835552 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.093701449 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.094356923 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.096513143 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.094939998 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.091914317 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.093496139 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.093259934 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.092152792 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.092939448 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.090229674 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.088823844 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.091064814 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.114324598 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.091874642 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.095380413 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091466321 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.093765185 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.090813392 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.091397147 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.091769263 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091164948 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.090318373 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090125932 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.090387433 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.094073223 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.092334235 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.110548545 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.090414332 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.092235394 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.091308432 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.091506096 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.091438723 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.094708459 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.090265231 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.089199647 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.090139007 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.096611103 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098470988 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.095698854 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09045473 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.113699702 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.095927803 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.091190722 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.095914706 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.090250909 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091669061 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.090914382 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.096598831 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.093303332 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09159666 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.093162461 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.091448028 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09545418 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094682413 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.112279637 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.089768681 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.091231443 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.092375737 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.099234658 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.092211553 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.091262972 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.091118663 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093631177 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091081215 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.093446755 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.090701666 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.091381533 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.091106102 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.113996061 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.095393559 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.091953492 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095556197 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094987686 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.090240757 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.092167961 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.090705913 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.094453639 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.09017369 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.091458706 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.09295044 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.094585795 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.091918526 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.098669632 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.111301762 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.097226591 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.097252456 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.094346696 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.092345545 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.090106987 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093070573 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.094505702 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096883704 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.092186974 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.094456238 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095166729 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.091455553 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.092033766 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.116012132 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.092115593 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.090658605 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.093091699 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.090974578 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.097160721 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.091595228 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.091196433 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093901386 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.092884681 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.096142464 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.089198295 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.094209991 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.091172557 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.110701386 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.090905136 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.096264338 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.096282086 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.091019058 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092927986 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.091862088 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.092102977 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094880296 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.091358371 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.091596891 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.091644922 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093998344 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.094162708 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.095442856 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.112308416 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.091661776 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.091811919 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.09113019 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.094588256 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.091794839 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.09384725 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.0935297 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.091417545 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.093864297 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.094462198 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.09141737 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09049773 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.09089005 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.113072706 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094884706 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095349874 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.093632491 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.09437516 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.0901892 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098420217 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.091427474 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096986026 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.093398889 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.090026226 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.09383632 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.096050926 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.093192358 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.111954466 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.092611251 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.093977917 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.09430559 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.0945714 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093541694 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.092104379 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.095817628 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094586014 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095387354 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.094137054 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.094677667 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.093629808 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.091945228 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.093505255 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.112627415 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.096228665 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.091936971 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.095354592 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.094845746 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.094282132 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.096393252 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.09268881 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.095314524 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.093248057 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.093128369 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.092590017 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.092856818 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.091725829 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11491028 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.092601088 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.096976313 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.092101556 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092886345 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.092577004 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.090277797 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.093624374 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.094655249 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.091780136 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093746423 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.091632072 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.094180858 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.092745277 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.111518515 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.092222686 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.091151451 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.092422649 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.097214656 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.095034668 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.096247434 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.09218583 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.092855051 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.09146709 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.09179113 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.091883274 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.094168886 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.090340103 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115715284 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.096335104 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.095629411 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.092800862 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.097224963 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.092406004 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09499417 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.093432114 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.091899869 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.092489355 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.090920113 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.091663977 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.092822957 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.097888099 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.114544699 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.093406645 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.095800064 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.093168453 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.092829519 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.093879293 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.093908129 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.093858876 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097214991 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.093963692 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.096509426 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.093738914 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.090941165 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.093812682 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.092905585 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.114020427 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.094221409 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.09683216 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096859929 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.092631736 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.095992217 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.095594624 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096466797 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.09346536 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.091250514 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.091884783 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.093139813 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.092271462 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.093189959 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.114515887 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09971134 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.091518337 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.094512341 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091877141 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.092332542 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.09775938 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.093197379 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.093091803 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.093693972 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.096487842 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.095502712 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.09656337 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.094534747 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.119231332 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.093803154 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.095503167 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094692723 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.093342801 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.098364407 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.096005386 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.093184339 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.095472324 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.093621404 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.093571784 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.095331892 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.093382749 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.098335139 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.092421591 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.114918211 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.094451668 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.0923751 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.093247264 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.094176957 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094553148 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.095807298 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.098338156 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.091694114 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.092048551 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.092872364 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.093337715 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.09450744 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.097216615 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.116535567 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.096954679 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.093319762 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.094253187 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.099290847 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095127349 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.096695528 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.09401191 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.0974078 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.094635851 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.095584698 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.092441206 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.096182105 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.094945041 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.118742899 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.099527364 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.093908272 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095756701 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.096774725 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.093406779 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.09534627 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.096837587 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.095351391 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.092209339 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.094374604 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.092818591 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098261135 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.094411184 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.094604944 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118040178 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.097244379 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.095959356 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.094553225 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.093979848 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.095576835 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.091448132 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.096765243 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.096172905 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.093821615 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.092003594 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.093415281 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.093597443 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.095468324 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.114865246 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.092943762 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096485901 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.097190749 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.093361547 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.096876943 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.093552892 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.092642085 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.092058989 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.09383749 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.09360298 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.096358224 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.094860446 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.095138939 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.115997598 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.093905383 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.098605465 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.097442015 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.096165773 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.092232037 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.092635742 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.092818577 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.093976269 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.094661507 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.093133096 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.093452046 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096906835 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.09583425 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.092956017 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.115455536 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.093357116 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.096860834 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095700834 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.093314065 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097421405 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.097748605 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09958054 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.094115771 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.09514891 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.094386768 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.093989287 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.09731325 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.094395518 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.113433069 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094904514 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095083089 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.091824633 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.092855284 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.095745907 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.097526576 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.095293713 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093865278 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.09441405 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.096463736 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.098106825 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.094187607 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098829929 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112850132 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.090376776 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.091237895 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.090860845 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.096960778 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.089991119 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.090058615 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.090992579 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.090519386 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.090129259 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.092426782 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.090333149 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.091405227 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.093747528 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.094167307 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.111106487 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.092390165 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.090966823 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.089952768 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.092703213 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.095454108 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.093425983 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.093966311 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.093727119 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.097184378 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096001193 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.096904544 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.095113561 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.094873875 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.114569028 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.096192963 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.09601781 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095403994 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.091706817 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.094923601 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.094767337 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.097641523 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.097157281 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.09464105 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.096718095 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.095911471 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.097117784 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.09351008 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.098175841 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.117470535 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.099524641 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.095791983 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.095245614 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.097934146 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098623201 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.095533115 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.094597843 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.097411783 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.098599784 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.093628186 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.096905117 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.093109987 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.097322149 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.113973648 seconds)
  done (took 58.130992826 seconds)
  (13/24) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106938473 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090268708 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.092678105 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092936212 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093336877 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.093224004 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09327501 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093304123 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.092808785 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.092847578 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.093494089 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096190603 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.09308233 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.093527743 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114835761 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.093915193 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.093702287 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093107654 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.094646205 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.093447761 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.092775058 seconds)
  done (took 3.021313005 seconds)
  (14/24) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.090416507 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.093339632 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08970453 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.089277993 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089405969 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.089524297 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.089803821 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089077409 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.090738872 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092604174 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.093226767 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092486429 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.095098774 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.093080521 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113987308 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092696112 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.094028809 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094655314 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.093323742 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.093597286 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09342874 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.092876 seconds)
  done (took 3.074905433 seconds)
  (15/24) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.092181442 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.09418697 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.091617834 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.089615655 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.093511572 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.092646087 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.094873787 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.092821693 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.09615593 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.095775922 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.095611155 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.095307576 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.097167489 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.09383809 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.116355616 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.093608245 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.09652719 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.094144939 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.092148779 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.090575771 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.091744191 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.089359533 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.094171967 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.09841766 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.094765491 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.095763625 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.093769723 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.095020667 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.116586255 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.095005935 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.093176156 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.094148089 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.094749769 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.095951364 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.098455875 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.095147841 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.094467726 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.09370313 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.093698783 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.095783503 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.094286923 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.096212584 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.09588184 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.113237816 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.090351836 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.095623098 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.092081795 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.089578116 seconds)
  done (took 5.612099617 seconds)
  (16/24) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.09066886 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.115478091 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.090298004 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.115335284 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.090114913 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.091492918 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.091190526 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.117236876 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.096419445 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.093782691 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.094046084 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.094170837 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.116451739 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.090921618 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.090690956 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.090290494 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.09054776 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.090123585 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.090026715 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.094293301 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.094112292 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.094134231 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.093869506 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.094377911 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.093252429 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.093962509 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.094133846 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.116920985 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.091051715 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.090297919 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.092636521 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090333267 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.090785986 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.091245203 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.090577464 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.090738575 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.090041291 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.089929989 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09018787 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.090045345 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.089921734 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093368155 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.113420351 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.120128009 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.091217199 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.091302433 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.090689033 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.090793704 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.09110909 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.090915108 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.091667201 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.093836589 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.096651517 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.094519379 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.094945462 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.093755458 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.115449515 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.091407555 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.09183993 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.091562644 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.091649039 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091666149 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.090470355 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.09185368 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.093576017 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.090457605 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.090633711 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090340063 seconds)
  done (took 7.586068506 seconds)
  (17/24) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091611748 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090422762 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.090632227 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.090212156 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089998636 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090419027 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.090208042 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.092401544 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.0897466 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.090528245 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090153791 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093895614 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094109681 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093153307 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.115988598 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093646739 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094104467 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095345485 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096781486 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095686366 seconds)
  done (took 2.910956508 seconds)
  (18/24) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.091774034 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091561569 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.092777256 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093715609 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.093788346 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.095785033 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.09552829 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09574045 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09590872 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098031214 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095267757 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.094820536 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095219138 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.094949339 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116385938 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.093064292 seconds)
  done (took 2.578544256 seconds)
  (19/24) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.093136605 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.091932628 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.173501059 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.091562719 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.092690035 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.09476903 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.095915317 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.09494772 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.096445437 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.102650126 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.094946926 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.114110082 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.107086398 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.0960564 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.094886314 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.096965264 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.095519855 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.095857767 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.094236145 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.177313839 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.094211859 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.090938332 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.115301919 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.094323266 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.090888239 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090873075 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.093703922 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.090979654 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.094497703 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.091257489 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.091079812 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.090825949 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.091119514 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.091864298 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.09165924 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.090697528 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.091887144 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.120113608 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.091195745 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.091027973 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.090729594 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.091711497 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.09085544 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.090413312 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.091474337 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.090428412 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.091148077 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.090754003 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.093588812 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.090790481 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.094489804 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.116480302 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.091714625 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.091753307 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.092321648 seconds)
  done (took 6.427461241 seconds)
  (20/24) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092511867 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.091948853 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.091642214 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.091608509 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.093938874 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.092072882 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.091419254 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.095656609 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091605645 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.091557541 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091848575 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.096400097 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093048917 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.092498881 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113948882 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095064039 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.091650545 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.09147765 seconds)
  done (took 2.740993855 seconds)
  (21/24) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091625186 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.091780713 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09149935 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.091885423 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.092661709 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093967091 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091475844 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.090935816 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094957133 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.093135266 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091140757 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.090828762 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091281861 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.091354427 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.111732858 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092105404 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.093212878 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095076352 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.095294005 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095234588 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.090995638 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09091436 seconds)
  done (took 3.105219993 seconds)
  (22/24) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.103853957 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.160937422 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.103894825 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.16733645 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.094101677 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.094303064 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.101307725 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.09390661 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.132480705 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.094499607 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.094856149 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.094297564 seconds)
  done (took 2.390954868 seconds)
  (23/24) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093865354 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092244715 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.092332073 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091640486 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091415516 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092179763 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091801124 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095177673 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091355702 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09155701 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091663194 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091298081 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091318952 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092351092 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113855806 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093194693 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092527282 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092852657 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093913579 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092795214 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09162139 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091769717 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092848015 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095325076 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092494787 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093943032 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095533651 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095218229 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094487932 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1168295 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092706749 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093615928 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092374461 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092271115 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093797221 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095858413 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097602267 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096827694 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096337597 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096398887 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.098433298 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096308253 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096549774 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116194907 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093583579 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095850943 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096265388 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096702622 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097521114 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096745325 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096314641 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100322593 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097373958 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098069721 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096413262 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097005211 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096621317 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097490788 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119464681 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096232236 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097107311 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097229911 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097265686 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098181194 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095359915 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096790079 seconds)
  done (took 7.398448101 seconds)
  (24/24) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093054901 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.092258542 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092920441 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092644865 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092537786 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09278024 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092626982 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093238405 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098613492 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094135721 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092770999 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092378994 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091827997 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092328018 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114026287 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09325415 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093798691 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092947573 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092626134 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096015104 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093629756 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095591032 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096067764 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097264408 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097681835 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096738187 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097346713 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097533048 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097427719 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119678943 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100461839 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097925452 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097940133 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.097884153 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097794186 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097299544 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097667055 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097729243 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097923869 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096698709 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096474655 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097930957 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096288753 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117541499 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095786489 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097206995 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097547176 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097808988 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097635899 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097547743 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097568637 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097741641 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100611814 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09655067 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09738872 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097506297 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099836613 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098027234 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120061008 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097836825 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098232833 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098154086 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097840378 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101073851 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09744084 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097017795 seconds)
  done (took 7.507033637 seconds)
done (took 148.318958367 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.164935663 seconds)
    (2/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.219543304 seconds)
    (3/16) benchmarking ("ctranspose!", (20000, 20000))...
    done (took 0.285718769 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.183713339 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.153181527 seconds)
    (6/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.133627935 seconds)
    (7/16) benchmarking ("transpose", (600, 600))...
    done (took 0.094447071 seconds)
    (8/16) benchmarking ("ctranspose!", (600, 600))...
    done (took 0.093432164 seconds)
    (9/16) benchmarking ("ctranspose", (600, 400))...
    done (took 0.096390545 seconds)
    (10/16) benchmarking ("ctranspose", (600, 600))...
    done (took 0.112945578 seconds)
    (11/16) benchmarking ("transpose", (600, 400))...
    done (took 0.093401788 seconds)
    (12/16) benchmarking ("ctranspose!", (600, 400))...
    done (took 0.093244857 seconds)
    (13/16) benchmarking ("ctranspose", (20000, 10000))...
    done (took 0.158252493 seconds)
    (14/16) benchmarking ("ctranspose", (20000, 20000))...
    done (took 0.292271659 seconds)
    (15/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.095819213 seconds)
    (16/16) benchmarking ("ctranspose!", (20000, 10000))...
    done (took 0.141851398 seconds)
  done (took 3.468929591 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.185491696 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.273847957 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.13329239 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.10092314 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102914667 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.098034787 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.096091195 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.147343069 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.096847122 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.095126168 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.093230196 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.093358324 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.094402863 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.093578007 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.097194843 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.09290426 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.093512543 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.092561069 seconds)
  done (took 3.157163286 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.111467737 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.135765445 seconds)
  done (took 1.324425881 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.117484935 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.128286913 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.270113896 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.122724852 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.109299486 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.10468995 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.126408434 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.129052415 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.170721857 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.093757004 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.096464707 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.099320008 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.116265917 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.095812549 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.100724202 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.094465463 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.114336862 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.092918212 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.092399342 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.093077481 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.137360943 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.094195063 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.093630418 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.093257897 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.160020369 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.093485602 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.094224702 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.097002051 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.092735951 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.09283678 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.093399859 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092801138 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.092923397 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.117099674 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.096158891 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.094728147 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.095804402 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.093412862 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.095869681 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.093573587 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.092748401 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.093256616 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.096235778 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.094933964 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.094389969 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.095055397 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.094638419 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.116579552 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.094582245 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.098711575 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.093148583 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.093577138 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.093617352 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.095466571 seconds)
  done (took 6.800671066 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.504178623 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.129611109 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094994918 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.55620809 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097045333 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097569539 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.485937625 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11786483 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.200967981 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.522615072 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114922211 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.093762204 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.106967881 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.201928694 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.151938323 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.226905695 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.419474907 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.100407798 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.120032187 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.107537945 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.094066302 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096036394 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.095851642 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.697467139 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.094273866 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.095522531 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.093353367 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.11577565 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.107897356 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.097092404 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094196733 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.109712415 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.213013811 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.103458748 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.093885219 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.095109427 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.094636426 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.103789177 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.178729082 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.106728763 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.171804825 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093605895 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.118023667 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.094814068 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.09734591 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.0937582 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.095629499 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.110781814 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.106538795 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093398708 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.096351402 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.09414811 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.094454282 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.096282245 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.095410081 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.229175951 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.252894592 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.095783637 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096128139 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.096747883 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.17760485 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.102640387 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.107612038 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.110260883 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.106418965 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.095074096 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.046905078 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.105752594 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.095000225 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.093743945 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118127125 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094535063 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.096834905 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.15635802 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.675614133 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.094343985 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.094705084 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09699152 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.169637895 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.096459717 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095031311 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.10537381 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.097408505 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101428 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119549322 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.094905563 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.109675014 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.191391886 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.095746977 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098159654 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.096899917 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.104072078 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.093948215 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.189933828 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.098787645 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.096919453 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.183710824 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.095118595 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.119656658 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.108116307 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097005107 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.10776537 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.094582183 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097899014 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094101193 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.098304238 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.104084589 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.100700945 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093975821 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.094368853 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.106618334 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.100011507 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.116959127 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.108761435 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.702147299 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.106200456 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.096303334 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104704499 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095089901 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.109364133 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098277527 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.187372042 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095869945 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.104307911 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096714725 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.093971127 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.117852444 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.097730044 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102662139 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.09661774 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.094952036 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098507454 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.201301323 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.103728611 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094260263 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.176331659 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.176489212 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.094353268 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.109879672 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.097742491 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.131166261 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098329284 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.094406865 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094809594 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.046586257 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.098435475 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.095680273 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094333761 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.177969704 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095999283 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103841592 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.095926558 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094448451 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.048647454 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.099089975 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.118875237 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101397261 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094591204 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.095516831 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.09527761 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.09478054 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.100046513 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.107914566 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.094717459 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.093966385 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.095019784 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.10445333 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.094812989 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.097129338 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.118645105 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.097253416 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.097258402 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.097351343 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.101124532 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.109414709 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.096286754 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.097156192 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.869118428 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.095958491 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.096265333 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.108236471 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096034757 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.196233914 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119952748 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.107028958 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.1040016 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.096650604 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.228710193 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.104674473 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.178368354 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.10031021 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108510349 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.094443437 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.09486555 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.0985786 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.095628625 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094834688 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.096929699 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.118139517 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.095033025 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.150442181 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.09656578 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.201785684 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.094312737 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.108978054 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097524523 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094543303 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.197074849 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.095959239 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.099620985 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.095443333 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09477177 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.120422734 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 5.911423554 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.097135506 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.099122126 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098329738 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.097190845 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.105190079 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.094827868 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.094656778 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094031734 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.096778355 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.181491651 seconds)
  done (took 41.233048226 seconds)
done (took 57.055325272 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.165461262 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.141107221 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.187966607 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117441182 seconds)
  done (took 1.789674617 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.183245927 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.11390682 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.176668822 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.094557378 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.201668177 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.095124397 seconds)
  done (took 1.97290982 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.12632159 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.114961163 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.111639437 seconds)
  done (took 1.459510297 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.15704315 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.149806363 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.422746015 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.345300401 seconds)
  done (took 2.27953695 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.211311407 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.097214218 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.09706876 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.177465929 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.181443289 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.135078541 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.098986371 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.106025686 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.101454779 seconds)
  done (took 2.355696325 seconds)
done (took 10.962813449 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/240) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.208336034 seconds)
    (2/240) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.213841464 seconds)
    (3/240) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.428745991 seconds)
    (4/240) benchmarking ("map", abs, Float32, false)...
    done (took 0.176120544 seconds)
    (5/240) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.198256624 seconds)
    (6/240) benchmarking ("map", identity, Float64, true)...
    done (took 0.234589075 seconds)
    (7/240) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.162046586 seconds)
    (8/240) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.2079405 seconds)
    (9/240) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.111557557 seconds)
    (10/240) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.170150148 seconds)
    (11/240) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.109499714 seconds)
    (12/240) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.221518878 seconds)
    (13/240) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.103090267 seconds)
    (14/240) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.260600317 seconds)
    (15/240) benchmarking ("perf_sum", Int8, false)...
    done (took 0.106407772 seconds)
    (16/240) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.240164231 seconds)
    (17/240) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.112920153 seconds)
    (18/240) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.124940124 seconds)
    (19/240) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.101892889 seconds)
    (20/240) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.106516854 seconds)
    (21/240) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.248522398 seconds)
    (22/240) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.239042191 seconds)
    (23/240) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.108556984 seconds)
    (24/240) benchmarking ("map", abs, Int8, true)...
    done (took 0.177787896 seconds)
    (25/240) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.178142421 seconds)
    (26/240) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.201301186 seconds)
    (27/240) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.199014826 seconds)
    (28/240) benchmarking ("perf_sum", Bool, true)...
    done (took 0.105603489 seconds)
    (29/240) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.225342802 seconds)
    (30/240) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.169867727 seconds)
    (31/240) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.205668563 seconds)
    (32/240) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.109321736 seconds)
    (33/240) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.251301642 seconds)
    (34/240) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.215711249 seconds)
    (35/240) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.206070959 seconds)
    (36/240) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.136268324 seconds)
    (37/240) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.097801696 seconds)
    (38/240) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.121489035 seconds)
    (39/240) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.099854152 seconds)
    (40/240) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.104825882 seconds)
    (41/240) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.175726014 seconds)
    (42/240) benchmarking ("perf_countequals", "Int8")...
    done (took 0.104706499 seconds)
    (43/240) benchmarking ("map", identity, Int8, true)...
    done (took 0.154246622 seconds)
    (44/240) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.178054852 seconds)
    (45/240) benchmarking ("perf_sum", Float32, false)...
    done (took 0.10640202 seconds)
    (46/240) benchmarking ("perf_sum", Bool, false)...
    done (took 0.09556794 seconds)
    (47/240) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.104217477 seconds)
    (48/240) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.099360443 seconds)
    (49/240) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.267972227 seconds)
    (50/240) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.155020515 seconds)
    (51/240) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.109430639 seconds)
    (52/240) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.124810266 seconds)
    (53/240) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.110356385 seconds)
    (54/240) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.095589046 seconds)
    (55/240) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.096087705 seconds)
    (56/240) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.108978817 seconds)
    (57/240) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.180211175 seconds)
    (58/240) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.110796517 seconds)
    (59/240) benchmarking ("map", abs, Int8, false)...
    done (took 0.154777606 seconds)
    (60/240) benchmarking ("map", abs, BigInt, true)...
    done (took 0.168194106 seconds)
    (61/240) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.123226633 seconds)
    (62/240) benchmarking ("perf_sum", Int8, true)...
    done (took 0.095623247 seconds)
    (63/240) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.104068636 seconds)
    (64/240) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.098540431 seconds)
    (65/240) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.09691122 seconds)
    (66/240) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.098625367 seconds)
    (67/240) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.169439353 seconds)
    (68/240) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.117379507 seconds)
    (69/240) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.18419087 seconds)
    (70/240) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.120056772 seconds)
    (71/240) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.098725711 seconds)
    (72/240) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.210969479 seconds)
    (73/240) benchmarking ("perf_sum", Float64, false)...
    done (took 0.104562876 seconds)
    (74/240) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.094301167 seconds)
    (75/240) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.105961363 seconds)
    (76/240) benchmarking ("map", identity, Bool, false)...
    done (took 0.144762075 seconds)
    (77/240) benchmarking ("map", identity, Int8, false)...
    done (took 0.095184123 seconds)
    (78/240) benchmarking ("perf_countequals", "Float32")...
    done (took 0.10680194 seconds)
    (79/240) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.102280481 seconds)
    (80/240) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.184416133 seconds)
    (81/240) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.095830769 seconds)
    (82/240) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.102331423 seconds)
    (83/240) benchmarking ("map", identity, Int64, true)...
    done (took 0.15845938 seconds)
    (84/240) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.177676787 seconds)
    (85/240) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.122205369 seconds)
    (86/240) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.115291474 seconds)
    (87/240) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.098095269 seconds)
    (88/240) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.097195954 seconds)
    (89/240) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.121529781 seconds)
    (90/240) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.113040672 seconds)
    (91/240) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.099594503 seconds)
    (92/240) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.237346716 seconds)
    (93/240) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.0987602 seconds)
    (94/240) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.110907763 seconds)
    (95/240) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.11398043 seconds)
    (96/240) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.135982339 seconds)
    (97/240) benchmarking ("perf_countequals", "Int64")...
    done (took 0.106725435 seconds)
    (98/240) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.230115063 seconds)
    (99/240) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.102758717 seconds)
    (100/240) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.095509818 seconds)
    (101/240) benchmarking ("perf_countequals", "Bool")...
    done (took 0.10554503 seconds)
    (102/240) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.098818814 seconds)
    (103/240) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.163775673 seconds)
    (104/240) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.114389033 seconds)
    (105/240) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.114191835 seconds)
    (106/240) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.098891755 seconds)
    (107/240) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.109002093 seconds)
    (108/240) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.124990654 seconds)
    (109/240) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.09880554 seconds)
    (110/240) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.100250024 seconds)
    (111/240) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.09667388 seconds)
    (112/240) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.094422741 seconds)
    (113/240) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.096146965 seconds)
    (114/240) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.187131517 seconds)
    (115/240) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.098249738 seconds)
    (116/240) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.094999957 seconds)
    (117/240) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.095266931 seconds)
    (118/240) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.101782836 seconds)
    (119/240) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.12157731 seconds)
    (120/240) benchmarking ("map", identity, Bool, true)...
    done (took 0.124492363 seconds)
    (121/240) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.104577319 seconds)
    (122/240) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.095968568 seconds)
    (123/240) benchmarking ("map", abs, Float32, true)...
    done (took 0.109636609 seconds)
    (124/240) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.099047192 seconds)
    (125/240) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.116128871 seconds)
    (126/240) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.13560572 seconds)
    (127/240) benchmarking ("perf_sum", Int64, true)...
    done (took 0.104769137 seconds)
    (128/240) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.153191013 seconds)
    (129/240) benchmarking ("map", identity, Int64, false)...
    done (took 0.094549839 seconds)
    (130/240) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.231088405 seconds)
    (131/240) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.103370241 seconds)
    (132/240) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.141530779 seconds)
    (133/240) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.108631031 seconds)
    (134/240) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.102292481 seconds)
    (135/240) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.094506431 seconds)
    (136/240) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.094910828 seconds)
    (137/240) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.116934656 seconds)
    (138/240) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.098648382 seconds)
    (139/240) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.10824147 seconds)
    (140/240) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.097855476 seconds)
    (141/240) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.096013291 seconds)
    (142/240) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.121612003 seconds)
    (143/240) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.097629088 seconds)
    (144/240) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.095904277 seconds)
    (145/240) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.153793048 seconds)
    (146/240) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.115390228 seconds)
    (147/240) benchmarking ("map", abs, BigInt, false)...
    done (took 0.098926563 seconds)
    (148/240) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.114011333 seconds)
    (149/240) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.098989373 seconds)
    (150/240) benchmarking ("map", abs, Bool, true)...
    done (took 0.154397579 seconds)
    (151/240) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.09673553 seconds)
    (152/240) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.165425994 seconds)
    (153/240) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.122778028 seconds)
    (154/240) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.0965473 seconds)
    (155/240) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.10636191 seconds)
    (156/240) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.106839851 seconds)
    (157/240) benchmarking ("perf_countequals", "Float64")...
    done (took 0.104757469 seconds)
    (158/240) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.097808217 seconds)
    (159/240) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.098599329 seconds)
    (160/240) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.094583907 seconds)
    (161/240) benchmarking ("map", identity, BigInt, false)...
    done (took 0.137288533 seconds)
    (162/240) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.103290561 seconds)
    (163/240) benchmarking ("map", identity, Float64, false)...
    done (took 0.094889718 seconds)
    (164/240) benchmarking ("perf_sum", Int64, false)...
    done (took 0.09436021 seconds)
    (165/240) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.095158653 seconds)
    (166/240) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.12248999 seconds)
    (167/240) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.102966268 seconds)
    (168/240) benchmarking ("map", identity, BigInt, true)...
    done (took 0.106079978 seconds)
    (169/240) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.096987198 seconds)
    (170/240) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.096700591 seconds)
    (171/240) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.119611919 seconds)
    (172/240) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.09550195 seconds)
    (173/240) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.151450255 seconds)
    (174/240) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.163194724 seconds)
    (175/240) benchmarking ("map", identity, Float32, true)...
    done (took 0.153997039 seconds)
    (176/240) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.130103945 seconds)
    (177/240) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.097591237 seconds)
    (178/240) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.09694875 seconds)
    (179/240) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.111207121 seconds)
    (180/240) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.09562853 seconds)
    (181/240) benchmarking ("map", abs, Int64, false)...
    done (took 0.141786596 seconds)
    (182/240) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.097733447 seconds)
    (183/240) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.097960026 seconds)
    (184/240) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.095836716 seconds)
    (185/240) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.096031286 seconds)
    (186/240) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.096598579 seconds)
    (187/240) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.10510994 seconds)
    (188/240) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.099092052 seconds)
    (189/240) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.120797068 seconds)
    (190/240) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.101352951 seconds)
    (191/240) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.101792378 seconds)
    (192/240) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.096512738 seconds)
    (193/240) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.097066149 seconds)
    (194/240) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.115832185 seconds)
    (195/240) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.09686842 seconds)
    (196/240) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.096234592 seconds)
    (197/240) benchmarking ("map", abs, Float64, false)...
    done (took 0.14258888 seconds)
    (198/240) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.096104884 seconds)
    (199/240) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.106475059 seconds)
    (200/240) benchmarking ("perf_sum", Float32, true)...
    done (took 0.097613014 seconds)
    (201/240) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.114641534 seconds)
    (202/240) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.119856972 seconds)
    (203/240) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.097229582 seconds)
    (204/240) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.095986183 seconds)
    (205/240) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.0965337 seconds)
    (206/240) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.095366203 seconds)
    (207/240) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.094635754 seconds)
    (208/240) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.09557181 seconds)
    (209/240) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.095262789 seconds)
    (210/240) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.096198426 seconds)
    (211/240) benchmarking ("map", abs, Int64, true)...
    done (took 0.111745758 seconds)
    (212/240) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.096760836 seconds)
    (213/240) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.098448755 seconds)
    (214/240) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.115423948 seconds)
    (215/240) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.105647399 seconds)
    (216/240) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.121357424 seconds)
    (217/240) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.099473589 seconds)
    (218/240) benchmarking ("perf_sum", Float64, true)...
    done (took 0.095854776 seconds)
    (219/240) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.096542903 seconds)
    (220/240) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.09619779 seconds)
    (221/240) benchmarking ("map", abs, Float64, true)...
    done (took 0.110016959 seconds)
    (222/240) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.098251096 seconds)
    (223/240) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.114830926 seconds)
    (224/240) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.097144141 seconds)
    (225/240) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.104597087 seconds)
    (226/240) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.095983065 seconds)
    (227/240) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.098828754 seconds)
    (228/240) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.09650026 seconds)
    (229/240) benchmarking ("map", identity, Float32, false)...
    done (took 0.096025189 seconds)
    (230/240) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.121039875 seconds)
    (231/240) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.100255197 seconds)
    (232/240) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.098281168 seconds)
    (233/240) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.096858907 seconds)
    (234/240) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.096096983 seconds)
    (235/240) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.115062722 seconds)
    (236/240) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.095656139 seconds)
    (237/240) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.097508045 seconds)
    (238/240) benchmarking ("map", abs, Bool, false)...
    done (took 0.096415247 seconds)
    (239/240) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.096010461 seconds)
    (240/240) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.095764603 seconds)
  done (took 31.179982257 seconds)
done (took 32.294063936 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.114328532 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.17588156 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.108481897 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.177615567 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.107368249 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.125152057 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.105867923 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.111031812 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.136094094 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.110838144 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.106617489 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.102420991 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.105709068 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.108645682 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.106092899 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.17186566 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.124362997 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.103166632 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.122036581 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.097531435 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.097234641 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.096249101 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.096726859 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.10257838 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.108748189 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.105837145 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.101246851 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.104856053 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.096756613 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.096669125 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.095994638 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.105069435 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.122401571 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.110430531 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.104438999 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.099312765 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.105637273 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.106354398 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.096090616 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.097335556 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.108126347 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.097058589 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.104005692 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.102512851 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.095719192 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.096313828 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.125374281 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.112137665 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.173415954 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101344515 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.108897386 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.10704077 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.104414086 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.096022625 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.096604695 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.096878747 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.121836966 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.177680301 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.097650377 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102142604 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.109257708 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.104994228 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.096784371 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.097237904 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.096652929 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.113902493 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.10924855 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.122544317 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.116315604 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.096853316 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.09707809 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.097540532 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.096218424 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.09740699 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.106324094 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.109034222 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.096177139 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.096647428 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.105032531 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.103641374 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.096400839 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.127037525 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.097889025 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.096966478 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.099347551 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.102378087 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.096451171 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.097840029 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.095961682 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.097621316 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.099551245 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.097442312 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.09622006 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.110674032 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.097480668 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.123141699 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.097927932 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.097427044 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.096843285 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.097241603 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.097253589 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10231476 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.10443332 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.096833553 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.09729732 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.108018572 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.097073432 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.097141358 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.096764658 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.122061957 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.112543547 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.114554884 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.099557908 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102167927 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.097220344 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.096583445 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.096340173 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.098807129 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.096857437 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.096501669 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.095855623 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.096598277 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.123316531 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.099733012 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.110406865 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.097409404 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.097386782 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100103707 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.097728661 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.104545596 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.097323885 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.097699028 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.096374871 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.114690206 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101523388 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.096989666 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.121522376 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.099959408 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.097649331 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.096957985 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.097536151 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.096698856 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.097014824 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.097227841 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.096469241 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.102406117 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103725501 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.098779506 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.096958835 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.09800842 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.095933497 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.122141601 seconds)
done (took 17.231142219 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/18) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.099143814 seconds)
    (2/18) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.115398491 seconds)
    (3/18) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.098036403 seconds)
    (4/18) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.174781626 seconds)
    (5/18) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.157849905 seconds)
    (6/18) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.100946292 seconds)
    (7/18) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.09698012 seconds)
    (8/18) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.0969884 seconds)
    (9/18) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.103244279 seconds)
    (10/18) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.121656656 seconds)
    (11/18) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.097671135 seconds)
    (12/18) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.09911141 seconds)
    (13/18) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.097522712 seconds)
    (14/18) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.096949247 seconds)
    (15/18) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.098031306 seconds)
    (16/18) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.101880708 seconds)
    (17/18) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.099325563 seconds)
    (18/18) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.097295324 seconds)
  done (took 3.113113012 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.107261571 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.118193097 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.108563021 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.108720903 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.098157196 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.097670907 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.096991521 seconds)
  done (took 1.913774334 seconds)
  (3/5) benchmarking "types"...
    (1/91) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.097963701 seconds)
    (2/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.186839276 seconds)
    (3/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.17315242 seconds)
    (4/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.169836244 seconds)
    (5/91) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.202864168 seconds)
    (6/91) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.175340204 seconds)
    (7/91) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.096843904 seconds)
    (8/91) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.109343464 seconds)
    (9/91) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.097513817 seconds)
    (10/91) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.18299186 seconds)
    (11/91) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.214938134 seconds)
    (12/91) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.096661287 seconds)
    (13/91) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.101067673 seconds)
    (14/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.174529543 seconds)
    (15/91) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.097279263 seconds)
    (16/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.165329685 seconds)
    (17/91) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.096934542 seconds)
    (18/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.124337711 seconds)
    (19/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.168821157 seconds)
    (20/91) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.098339017 seconds)
    (21/91) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.110502654 seconds)
    (22/91) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.105637313 seconds)
    (23/91) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.098214262 seconds)
    (24/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.178911373 seconds)
    (25/91) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.099528101 seconds)
    (26/91) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.098596728 seconds)
    (27/91) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.125621665 seconds)
    (28/91) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.10028666 seconds)
    (29/91) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.123615575 seconds)
    (30/91) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.180246155 seconds)
    (31/91) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.100342792 seconds)
    (32/91) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.096890085 seconds)
    (33/91) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.176125596 seconds)
    (34/91) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.098414657 seconds)
    (35/91) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.203861861 seconds)
    (36/91) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.102163115 seconds)
    (37/91) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.176605553 seconds)
    (38/91) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.101917117 seconds)
    (39/91) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.101836251 seconds)
    (40/91) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.097761934 seconds)
    (41/91) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.100092164 seconds)
    (42/91) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.186858056 seconds)
    (43/91) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.09773142 seconds)
    (44/91) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.100454862 seconds)
    (45/91) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.099159175 seconds)
    (46/91) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.187688787 seconds)
    (47/91) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.100230529 seconds)
    (48/91) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.18044959 seconds)
    (49/91) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.098347221 seconds)
    (50/91) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.12340985 seconds)
    (51/91) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.101850091 seconds)
    (52/91) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.098720029 seconds)
    (53/91) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.099982286 seconds)
    (54/91) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.096995242 seconds)
    (55/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.188284239 seconds)
    (56/91) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.099845974 seconds)
    (57/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.165980556 seconds)
    (58/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.195954801 seconds)
    (59/91) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.180587222 seconds)
    (60/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.166218942 seconds)
    (61/91) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.098578444 seconds)
    (62/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.207758024 seconds)
    (63/91) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.173726376 seconds)
    (64/91) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.099637966 seconds)
    (65/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09779773 seconds)
    (66/91) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.096393279 seconds)
    (67/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.165821683 seconds)
    (68/91) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.0966435 seconds)
    (69/91) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.103611743 seconds)
    (70/91) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.188739305 seconds)
    (71/91) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.098144499 seconds)
    (72/91) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.170364109 seconds)
    (73/91) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.170600047 seconds)
    (74/91) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.102525664 seconds)
    (75/91) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.097353781 seconds)
    (76/91) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.099253193 seconds)
    (77/91) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.12448913 seconds)
    (78/91) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.171570939 seconds)
    (79/91) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.097658892 seconds)
    (80/91) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.102434824 seconds)
    (81/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.167075147 seconds)
    (82/91) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.096177865 seconds)
    (83/91) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.098146659 seconds)
    (84/91) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.09740905 seconds)
    (85/91) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.09752819 seconds)
    (86/91) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.128527312 seconds)
    (87/91) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.097721381 seconds)
    (88/91) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.096524162 seconds)
    (89/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.167849341 seconds)
    (90/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.167616619 seconds)
    (91/91) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.099424758 seconds)
  done (took 13.035098798 seconds)
  (4/5) benchmarking "randstring"...
    (1/2) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.098359572 seconds)
    (2/2) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.099355461 seconds)
  done (took 1.401136631 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.105511325 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.098053037 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.108169795 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.0968672 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103122205 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.183154252 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.183294134 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.09854779 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.130708909 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.10404683 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.183290239 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.184706038 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.182430319 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.124829116 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.185642036 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.097820767 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.18286059 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.097573491 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.103295603 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100502227 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.101689442 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.098179664 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.125823366 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.163844413 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.097755033 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.098050245 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.098716185 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.104254033 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.104855129 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.097837192 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.101582716 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.098252095 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.098426732 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.09785994 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.2128365 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.098615654 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097703065 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.097825577 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.096915089 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.098631085 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.186201084 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.100853059 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.124876356 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.098715433 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.098177865 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.09855621 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.099557093 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.098318692 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.184688912 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.097804347 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.097951522 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.098211588 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.101513508 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.099172986 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.126098493 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098651457 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.098953365 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.185019427 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.098511117 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.098745662 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.097399643 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.097687795 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.097482747 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.100410051 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.098165182 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.098323732 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.127743819 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.099199657 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098684298 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.097539601 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.098912376 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.098452136 seconds)
  done (took 9.546021626 seconds)
done (took 30.181742658 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.168080535 seconds)
  done (took 2.364393903 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.664423873 seconds)
  done (took 1.860701734 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.091209437 seconds)
  done (took 9.324690732 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.372095064 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.288249893 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.888446327 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.137071529 seconds)
  done (took 2.888966814 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.146295075 seconds)
  done (took 2.373863035 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.238991025 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.197758703 seconds)
  done (took 1.649072698 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.807117789 seconds)
  done (took 2.034570282 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.341175759 seconds)
  done (took 2.556186734 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.195296846 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.163448144 seconds)
  done (took 1.587366763 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.539056278 seconds)
  done (took 1.768375421 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.993010426 seconds)
  done (took 9.227872374 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.236448053 seconds)
  done (took 1.460006665 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.262787658 seconds)
  done (took 1.496364941 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 2.179196214 seconds)
  done (took 3.412468766 seconds)
done (took 45.220051665 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.107226319 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.10959052 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.116507674 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.107055682 seconds)
  done (took 1.658693773 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.105168414 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.108876573 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.107052758 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.103441896 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.106061517 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.103844077 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.102319013 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.103515026 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.102681967 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.103447576 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.102696968 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.102936307 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.105492936 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.12724516 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.09916777 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.104876732 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.104098579 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.103831429 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.102069813 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.102828873 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.098369234 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.113564698 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.103424624 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.107332026 seconds)
  done (took 3.759931797 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.106504494 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.104752628 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.104054711 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.103859081 seconds)
  done (took 1.658875361 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.108069639 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.110243594 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.112183649 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.107028682 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.10935509 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.109281404 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.104500983 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.098151562 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.101286549 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.106503833 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.110200858 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.103701324 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.136270109 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.107310402 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.109062954 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.098936799 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.106338304 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.112199266 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.106934497 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.106762158 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.104496053 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.106054098 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.099461685 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.101936023 seconds)
  done (took 3.814298629 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.170070577 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.110653934 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.122894101 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 0.125502822 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.10052295 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.12474942 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 0.121640306 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 0.098665314 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.108998499 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 0.101284921 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 0.100478435 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 0.127233584 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.12660482 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.108700217 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.098745397 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.100613488 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.098956748 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.106810159 seconds)
    (19/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.107458556 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.09785998 seconds)
    (21/22) benchmarking ("var", "Int64")...
    done (took 0.154753431 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.110467854 seconds)
  done (took 3.767230983 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.107603526 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.104205002 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.099104605 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.098985754 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.112099605 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.104807397 seconds)
  done (took 1.873926141 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.104996488 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.101075178 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.101464126 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.099793288 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.103950256 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.099103235 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.099007929 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.101029654 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.100548727 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.101596027 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.101025835 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.100666496 seconds)
  done (took 2.458438869 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.214158686 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.12020556 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.125482412 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.098920666 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.102213265 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.098507469 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.111412442 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.101257598 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.104463458 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.098995197 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.100733238 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.10001862 seconds)
  done (took 2.62284013 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15029542 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104564072 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163391969 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.468528201 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115523588 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160666988 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.402741853 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12754519 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.157802886 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113537244 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133519252 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115004384 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151993921 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142249244 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112199654 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.385938155 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159834186 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151034689 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117201793 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145013964 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127971002 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16846708 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136572738 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118635374 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143360459 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116842991 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.104115784 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105884629 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123503588 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125477158 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122278097 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14622959 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109540884 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136430388 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115623385 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122890103 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214635364 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109775041 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.240481564 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.134988222 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148444081 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112531549 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158663901 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120122251 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108718743 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143331431 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112552277 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.132529551 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.111521418 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115912665 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159033755 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12841764 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.122020421 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111561237 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.441645029 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108119958 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116948202 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150689562 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144216345 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140848377 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133840519 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.104685697 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174237162 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133815829 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130384496 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.113660247 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.119936306 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098490315 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164091376 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168949179 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129320175 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160251274 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.142308041 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110384999 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128237524 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124941442 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153522894 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130633526 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127855063 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.103268096 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14776175 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108334422 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108137698 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.173100143 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104931204 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171048204 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112098506 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.317450072 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145019239 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121959886 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119986016 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124813809 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157264347 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122500716 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.145371843 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118201404 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120346916 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151008708 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104426694 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119710646 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144574164 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.103865123 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122486395 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.132186488 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128861029 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.13669918 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124514889 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13287238 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.11400407 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137363969 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117481134 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.15524605 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126158869 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137462755 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108284528 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112331357 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137428623 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132345355 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.112222562 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153757921 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136585839 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.143054267 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108340026 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.109213249 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187959626 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113784771 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163315004 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110712661 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108389562 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.131169373 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132560595 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120134521 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.128814505 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108053454 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.125152881 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160790449 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.106747251 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114629066 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135907521 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131949129 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105465756 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14219199 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109390419 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.117810975 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.128306538 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.112488984 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149065059 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131903973 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130337702 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112858807 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136379268 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116748555 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108909099 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.133312591 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151213909 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.102818744 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.129256985 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136462989 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106662528 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178754356 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.122274315 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182004007 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130882552 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108472446 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18151631 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10647678 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.13096798 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.108294675 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124224472 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121021232 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.12987272 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151554197 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.146567405 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.127519447 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119353977 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12127579 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.160253296 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118825927 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.111125734 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130429821 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126849334 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.104424022 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.100113213 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.108176917 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115287033 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106149329 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111659019 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150445771 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122882502 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150079826 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129119364 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111391108 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163276081 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.106023243 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121676908 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.128352233 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112360008 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.128462369 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133660835 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135066374 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107686561 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139419235 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.107565116 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104494421 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.105764342 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123720792 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112028388 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108595619 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111134394 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135396698 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124591303 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143331527 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154354667 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149279581 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144554638 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.10451527 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.146217616 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118347956 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130712936 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.180907299 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108654917 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.120069838 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137413045 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111503422 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143182884 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127440866 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129167723 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160611571 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.132120858 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106586879 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111611681 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162220646 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106383142 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114834649 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110592511 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108019584 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113952069 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.111413309 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099710078 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153933226 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116240133 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116553534 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.117830407 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143055091 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107654214 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109753963 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133797565 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142816519 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.124247474 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126477899 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120155303 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114150405 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139298158 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123364477 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106481766 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.444508578 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13008321 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127131462 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107633692 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108703046 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162116797 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115143651 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115683685 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181138211 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109950717 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131885078 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158414652 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.109491874 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108995225 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116307846 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116671017 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.13072673 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.099833201 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.125091361 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.1441094 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127173706 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142074885 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133350782 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12816825 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.125091434 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.123314483 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110996198 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170545799 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127692625 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125183341 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.131023902 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.115119181 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179793959 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131105409 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106224551 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.100826542 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180427858 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111811954 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128604649 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.178075511 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155473317 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133894234 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161181414 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140637788 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.106252703 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129443965 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146020553 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152658167 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109013054 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.109684598 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133851838 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.169265779 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133770227 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159992588 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.419759493 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147099261 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121041934 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.123049557 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.437538713 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106920583 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107722916 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11598568 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121818066 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.104456378 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.181223162 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130777025 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111481005 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116995226 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110089684 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175547153 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142652018 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.109950834 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123950433 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.109453166 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120146107 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113704072 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121047275 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117249094 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.145671768 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119453798 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134945023 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.124318328 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.105309168 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128826153 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129033976 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128174222 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116664282 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113040589 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209156235 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107548081 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116284081 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107690604 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100148348 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1535232 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.153289814 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131408412 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121218398 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126968115 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109026125 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102480378 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111432958 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128507238 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110390796 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.107337642 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12796815 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.135621282 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131659999 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132319959 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112097868 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130659085 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109900471 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10125161 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108895891 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111229073 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108484702 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.172777069 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124358301 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.100818368 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121905841 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114516777 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122024012 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113438329 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136913878 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 15.521156336 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.106890883 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134257029 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124005828 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171762516 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117650109 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13224691 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130791996 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146274571 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110130355 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111929557 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.209815434 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112384142 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.125310063 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107349873 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11106537 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145489027 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.101663705 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118528565 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156830326 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115776446 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.109453496 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.126149566 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114762653 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.136615911 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118081264 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138836257 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149858812 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129266697 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181109907 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10951373 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155764977 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117440042 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106048833 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.120988728 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12242086 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148445374 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112072643 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.10880394 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.110839276 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130583353 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.107144681 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124008081 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156815631 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129316632 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130847357 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.101148691 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128187551 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108557531 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128997626 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100284792 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.109510264 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159172956 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110333809 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.107778333 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132522232 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113276382 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.128201245 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10129918 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.173718315 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136244213 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.106821446 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107677983 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.407000516 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153614254 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207917109 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.134171584 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111255486 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142617811 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117791664 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.125601416 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132862541 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.101419403 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110218771 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.101423975 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.223318739 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.153335001 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132837727 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150833791 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115487783 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179635781 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.114477031 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.280457537 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118503852 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134519322 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.153044713 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.106107542 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112550295 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107827598 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11229627 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177690586 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133948194 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.1320273 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.113586374 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100874941 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.108743921 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109200229 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118470951 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116654718 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159331646 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111426726 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.121964355 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110556395 seconds)
  done (took 81.184953351 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.173758215 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.165932391 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.220336594 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.253269941 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.190757621 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.306953967 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.337266626 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.272649336 seconds)
  done (took 3.263040047 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.10544833 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.125002889 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.124013455 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.126379386 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.106825689 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.308453554 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.147605089 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.102148729 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.146057607 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.131053759 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.106341918 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.467586611 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.104522969 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.105811855 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.130263367 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.103615733 seconds)
  done (took 3.772538169 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.674034096 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.359946778 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 3.785030367 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.211702333 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.424317093 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.126713257 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.562254341 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.104126362 seconds)
  done (took 10.589977328 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.138557035 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.132515339 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.217518609 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.234565448 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.13879358 seconds)
  done (took 2.204218351 seconds)
done (took 123.848809064 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.108192514 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.111320127 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.111798769 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.109054849 seconds)
  done (took 1.769287166 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.159446608 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.102289552 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.104526995 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.105296454 seconds)
  done (took 1.818464618 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.427789119 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.103232637 seconds)
  done (took 1.916171619 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.135555871 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.129136997 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.12762465 seconds)
  done (took 1.749798158 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.116515087 seconds)
  done (took 1.469585166 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.108637169 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.109215659 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.178806944 seconds)
  done (took 1.748828893 seconds)
done (took 11.821934665 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.210018468 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.949997287 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.413313443 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.156568233 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.703921727 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.394508121 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.413923395 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.103158422 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112471774 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.102942875 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.103708637 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.684393184 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.364978282 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.881271379 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.394386698 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.88251981 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.690559888 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.13091071 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.103152021 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.103423986 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.364038883 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.103455598 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.102901545 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.102151885 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.686420679 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.40264772 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.103008019 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.884255514 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.102859187 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.131481958 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.390286063 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.102928007 seconds)
  done (took 20.713589975 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.136191619 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125497266 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.108286129 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103304082 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.103634136 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.105986036 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.10902488 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.10363895 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119514207 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.102930485 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.104122409 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.129375332 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.106147977 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.104114262 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.11951991 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.103631051 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.102940906 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.105474074 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.104107826 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.103826702 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.107032698 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.103100626 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.130412338 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.104246489 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.10355436 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.112790327 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.104210038 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.103879391 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.106768308 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.103269403 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.105226985 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.104512137 seconds)
  done (took 4.849706408 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.147024496 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.14093553 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.109266724 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13597181 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.13269994 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.105722679 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.160149822 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.105980809 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.148543313 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.104715518 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.104328755 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.104436688 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.120004062 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.1045728 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.1197723 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.105102907 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.103843561 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.10353226 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.10650838 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.130791294 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.107520711 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.103443654 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.104198204 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.103272683 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.104338208 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.11447872 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.107581424 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.106869398 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.104356458 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.132408468 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.106761112 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.104366863 seconds)
  done (took 5.057109144 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.103383802 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.112823612 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.137210339 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.137962826 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.102846358 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.102798401 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.103122015 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.102751474 seconds)
  done (took 2.267247739 seconds)
done (took 34.245633185 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.118027582 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.111342748 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.11377862 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.113916661 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.170711227 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.10242833 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.114140012 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.102739931 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.110199931 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.11669542 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.131595506 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.107073065 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.115706178 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.106569743 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.173384123 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.112549458 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.173128755 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.203327916 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.104829381 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.112665539 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.102758382 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.173161369 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.108421398 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.103910625 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.199149704 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.107458128 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.107616972 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.106799359 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.10735075 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.105415789 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.173084658 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.106162845 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.1045249 seconds)
  done (took 5.468238633 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.178095787 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.103002976 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.103662192 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.103632495 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.104307679 seconds)
    (6/30) benchmarking ("IntSet", "Int", "start")...
    done (took 0.102352158 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.178237374 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.102503039 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.132154423 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.104004208 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.103190951 seconds)
    (12/30) benchmarking ("IntSet", "Int", "next")...
    done (took 0.193823193 seconds)
    (13/30) benchmarking ("IntSet", "Int", "done")...
    done (took 0.103060034 seconds)
    (14/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.103340107 seconds)
    (15/30) benchmarking ("Set", "Int", "next")...
    done (took 0.104920718 seconds)
    (16/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.099192265 seconds)
    (17/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.102432774 seconds)
    (18/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.104852934 seconds)
    (19/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.209442817 seconds)
    (20/30) benchmarking ("Set", "String", "start")...
    done (took 0.103568075 seconds)
    (21/30) benchmarking ("Vector", "String", "next")...
    done (took 0.104941557 seconds)
    (22/30) benchmarking ("Set", "Any", "next")...
    done (took 0.104044815 seconds)
    (23/30) benchmarking ("Vector", "String", "start")...
    done (took 0.101343477 seconds)
    (24/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.102605615 seconds)
    (25/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.197761631 seconds)
    (26/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.099770775 seconds)
    (27/30) benchmarking ("Set", "String", "done")...
    done (took 0.102494043 seconds)
    (28/30) benchmarking ("Set", "Any", "done")...
    done (took 0.132245047 seconds)
    (29/30) benchmarking ("Set", "Int", "start")...
    done (took 0.103908653 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.102916208 seconds)
  done (took 4.969830337 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.107017127 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.12304462 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.122341562 seconds)
    (4/117) benchmarking ("IntSet", "Int", "intersect", "IntSet")...
    done (took 0.126358274 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.106190516 seconds)
    (6/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.103568026 seconds)
    (7/117) benchmarking ("Vector", "Int", "setdiff", "IntSet")...
    done (took 0.118073202 seconds)
    (8/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.113210853 seconds)
    (9/117) benchmarking ("IntSet", "Int", "union!", "Vector")...
    done (took 0.107457304 seconds)
    (10/117) benchmarking ("IntSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.141776401 seconds)
    (11/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.103886636 seconds)
    (12/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.108136298 seconds)
    (13/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.13485542 seconds)
    (14/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.1046209 seconds)
    (15/117) benchmarking ("Vector", "Int", "intersect", "IntSet")...
    done (took 0.117759515 seconds)
    (16/117) benchmarking ("Set", "Int", "setdiff", "IntSet")...
    done (took 0.117262465 seconds)
    (17/117) benchmarking ("Set", "Int", "intersect", "IntSet", "IntSet")...
    done (took 0.117836024 seconds)
    (18/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.103105128 seconds)
    (19/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.114300347 seconds)
    (20/117) benchmarking ("Set", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 0.155006307 seconds)
    (21/117) benchmarking ("IntSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111395364 seconds)
    (22/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.112023516 seconds)
    (23/117) benchmarking ("IntSet", "Int", "setdiff!", "Vector")...
    done (took 0.109961881 seconds)
    (24/117) benchmarking ("IntSet", "Int", "symdiff!", "Set")...
    done (took 0.109043305 seconds)
    (25/117) benchmarking ("IntSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.109456844 seconds)
    (26/117) benchmarking ("IntSet", "Int", "<", "IntSet")...
    done (took 0.145717059 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.127742786 seconds)
    (28/117) benchmarking ("IntSet", "Int", "union!", "IntSet")...
    done (took 0.104433859 seconds)
    (29/117) benchmarking ("IntSet", "Int", "symdiff!", "IntSet")...
    done (took 0.107166327 seconds)
    (30/117) benchmarking ("IntSet", "Int", "union!", "Set")...
    done (took 0.113122082 seconds)
    (31/117) benchmarking ("IntSet", "Int", "⊆", "self")...
    done (took 0.103886853 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.106093017 seconds)
    (33/117) benchmarking ("Set", "Int", "union", "IntSet")...
    done (took 0.127991164 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.116436623 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.107397757 seconds)
    (36/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.108368915 seconds)
    (37/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.113936681 seconds)
    (38/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.106927769 seconds)
    (39/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.139989379 seconds)
    (40/117) benchmarking ("IntSet", "Int", "intersect", "Set")...
    done (took 0.116417271 seconds)
    (41/117) benchmarking ("IntSet", "Int", "⊆", "Set")...
    done (took 0.106954454 seconds)
    (42/117) benchmarking ("IntSet", "Int", "symdiff", "Vector")...
    done (took 0.104194871 seconds)
    (43/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.125574928 seconds)
    (44/117) benchmarking ("IntSet", "Int", "union", "Set")...
    done (took 0.108792338 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.10473552 seconds)
    (46/117) benchmarking ("IntSet", "Int", "==", "self")...
    done (took 0.103155927 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "IntSet", "IntSet")...
    done (took 0.11481669 seconds)
    (48/117) benchmarking ("Set", "Int", "setdiff!", "IntSet")...
    done (took 0.118565558 seconds)
    (49/117) benchmarking ("IntSet", "Int", "intersect", "Vector")...
    done (took 0.11661718 seconds)
    (50/117) benchmarking ("Set", "Int", "symdiff", "IntSet")...
    done (took 0.105343196 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "IntSet", "IntSet")...
    done (took 0.12644057 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.136269565 seconds)
    (53/117) benchmarking ("IntSet", "Int", "setdiff!", "Set")...
    done (took 0.105053094 seconds)
    (54/117) benchmarking ("Vector", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 0.108702025 seconds)
    (55/117) benchmarking ("IntSet", "Int", "setdiff", "Set")...
    done (took 0.104329167 seconds)
    (56/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.104445575 seconds)
    (57/117) benchmarking ("IntSet", "Int", "setdiff!", "IntSet")...
    done (took 0.125405472 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.114900748 seconds)
    (59/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.1079635 seconds)
    (60/117) benchmarking ("IntSet", "Int", "symdiff", "IntSet")...
    done (took 0.10743967 seconds)
    (61/117) benchmarking ("IntSet", "Int", "union", "IntSet")...
    done (took 0.104808782 seconds)
    (62/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.104902263 seconds)
    (63/117) benchmarking ("IntSet", "Int", "union", "Vector", "Vector")...
    done (took 0.125087197 seconds)
    (64/117) benchmarking ("Set", "Int", "intersect", "IntSet")...
    done (took 0.121190404 seconds)
    (65/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.134878557 seconds)
    (66/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.120687072 seconds)
    (67/117) benchmarking ("Vector", "Int", "union", "IntSet")...
    done (took 0.107222058 seconds)
    (68/117) benchmarking ("IntSet", "Int", "⊆", "IntSet")...
    done (took 0.106443362 seconds)
    (69/117) benchmarking ("IntSet", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 0.107811735 seconds)
    (70/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.103647308 seconds)
    (71/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.120848186 seconds)
    (72/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.104009862 seconds)
    (73/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112058148 seconds)
    (74/117) benchmarking ("IntSet", "Int", "⊆", "Vector")...
    done (took 0.106950525 seconds)
    (75/117) benchmarking ("Set", "Int", "union", "IntSet", "IntSet")...
    done (took 0.12546897 seconds)
    (76/117) benchmarking ("IntSet", "Int", "==", "IntSet")...
    done (took 0.107073444 seconds)
    (77/117) benchmarking ("IntSet", "Int", "union", "Vector")...
    done (took 0.105680054 seconds)
    (78/117) benchmarking ("IntSet", "Int", "intersect", "IntSet", "IntSet")...
    done (took 0.103923326 seconds)
    (79/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.132157984 seconds)
    (80/117) benchmarking ("Set", "Int", "⊆", "IntSet")...
    done (took 0.111019514 seconds)
    (81/117) benchmarking ("IntSet", "Int", "intersect", "Set", "Set")...
    done (took 0.11245083 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.114167113 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "IntSet")...
    done (took 0.106097745 seconds)
    (84/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.105489842 seconds)
    (85/117) benchmarking ("IntSet", "Int", "setdiff", "IntSet")...
    done (took 0.105079733 seconds)
    (86/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.105305538 seconds)
    (87/117) benchmarking ("empty", "Int", "<", "IntSet")...
    done (took 0.103532838 seconds)
    (88/117) benchmarking ("Set", "Int", "union")...
    done (took 0.10494492 seconds)
    (89/117) benchmarking ("IntSet", "Int", "symdiff")...
    done (took 0.103309166 seconds)
    (90/117) benchmarking ("empty", "Int", "⊆", "IntSet")...
    done (took 0.104010922 seconds)
    (91/117) benchmarking ("IntSet", "Int", "union")...
    done (took 0.104422296 seconds)
    (92/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.103132057 seconds)
    (93/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.134476247 seconds)
    (94/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.106525818 seconds)
    (95/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.106810257 seconds)
    (96/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.103761381 seconds)
    (97/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.109541725 seconds)
    (98/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.104538506 seconds)
    (99/117) benchmarking ("IntSet", "Int", "symdiff", "Set")...
    done (took 0.105449081 seconds)
    (100/117) benchmarking ("IntSet", "Int", "symdiff!", "Vector")...
    done (took 0.104430592 seconds)
    (101/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.1137242 seconds)
    (102/117) benchmarking ("IntSet", "Int", "union", "Set", "Set")...
    done (took 0.127455589 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "IntSet")...
    done (took 0.105514419 seconds)
    (104/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.112970794 seconds)
    (105/117) benchmarking ("Vector", "Int", "⊆", "IntSet")...
    done (took 0.110315412 seconds)
    (106/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.104368915 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.155039651 seconds)
    (108/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.104174233 seconds)
    (109/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.105379872 seconds)
    (110/117) benchmarking ("IntSet", "Int", "union", "IntSet", "IntSet")...
    done (took 0.117396848 seconds)
    (111/117) benchmarking ("IntSet", "Int", "intersect")...
    done (took 0.104634823 seconds)
    (112/117) benchmarking ("IntSet", "Int", "setdiff", "Vector")...
    done (took 0.105133849 seconds)
    (113/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.113399102 seconds)
    (114/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.104972657 seconds)
    (115/117) benchmarking ("IntSet", "Int", "intersect!", "IntSet")...
    done (took 0.106604001 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.104774268 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.132258927 seconds)
  done (took 14.61653291 seconds)
  (4/6) benchmarking "optimizations"...
    (1/19) benchmarking ("Vector", "concrete", "Void")...
    done (took 0.180336091 seconds)
    (2/19) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.237812889 seconds)
    (3/19) benchmarking ("Set", "concrete", "Void")...
    done (took 0.288432315 seconds)
    (4/19) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.250842556 seconds)
    (5/19) benchmarking ("Dict", "abstract", "Void")...
    done (took 0.190819721 seconds)
    (6/19) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.167761838 seconds)
    (7/19) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.260016581 seconds)
    (8/19) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.114906834 seconds)
    (9/19) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.23776556 seconds)
    (10/19) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.111418136 seconds)
    (11/19) benchmarking ("Dict", "concrete", "Void")...
    done (took 0.15772947 seconds)
    (12/19) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.237164845 seconds)
    (13/19) benchmarking ("BitSet", "Int8")...
    done (took 0.117982529 seconds)
    (14/19) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.294939601 seconds)
    (15/19) benchmarking ("Set", "abstract", "Void")...
    done (took 0.109191287 seconds)
    (16/19) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.129603711 seconds)
    (17/19) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.128024192 seconds)
    (18/19) benchmarking ("Vector", "abstract", "Void")...
    done (took 0.104392259 seconds)
    (19/19) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.114534189 seconds)
  done (took 4.826652036 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/76) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.106659381 seconds)
    (2/76) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.123851949 seconds)
    (3/76) benchmarking ("IntSet", "Int", "in", "true")...
    done (took 0.106411205 seconds)
    (4/76) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.104202385 seconds)
    (5/76) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.105135435 seconds)
    (6/76) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.105579738 seconds)
    (7/76) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.115980103 seconds)
    (8/76) benchmarking ("Vector", "String", "push!")...
    done (took 0.109814416 seconds)
    (9/76) benchmarking ("Set", "String", "in", "false")...
    done (took 0.104692732 seconds)
    (10/76) benchmarking ("Set", "Int", "first")...
    done (took 0.106938438 seconds)
    (11/76) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.117880636 seconds)
    (12/76) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.118492349 seconds)
    (13/76) benchmarking ("IntSet", "Int", "push!", "overwrite")...
    done (took 0.108905612 seconds)
    (14/76) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.154263934 seconds)
    (15/76) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.110657141 seconds)
    (16/76) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.104370694 seconds)
    (17/76) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.104038056 seconds)
    (18/76) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.11304626 seconds)
    (19/76) benchmarking ("Dict", "String", "getindex")...
    done (took 0.106718189 seconds)
    (20/76) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.126731644 seconds)
    (21/76) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.115135458 seconds)
    (22/76) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.108712614 seconds)
    (23/76) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.108307229 seconds)
    (24/76) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.104842684 seconds)
    (25/76) benchmarking ("IntSet", "Int", "length")...
    done (took 0.103062913 seconds)
    (26/76) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.103930327 seconds)
    (27/76) benchmarking ("Vector", "Int", "last")...
    done (took 0.104018363 seconds)
    (28/76) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.134367703 seconds)
    (29/76) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.104687123 seconds)
    (30/76) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.109159047 seconds)
    (31/76) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.110021148 seconds)
    (32/76) benchmarking ("Vector", "Int", "length")...
    done (took 0.103293777 seconds)
    (33/76) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.109714069 seconds)
    (34/76) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.112917999 seconds)
    (35/76) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.106894951 seconds)
    (36/76) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.10983168 seconds)
    (37/76) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.10418734 seconds)
    (38/76) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.109266979 seconds)
    (39/76) benchmarking ("Dict", "Int", "first")...
    done (took 0.218300003 seconds)
    (40/76) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.107073303 seconds)
    (41/76) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.104251856 seconds)
    (42/76) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.103959332 seconds)
    (43/76) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.107010893 seconds)
    (44/76) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.103929914 seconds)
    (45/76) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.106044537 seconds)
    (46/76) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.113268542 seconds)
    (47/76) benchmarking ("Dict", "Int", "length")...
    done (took 0.10326301 seconds)
    (48/76) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.103331138 seconds)
    (49/76) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.11319122 seconds)
    (50/76) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.10313415 seconds)
    (51/76) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.104929816 seconds)
    (52/76) benchmarking ("Vector", "Int", "push!")...
    done (took 0.10502175 seconds)
    (53/76) benchmarking ("IntSet", "Int", "first")...
    done (took 0.136904025 seconds)
    (54/76) benchmarking ("Vector", "String", "getindex")...
    done (took 0.107501111 seconds)
    (55/76) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.107028899 seconds)
    (56/76) benchmarking ("Vector", "Int", "first")...
    done (took 0.106519957 seconds)
    (57/76) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.104223604 seconds)
    (58/76) benchmarking ("IntSet", "Int", "pop!", "unspecified")...
    done (took 0.117552388 seconds)
    (59/76) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.10473689 seconds)
    (60/76) benchmarking ("Set", "String", "in", "true")...
    done (took 0.105657441 seconds)
    (61/76) benchmarking ("IntSet", "Int", "in", "false")...
    done (took 0.106118552 seconds)
    (62/76) benchmarking ("IntSet", "Int", "pop!", "specified")...
    done (took 0.112077451 seconds)
    (63/76) benchmarking ("Vector", "Any", "push!")...
    done (took 0.105893943 seconds)
    (64/76) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.104177615 seconds)
    (65/76) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.106814174 seconds)
    (66/76) benchmarking ("IntSet", "Int", "push!", "new")...
    done (took 0.108793862 seconds)
    (67/76) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.139002831 seconds)
    (68/76) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.114656005 seconds)
    (69/76) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.104547459 seconds)
    (70/76) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.106122112 seconds)
    (71/76) benchmarking ("Set", "Int", "length")...
    done (took 0.104027068 seconds)
    (72/76) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.110394535 seconds)
    (73/76) benchmarking ("IntSet", "Int", "last")...
    done (took 0.104083016 seconds)
    (74/76) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.104335575 seconds)
    (75/76) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.104800472 seconds)
    (76/76) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.110304949 seconds)
  done (took 9.854384097 seconds)
  (6/6) benchmarking "deletion"...
    (1/19) benchmarking ("Vector", "String", "pop!")...
    done (took 0.105494953 seconds)
    (2/19) benchmarking ("Set", "Int", "filter!")...
    done (took 0.115431751 seconds)
    (3/19) benchmarking ("Set", "String", "filter!")...
    done (took 0.12022718 seconds)
    (4/19) benchmarking ("Set", "Any", "pop!")...
    done (took 0.107820991 seconds)
    (5/19) benchmarking ("Vector", "Any", "filter")...
    done (took 0.115003149 seconds)
    (6/19) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.104641885 seconds)
    (7/19) benchmarking ("Vector", "String", "filter")...
    done (took 0.114680649 seconds)
    (8/19) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.119366154 seconds)
    (9/19) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.117453641 seconds)
    (10/19) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.104217444 seconds)
    (11/19) benchmarking ("Vector", "String", "filter!")...
    done (took 0.11729935 seconds)
    (12/19) benchmarking ("Set", "Int", "pop!")...
    done (took 0.107589016 seconds)
    (13/19) benchmarking ("Set", "Any", "filter!")...
    done (took 0.147392726 seconds)
    (14/19) benchmarking ("Vector", "Int", "filter")...
    done (took 0.117495911 seconds)
    (15/19) benchmarking ("Set", "String", "filter")...
    done (took 0.115486466 seconds)
    (16/19) benchmarking ("Set", "Int", "filter")...
    done (took 0.115174558 seconds)
    (17/19) benchmarking ("Set", "Any", "filter")...
    done (took 0.115885034 seconds)
    (18/19) benchmarking ("Set", "String", "pop!")...
    done (took 0.107652031 seconds)
    (19/19) benchmarking ("IntSet", "Int", "pop!")...
    done (took 0.110613299 seconds)
  done (took 3.588156081 seconds)
done (took 44.69091842 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.427512693 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.587393715 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.380437675 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.381131985 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.38396829 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.391468484 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.379089943 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.379247991 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.990498268 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.382522031 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.378300144 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.37805503 seconds)
done (took 30.821786655 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.632524216 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 1.383322793 seconds)
    (2/2) benchmarking "String"...
    done (took 1.386698135 seconds)
  done (took 4.469554844 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 1.383597495 seconds)
    (2/2) benchmarking "String"...
    done (took 1.383516955 seconds)
  done (took 4.150393719 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.378397018 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.389958425 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.37842512 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.55416199 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.427012382 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.378690502 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.377850677 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.380903264 seconds)
  done (took 18.270982361 seconds)
done (took 33.287317504 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.463858056 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.770715529 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.663164882 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.378971394 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.377111102 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.375997898 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.381080415 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.436912777 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.384481198 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.383862929 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.744696162 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.646809614 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.392646728 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.767934353 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.381742624 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.39726582 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.378108865 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.642235729 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.380065292 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.429783525 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.383990088 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.376699372 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.404348625 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.399558423 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.48311013 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.378209568 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.39441371 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.378815692 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.615727707 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.400406002 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.427041044 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.381301646 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.402103149 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.389207283 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.38861015 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.385313067 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.594103186 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.483765817 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.38198517 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.379398151 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.601519379 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.387324826 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.377591238 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.382623095 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.381621955 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.458245684 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.671063285 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.485456732 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.381013105 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.384980485 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.382964433 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.779356363 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.383514406 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.388546561 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.377504397 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.674843048 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.379897076 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.453165839 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.401690641 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.38637659 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.377565596 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.37733871 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.399713945 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.388955218 seconds)
  done (took 156.255564323 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.377644187 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.377384243 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.377594256 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.387411494 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.37727776 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.378403654 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.37799696 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.377172325 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.377906731 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.400576004 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.378101758 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.37853517 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.378460297 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.378104279 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.377262933 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.407090815 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.380341136 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.377300433 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.377936219 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.378746988 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.380734256 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.377406002 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.376888549 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.378121274 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.406633418 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.461593284 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.395675749 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.382404315 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.377438707 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.377180017 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.415720932 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.380840677 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.920166372 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.230343958 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.390527106 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.404643305 seconds)
  done (took 86.661816611 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.376381488 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.377193957 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.377238879 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.405510397 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.376937623 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.893756907 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.876165651 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.390289515 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.859665404 seconds)
    (10/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 1.806495602 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.524827877 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.619548337 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.378212491 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.46539141 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.395287291 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.378096589 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.425413773 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.405195208 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.378384888 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.376973868 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.894055099 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.3941643 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.531649637 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.541318903 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.376997414 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.405635808 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.819642562 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.377252666 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.405829104 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.770941537 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.406467377 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.377154185 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.650727616 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.681699075 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.486186569 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.379647737 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.40593343 seconds)
    (38/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.377428415 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.376763777 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.652114992 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.378175236 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.379391631 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.380600286 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.953320949 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.376667833 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.893243112 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.378296619 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.281643786 seconds)
    (49/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.377647235 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.376864985 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.37780353 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.885802309 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.910575033 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.377027528 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.376784419 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.379994377 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.377203169 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.377317223 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.405704821 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.897518395 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.532984668 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.377802263 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.380368211 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.405406909 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.377759294 seconds)
    (66/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.377242024 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.377208228 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.550320173 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.452675503 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.151418975 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.894928083 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.378662948 seconds)
    (73/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 21.525272641 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.468966114 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.494054868 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.376934884 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.376841 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.377240644 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.376754333 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.483306645 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.376937637 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.377291637 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.762746653 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.541414542 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.378174838 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.551140029 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.470541747 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.377021213 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.700655551 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.378209547 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.377152075 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.043325152 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.467978632 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.377656715 seconds)
    (95/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.376945156 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.377263842 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.761927224 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.876965516 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.627575565 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.378679116 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.767034635 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.386642302 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.760353764 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.888728019 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.006201861 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.378870023 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.484453245 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.541538279 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.378477654 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.376733003 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.531831666 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.377225947 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.442021631 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.377793313 seconds)
  done (took 387.942723261 seconds)
done (took 632.245224585 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.377596967 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.400283788 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.381616282 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.387934464 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.385664204 seconds)
  done (took 13.316256606 seconds)
done (took 14.699176951 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.607134857 seconds)
    (2/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.607157562 seconds)
    (3/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.441788604 seconds)
    (4/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "10-90")...
    done (took 1.407398668 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.50718874 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.564311842 seconds)
    (7/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.41522704 seconds)
    (8/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.609680484 seconds)
    (9/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.609562762 seconds)
    (10/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.564902129 seconds)
    (11/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.404213269 seconds)
    (12/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "50-50")...
    done (took 1.424104233 seconds)
    (13/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.508486328 seconds)
    (14/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.50564279 seconds)
    (15/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.611285044 seconds)
    (16/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.451291608 seconds)
    (17/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.6105485 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.61002116 seconds)
    (19/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.505493233 seconds)
    (20/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "90-10")...
    done (took 1.450886983 seconds)
    (21/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.421975944 seconds)
    (22/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.611456608 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.401237358 seconds)
  done (took 36.24337507 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.738296326 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.738153191 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.429681219 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.736698459 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.413976762 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.740488716 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.616425894 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.607864607 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.600331317 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.443557993 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.395620934 seconds)
  done (took 18.85390748 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.690650165 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.705094775 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.432445543 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.709508102 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.415619769 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.698732827 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.575341929 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.586614857 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.581259011 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.406333715 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.397071258 seconds)
  done (took 18.590588651 seconds)
done (took 75.079037998 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.41039094 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.464096102 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.393032809 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.392629857 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.392505924 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.391639593 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.394015978 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.392865393 seconds)
  done (took 12.623016481 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.390903639 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.391482383 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.390946281 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.390624251 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.390812626 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.390782586 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.390840777 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.390808181 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.390780784 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.390973009 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.390829291 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.39131786 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.391930199 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.390787029 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.391569978 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.390809268 seconds)
  done (took 23.648776705 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.393412937 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.390974014 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.390979595 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.391178485 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.391475448 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.391426409 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.393987758 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.391185917 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.390880795 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.391520686 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.392122902 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.390566105 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.391349328 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.391665403 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.390753036 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.39559413 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.391002842 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.391927082 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.395249124 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.39069287 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.39157082 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.390945722 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.391224486 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.39171383 seconds)
  done (took 34.796048863 seconds)
done (took 72.459086996 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.38668227 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.386659593 seconds)
  done (took 6.165606549 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.81036978 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.86176302 seconds)
  done (took 5.064764231 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.391704439 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.391238875 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.392168415 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.391281262 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.39113437 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.392422284 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.39127387 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.390798943 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.391325165 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.393166035 seconds)
  done (took 15.308866108 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.391126355 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.391101237 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.390851112 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.391131001 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.390964456 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.390878991 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.390734098 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.390745221 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.391345393 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.391108458 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.391281568 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.391118268 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.390850789 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.391257161 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.391069547 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.390905014 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.391737197 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.391233832 seconds)
  done (took 26.431637994 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.405878831 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.41405448 seconds)
  done (took 4.211527665 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.525321972 seconds)
    (2/7) benchmarking "second"...
    done (took 1.432285294 seconds)
    (3/7) benchmarking "month"...
    done (took 1.499492812 seconds)
    (4/7) benchmarking "year"...
    done (took 1.489312446 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.43272956 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.420001312 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.432771063 seconds)
  done (took 11.624221336 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.391686167 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.639389857 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.791593211 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.148040889 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.393750769 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.395282835 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.247155221 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.395848076 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.397908254 seconds)
  done (took 16.193181392 seconds)
done (took 86.390706375 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.397505303 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.385763699 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.394865705 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.391950534 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.791151221 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.434680804 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.386874379 seconds)
done (took 17.574849424 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.385997289 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.385913412 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.389094572 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.386253825 seconds)
  done (took 10.939150312 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.393029824 seconds)
    (2/2) benchmarking "read"...
    done (took 1.706073232 seconds)
  done (took 5.490896117 seconds)
done (took 17.821726087 seconds)
(10/20) benchmarking "scalar"...
  (1/24) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.390969236 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.390829619 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.391132974 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.390930116 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.391024444 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.391032475 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.390709741 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.391346393 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.390905598 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.391273767 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.390674621 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.393047922 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.391099378 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.390731559 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.39253854 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.391256717 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.391047008 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.390967502 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.390849612 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.391134938 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.391292734 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.391082674 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.391007576 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.391032233 seconds)
  done (took 34.781087254 seconds)
  (2/24) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.391347774 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.390874855 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.391501129 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.391071472 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.391090777 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.391013588 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.391295778 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.391276952 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.391873342 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.391347125 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.391663963 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.392492306 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.391054629 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.391343577 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.390834166 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.391462781 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.391215237 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.39279418 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.391072311 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.391314591 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.391471974 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.391369028 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.391468028 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.391262157 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.391358793 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.391303947 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.391183544 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.391306944 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.391234841 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.391765185 seconds)
  done (took 43.13488814 seconds)
  (3/24) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.396226722 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.397044323 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.39227036 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.391048266 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.391144057 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.391061209 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.391383641 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.391059952 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.39135602 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.391133969 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.391307568 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.391223954 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.391212806 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.391151074 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.390762505 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.39114856 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.391304397 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.391501833 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.393886175 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.391532077 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.391668816 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.390816396 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.391264109 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.391346606 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.392735838 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.390626221 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.391439249 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.390964074 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.391281952 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.39145672 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.391409146 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.391125098 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.391260561 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.391085686 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.391461685 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.391155772 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.396307806 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.397208647 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.391547589 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.391208634 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.391474574 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.391175415 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.391483652 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.391470875 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.390956864 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.390870788 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.392169526 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.391315884 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.394017728 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.391255131 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.391576297 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.391949899 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.391259811 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.391955352 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.392432401 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.390879735 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.392045648 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.391516868 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.391257009 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.391812314 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.391225504 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.391437668 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.392094564 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.391954118 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.392098541 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.391481193 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.39152155 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.39137231 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.39253064 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.392203865 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.390905058 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.391808243 seconds)
  done (took 101.604986074 seconds)
  (4/24) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.391311153 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.392624494 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.391641752 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.391259843 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.391207094 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.391322429 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.391487439 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.39334256 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.391650375 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.391611006 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.391572227 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.392273617 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.391342468 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.391819723 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.391908946 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.391483639 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.391783225 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.391891884 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.391694339 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.391679547 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.391087185 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.392309695 seconds)
  done (took 32.012144226 seconds)
  (5/24) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.391435711 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.392665497 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.391482833 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.392764944 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.393039198 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.392156514 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.391644061 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.39233238 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.39157753 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.3918084 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.391499602 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.39139085 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.393117529 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.391350571 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.392051436 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.395107267 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.392011271 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.392760993 seconds)
  done (took 26.453320991 seconds)
  (6/24) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.391815214 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.39189098 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.391697158 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.391609142 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.391930262 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.391721853 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.3915772 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.391921137 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.391302385 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.391745824 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.39186726 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.391521463 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.392521381 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.391331587 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.391737426 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.392501501 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.391883238 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.391630874 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.39250921 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.393197575 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.392379705 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.391794039 seconds)
  done (took 32.015360935 seconds)
  (7/24) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.391779326 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.391726588 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.392606357 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.391577357 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.391882899 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.391915813 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.393771895 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.39143619 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.392702436 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.391229119 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.391587282 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.391331657 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.392998376 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.391623354 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.391844656 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.391645996 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.391615599 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.391576532 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.391477626 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.391131527 seconds)
  done (took 29.230855794 seconds)
  (8/24) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.392800935 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.392642843 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.393231132 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.393063259 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.393001275 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.39287264 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.392934847 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.393090322 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.393179021 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.394177812 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.393131628 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.393201807 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.39331154 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.393198384 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.393297489 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.39312475 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.395248491 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.393588167 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.393403622 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.39309695 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.394092897 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.393188702 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.393340879 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.392991179 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.392537584 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.393581626 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.392751607 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.393312136 seconds)
  done (took 40.405211075 seconds)
  (9/24) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.391995487 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.391854769 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.391682726 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.392014971 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.392537462 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.391909274 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.391991412 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.39183939 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.391251449 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.391905949 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.391652491 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.391696135 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.392345219 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.392134928 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.391716875 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.39216156 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.39203947 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.391776522 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.392634058 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.39365981 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.391786054 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.391804565 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.392260443 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.391958776 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.392405129 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.392114706 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.39237949 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.392223934 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.392389124 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.392087545 seconds)
  done (took 43.156079637 seconds)
  (10/24) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.450610376 seconds)
    (2/2) benchmarking "in"...
    done (took 1.44939061 seconds)
  done (took 4.292900312 seconds)
  (11/24) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.392076037 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.391918991 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.391412085 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.391992999 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.392119751 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.392250601 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.391956552 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.392032391 seconds)
  done (took 12.528894053 seconds)
  (12/24) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.394871763 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.393065406 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.391318216 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.392031784 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.392578163 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.395264799 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.402278244 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.396543403 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.395150113 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.396533155 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.396971581 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.397173763 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.396797633 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.395827725 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.394736611 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.398830281 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.394627931 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.392242231 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.392459531 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.39218116 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.392422916 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.396229683 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.398291574 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.395497785 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.393258436 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.402654737 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.402723206 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.394977187 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.394047127 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.398876474 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.396135655 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.393485324 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.392355214 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.392312342 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.391734794 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.392683859 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.403269783 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.399148171 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.401394412 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.396942764 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.394195486 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.392703114 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.39479673 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.396823904 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.396645521 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.395140101 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.392788007 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.393089663 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.393930371 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.397284245 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.395809074 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.393185852 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.39304202 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.399184173 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.398145891 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.403752849 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.398143464 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.397013929 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.399798072 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.401235434 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.411195666 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.406257452 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.399976515 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.394850615 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.403070717 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.407067836 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.403249449 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.39690049 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.392976158 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.392554217 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.402829534 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.415914061 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.414738688 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.394542862 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.392683322 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.392202621 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.393939499 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.392743139 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.401368979 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.403114884 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.39472986 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.392736993 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.402776107 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.405153129 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.393936118 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.393485616 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.392921021 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.393405644 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.393954585 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.401874976 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.397925278 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.392000456 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.393347068 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.394327411 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.39729892 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.393337099 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.393892105 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.395920439 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.392870542 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.392292889 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.392701114 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.399124017 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.399349736 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.394712045 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.392848813 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.40259735 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.396076521 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.393930779 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.402033041 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.397009211 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.392877799 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.396530759 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.400356399 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.393504771 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.397618043 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.398927538 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.394372502 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.395731649 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.395322889 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.392360947 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.403155735 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.410519093 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.395312478 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.392882261 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.399033804 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.399792144 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.39295242 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.397468927 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.394852977 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.392943364 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.392160473 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.397910373 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.39435612 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.395426172 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.394340374 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.395257737 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.393327939 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.392004649 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.39245195 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.395273851 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.397636894 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.395682195 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.396276833 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.398145639 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.395424739 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.396118867 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.403810053 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.398025964 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.396200459 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.397025688 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.394091049 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.392312657 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.395729794 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.393833741 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.39455382 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.393762904 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.393854168 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.394470118 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.39240952 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.392255061 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.392451079 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.394650044 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.399473699 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.393431574 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.398857128 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.396552102 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.393594347 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.392919135 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.392282967 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.393928495 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.393267294 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.393022128 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.398040474 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.396628896 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.392543543 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.393014541 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.396315292 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.394818889 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.392883243 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.393347943 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.39744609 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.3984549 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.394241471 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.401156312 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.396655219 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.393080885 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.392436823 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.394491509 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.39500142 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.394888365 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.397124585 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.397369796 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.413482738 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.417146898 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.395237877 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.393810845 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.39364495 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.39415692 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.398944209 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.396025113 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.392567227 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.392988902 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.394388028 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.393953355 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.395426566 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.394583199 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.39280158 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.393136401 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.393871885 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.392998566 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.393247715 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.395229187 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.396574511 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.393470055 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.392693123 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.39313129 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.394040059 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.393430697 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.393339672 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.394623503 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.393717714 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.392928135 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.401109077 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.398058325 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.396062322 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.398708748 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.397446716 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.394350201 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.393199117 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.3976589 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.397216172 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.403052524 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.401125541 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.395874078 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.403499711 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.398801803 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.394341743 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.398673816 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.394966663 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.392396444 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.397714664 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.398521608 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.392842072 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.393594074 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.393134983 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.394328893 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.393742796 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.401429412 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.396714739 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.393497007 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.393681745 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.396850956 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.393971527 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.396591283 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.399656934 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.396524622 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.399058158 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.395560102 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.393028026 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.396023329 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.39432049 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.393605785 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.393483891 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.397258559 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.399000004 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.399420615 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.398061363 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.399044999 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.396367516 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.392889707 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.39504939 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.395309185 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.395787521 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.414439979 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.412734775 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.410489615 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.41057267 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.394489232 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.400412863 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.397868871 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.395685189 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.395742624 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.396482621 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.396059525 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.397444351 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.394226911 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.396271068 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.393994055 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.396237027 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.396838551 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.394154884 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.392829223 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.393811182 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.394298507 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.393063905 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.392367513 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.393592026 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.393648653 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.399939364 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.398206084 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.396720056 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.394924849 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.403951902 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.400277086 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.397544866 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.396595111 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.395522802 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.394616082 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.396665116 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.394586056 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.397432554 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.39699101 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.397015651 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.400137983 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.395262887 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.403000786 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.396733439 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.397199636 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.397451955 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.392975861 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.395272033 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.395231172 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.393977651 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.402470433 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.398131261 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.396682281 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.396240433 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.393390684 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.393324971 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.393494712 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.39362172 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.393588327 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.393351713 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.403855612 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.400256501 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.396017302 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.398519404 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.395601549 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.393794092 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.393396462 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.393549622 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.400714994 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.396303006 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.395893901 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.397561953 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.398517133 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.393829194 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.39344633 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.393127349 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.393560653 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.392886987 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.402735183 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.401761243 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.395662564 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.393107751 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.40360813 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.397278485 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.402655118 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.39858206 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.395652255 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.394886072 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.3930387 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.396812895 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.395104235 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.399000642 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.394830804 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.394804154 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.39488117 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.393273681 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.397796462 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.397336103 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.394988302 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.394212668 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.404293027 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.406321202 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.394320143 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.395929586 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.392986831 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.394183492 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.394185042 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.394318586 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.393696225 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.39835193 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.402983076 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.397095957 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.394791543 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.394711665 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.395637181 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.394427107 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.393161296 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.393688233 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.393431197 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.39293447 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.396546512 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.39431151 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.400402651 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.395281923 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.395501666 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.397838526 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.395535573 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.40217799 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.397737736 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.396155927 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.395470142 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.394909869 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.395103042 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.398798117 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.39595573 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.396167634 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.395034887 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.394555805 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.398763589 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.397889828 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.399623955 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.400123837 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.394996549 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.39571267 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.397424646 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.394218755 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.393945385 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.394369028 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.396195515 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.395288398 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.396510316 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.394783331 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.39434744 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.395411398 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.396011544 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.397432605 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.400972646 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.396153597 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.394284942 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.392915137 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.393753877 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.396948477 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.397037294 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.404341225 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.404087992 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.401200533 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.398187777 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.394472028 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.394969054 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.399500089 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.400035794 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.396443276 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.39692237 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.394648976 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.397917241 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.397036833 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.398124836 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.395155914 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.403072625 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.39928772 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.395606851 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.405163304 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.402647567 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.395570731 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.394808668 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.395538142 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.396552346 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.39393552 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.392887461 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.394508085 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.404260499 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.401947372 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.395083075 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.397787822 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.400489382 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.39486855 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.395051635 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.393820004 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.396921067 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.395945639 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.396608768 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.396889771 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.393489887 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.393773206 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.395186931 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.395851132 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.399315269 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.398551954 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.394446332 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.398635778 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.397898227 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.397356301 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.396070507 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.393286077 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.394145206 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.39366196 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.395353207 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.395138848 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.396290123 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.400179193 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.397287552 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.395575576 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.394553495 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.393882449 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.398389206 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.404123349 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.399595164 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.393602755 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.394539265 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.397856041 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.400402315 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.396918476 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.394007753 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.395068915 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.398013436 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.394753309 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.393402728 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.393449948 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.3977972 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.408284891 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.399346788 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.395630814 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.397156669 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.402383184 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.396479838 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.39359124 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.39336978 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.399007901 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.399791594 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.39762589 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.393651436 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.403112972 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.400793132 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.396158604 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.39409894 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.400391162 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.399259696 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.399345386 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.396660457 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.393780928 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.399793528 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.409083488 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.397626397 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.404419621 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.415191112 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.401554036 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.39816363 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.395908323 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.39456352 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.395033 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.398363521 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.395827121 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.394318632 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.394161849 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.394201644 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.394949678 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.3993358 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.400888252 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.402659352 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.399806794 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.395853244 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.399587141 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.394734716 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.394190006 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.394737531 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.393949312 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.396252637 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.394851799 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.395704643 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.414932921 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.418422375 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.395614677 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.394263253 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.393348137 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.39889771 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.400783953 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.402108163 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.397617199 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.394275235 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.393811842 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.397164802 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.396720193 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.394566701 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.395944168 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.396127978 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.396299916 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.395060768 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.409516051 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.407388709 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.40066266 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.399230131 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.394878637 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.394096165 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.396793471 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.395270382 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.394364743 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.399798483 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.398825581 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.396928625 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.394683876 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.393816491 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.39854906 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.397527579 seconds)
  done (took 833.87579652 seconds)
  (13/24) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.396395852 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.394279292 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.393565828 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.393566149 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.395217863 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.394207245 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.39386601 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.394878614 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.394202214 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.395305251 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.39327758 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.394051919 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.395401379 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.39655589 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.395768004 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.395385136 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.393555183 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.394370439 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.394364291 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.395018444 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.395420057 seconds)
  done (took 30.684324028 seconds)
  (14/24) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.393735625 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.393823894 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.394761447 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.396303723 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.394237423 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.394254629 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.394423129 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.395782273 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.394081721 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.394645635 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.394169837 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.394567563 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.393876071 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.39406099 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.394101247 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.39405423 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.394299534 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.394181786 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.394109733 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.394751835 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.393781243 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.39365418 seconds)
  done (took 32.071603409 seconds)
  (15/24) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.393833587 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.394191258 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.395013967 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.39511912 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.394298703 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.393910277 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.394941589 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.393931435 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.394295392 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.396701196 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.395390155 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.398787984 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.399349615 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.397767053 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.398324162 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.395523947 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.394778593 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.394246945 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.394000437 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.394150124 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.402410758 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.398078801 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.394318703 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.394292724 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.395108004 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.394114605 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.393655053 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.394563142 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.3952403 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.395262009 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.39392187 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.395622353 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.398933412 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.397554298 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.395995184 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.394434569 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.394376923 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.394430718 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.393674392 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.404729896 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.406207411 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.393925139 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.413155862 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.407457909 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.39421991 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.398394468 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.399233348 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.394157539 seconds)
  done (took 68.432865203 seconds)
  (16/24) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.395520771 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.394495944 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.394049272 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.394452841 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.39410838 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.39396186 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.394303511 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.393243994 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.394317167 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.393987887 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.394005941 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.394364648 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.393783701 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.394340872 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.393852225 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.394312819 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.394014262 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.393607657 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.394204514 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.393729172 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.394435543 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.393981898 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.394501173 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.394361867 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.393643568 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.395951683 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.39402865 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.393806956 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.394258705 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.393850278 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.394057656 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.393780497 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.393723648 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.393899123 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.393460558 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.393369028 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.394162117 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.393872859 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.393731732 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.393556045 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.394138949 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.393480088 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.39376926 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.393912545 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.395181128 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.394122772 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.39432836 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.394114299 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.394188504 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.394081454 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.393875831 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.394352523 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.393788795 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.393836985 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.393944083 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.395725083 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.393969546 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.394054357 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.393386202 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.394547576 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.394102697 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.393659424 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.393981231 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.394104606 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.393951899 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.393787913 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.396214278 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.393720346 seconds)
  done (took 96.197388421 seconds)
  (17/24) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.394653274 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.394702983 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.394289408 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.394484892 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.393962893 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.394605219 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.393861665 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.394273222 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.394319273 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.394027589 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.394725032 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.393793191 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.394880116 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.394824929 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.394439144 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.395439138 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.394348105 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.394036349 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.396163417 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.39439898 seconds)
  done (took 29.285623444 seconds)
  (18/24) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.394065051 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.394164743 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.393996749 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.393785134 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.393428957 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.396815288 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.393793955 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.393986458 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.393513262 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.393875104 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.394615951 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.394385834 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.393795273 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.394298849 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.39454513 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.394240997 seconds)
  done (took 23.702434662 seconds)
  (19/24) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.394785591 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.394649897 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.394668887 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.39463044 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.393757318 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.393686003 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.394277396 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.393840452 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.394772293 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.394077422 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.393912195 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.394385944 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.395742396 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.394492542 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.393763715 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.394928376 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.394369469 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.39423714 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.394519926 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.39405841 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.395510828 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.393877256 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.394764507 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.394868416 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.394205017 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.394717657 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.394011357 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.394645357 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.3949514 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.394069726 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.394167391 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.394279787 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.393640166 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.394701877 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.394607979 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.394256142 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.394645053 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.394175518 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.394614458 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.394679342 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.394283114 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.39483618 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.395020114 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.396121008 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.394574253 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.394503246 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.395730064 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.394755141 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.394624544 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.394918381 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.39447673 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.394736281 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.39454622 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.395676034 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.394326628 seconds)
  done (took 78.097251977 seconds)
  (20/24) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.394069321 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.394074972 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.393809632 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.394131784 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.39390241 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.393479259 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.394234995 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.395687783 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.393951591 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.394357009 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.394352375 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.395182081 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.394481919 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.394284011 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.39421413 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.393968547 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.394151123 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.394286734 seconds)
  done (took 26.4926924 seconds)
  (21/24) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.396544061 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.394785068 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.393707936 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.394555582 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.394304397 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.394556548 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.39418915 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.393945104 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.393981693 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.394562633 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.394482031 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.395117314 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.394151839 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.394243685 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.394892402 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.393722496 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.394584662 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.394062926 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.394158526 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.393925332 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.394584639 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.394085091 seconds)
  done (took 32.07324278 seconds)
  (22/24) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.395149001 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.395464275 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.394351272 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.404528104 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.397463969 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.394462767 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.395206815 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.395109515 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.409140302 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.41509543 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.410426267 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.39874593 seconds)
  done (took 18.200861926 seconds)
  (23/24) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.394422124 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.394902826 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.394396618 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.394971743 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.394949571 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.395619638 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.394582749 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.39513723 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.394846111 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.395937049 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.395197792 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.394694839 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.394272011 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.394661358 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.394785038 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.394251796 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.39526583 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.394632031 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.394630252 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.3943286 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.394565664 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.394290882 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.394727796 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.3951139 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.393887416 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.3944575 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.394427955 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.397661804 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.394311324 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.394194294 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.394407559 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.394671673 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.39415483 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.395769718 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.394312394 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.394048658 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.394216274 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.394528676 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.394417877 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.394140128 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.39419722 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.394200194 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.394688814 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.394734193 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.394411467 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.395279841 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.394653849 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.394775505 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.395086201 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.39551054 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.394402343 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.394650172 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.394221362 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.394521848 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.394621024 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.395686089 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.396084515 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.395055677 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.396569024 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.395744422 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.39465748 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.39452163 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.394582683 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.396052695 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.39538346 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.394454333 seconds)
  done (took 93.455853881 seconds)
  (24/24) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.395207592 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.395035009 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.394903626 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.39672711 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.395273463 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.394318395 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.394844293 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.394457532 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.395256793 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.394539427 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.394488097 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.394405648 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.394723857 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.394548946 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.395063655 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.394579163 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.3948452 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.394743146 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.394611893 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.395294418 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.394760595 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.394812272 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.397205924 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.394706508 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.396058915 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.394816979 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.394895866 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.394773279 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.394662214 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.394622245 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.394844986 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.394453272 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.394567867 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.394234753 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.395063962 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.394759129 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.394818804 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.394601301 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.394354753 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.394716241 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.395102647 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.394675791 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.394960972 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.395009406 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.395896315 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.39504635 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.394783166 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.395321935 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.394808909 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.394685963 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.395882725 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.395993648 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.395759471 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.396503324 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.394689106 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.394378343 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.394745763 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.394957571 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.394568637 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.394732375 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.395445113 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.394571315 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.395821701 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.395038571 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.394718866 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.395048635 seconds)
  done (took 93.467366959 seconds)
done (took 1857.045119858 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.559428729 seconds)
    (2/16) benchmarking ("transpose", (20000, 20000))...
    done (took 2.478380124 seconds)
    (3/16) benchmarking ("ctranspose!", (20000, 20000))...
    done (took 2.74599089 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.46775777 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 2.429742477 seconds)
    (6/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.409910842 seconds)
    (7/16) benchmarking ("transpose", (600, 600))...
    done (took 1.942849866 seconds)
    (8/16) benchmarking ("ctranspose!", (600, 600))...
    done (took 1.592154386 seconds)
    (9/16) benchmarking ("ctranspose", (600, 400))...
    done (took 1.898127467 seconds)
    (10/16) benchmarking ("ctranspose", (600, 600))...
    done (took 2.133472727 seconds)
    (11/16) benchmarking ("transpose", (600, 400))...
    done (took 1.751624987 seconds)
    (12/16) benchmarking ("ctranspose!", (600, 400))...
    done (took 1.51480402 seconds)
    (13/16) benchmarking ("ctranspose", (20000, 10000))...
    done (took 2.435240821 seconds)
    (14/16) benchmarking ("ctranspose", (20000, 20000))...
    done (took 2.556051753 seconds)
    (15/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.790415772 seconds)
    (16/16) benchmarking ("ctranspose!", (20000, 10000))...
    done (took 2.425527226 seconds)
  done (took 35.527531257 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.432152018 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.404802513 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.505800189 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.400281198 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.423083878 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.570532271 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.449469404 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.405709782 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 2.391572193 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.426778602 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.394230431 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.420864049 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.399192174 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.395776743 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.745403735 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.572092976 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.635018856 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.393474182 seconds)
  done (took 31.762677325 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.79884071 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.445430243 seconds)
  done (took 5.640241511 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.416175475 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.398506713 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.400598153 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.397593673 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.393245823 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.390642818 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.396078836 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.391254934 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.389696721 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.512445635 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.400189147 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.409058637 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.400047119 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.399025929 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.395879037 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.440376508 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.538197249 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.396425232 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.3952161 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.403737896 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.397926448 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.50902363 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.437447166 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.395993269 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.51086866 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.391477815 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.400571247 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.405650675 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.528720072 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.396782294 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.397049485 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.401441101 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.399686242 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.17632381 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.873517523 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.390346444 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.407120615 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.408941255 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.39533964 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.557043862 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.398275372 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.403968637 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.391841895 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.850768733 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.536077105 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.515743456 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.400671404 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.397919481 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.398898343 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.468911088 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.397231291 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.399705781 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.435475482 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.264047385 seconds)
  done (took 89.007883512 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.464425537 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.388889001 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.59227931 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.399100073 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.394793255 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.388916522 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.389444222 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.647245007 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.451354132 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.389271475 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.668978063 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.908241769 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.392898638 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.457935827 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.442679132 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.444260693 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.392910906 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.389882943 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.390396637 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.398995241 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.8907711 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.391309704 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.391547414 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.596640851 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.42667717 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.933881013 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.389674547 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.389223074 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.389233024 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.39046579 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.884624764 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.399735681 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.450198682 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.391667145 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.652002031 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.752308402 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.725531675 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.391281756 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.390404591 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.391663951 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.393783894 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.913354617 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.749830571 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.389237152 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.390687953 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.912756182 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.390021987 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.396316128 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.390672537 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.661110721 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.389556918 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.390031013 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.38944027 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.390066714 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.389090306 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.461861323 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.473414113 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.923967792 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.389683996 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.389333362 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.468528711 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.389586703 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.400425256 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.39591132 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.390118091 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.752469042 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.293643592 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.392325948 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.750038903 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.867596107 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.390923831 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.948233209 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.390272801 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.438605907 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.551843401 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.389629754 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.38936816 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.004873881 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.416849009 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.390273713 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.728659274 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.393551829 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.67554999 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.400592302 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.394343235 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.90940953 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.392412083 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.456407636 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.389509688 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.390801958 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.389687544 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.392871107 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.655267967 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.438681978 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.389619867 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.389787802 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.42371157 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.389690804 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.391297504 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.399674171 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.949430514 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.393840039 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.389838516 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.39214496 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.40039675 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.388952315 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.389949384 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.393757575 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.673516069 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.389339973 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.393123537 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.393574881 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.39040545 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.395262005 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.598326511 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.397038188 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.669830642 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.395271459 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.38988215 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.391016292 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.39226985 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.400416982 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.389701993 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.392160439 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.38987699 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.724628819 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.390875291 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.389725157 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.389665611 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.389676889 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.389479407 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.391937747 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.445440626 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.395174077 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.109548044 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.439601522 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.445035818 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.389445813 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.394428273 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.389574476 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.402104809 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.393062108 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.768881031 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.654565333 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.292664537 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.39102773 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.390174357 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.212992611 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.468534274 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.589850978 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.393158151 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.390745652 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.696766242 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.294784851 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.39082337 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.390051567 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.389182396 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.668070084 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.389455761 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.771758474 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.904724253 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.391130011 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.398548818 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.178893699 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.390839436 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.391966035 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.391964653 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.670212617 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.390758425 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.390378001 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.389340732 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.389392219 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.391841706 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.390438201 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.398138152 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.389530195 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.389938259 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.938195635 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.59896842 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.390123624 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.399575884 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.935755683 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.396424205 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.389426125 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.393932827 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.395160897 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.389560218 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.449994932 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.394541862 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.467795152 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.39307721 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.400357051 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.950797333 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.39079488 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.391743706 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.600365541 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.029126855 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.391112026 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.390882865 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.390587688 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.446128055 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.95304958 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.455930465 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.667836937 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.393809856 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.427217493 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.39052775 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.404719735 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.955741743 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.390297172 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.390694122 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.100098836 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.390762668 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.20336444 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.389811035 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.390521009 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.010137079 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.391191004 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.396650064 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.389574133 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.390285429 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.69973417 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.390133594 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.425231002 seconds)
  done (took 516.497956193 seconds)
done (took 679.831409781 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.390197966 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.391083647 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.389210815 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.390873294 seconds)
  done (took 10.956926902 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.396191162 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.396277877 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.395716513 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.395603046 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.397143479 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.398279582 seconds)
  done (took 9.775762577 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.389578202 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.39126314 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.391221173 seconds)
  done (took 8.568367484 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.580988715 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.401351942 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.717916389 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.390971045 seconds)
  done (took 9.487491472 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.395831972 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.396148778 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.395688061 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.397228344 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.396699427 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.397782384 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.398030066 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.398156752 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.396987437 seconds)
  done (took 13.967409447 seconds)
done (took 54.151968799 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/240) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.545905015 seconds)
    (2/240) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.390465074 seconds)
    (3/240) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.390491389 seconds)
    (4/240) benchmarking ("map", abs, Float32, false)...
    done (took 1.675014438 seconds)
    (5/240) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.384752914 seconds)
    (6/240) benchmarking ("map", identity, Float64, true)...
    done (took 2.133436307 seconds)
    (7/240) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.234354994 seconds)
    (8/240) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.082843277 seconds)
    (9/240) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.601228558 seconds)
    (10/240) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.630962438 seconds)
    (11/240) benchmarking ("perf_sum2", Int64, true)...
    done (took 2.061471687 seconds)
    (12/240) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.403756196 seconds)
    (13/240) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.407883976 seconds)
    (14/240) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.391627558 seconds)
    (15/240) benchmarking ("perf_sum", Int8, false)...
    done (took 1.707804033 seconds)
    (16/240) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.913090017 seconds)
    (17/240) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.008496718 seconds)
    (18/240) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.391755512 seconds)
    (19/240) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.404956721 seconds)
    (20/240) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.054137511 seconds)
    (21/240) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.391829448 seconds)
    (22/240) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.391100606 seconds)
    (23/240) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.394761664 seconds)
    (24/240) benchmarking ("map", abs, Int8, true)...
    done (took 1.811229311 seconds)
    (25/240) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.149012498 seconds)
    (26/240) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.391384446 seconds)
    (27/240) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.395729067 seconds)
    (28/240) benchmarking ("perf_sum", Bool, true)...
    done (took 1.677551776 seconds)
    (29/240) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.392659487 seconds)
    (30/240) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.655112958 seconds)
    (31/240) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.393699128 seconds)
    (32/240) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.401479798 seconds)
    (33/240) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.805542452 seconds)
    (34/240) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.403002414 seconds)
    (35/240) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.742468156 seconds)
    (36/240) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.375547147 seconds)
    (37/240) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.406508296 seconds)
    (38/240) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.401077214 seconds)
    (39/240) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.081468418 seconds)
    (40/240) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.052894163 seconds)
    (41/240) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.392017426 seconds)
    (42/240) benchmarking ("perf_countequals", "Int8")...
    done (took 1.480145228 seconds)
    (43/240) benchmarking ("map", identity, Int8, true)...
    done (took 1.808420446 seconds)
    (44/240) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.401524126 seconds)
    (45/240) benchmarking ("perf_sum", Float32, false)...
    done (took 1.923071488 seconds)
    (46/240) benchmarking ("perf_sum", Bool, false)...
    done (took 1.700820213 seconds)
    (47/240) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.407195943 seconds)
    (48/240) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.610163367 seconds)
    (49/240) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.402697602 seconds)
    (50/240) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.881686272 seconds)
    (51/240) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.709483403 seconds)
    (52/240) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.40546785 seconds)
    (53/240) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.398777569 seconds)
    (54/240) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.193845771 seconds)
    (55/240) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.721270586 seconds)
    (56/240) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.391077333 seconds)
    (57/240) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.399375915 seconds)
    (58/240) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.391038832 seconds)
    (59/240) benchmarking ("map", abs, Int8, false)...
    done (took 1.516845644 seconds)
    (60/240) benchmarking ("map", abs, BigInt, true)...
    done (took 2.410584918 seconds)
    (61/240) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.402447415 seconds)
    (62/240) benchmarking ("perf_sum", Int8, true)...
    done (took 1.684808614 seconds)
    (63/240) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.626349827 seconds)
    (64/240) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.840273681 seconds)
    (65/240) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.391972764 seconds)
    (66/240) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.40519983 seconds)
    (67/240) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.781268717 seconds)
    (68/240) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.391000519 seconds)
    (69/240) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.026728231 seconds)
    (70/240) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.642373568 seconds)
    (71/240) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.390546649 seconds)
    (72/240) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.392350718 seconds)
    (73/240) benchmarking ("perf_sum", Float64, false)...
    done (took 1.889461407 seconds)
    (74/240) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.54840743 seconds)
    (75/240) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.058722071 seconds)
    (76/240) benchmarking ("map", identity, Bool, false)...
    done (took 1.509821168 seconds)
    (77/240) benchmarking ("map", identity, Int8, false)...
    done (took 1.508584481 seconds)
    (78/240) benchmarking ("perf_countequals", "Float32")...
    done (took 1.485226966 seconds)
    (79/240) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.403582511 seconds)
    (80/240) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.403203458 seconds)
    (81/240) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.390614982 seconds)
    (82/240) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.758879139 seconds)
    (83/240) benchmarking ("map", identity, Int64, true)...
    done (took 2.158296633 seconds)
    (84/240) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.398237241 seconds)
    (85/240) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.402169562 seconds)
    (86/240) benchmarking ("perf_sum4", Float64, true)...
    done (took 2.229827173 seconds)
    (87/240) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.392405609 seconds)
    (88/240) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.391422722 seconds)
    (89/240) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.758604796 seconds)
    (90/240) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.142579459 seconds)
    (91/240) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.404982881 seconds)
    (92/240) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.986148398 seconds)
    (93/240) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.390783367 seconds)
    (94/240) benchmarking ("perf_sum4", Int64, false)...
    done (took 2.32314521 seconds)
    (95/240) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.982177405 seconds)
    (96/240) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.391637253 seconds)
    (97/240) benchmarking ("perf_countequals", "Int64")...
    done (took 1.479426578 seconds)
    (98/240) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.534678737 seconds)
    (99/240) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.777468638 seconds)
    (100/240) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.391331462 seconds)
    (101/240) benchmarking ("perf_countequals", "Bool")...
    done (took 1.485119431 seconds)
    (102/240) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.885594224 seconds)
    (103/240) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.409285596 seconds)
    (104/240) benchmarking ("perf_sum4", Float32, true)...
    done (took 2.347459617 seconds)
    (105/240) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.39855666 seconds)
    (106/240) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.393359035 seconds)
    (107/240) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.550710266 seconds)
    (108/240) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.72253182 seconds)
    (109/240) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.907886586 seconds)
    (110/240) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.403924486 seconds)
    (111/240) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.390052525 seconds)
    (112/240) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.407407222 seconds)
    (113/240) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.742141263 seconds)
    (114/240) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.849453799 seconds)
    (115/240) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.392096818 seconds)
    (116/240) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.773865997 seconds)
    (117/240) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.155734112 seconds)
    (118/240) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.407130602 seconds)
    (119/240) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.404961789 seconds)
    (120/240) benchmarking ("map", identity, Bool, true)...
    done (took 1.809683207 seconds)
    (121/240) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.417585108 seconds)
    (122/240) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.06549139 seconds)
    (123/240) benchmarking ("map", abs, Float32, true)...
    done (took 2.13372441 seconds)
    (124/240) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.392048998 seconds)
    (125/240) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.395199793 seconds)
    (126/240) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.855085991 seconds)
    (127/240) benchmarking ("perf_sum", Int64, true)...
    done (took 1.941368481 seconds)
    (128/240) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.391658471 seconds)
    (129/240) benchmarking ("map", identity, Int64, false)...
    done (took 1.693040184 seconds)
    (130/240) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.961210228 seconds)
    (131/240) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.342054478 seconds)
    (132/240) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.392344191 seconds)
    (133/240) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.392204608 seconds)
    (134/240) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.671387563 seconds)
    (135/240) benchmarking ("perf_sum4", Float32, false)...
    done (took 2.31282216 seconds)
    (136/240) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.775998025 seconds)
    (137/240) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.967188672 seconds)
    (138/240) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.396942615 seconds)
    (139/240) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.119138393 seconds)
    (140/240) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.808934592 seconds)
    (141/240) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.392308058 seconds)
    (142/240) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.405761403 seconds)
    (143/240) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.392033257 seconds)
    (144/240) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.213921681 seconds)
    (145/240) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.39163544 seconds)
    (146/240) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.621941674 seconds)
    (147/240) benchmarking ("map", abs, BigInt, false)...
    done (took 2.412195326 seconds)
    (148/240) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.408340227 seconds)
    (149/240) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.391454457 seconds)
    (150/240) benchmarking ("map", abs, Bool, true)...
    done (took 1.804375231 seconds)
    (151/240) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.553098717 seconds)
    (152/240) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.390674509 seconds)
    (153/240) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.958369494 seconds)
    (154/240) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.634201764 seconds)
    (155/240) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.835716072 seconds)
    (156/240) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.537297308 seconds)
    (157/240) benchmarking ("perf_countequals", "Float64")...
    done (took 1.48552526 seconds)
    (158/240) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.390855786 seconds)
    (159/240) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.410650218 seconds)
    (160/240) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.403165661 seconds)
    (161/240) benchmarking ("map", identity, BigInt, false)...
    done (took 1.539119936 seconds)
    (162/240) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.407248829 seconds)
    (163/240) benchmarking ("map", identity, Float64, false)...
    done (took 1.681941253 seconds)
    (164/240) benchmarking ("perf_sum", Int64, false)...
    done (took 1.983407489 seconds)
    (165/240) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.407188714 seconds)
    (166/240) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.394837456 seconds)
    (167/240) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.969100113 seconds)
    (168/240) benchmarking ("map", identity, BigInt, true)...
    done (took 1.844708829 seconds)
    (169/240) benchmarking ("perf_sum2", Int64, false)...
    done (took 2.12227354 seconds)
    (170/240) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.39215423 seconds)
    (171/240) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.390870218 seconds)
    (172/240) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.390972752 seconds)
    (173/240) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.39472202 seconds)
    (174/240) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.391173506 seconds)
    (175/240) benchmarking ("map", identity, Float32, true)...
    done (took 2.140666176 seconds)
    (176/240) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.394169613 seconds)
    (177/240) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.39229717 seconds)
    (178/240) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.393276514 seconds)
    (179/240) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.403614221 seconds)
    (180/240) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.404738645 seconds)
    (181/240) benchmarking ("map", abs, Int64, false)...
    done (took 1.692416878 seconds)
    (182/240) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.414735419 seconds)
    (183/240) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.399236864 seconds)
    (184/240) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.398215156 seconds)
    (185/240) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.393383722 seconds)
    (186/240) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.391138772 seconds)
    (187/240) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.543301999 seconds)
    (188/240) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.336317476 seconds)
    (189/240) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.627722564 seconds)
    (190/240) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.391139792 seconds)
    (191/240) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.40754843 seconds)
    (192/240) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.390550771 seconds)
    (193/240) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.418326856 seconds)
    (194/240) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.878178328 seconds)
    (195/240) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.391909213 seconds)
    (196/240) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.40562007 seconds)
    (197/240) benchmarking ("map", abs, Float64, false)...
    done (took 1.688086805 seconds)
    (198/240) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.392657391 seconds)
    (199/240) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.503539656 seconds)
    (200/240) benchmarking ("perf_sum", Float32, true)...
    done (took 1.882885967 seconds)
    (201/240) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.392398153 seconds)
    (202/240) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.119830643 seconds)
    (203/240) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.410232511 seconds)
    (204/240) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.406003123 seconds)
    (205/240) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.389714593 seconds)
    (206/240) benchmarking ("perf_sum4", Float64, false)...
    done (took 2.240940488 seconds)
    (207/240) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.404643177 seconds)
    (208/240) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.540983209 seconds)
    (209/240) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.744524486 seconds)
    (210/240) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.954390419 seconds)
    (211/240) benchmarking ("map", abs, Int64, true)...
    done (took 2.162029286 seconds)
    (212/240) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.39224055 seconds)
    (213/240) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.390114744 seconds)
    (214/240) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.960383854 seconds)
    (215/240) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.548417114 seconds)
    (216/240) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.997087975 seconds)
    (217/240) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.392142062 seconds)
    (218/240) benchmarking ("perf_sum", Float64, true)...
    done (took 1.853294424 seconds)
    (219/240) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.11462166 seconds)
    (220/240) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.152163543 seconds)
    (221/240) benchmarking ("map", abs, Float64, true)...
    done (took 2.136378004 seconds)
    (222/240) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.550147637 seconds)
    (223/240) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.390549089 seconds)
    (224/240) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.39240638 seconds)
    (225/240) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.591115363 seconds)
    (226/240) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.390584414 seconds)
    (227/240) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.994081505 seconds)
    (228/240) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.15921121 seconds)
    (229/240) benchmarking ("map", identity, Float32, false)...
    done (took 1.676248136 seconds)
    (230/240) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.604103789 seconds)
    (231/240) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.390472632 seconds)
    (232/240) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.744336036 seconds)
    (233/240) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.398837703 seconds)
    (234/240) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.408692226 seconds)
    (235/240) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.391199782 seconds)
    (236/240) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.062288453 seconds)
    (237/240) benchmarking ("perf_sum4", Int64, true)...
    done (took 2.279184903 seconds)
    (238/240) benchmarking ("map", abs, Bool, false)...
    done (took 1.519053067 seconds)
    (239/240) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.916840701 seconds)
    (240/240) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.63880001 seconds)
  done (took 491.834554272 seconds)
done (took 493.23077835 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.410871656 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.41914163 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.399446579 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.399909352 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.415375173 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 2.39108461 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.418947578 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.404686873 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.40561394 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.40016753 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.399745961 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 2.06832195 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.402494345 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.4014186 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.399916646 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.400073192 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.402396852 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.404357254 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.399447313 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.412600394 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.398814017 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.399403183 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.400355225 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 2.063705304 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.403170456 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.40424338 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.404212439 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.405338829 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.415325468 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.404078777 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.404124057 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.414381238 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.402597623 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.398928502 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.397321082 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.405127845 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.41458594 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.412893109 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.403757469 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.407122701 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.390133561 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.400611721 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.402137037 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.400669578 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.400693457 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.407189103 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.402353686 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.409936189 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.40244626 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.400791111 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.390338359 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.402395376 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.404568097 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.400255725 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.417026765 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.401118478 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.409254357 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.407474744 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.415462051 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.407965518 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.391356839 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.40835207 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.404507452 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.39931792 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.408597246 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.397488524 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.398501427 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.407064457 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.391010461 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.409595618 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.390756415 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.410035994 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.403515422 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.401583618 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.406738833 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.389971857 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.398545529 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.399133751 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.410686554 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.399541236 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.413272527 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.401151046 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.404877579 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.400783615 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.400480405 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.390482381 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.41877475 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.402260265 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.413080206 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.414383487 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.408470329 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.415065235 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.403574756 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.398157939 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.412369 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.409937139 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.404331546 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.404255046 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.404768021 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.417069689 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.39090453 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.409074573 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.396620812 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.396679336 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.398774935 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.401084407 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.390596082 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.402713454 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.410779606 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.40800345 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.402993013 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.3909645 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.405993537 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.419910176 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.41243787 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.404073711 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.398120193 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.390998511 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.406987544 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.402101543 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.401252552 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.400405288 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.419436513 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.403230978 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.39712817 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.391358668 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.405530685 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.40077659 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.413616889 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.417373158 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.407652068 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.399578669 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.40401218 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 2.402404824 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.421217857 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.407725808 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.403808847 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.408150438 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.399648682 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.396898419 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.416949713 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.417019747 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.401533619 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.410674313 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.397086828 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 2.401757689 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.402514016 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.400956408 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.399981836 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.41306235 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.397876032 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.390774424 seconds)
done (took 236.146797395 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/18) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.396921581 seconds)
    (2/18) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.397394073 seconds)
    (3/18) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.53731119 seconds)
    (4/18) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.396847001 seconds)
    (5/18) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.545867499 seconds)
    (6/18) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.396343429 seconds)
    (7/18) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.396665843 seconds)
    (8/18) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.405813601 seconds)
    (9/18) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.3974926 seconds)
    (10/18) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.396419231 seconds)
    (11/18) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.53058821 seconds)
    (12/18) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.396360324 seconds)
    (13/18) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.53665843 seconds)
    (14/18) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.540513115 seconds)
    (15/18) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.529746194 seconds)
    (16/18) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.396110497 seconds)
    (17/18) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.397072461 seconds)
    (18/18) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.395994314 seconds)
  done (took 30.387738858 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.473502664 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.469410053 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.520201125 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.398170815 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.449114665 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.511379496 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.398218906 seconds)
  done (took 11.617437944 seconds)
  (3/5) benchmarking "types"...
    (1/91) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.405019629 seconds)
    (2/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.396243398 seconds)
    (3/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.485090863 seconds)
    (4/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.485842642 seconds)
    (5/91) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.397073876 seconds)
    (6/91) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.592149271 seconds)
    (7/91) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.410110945 seconds)
    (8/91) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.397001073 seconds)
    (9/91) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.460822611 seconds)
    (10/91) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.397338614 seconds)
    (11/91) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.39680517 seconds)
    (12/91) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.406349575 seconds)
    (13/91) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.393389301 seconds)
    (14/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.485302468 seconds)
    (15/91) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.410403229 seconds)
    (16/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.521468269 seconds)
    (17/91) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.401167691 seconds)
    (18/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.39702849 seconds)
    (19/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.634531211 seconds)
    (20/91) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.397052981 seconds)
    (21/91) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.405974218 seconds)
    (22/91) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.456061138 seconds)
    (23/91) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.409917956 seconds)
    (24/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.398283744 seconds)
    (25/91) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.406850576 seconds)
    (26/91) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.396778077 seconds)
    (27/91) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.396709164 seconds)
    (28/91) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.396711064 seconds)
    (29/91) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.473920126 seconds)
    (30/91) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.397040863 seconds)
    (31/91) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.394318565 seconds)
    (32/91) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.397014802 seconds)
    (33/91) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.397022237 seconds)
    (34/91) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.396347322 seconds)
    (35/91) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.396352279 seconds)
    (36/91) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.399057615 seconds)
    (37/91) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.39661482 seconds)
    (38/91) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.396756377 seconds)
    (39/91) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.3967435 seconds)
    (40/91) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.396244812 seconds)
    (41/91) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.39616471 seconds)
    (42/91) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.421542602 seconds)
    (43/91) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.396653243 seconds)
    (44/91) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.39673329 seconds)
    (45/91) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.396687467 seconds)
    (46/91) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.396158035 seconds)
    (47/91) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.455151364 seconds)
    (48/91) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.396312011 seconds)
    (49/91) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.396814055 seconds)
    (50/91) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.396512734 seconds)
    (51/91) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.459259693 seconds)
    (52/91) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.406015116 seconds)
    (53/91) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.39720862 seconds)
    (54/91) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.396722572 seconds)
    (55/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.398342782 seconds)
    (56/91) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.396648778 seconds)
    (57/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.635258278 seconds)
    (58/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.485347751 seconds)
    (59/91) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.396451602 seconds)
    (60/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.484027103 seconds)
    (61/91) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.396261501 seconds)
    (62/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.396345996 seconds)
    (63/91) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.396628389 seconds)
    (64/91) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.396024575 seconds)
    (65/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.474250488 seconds)
    (66/91) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.396874749 seconds)
    (67/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.484763591 seconds)
    (68/91) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.396672879 seconds)
    (69/91) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.594946137 seconds)
    (70/91) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.421728984 seconds)
    (71/91) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.397023678 seconds)
    (72/91) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.402284573 seconds)
    (73/91) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.402243928 seconds)
    (74/91) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.398394996 seconds)
    (75/91) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.404502324 seconds)
    (76/91) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.396895278 seconds)
    (77/91) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.400697297 seconds)
    (78/91) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.405635814 seconds)
    (79/91) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.397056678 seconds)
    (80/91) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.39717011 seconds)
    (81/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.614428185 seconds)
    (82/91) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.39716499 seconds)
    (83/91) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.415977423 seconds)
    (84/91) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.405998527 seconds)
    (85/91) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.397652675 seconds)
    (86/91) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.463308076 seconds)
    (87/91) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.396951099 seconds)
    (88/91) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.396950291 seconds)
    (89/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.497842684 seconds)
    (90/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.521390402 seconds)
    (91/91) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.460424527 seconds)
  done (took 135.204901612 seconds)
  (4/5) benchmarking "randstring"...
    (1/2) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.415001405 seconds)
    (2/2) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.401753832 seconds)
  done (took 4.214351318 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.401594047 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.397576748 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.39678833 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.396814816 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.39729916 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.397215022 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.396798639 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.399581543 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.398461871 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.396710439 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.396809457 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.39857579 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.397493116 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.397536396 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.396892899 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.396865625 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.397478255 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.396700416 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.396394258 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.397504765 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.006495031 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.397689253 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.399360621 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.397811666 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.397891525 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.397132511 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.423659894 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.397072581 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.396534543 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.407890542 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.398897858 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.397618457 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.397662928 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.402505382 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.397973287 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.397995984 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.397353488 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.398709882 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.396613063 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.396924791 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.39858546 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.397718002 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.396741098 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.39856838 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.400028739 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.398836474 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.399369579 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.425376797 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.3968777 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.398674303 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.399121164 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.39704705 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.396865406 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.400910363 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.399873829 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.401879814 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.39966636 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.397569424 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.397408465 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.399047362 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.397744093 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.397289897 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.400625215 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.398249213 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.397583233 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.398488506 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.399000033 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.398465868 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.398229242 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.397196369 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.399440718 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.397847001 seconds)
  done (took 102.736406033 seconds)
done (took 285.558614684 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.417107366 seconds)
  done (took 3.81494733 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.849921149 seconds)
  done (took 4.24793695 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 10.237986226 seconds)
  done (took 11.642435606 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.404193197 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.413706463 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.404668828 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.398211394 seconds)
  done (took 11.018344671 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.123878822 seconds)
  done (took 4.521506651 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.401280285 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.399832815 seconds)
  done (took 6.199562 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.687232683 seconds)
  done (took 4.085058367 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.645299782 seconds)
  done (took 4.046965155 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.412144019 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.392095128 seconds)
  done (took 6.211063554 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.391815027 seconds)
  done (took 3.789737928 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.409204686 seconds)
  done (took 9.808328315 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.393550887 seconds)
  done (took 3.793468876 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.424867091 seconds)
  done (took 3.823398439 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.36685224 seconds)
  done (took 4.764834445 seconds)
done (took 83.165492386 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.392088996 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.395489374 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.394890292 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.392216044 seconds)
  done (took 10.973059563 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.463716568 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.456697289 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.472710065 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.450228835 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.45525381 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.456269153 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.423324064 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.423086238 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.457540026 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.452510804 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.460036895 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.448857818 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.46536834 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.423135339 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.452454933 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.467581594 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.453259182 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.462756608 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.423009709 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.450923876 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.39791025 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.455743878 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.449389485 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.397421878 seconds)
  done (took 36.118788347 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.795500295 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.470741951 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.604959509 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.449859808 seconds)
  done (took 7.719239404 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.489502898 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.499998181 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.501949154 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.544647266 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.570474126 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.500238359 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.421952757 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.418598541 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.404746147 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.500856926 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.56461695 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.396932467 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.672326838 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.396657733 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.688589505 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.397151283 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.396921496 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.491935327 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.545601448 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.556309801 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.397797804 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.489528613 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.49512696 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.397524345 seconds)
  done (took 37.139200186 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.405781217 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.415007252 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.39923618 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 1.399177783 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.399230127 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.400236212 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 1.413180656 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 1.400026961 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.404641495 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 1.398135617 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 1.39830294 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 1.398724953 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.412095752 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.397797591 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.398342745 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.405380227 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.401690336 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.404792045 seconds)
    (19/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.398192922 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.399055624 seconds)
    (21/22) benchmarking ("var", "Int64")...
    done (took 1.408429715 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.405272198 seconds)
  done (took 32.262067258 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.392124716 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.3917718 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.743270104 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.648717668 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.391916183 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.393232551 seconds)
  done (took 14.359738729 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.462081942 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.484094284 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.399822765 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.713009653 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.779946883 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.400403387 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.399343267 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.517917592 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.77372443 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.862799965 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.437186476 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.445466183 seconds)
  done (took 20.074750095 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.394447156 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.392855803 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.405037765 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.40822695 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.447152525 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.402141565 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.404774719 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.392275029 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.448132613 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.451545599 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.402860553 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.448324062 seconds)
  done (took 22.397353485 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.176899516 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.287330078 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.397082667 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.615493128 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392901903 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.392006005 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.623989341 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.8514913 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.397581135 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668574463 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40451364 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.083871564 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.398848157 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393735388 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.392668837 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.392236571 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396970367 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.167521638 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392410641 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391843735 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.393803578 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.39743235 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.401126319 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.593908435 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.41497074 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392311149 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.654949079 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.392257586 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.662423895 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.634687449 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.636044637 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395221773 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.667784538 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.799282027 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.535649352 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.593525999 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397558015 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.395745163 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.436165245 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.394321185 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398152537 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.39392917 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.633551441 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393174408 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.391977664 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392042567 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.881807693 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.400606107 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.392172976 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.393840723 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.640055511 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.088401363 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.399686089 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.391515943 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406885694 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393193747 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.398508269 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.601411888 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.391950296 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403894107 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406677073 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.392350649 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.408298514 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400681331 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035219887 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.399616986 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.397558082 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.399484371 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402405539 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.399361894 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.416552039 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412850093 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.417026717 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391814761 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.158682627 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.405621947 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396682979 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.120852418 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391953837 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.392448239 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399279753 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393509987 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392088465 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.392097608 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.392418714 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.227665867 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398631491 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.397312114 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.409170777 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.851272463 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.593520319 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.334001088 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.393276954 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.393035561 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.394012473 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395910006 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.402368605 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40444319 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416331628 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.879540168 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404427809 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.399096662 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410089095 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.604431299 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402697538 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.399023908 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.882768219 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398075752 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.414191323 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.391892911 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.5897318 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.96381842 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.641592726 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393487347 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422576652 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.392391025 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.291790036 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399319349 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.39756771 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.403111399 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665025026 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.39351236 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392209582 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.51353181 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401529033 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.392427811 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404028368 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393639136 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.393793965 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.659790058 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39370297 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.635872812 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.39424987 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39242422 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.392219323 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3926869 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.394403318 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.393429888 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393955999 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.667677818 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392847529 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411348109 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393248492 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.40878974 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.400642693 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.398499769 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395251746 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405746108 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.391955693 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.637760351 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420417877 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.535667204 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420221763 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.392672172 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.394046609 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.398995167 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.398989443 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392623311 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.395690316 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410691084 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.400759135 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396648817 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.961926115 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392441954 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.392955976 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.286940122 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.408182517 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.513197844 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.400164739 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.590622864 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.395637021 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39166192 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.400676775 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.39593314 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392050091 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.635286909 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.402204509 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.564489982 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.850285305 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.966760725 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.877749385 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.393625581 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.392130972 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.392319204 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392975639 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392351902 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.39377262 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.590848801 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.646233221 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.396843678 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.972471461 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394946196 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.398312113 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.399984656 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.638779726 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.401405246 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393195986 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.403144266 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393595549 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395217685 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.638075912 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.670927466 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.408078716 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.39340959 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.910907838 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.40096289 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.394157546 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.392828989 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422697637 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.398095184 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.938741376 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397795931 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394644111 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.643097944 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.393298796 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.41094791 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.393345275 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403659303 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39419492 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.416686303 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401682475 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.591715468 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.399003427 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393901453 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.392403521 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.224837908 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912914551 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394833788 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.405593112 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.392186749 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.88118475 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413622624 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393341455 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.623365649 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.852999716 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392572325 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.851415207 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.392461999 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.090210627 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.639334744 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395256564 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394654444 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.405661483 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.640967726 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.605382057 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425522366 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.392479974 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402826894 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.410589019 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.940901827 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397602617 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.572227514 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.852343099 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405985628 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.394490076 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.555309869 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.410261909 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.769735899 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.393811013 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392748083 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.397098429 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.405011179 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.942527249 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.39307014 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392604231 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050875898 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.402191721 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.88067859 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392993088 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.593285765 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.638967346 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.70441423 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.394001292 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.40284894 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.408894576 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.643875025 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414989049 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.401043084 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904857017 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.24074758 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.400114044 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395296859 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.287641127 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392661562 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.662470591 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.393677283 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.399122941 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399900563 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.393483703 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392936534 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.393256118 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.424265083 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390935838 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.016327698 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.409675773 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419481621 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394449087 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415015195 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.401589485 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.409908374 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.954375235 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408646253 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401614432 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423077927 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.398309214 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39459167 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.407635529 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.392994326 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.3955969 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401581863 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.394689009 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.394402172 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.394719232 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.607294457 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.604732023 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.39269753 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.405383236 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.623315707 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.393803464 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.416583097 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.235580849 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.395444923 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.405778145 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394536409 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.39345204 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.411492784 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.516893326 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.590268733 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.637991942 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.639496899 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.769204054 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393610869 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396503623 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 2.21671977 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.187351693 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400991968 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.401659103 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.392537058 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.967977194 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.167684665 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.972008996 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.643065824 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.39690239 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419046326 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393076982 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.707222491 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39331448 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669065382 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406392097 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.40553254 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416207819 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39391144 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406219471 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.603740561 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.666988202 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392736809 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393513444 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393948201 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.393116055 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.641131887 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.605223602 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.162552309 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.114269771 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39273322 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.392658948 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.881998564 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669603875 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392758141 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393554243 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393149975 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.393215788 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.393181807 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.400718575 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397724805 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.679132513 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.63715329 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.803603693 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.634396616 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 16.271450331 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.266453078 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399587284 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.405647235 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396405199 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.589581576 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.943773685 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.09108408 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399734198 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.518206172 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.596572882 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.394832946 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.705403905 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.401686564 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.392430414 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393669916 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413527503 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.39441397 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.633851643 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.967251425 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401646225 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.400155583 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.402783808 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.396634719 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.589319451 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.399481012 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.23085703 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.400964078 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.637768919 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.425482793 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.39288568 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.952511868 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.640749028 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393985491 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.398240649 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.619717686 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.399954859 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.431808367 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.268053306 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.392882949 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.278729924 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.603804286 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.334176261 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40747747 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.09462409 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.964279207 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.407350063 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.026379117 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393648157 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393131349 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669256524 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.400818526 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.393181076 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.682164973 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.398472381 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.393098869 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.598406003 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.953480951 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.085368823 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.396779429 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393491074 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.395534309 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393953613 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.624534855 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406851902 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408768615 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.855497593 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.393601296 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404688202 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.027256136 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.400780956 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393037988 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.393546555 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392857162 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.401151862 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.443541579 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.398775281 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.39507123 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.603626591 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.9388925 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4158319 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.017365716 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.729437451 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.393719369 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.394128975 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.406228961 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.401879659 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392891377 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393230339 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392850185 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.404238215 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.276078212 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.393195789 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.635337544 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.400204047 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.604558327 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.604221788 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.405844634 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.592545841 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394699951 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.413003634 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.397139124 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395103222 seconds)
  done (took 1032.803041263 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.420124498 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.425289745 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.419713324 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.489380764 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.411620799 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.582682633 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.471538522 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.460011276 seconds)
  done (took 21.081142515 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.403347714 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.407932674 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.394427711 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.404637464 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.404813321 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.678162194 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.406147165 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.404424647 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.409684975 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.407790084 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.399393097 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.824507401 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.404480155 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.401372003 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.392940751 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.40452904 seconds)
  done (took 32.55918403 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.433476061 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.42926308 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.126392452 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.423939398 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.407581376 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.405868753 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.848178408 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.400234053 seconds)
  done (took 24.875187185 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.410631813 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.410734103 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.411017714 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.41142272 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.411564434 seconds)
  done (took 8.455139506 seconds)
done (took 1302.216468755 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.399090931 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.39950545 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.399688098 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.40148835 seconds)
  done (took 6.999562101 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.393905203 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.394532601 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.394614748 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.819560551 seconds)
  done (took 10.402723962 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.769870219 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.922958336 seconds)
  done (took 5.092797976 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.393611414 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.393735041 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.394394498 seconds)
  done (took 8.582297341 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.826561757 seconds)
  done (took 3.227082078 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.879471113 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.853990016 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.562743272 seconds)
  done (took 6.696731893 seconds)
done (took 42.400032806 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.393302407 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.171089097 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.550087081 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.393059179 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.553767892 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.551397982 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.648189518 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.39492145 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.399029281 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.393279805 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.40433412 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.553874938 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.64011881 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.17048743 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.639973984 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.172103183 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.555280993 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.400467741 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.395154972 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.39977343 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.651856096 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.400627198 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.393240457 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.39370993 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.555852123 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.540269792 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.39367952 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.173044668 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.393534631 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.40401209 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.540248996 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.39943737 seconds)
  done (took 83.420205503 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.393274563 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.394050657 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.401976537 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.39321845 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.395833521 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.394333631 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.394971931 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.39459581 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.394369685 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.394193906 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.393050518 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.393519214 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.395721458 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.393942806 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.394272921 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.394123637 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.403422146 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.393734377 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.393902036 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.394147125 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.393283999 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.397524275 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.393696651 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.393580362 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.393564256 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.393798308 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.393654223 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.393948855 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.393518063 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.399710698 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.398245821 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.395834284 seconds)
  done (took 78.042835526 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.393663591 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.394642779 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.397482411 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.393647315 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.39692265 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.393605757 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.393113556 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.393562831 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.393494893 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.394606394 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.393343089 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.393822181 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.396530058 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.393615379 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.395152337 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.393316686 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.393261494 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.412175946 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.392819872 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.401693576 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.39710018 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.393222891 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.399181574 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.393108443 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.394717249 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.394413442 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.393480403 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.404756348 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.393302351 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.39359204 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.394804064 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.394083163 seconds)
  done (took 78.058180466 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.620175848 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.401140188 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.40103479 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.39365557 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.401225139 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.398856064 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.393696541 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.627729742 seconds)
  done (took 15.037987793 seconds)
done (took 255.959199899 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.393301143 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.951756771 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.422019851 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.405186149 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.425253532 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.424220296 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.586432053 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.422319027 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.567676076 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.401561334 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.42111716 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.394592409 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.236281206 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.520558265 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.35115731 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.395550406 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.324489584 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.394348316 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.011227724 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.590885739 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.421628788 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.394023534 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.351998574 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.324272558 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.394436949 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.405898005 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.405402197 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.524171616 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.49283586 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.405576806 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.939667603 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.394280948 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.394887255 seconds)
  done (took 64.890381616 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.399264222 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.399257304 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.398879588 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.39897636 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.398743707 seconds)
    (6/30) benchmarking ("IntSet", "Int", "start")...
    done (took 1.399081605 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.399526815 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.399188658 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.399136748 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.398825102 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.399613796 seconds)
    (12/30) benchmarking ("IntSet", "Int", "next")...
    done (took 1.3994143 seconds)
    (13/30) benchmarking ("IntSet", "Int", "done")...
    done (took 1.398689342 seconds)
    (14/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.399317923 seconds)
    (15/30) benchmarking ("Set", "Int", "next")...
    done (took 1.399326875 seconds)
    (16/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.399114818 seconds)
    (17/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.398914782 seconds)
    (18/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.403830179 seconds)
    (19/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.399470913 seconds)
    (20/30) benchmarking ("Set", "String", "start")...
    done (took 1.399096974 seconds)
    (21/30) benchmarking ("Vector", "String", "next")...
    done (took 1.399365011 seconds)
    (22/30) benchmarking ("Set", "Any", "next")...
    done (took 1.40587249 seconds)
    (23/30) benchmarking ("Vector", "String", "start")...
    done (took 1.399128767 seconds)
    (24/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.399141228 seconds)
    (25/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.400476156 seconds)
    (26/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.398961705 seconds)
    (27/30) benchmarking ("Set", "String", "done")...
    done (took 1.399208213 seconds)
    (28/30) benchmarking ("Set", "Any", "done")...
    done (took 1.399423147 seconds)
    (29/30) benchmarking ("Set", "Int", "start")...
    done (took 1.399684189 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.399327618 seconds)
  done (took 43.390430176 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.399453593 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.145710262 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.405154818 seconds)
    (4/117) benchmarking ("IntSet", "Int", "intersect", "IntSet")...
    done (took 1.40547721 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.789658269 seconds)
    (6/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.745289627 seconds)
    (7/117) benchmarking ("Vector", "Int", "setdiff", "IntSet")...
    done (took 2.32258346 seconds)
    (8/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.622789941 seconds)
    (9/117) benchmarking ("IntSet", "Int", "union!", "Vector")...
    done (took 1.406106737 seconds)
    (10/117) benchmarking ("IntSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.487300326 seconds)
    (11/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.408369717 seconds)
    (12/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.400604919 seconds)
    (13/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.399903356 seconds)
    (14/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.135936678 seconds)
    (15/117) benchmarking ("Vector", "Int", "intersect", "IntSet")...
    done (took 1.433814359 seconds)
    (16/117) benchmarking ("Set", "Int", "setdiff", "IntSet")...
    done (took 2.070872755 seconds)
    (17/117) benchmarking ("Set", "Int", "intersect", "IntSet", "IntSet")...
    done (took 1.474966138 seconds)
    (18/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.79865705 seconds)
    (19/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.555625193 seconds)
    (20/117) benchmarking ("Set", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 2.394558129 seconds)
    (21/117) benchmarking ("IntSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.543110952 seconds)
    (22/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.524918455 seconds)
    (23/117) benchmarking ("IntSet", "Int", "setdiff!", "Vector")...
    done (took 1.404176276 seconds)
    (24/117) benchmarking ("IntSet", "Int", "symdiff!", "Set")...
    done (took 1.408809586 seconds)
    (25/117) benchmarking ("IntSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.434764413 seconds)
    (26/117) benchmarking ("IntSet", "Int", "<", "IntSet")...
    done (took 1.405422495 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.886989827 seconds)
    (28/117) benchmarking ("IntSet", "Int", "union!", "IntSet")...
    done (took 1.406479547 seconds)
    (29/117) benchmarking ("IntSet", "Int", "symdiff!", "IntSet")...
    done (took 1.406330159 seconds)
    (30/117) benchmarking ("IntSet", "Int", "union!", "Set")...
    done (took 1.408256 seconds)
    (31/117) benchmarking ("IntSet", "Int", "⊆", "self")...
    done (took 1.404542377 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.733944446 seconds)
    (33/117) benchmarking ("Set", "Int", "union", "IntSet")...
    done (took 2.409683016 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.394783097 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.88669895 seconds)
    (36/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.400849731 seconds)
    (37/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.051207586 seconds)
    (38/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.400625831 seconds)
    (39/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.633054316 seconds)
    (40/117) benchmarking ("IntSet", "Int", "intersect", "Set")...
    done (took 1.406866682 seconds)
    (41/117) benchmarking ("IntSet", "Int", "⊆", "Set")...
    done (took 1.400548462 seconds)
    (42/117) benchmarking ("IntSet", "Int", "symdiff", "Vector")...
    done (took 1.406869653 seconds)
    (43/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.394437895 seconds)
    (44/117) benchmarking ("IntSet", "Int", "union", "Set")...
    done (took 1.408478889 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.873250683 seconds)
    (46/117) benchmarking ("IntSet", "Int", "==", "self")...
    done (took 1.400291037 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "IntSet", "IntSet")...
    done (took 1.433475522 seconds)
    (48/117) benchmarking ("Set", "Int", "setdiff!", "IntSet")...
    done (took 1.741729259 seconds)
    (49/117) benchmarking ("IntSet", "Int", "intersect", "Vector")...
    done (took 1.404102081 seconds)
    (50/117) benchmarking ("Set", "Int", "symdiff", "IntSet")...
    done (took 2.394403511 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "IntSet", "IntSet")...
    done (took 2.394607355 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.872629024 seconds)
    (53/117) benchmarking ("IntSet", "Int", "setdiff!", "Set")...
    done (took 1.408118578 seconds)
    (54/117) benchmarking ("Vector", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 2.395840423 seconds)
    (55/117) benchmarking ("IntSet", "Int", "setdiff", "Set")...
    done (took 1.406852485 seconds)
    (56/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.902635268 seconds)
    (57/117) benchmarking ("IntSet", "Int", "setdiff!", "IntSet")...
    done (took 1.407042229 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.323590627 seconds)
    (59/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.739777609 seconds)
    (60/117) benchmarking ("IntSet", "Int", "symdiff", "IntSet")...
    done (took 1.406980761 seconds)
    (61/117) benchmarking ("IntSet", "Int", "union", "IntSet")...
    done (took 1.407234824 seconds)
    (62/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.402766387 seconds)
    (63/117) benchmarking ("IntSet", "Int", "union", "Vector", "Vector")...
    done (took 2.394549969 seconds)
    (64/117) benchmarking ("Set", "Int", "intersect", "IntSet")...
    done (took 1.475178393 seconds)
    (65/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.393935534 seconds)
    (66/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.395101934 seconds)
    (67/117) benchmarking ("Vector", "Int", "union", "IntSet")...
    done (took 2.395413839 seconds)
    (68/117) benchmarking ("IntSet", "Int", "⊆", "IntSet")...
    done (took 1.405425403 seconds)
    (69/117) benchmarking ("IntSet", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 1.412278389 seconds)
    (70/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.873404305 seconds)
    (71/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.394786052 seconds)
    (72/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.394980718 seconds)
    (73/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.599145316 seconds)
    (74/117) benchmarking ("IntSet", "Int", "⊆", "Vector")...
    done (took 1.400400964 seconds)
    (75/117) benchmarking ("Set", "Int", "union", "IntSet", "IntSet")...
    done (took 2.393922493 seconds)
    (76/117) benchmarking ("IntSet", "Int", "==", "IntSet")...
    done (took 1.400406988 seconds)
    (77/117) benchmarking ("IntSet", "Int", "union", "Vector")...
    done (took 1.405928865 seconds)
    (78/117) benchmarking ("IntSet", "Int", "intersect", "IntSet", "IntSet")...
    done (took 1.409835435 seconds)
    (79/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.400107917 seconds)
    (80/117) benchmarking ("Set", "Int", "⊆", "IntSet")...
    done (took 1.399829297 seconds)
    (81/117) benchmarking ("IntSet", "Int", "intersect", "Set", "Set")...
    done (took 1.495326502 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.519703446 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "IntSet")...
    done (took 1.742488875 seconds)
    (84/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.74510251 seconds)
    (85/117) benchmarking ("IntSet", "Int", "setdiff", "IntSet")...
    done (took 1.406508142 seconds)
    (86/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.526695915 seconds)
    (87/117) benchmarking ("empty", "Int", "<", "IntSet")...
    done (took 1.403814425 seconds)
    (88/117) benchmarking ("Set", "Int", "union")...
    done (took 1.733988726 seconds)
    (89/117) benchmarking ("IntSet", "Int", "symdiff")...
    done (took 1.400168109 seconds)
    (90/117) benchmarking ("empty", "Int", "⊆", "IntSet")...
    done (took 1.403622471 seconds)
    (91/117) benchmarking ("IntSet", "Int", "union")...
    done (took 1.403166418 seconds)
    (92/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.399867316 seconds)
    (93/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.282967088 seconds)
    (94/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.395068008 seconds)
    (95/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.399830989 seconds)
    (96/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.399772885 seconds)
    (97/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.559424057 seconds)
    (98/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.888413807 seconds)
    (99/117) benchmarking ("IntSet", "Int", "symdiff", "Set")...
    done (took 1.409974029 seconds)
    (100/117) benchmarking ("IntSet", "Int", "symdiff!", "Vector")...
    done (took 1.408247065 seconds)
    (101/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.553373864 seconds)
    (102/117) benchmarking ("IntSet", "Int", "union", "Set", "Set")...
    done (took 2.394737952 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "IntSet")...
    done (took 2.395374927 seconds)
    (104/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.741714054 seconds)
    (105/117) benchmarking ("Vector", "Int", "⊆", "IntSet")...
    done (took 1.400211392 seconds)
    (106/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.394441693 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.395442628 seconds)
    (108/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.525963848 seconds)
    (109/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.399662891 seconds)
    (110/117) benchmarking ("IntSet", "Int", "union", "IntSet", "IntSet")...
    done (took 1.410559311 seconds)
    (111/117) benchmarking ("IntSet", "Int", "intersect")...
    done (took 1.40456672 seconds)
    (112/117) benchmarking ("IntSet", "Int", "setdiff", "Vector")...
    done (took 1.404114173 seconds)
    (113/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.620940333 seconds)
    (114/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.74160627 seconds)
    (115/117) benchmarking ("IntSet", "Int", "intersect!", "IntSet")...
    done (took 1.406398976 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.397619038 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.776933481 seconds)
  done (took 203.918734215 seconds)
  (4/6) benchmarking "optimizations"...
    (1/19) benchmarking ("Vector", "concrete", "Void")...
    done (took 1.402459094 seconds)
    (2/19) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.394867597 seconds)
    (3/19) benchmarking ("Set", "concrete", "Void")...
    done (took 2.394733803 seconds)
    (4/19) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.393918267 seconds)
    (5/19) benchmarking ("Dict", "abstract", "Void")...
    done (took 2.395101706 seconds)
    (6/19) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.395170832 seconds)
    (7/19) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.395219615 seconds)
    (8/19) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.3940133 seconds)
    (9/19) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.402058586 seconds)
    (10/19) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.399359696 seconds)
    (11/19) benchmarking ("Dict", "concrete", "Void")...
    done (took 2.394061302 seconds)
    (12/19) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.394065267 seconds)
    (13/19) benchmarking ("BitSet", "Int8")...
    done (took 2.394326982 seconds)
    (14/19) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.395064041 seconds)
    (15/19) benchmarking ("Set", "abstract", "Void")...
    done (took 2.393811837 seconds)
    (16/19) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.394274593 seconds)
    (17/19) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.394371932 seconds)
    (18/19) benchmarking ("Vector", "abstract", "Void")...
    done (took 1.400530131 seconds)
    (19/19) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.394831957 seconds)
  done (took 44.923363071 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/76) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.39949492 seconds)
    (2/76) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.852721427 seconds)
    (3/76) benchmarking ("IntSet", "Int", "in", "true")...
    done (took 1.400870287 seconds)
    (4/76) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.399863161 seconds)
    (5/76) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.449076026 seconds)
    (6/76) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.401060872 seconds)
    (7/76) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.39467034 seconds)
    (8/76) benchmarking ("Vector", "String", "push!")...
    done (took 1.548183008 seconds)
    (9/76) benchmarking ("Set", "String", "in", "false")...
    done (took 1.400036481 seconds)
    (10/76) benchmarking ("Set", "Int", "first")...
    done (took 1.399677706 seconds)
    (11/76) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.400403724 seconds)
    (12/76) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.408814065 seconds)
    (13/76) benchmarking ("IntSet", "Int", "push!", "overwrite")...
    done (took 1.404095871 seconds)
    (14/76) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.89627299 seconds)
    (15/76) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.400786944 seconds)
    (16/76) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.896073367 seconds)
    (17/76) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.400306795 seconds)
    (18/76) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.399828546 seconds)
    (19/76) benchmarking ("Dict", "String", "getindex")...
    done (took 1.399584665 seconds)
    (20/76) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.895735034 seconds)
    (21/76) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.394650436 seconds)
    (22/76) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.73575769 seconds)
    (23/76) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.451188256 seconds)
    (24/76) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.893211152 seconds)
    (25/76) benchmarking ("IntSet", "Int", "length")...
    done (took 1.401272688 seconds)
    (26/76) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.400163203 seconds)
    (27/76) benchmarking ("Vector", "Int", "last")...
    done (took 1.399520507 seconds)
    (28/76) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.875357489 seconds)
    (29/76) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.400054033 seconds)
    (30/76) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.886286681 seconds)
    (31/76) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.401855166 seconds)
    (32/76) benchmarking ("Vector", "Int", "length")...
    done (took 1.399562335 seconds)
    (33/76) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.451583954 seconds)
    (34/76) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.452629385 seconds)
    (35/76) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.409124744 seconds)
    (36/76) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.735929025 seconds)
    (37/76) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.420510314 seconds)
    (38/76) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.510450144 seconds)
    (39/76) benchmarking ("Dict", "Int", "first")...
    done (took 1.402761106 seconds)
    (40/76) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.402292705 seconds)
    (41/76) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.878067444 seconds)
    (42/76) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.402395167 seconds)
    (43/76) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.403267832 seconds)
    (44/76) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.405189823 seconds)
    (45/76) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.853720077 seconds)
    (46/76) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.853248963 seconds)
    (47/76) benchmarking ("Dict", "Int", "length")...
    done (took 1.400186029 seconds)
    (48/76) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.400124094 seconds)
    (49/76) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.875193854 seconds)
    (50/76) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.858055237 seconds)
    (51/76) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.854857238 seconds)
    (52/76) benchmarking ("Vector", "Int", "push!")...
    done (took 1.545342452 seconds)
    (53/76) benchmarking ("IntSet", "Int", "first")...
    done (took 1.400394132 seconds)
    (54/76) benchmarking ("Vector", "String", "getindex")...
    done (took 1.399811013 seconds)
    (55/76) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.734404251 seconds)
    (56/76) benchmarking ("Vector", "Int", "first")...
    done (took 1.400250781 seconds)
    (57/76) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.877876345 seconds)
    (58/76) benchmarking ("IntSet", "Int", "pop!", "unspecified")...
    done (took 1.403902742 seconds)
    (59/76) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.400095677 seconds)
    (60/76) benchmarking ("Set", "String", "in", "true")...
    done (took 1.400003363 seconds)
    (61/76) benchmarking ("IntSet", "Int", "in", "false")...
    done (took 1.399632181 seconds)
    (62/76) benchmarking ("IntSet", "Int", "pop!", "specified")...
    done (took 1.403451217 seconds)
    (63/76) benchmarking ("Vector", "Any", "push!")...
    done (took 1.547078493 seconds)
    (64/76) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.888936964 seconds)
    (65/76) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.734149674 seconds)
    (66/76) benchmarking ("IntSet", "Int", "push!", "new")...
    done (took 1.403429787 seconds)
    (67/76) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.395243116 seconds)
    (68/76) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.394493198 seconds)
    (69/76) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.401824011 seconds)
    (70/76) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.451755827 seconds)
    (71/76) benchmarking ("Set", "Int", "length")...
    done (took 1.400894766 seconds)
    (72/76) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.408606555 seconds)
    (73/76) benchmarking ("IntSet", "Int", "last")...
    done (took 1.400678962 seconds)
    (74/76) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.449704015 seconds)
    (75/76) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.745141868 seconds)
    (76/76) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.397654038 seconds)
  done (took 125.544867422 seconds)
  (6/6) benchmarking "deletion"...
    (1/19) benchmarking ("Vector", "String", "pop!")...
    done (took 1.501129795 seconds)
    (2/19) benchmarking ("Set", "Int", "filter!")...
    done (took 1.845787502 seconds)
    (3/19) benchmarking ("Set", "String", "filter!")...
    done (took 2.395295841 seconds)
    (4/19) benchmarking ("Set", "Any", "pop!")...
    done (took 2.394275869 seconds)
    (5/19) benchmarking ("Vector", "Any", "filter")...
    done (took 1.515432046 seconds)
    (6/19) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.500960653 seconds)
    (7/19) benchmarking ("Vector", "String", "filter")...
    done (took 1.620554277 seconds)
    (8/19) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.468454395 seconds)
    (9/19) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.45914604 seconds)
    (10/19) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.50185616 seconds)
    (11/19) benchmarking ("Vector", "String", "filter!")...
    done (took 1.518829677 seconds)
    (12/19) benchmarking ("Set", "Int", "pop!")...
    done (took 1.851912875 seconds)
    (13/19) benchmarking ("Set", "Any", "filter!")...
    done (took 2.395192036 seconds)
    (14/19) benchmarking ("Vector", "Int", "filter")...
    done (took 1.480733067 seconds)
    (15/19) benchmarking ("Set", "String", "filter")...
    done (took 1.980169415 seconds)
    (16/19) benchmarking ("Set", "Int", "filter")...
    done (took 1.643709541 seconds)
    (17/19) benchmarking ("Set", "Any", "filter")...
    done (took 2.251090792 seconds)
    (18/19) benchmarking ("Set", "String", "pop!")...
    done (took 2.39615936 seconds)
    (19/19) benchmarking ("IntSet", "Int", "pop!")...
    done (took 1.537226628 seconds)
  done (took 35.65928257 seconds)
done (took 519.726786846 seconds)
SAVING RESULT...
DONE!
