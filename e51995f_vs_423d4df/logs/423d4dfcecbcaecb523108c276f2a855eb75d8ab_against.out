cset: moving following pidspec: 5548
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.171644657 seconds)
loading group "string"... done (took 0.45782934 seconds)
loading group "linalg"... done (took 10.310782879 seconds)
loading group "parallel"... done (took 0.225791034 seconds)
loading group "find"... done (took 1.890077802 seconds)
loading group "tuple"... done (took 1.997239827 seconds)
loading group "dates"... done (took 1.338776803 seconds)
loading group "micro"... done (took 0.457182725 seconds)
loading group "io"... done (took 0.442310026 seconds)
loading group "scalar"... done (took 44.826600039 seconds)
loading group "sparse"... done (took 12.933271279 seconds)
loading group "broadcast"... done (took 1.057140459 seconds)
loading group "union"... done (took 10.540813729 seconds)
loading group "simd"... done (took 4.550766397 seconds)
loading group "random"... done (took 8.943807841 seconds)
loading group "problem"... done (took 2.255692519 seconds)
loading group "array"... done (took 25.862303246 seconds)
loading group "misc"... done (took 0.910583986 seconds)
loading group "sort"... done (took 3.626722191 seconds)
loading group "collection"... done (took 15.774064006 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.600235791 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.111381683 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.176693773 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119731082 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.243197969 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.138824429 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.138226826 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.098674829 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.780479964 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.180741139 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.123416162 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.361016351 seconds)
done (took 5.948583658 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.261053231 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.082095029 seconds)
    (2/2) benchmarking "String"...
    done (took 0.146585533 seconds)
  done (took 1.076673616 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.088427321 seconds)
    (2/2) benchmarking "String"...
    done (took 0.08179443 seconds)
  done (took 1.021153593 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.084485104 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.330844682 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.082604938 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.480323439 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.140494304 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.086756056 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.082825559 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.082038917 seconds)
  done (took 2.136442151 seconds)
done (took 5.430429452 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.377478343 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.829850398 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.480132228 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.141740783 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.279973243 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.23260242 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.203764981 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.216250348 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.088982004 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.085621815 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.171410823 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.415596949 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.300712268 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.757170469 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.09844704 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.099958609 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.137156342 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.776147438 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.084274871 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.133507188 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.372683511 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.120018389 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.106500386 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.149514711 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.190647708 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.111185183 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.159821118 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.08371008 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.685636508 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.12410624 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.207993515 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.088371114 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.158075532 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.128892563 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.180317665 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.120628399 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.694037851 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.194488739 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.145572021 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.086624626 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.705763314 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.10588314 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.170144629 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.098789189 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.088272321 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.172450896 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.117244519 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.083837913 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.109558871 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.084148902 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.165631286 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.482454538 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.111287744 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.185969521 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.100645416 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.693944504 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.107371153 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.256493961 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.133590979 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.110493019 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.082917568 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.085948627 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.152403954 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.089460347 seconds)
  done (took 19.395436309 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.145052415 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.135457319 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.085325376 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.134618329 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.099419117 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.083580396 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.087402707 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.086352797 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092327018 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.142867174 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.090020514 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.152264542 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.084012706 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.08537938 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.148227603 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204502476 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.089848304 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.095222025 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.086790426 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.107041503 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.1131982 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.09007915 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.084498696 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.08378045 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.144692224 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.216349343 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.116209649 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.116156435 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.084587145 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.102060566 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.134749658 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.133546861 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.085278343 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081910989 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.122737933 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.130242127 seconds)
  done (took 4.945321878 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.187092392 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.107742031 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.166061217 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.138371191 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.113184468 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.152110544 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.152041364 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.232940301 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.682772429 seconds)
    (10/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 0.161135512 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.176897247 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.169603951 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.149774683 seconds)
    (14/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.087011559 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.098382123 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083680717 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.085999652 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.083974284 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.559631106 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.175003646 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.11348438 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.137657785 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085735524 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.089446647 seconds)
    (25/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.396067083 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083813402 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.083878499 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084213978 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.086265281 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.183936072 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083608219 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.589665012 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.085375646 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082729538 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130819044 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.214359967 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091855217 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.121562084 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084571775 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.083277207 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.085355695 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.088348372 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.083325895 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.107456665 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119081911 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.12872314 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.104374485 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.087033852 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.173188456 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.084002107 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.09171501 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.828319784 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.172864437 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.150674679 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.083943567 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.165866438 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.102817787 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084401968 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.083539892 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.161536463 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.096129052 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.083403527 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.085114126 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083651823 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.083774269 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.08603123 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.321255194 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.08723846 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.104369467 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085372788 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084555595 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.085924963 seconds)
    (73/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 0.385927857 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089584062 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088627284 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.103737871 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.085938453 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.083538016 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.082531895 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.084694591 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.084371276 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.105847726 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104965138 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.084917332 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.145949412 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.086181453 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.103629743 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114901859 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.085290404 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.083104289 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129498094 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083858647 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.086433794 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.158055488 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082985951 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.103562852 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102103582 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.135593231 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.084918585 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.188147432 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.084645005 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.106189844 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.08966815 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12966844 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.085825372 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084748787 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089165552 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.084061631 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.085445701 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.147560075 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.085256273 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.086274467 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.084571153 seconds)
    (114/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.085065617 seconds)
  done (took 21.432812844 seconds)
done (took 46.628434868 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.342850791 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083582033 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.085461926 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.083913423 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.086884786 seconds)
  done (took 1.609819578 seconds)
done (took 2.511759892 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.177408534 seconds)
    (2/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103268898 seconds)
    (3/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.098693032 seconds)
    (4/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "10-90")...
    done (took 0.099768031 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.106701964 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.10355563 seconds)
    (7/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082555709 seconds)
    (8/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098325055 seconds)
    (9/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.122249325 seconds)
    (10/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09701556 seconds)
    (11/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.103964424 seconds)
    (12/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "50-50")...
    done (took 0.084614961 seconds)
    (13/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098331671 seconds)
    (14/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.10160181 seconds)
    (15/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.099799668 seconds)
    (16/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.085450571 seconds)
    (17/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.098849706 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.099886698 seconds)
    (19/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.115792933 seconds)
    (20/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "90-10")...
    done (took 0.082966813 seconds)
    (21/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082273041 seconds)
    (22/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.103724514 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.082970868 seconds)
  done (took 3.258254809 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094451962 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.101630734 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094982055 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.096715479 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082511476 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.095183914 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093555174 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102138844 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097258289 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08885256 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.082728326 seconds)
  done (took 1.940271958 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09565989 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098291139 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084452726 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098318522 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082881618 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.095329344 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.095202355 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099734177 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097301829 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089161844 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08271834 seconds)
  done (took 1.928673326 seconds)
done (took 8.035078725 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.446187796 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.690192281 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.15223073 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.207312834 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.249377671 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.184280695 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.286448297 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.165136986 seconds)
  done (took 4.400814243 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.124343641 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.152168712 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.090502972 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.090117872 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.087966998 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.08733804 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.085575099 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.086080873 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.088418503 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.087793799 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.084726467 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.104754463 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.086069279 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.087120045 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.088195061 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.086178015 seconds)
  done (took 2.475501296 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.128712064 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.111586219 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.089283178 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.090037944 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.090851651 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.092063332 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.093147459 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088577296 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.087203236 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.087930502 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092314186 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.107048126 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.088090716 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.086676263 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.09010048 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.109773541 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087502155 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.089439821 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.107194629 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090479912 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.088470409 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.087251481 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087919281 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.08817405 seconds)
  done (took 3.25857724 seconds)
done (took 11.046008613 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.101647185 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084513619 seconds)
  done (took 1.097329574 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.159972599 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.154913776 seconds)
  done (took 1.235143902 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.089921619 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.083377366 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089230727 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.087092208 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.08413859 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.085048488 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.087595412 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.084530613 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.083986306 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.083753149 seconds)
  done (took 1.782673028 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.086727818 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.085848518 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.087831747 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.152435334 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.086570021 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.084774752 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.084374317 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.08364649 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.084226567 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.083058551 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.084536237 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.111505048 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.084335062 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.091972684 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.085844081 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085604825 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.085434534 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.085189901 seconds)
  done (took 2.557662737 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.083820629 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.084728125 seconds)
  done (took 1.094091914 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082984505 seconds)
    (2/7) benchmarking "second"...
    done (took 0.08332575 seconds)
    (3/7) benchmarking "month"...
    done (took 0.08601492 seconds)
    (4/7) benchmarking "year"...
    done (took 0.084615017 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.083792034 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.085147387 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.083900474 seconds)
  done (took 1.5138085 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.441154629 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.203740072 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.294335385 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.102665538 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.084348394 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.296437457 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.084585463 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084620433 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.090858356 seconds)
  done (took 2.643640526 seconds)
done (took 12.848206367 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.095597122 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.161499753 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.490378598 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.10543594 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.084323671 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.152677667 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.200948995 seconds)
done (took 2.225611535 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.248919528 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.142453434 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.11094307 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.085189998 seconds)
  done (took 1.510275545 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.086514416 seconds)
    (2/2) benchmarking "read"...
    done (took 0.093046022 seconds)
  done (took 1.112323309 seconds)
done (took 3.55369698 seconds)
(10/20) benchmarking "scalar"...
  (1/24) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08465004 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.109980733 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.084415981 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.085094616 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.084592224 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.085559895 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.084140461 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.084403562 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.084197943 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.084262794 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.086485436 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.084111394 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084070352 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103250594 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083970076 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084135206 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.085367666 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.084436038 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084689075 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.084623083 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084387617 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086560193 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.084715139 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.084831756 seconds)
  done (took 3.043995246 seconds)
  (2/24) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084530154 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084573273 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.084381987 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.083678095 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.084016087 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.084034565 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.083885772 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.084265726 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086464027 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.084459494 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084328234 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.083622043 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.083550346 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084823005 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101638081 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.084458458 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.084392802 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085906876 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084600316 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.087285677 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.084449757 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084152179 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.084283465 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084288774 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.084862059 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084689839 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.0843995 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.085124565 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.084158008 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.102237173 seconds)
  done (took 3.510821809 seconds)
  (3/24) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.092105324 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.082067807 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.08472054 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.087570147 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.084979846 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.085285685 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.082498902 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.084824728 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.085065083 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.084386322 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.085504178 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.087354138 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.085159563 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.085850586 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.102803939 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.086154526 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.087506268 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.086617744 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.085832879 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.086041071 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.086333806 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.085422765 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.088421347 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.085834317 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.084998261 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.082048246 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.085381665 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.085509789 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.103405706 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.085703251 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.086232385 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.085733719 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.085337651 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.09038564 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.086030411 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.085626973 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.086492145 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.082496602 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.086178121 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.083175805 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.083659344 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.085532791 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.084909662 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.104798851 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.087905251 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.086046273 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.086184709 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.086300452 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.085912132 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.086380412 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.085477689 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.085053355 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.086310699 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.086127767 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.086264295 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.085167675 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.085155018 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.101216765 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.084758687 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.084257205 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.086503687 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.082543424 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.086070038 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.085887665 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.090076005 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086226218 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.088288811 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.085706447 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.0857848 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.087482859 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.087034507 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.089340651 seconds)
  done (took 7.191529566 seconds)
  (4/24) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.08511762 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085731974 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.085647648 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.085455021 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085255026 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.08715463 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.084572568 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084764968 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085035495 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084446377 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084763696 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.084893845 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084800296 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.084865601 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103388249 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.084368483 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087406047 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085422872 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.084539672 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085515815 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.084903051 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.087342866 seconds)
  done (took 2.843854552 seconds)
  (5/24) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084963857 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.087893315 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.084957114 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.088369683 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090113469 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08914332 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.085828482 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086902531 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085202896 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085433155 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086177959 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085308308 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.087200768 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086688076 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103801674 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088283376 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088485587 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087783795 seconds)
  done (took 2.53176453 seconds)
  (6/24) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.084448457 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.084354632 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085224428 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.085369395 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.085171116 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084827976 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086016804 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.084966184 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084980717 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.087473018 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.085051107 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084870975 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.085095502 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085342323 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10250728 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.087683029 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.085167084 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085367848 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085655154 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085396656 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.08533988 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.087652748 seconds)
  done (took 2.848015693 seconds)
  (7/24) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086515473 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.085970686 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.086339166 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085932669 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.086822292 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.085307711 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.085323808 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.086305127 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.089238019 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.085045285 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089034648 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085263699 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.08939525 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.085934871 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103996139 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08674201 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.086007557 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086174679 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086167732 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.086245807 seconds)
  done (took 2.701324959 seconds)
  (8/24) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.14483586 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.089209994 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.086421787 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088235258 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.088551372 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.087238104 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087812139 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.08789428 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.087415383 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.090127868 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.088492356 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.087565696 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108558911 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.086879324 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.088288931 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.088206969 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.088183488 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.088136548 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.088298929 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.088357946 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088199799 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088552571 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.088590968 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09105551 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08801017 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.088544162 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107764824 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087428128 seconds)
  done (took 3.521460975 seconds)
  (9/24) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085218324 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.084349983 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.086038594 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.086581673 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.086040504 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.086229209 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.08924445 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.085640966 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084974532 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085545103 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.085333946 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.085834072 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.085506069 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.085558351 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.103397197 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.087247205 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086217729 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.089466717 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08617018 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08639265 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.08621518 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086060532 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.086248125 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.086141606 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085563225 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.085948999 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086015292 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087059929 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087991147 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.104468226 seconds)
  done (took 3.580912457 seconds)
  (10/24) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.088384809 seconds)
    (2/2) benchmarking "in"...
    done (took 0.08817075 seconds)
  done (took 1.134707013 seconds)
  (11/24) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.086249292 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085796735 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.086887565 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.086410438 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086479301 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085864931 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.086226419 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089114702 seconds)
  done (took 1.651855569 seconds)
  (12/24) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.146901205 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.160140456 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.08661703 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.093363444 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.173326624 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.1592622 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.119417982 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.088201373 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.089807897 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.087792451 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.147986748 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.088113841 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091924418 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091184588 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090622369 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.112959777 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.085109734 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.092107625 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.088866807 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.087719184 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.090003032 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096132011 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092507111 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.090629578 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.089673711 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.106173628 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.093164094 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.090661776 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090725534 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.112218708 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088505202 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.088975239 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.090945953 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.08799443 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.086751366 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.165197026 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095589923 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090906583 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.101064051 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08869445 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112580997 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.0860372 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.092880473 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.094311675 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093186968 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.088401452 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.088559567 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.087604776 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.088431325 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.090852497 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.087988177 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089925491 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.08750558 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093254524 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.095936238 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113757203 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.08775841 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.091159083 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.090110291 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.093609428 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.092073024 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.091144364 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093254287 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.088150667 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093259193 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.095093383 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091170223 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.086557889 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.088016179 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.107026437 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.094730904 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.116407872 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.094096857 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.089360729 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088727618 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.086632335 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093618704 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088910997 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090453239 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.089503644 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.088640177 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08940107 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11221537 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089173448 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.09168653 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.091074967 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.087759453 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.090231282 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.088765006 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097501024 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.087715255 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.087209593 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.089125369 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.091805415 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.090917445 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.089746884 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.106855361 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09065828 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.089657704 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.088316965 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088047622 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09096352 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.093874497 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090026605 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089008173 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.091911059 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.158427479 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091404468 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.11589917 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.090890726 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089274212 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.092249757 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.093199839 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.087795636 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091934877 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.088744462 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.089549892 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.090569775 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.087920039 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.089403038 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094203567 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.094765148 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.088030451 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.106105112 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.089865178 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.088163256 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089907819 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.08927844 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.088225396 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.087092404 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.088030381 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.093576339 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.091499558 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.091903521 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089330835 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091385048 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.086739889 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.107270398 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.089666485 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093880574 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.092881107 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.091326054 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.094364183 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.092692486 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.089694395 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.091537674 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.090286203 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.090226562 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.091835376 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.08797164 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.087240802 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108502807 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.090484089 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.088998501 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.092877665 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089543375 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.091184931 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.088330115 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088435547 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.090041166 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088246752 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.08839057 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087837664 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.088810206 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.092183397 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.109606562 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.086643045 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.089064996 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.0907414 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.090576224 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.089008459 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.088766289 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.091470543 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.089314202 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.08673041 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.088946811 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.094774177 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.095708551 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.093864033 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.109108849 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.089559163 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093555211 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.088870611 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.093523558 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.088581497 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088818818 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.089603954 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.094802203 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.090861568 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090090676 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.091902367 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.089515886 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093837437 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092971332 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.10882703 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.08618599 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.09123686 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.090558313 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.096419244 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.091354494 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.08901024 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088984689 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091701457 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089579514 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.09259313 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.088673287 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.089616593 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.089469346 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.110344289 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.092209942 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089820644 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093195766 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091968149 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.088898886 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089084998 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088593867 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.092243906 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.08842512 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.089021042 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.090858079 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.092591795 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.089024687 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.116380737 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.087781291 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094053383 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094053498 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.09258094 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.089470615 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.088901715 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09032409 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.091628269 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094267615 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.090106079 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.092619319 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092888469 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.089547298 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.109691196 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.09176977 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.089093283 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.088256624 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.091385612 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.089069822 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.095252598 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.089678145 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.089555217 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092239138 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090106634 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.093501675 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.087701509 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.092291512 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.089120187 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.108098178 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.087486737 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.094917714 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.093265047 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.089657217 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090896774 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090802523 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.08922311 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092560036 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.089377607 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.089740419 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.090858152 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092967389 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.091630712 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.113452025 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.089256826 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089771913 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.089728142 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.088710729 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.093131471 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.09024402 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.093569108 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091756918 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.090490796 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091436574 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.092060033 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.089633426 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088845702 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.088680399 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.108325586 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091705041 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092730645 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.092540626 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.092918299 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.089311174 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095977092 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.089783305 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094723133 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.091818848 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.088555005 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.09111359 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.092609293 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.091958445 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.108875503 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.088783223 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.091360438 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.092854135 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.092471357 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091033612 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.090995067 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.093549507 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09231812 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093073137 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.092356084 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.092543435 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.092586069 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.090310947 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.111025877 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.088614721 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.091724104 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.089918871 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.093018662 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.092622217 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.091675206 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.094541985 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.089956124 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.092112792 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.091669152 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.091549041 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.090065378 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.089963983 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.109334976 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090762101 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.08823792 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.091707151 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.08740885 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08825946 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.087770711 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.086117804 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.089799631 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.092276004 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.089976133 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092544644 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.089975226 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.092710749 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09156435 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.106432045 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.088023883 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.087413697 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.08952969 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095245941 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.093109217 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.094948445 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.09024812 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.091403734 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.08817264 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.090204606 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.090090473 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.092395319 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.088771156 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.112713278 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.092388301 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.091832776 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.091201775 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.094643369 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090762383 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092674292 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.091607568 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.089733339 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.09123029 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.08901187 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.089955763 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.090703015 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.095716922 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.110426173 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.088717857 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.092447573 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.090453286 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.090239533 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.092218857 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.090909658 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.092208774 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095020127 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.091899813 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.094417871 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.091442687 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.088512503 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.09196242 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.11036615 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.088442248 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.089179055 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.093581857 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09375522 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.092704829 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.09384998 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.09299459 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09425284 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092326564 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.089297798 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.090079627 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.090671754 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.089784846 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.091294384 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.111314026 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093060119 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.089035506 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.092509655 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090402301 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.090047818 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.094590834 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.09078475 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.090283909 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.091407368 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.093205794 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.093597243 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.094164541 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.092155506 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115929108 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088348836 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.092682335 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095635433 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.091057682 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.092545422 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.093383018 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.092135345 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.092534583 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.091260318 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.090943208 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.093079164 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.090809032 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.095901342 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.110790439 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.089584418 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.091012698 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.089898105 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.090626515 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091450636 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091871865 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.093736244 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09696506 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.090633341 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.089694913 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.091498713 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.092311762 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.093501565 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.094891715 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112667432 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.092565127 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.090918122 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.09226122 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.096820966 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09295175 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.095401571 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.091755321 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.094076016 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.091378735 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.094373068 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.090216553 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.093086755 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092084738 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.115133597 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.09460373 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.091803646 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092996396 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.094241551 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.09091461 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.092915007 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.094710012 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.09336132 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.089492934 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.092510111 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.090676934 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095448925 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.09070224 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112067648 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.090881289 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.092039462 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.09600496 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091919855 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.091528772 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.093458589 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.090153708 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.094601852 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.093105849 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.091479284 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.089525795 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.092153447 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.091615732 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.114679783 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.090217056 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.089367464 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093044286 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094909272 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.091945693 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.095189425 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09131477 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.091081193 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.089695292 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.092022904 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.092247134 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.093955131 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.092652448 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.091943046 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.111953315 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.087939979 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.093949349 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094940451 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.093441085 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.090333394 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.090286532 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.091074588 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.091628869 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.092831418 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.091132592 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.091304448 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094461805 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.093706914 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.110514977 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.090709917 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.087213597 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.094434811 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093123214 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.092581155 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095388136 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.095128429 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096409597 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.092885392 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.091887739 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.091741793 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.090481686 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.093450755 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.092160618 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.112244842 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09309078 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096099518 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.092464213 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.091427392 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.094043474 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.09558186 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.093296018 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091750246 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.091983446 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.094826206 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.096961989 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.092768576 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096555308 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114122474 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.088863169 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.089540928 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.091062677 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.096710132 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.091963214 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.092082892 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.093480362 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.092099774 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.090955486 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.09574561 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.091905895 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093679697 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.094854799 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.116823449 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.090607133 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.090607398 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.092769785 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.091902618 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.092849842 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.094923636 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.091626079 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.091113654 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.091754347 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.094854096 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094590072 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.09385525 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.09219689 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.092469047 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.110944909 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.091105535 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.094624337 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094509557 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.090466662 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.09362193 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.092178946 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.094899768 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.095208856 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.093503868 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.094903493 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.094052697 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095062172 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.090453256 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.114817186 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.090030172 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.094627824 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.093278992 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.093363044 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.095217909 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095577233 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093003346 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.091922621 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.095112669 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.096352742 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.092152223 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.093977226 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.090449199 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.093842487 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.110756496 seconds)
  done (took 56.839144076 seconds)
  (13/24) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104671471 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088939103 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.09100071 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090725732 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090646881 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.091338974 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091749886 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.091160826 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.091097407 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091324158 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.090548895 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.093271668 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091021693 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.090379549 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11102012 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.088883064 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.091773517 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091139259 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091208354 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09128603 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091660785 seconds)
  done (took 2.972020617 seconds)
  (14/24) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.089423519 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.091420128 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090880788 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.092114533 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090847513 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091214728 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.090336596 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090391251 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.090675324 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090664421 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.090266115 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090257297 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.093305676 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.090915828 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11101059 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088230794 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.091080255 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09172403 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.09035426 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.091391221 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091501975 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.091322931 seconds)
  done (took 3.048503497 seconds)
  (15/24) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.090539554 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.095006053 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.093276557 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.091585128 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.093369325 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.091319216 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.092895438 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.091511487 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.093532445 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.09294632 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.09302633 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.093424839 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.095253458 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.090712405 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.112624312 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.091098433 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.094108546 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.09260624 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.093449718 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.091089589 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.093077835 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.091386563 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.091417817 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.095473158 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.093310951 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.093805417 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.091636228 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.092205485 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.112725058 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.091017533 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.090180135 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.092835234 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.092681669 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.093755108 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.096173567 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.092291694 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.093069345 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.092149601 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.09111529 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.092369528 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.091765016 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.093284437 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.09241191 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.110427427 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.088925002 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.095598243 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.093273316 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.092098267 seconds)
  done (took 5.535385367 seconds)
  (16/24) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.089783491 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.116293659 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.091370317 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.117204989 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.090652626 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.091250976 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.092135773 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.117293187 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.093465173 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.091108188 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.09068797 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.091353595 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.11369592 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.08963624 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.089296513 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.091980749 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.091678956 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.091377606 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.091674987 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.093935986 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.092188906 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091747684 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.091414082 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.091765263 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092348152 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.092444037 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.091678217 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.113518568 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.090061834 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.092112725 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.094102523 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091903679 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.091148516 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.091462112 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.091063715 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.092546786 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.091058901 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.091807954 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09209522 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.091551282 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.091412105 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094578602 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.113715994 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.117301308 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.088392102 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.089874474 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.092385238 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.092114965 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.092550904 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.093437902 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.092745786 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.092564284 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.095080698 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.093113212 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.091910005 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.092005579 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.11312773 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.090256607 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.089458502 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.090533549 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.092893791 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092147996 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.092293256 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.092143646 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.093825973 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.092283309 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.093400779 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092161363 seconds)
  done (took 7.574081933 seconds)
  (17/24) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089194971 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09173125 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.092490567 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.092530087 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092331266 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092462255 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.091490231 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.094032234 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.091573276 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.090998428 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09218156 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091679372 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092561307 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092487609 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.112504947 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090362776 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092864718 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.092464385 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094880738 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092215948 seconds)
  done (took 2.906028402 seconds)
  (18/24) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.090603663 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090038545 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.092677981 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.09328305 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.093037162 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.093677004 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.092890604 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092274666 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092988738 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094653966 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.092414641 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.092379254 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092395574 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093250156 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.11275746 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.09030029 seconds)
  done (took 2.543376115 seconds)
  (19/24) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.091046884 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.091129695 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.171544626 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.089317161 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.09464545 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.095731938 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.09246749 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.092834105 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.092379514 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.100470709 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.092626678 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.114491663 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.10097217 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.091581561 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.093207838 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.094587749 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.092440368 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.092409597 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.092437294 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.175869563 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.09177777 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.090572757 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.092239591 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.117267587 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.091486947 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090556266 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.095690894 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.092834731 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.096535644 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.091945664 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.092633225 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.092216846 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.093565403 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.092266957 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.09270633 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.092049653 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.092156523 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.095767802 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.113675609 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.089217854 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.091999103 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.092630131 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.092488665 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.09202662 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.093145227 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.091897773 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.09238259 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.093659312 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.094998641 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.092679164 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.092032883 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.092971624 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.114929088 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.089741983 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089758938 seconds)
  done (took 6.404615162 seconds)
  (20/24) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090022936 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.090310123 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.093607557 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.093319831 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.095503762 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.09373836 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.092762541 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.096668613 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093421147 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.092773378 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.094031631 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.097106685 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093080823 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.092998252 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.114750805 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093016104 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.090272121 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.094749171 seconds)
  done (took 2.749262698 seconds)
  (21/24) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090248152 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.089753001 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092213791 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.093302159 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.098253505 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092631158 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093331269 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.093095854 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096735742 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.092811163 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092792591 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.09290481 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092912327 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.092607947 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.113291914 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089952105 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.089777438 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093509288 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.093395444 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095985361 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.093532842 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093275496 seconds)
  done (took 3.115151113 seconds)
  (22/24) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.101056477 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.159008534 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.104962444 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.171982297 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.096340305 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.095936089 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.102811783 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.095971044 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.133752661 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.093701891 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.095193892 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.095912955 seconds)
  done (took 2.398137227 seconds)
  (23/24) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091408114 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090552932 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.09327155 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093664272 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093448541 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094281913 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094146268 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096016422 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09331901 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093411299 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09356309 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093719831 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09354896 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093345462 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114769004 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091843751 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092815414 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09439041 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096571095 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093549713 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094008354 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094245737 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094733477 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094239791 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094166343 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093603385 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095002978 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093305495 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093904654 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116996782 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091107138 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094643233 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094421216 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094513313 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095048054 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093519628 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093731769 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094074483 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09436363 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093821374 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.096209727 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093735758 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093871994 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114917521 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09083844 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091840208 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094001237 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094729595 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093836454 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093562697 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094413927 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098805145 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093909691 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094091132 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094836347 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09416812 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093345198 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093906896 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114484813 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091061175 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091994793 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093895242 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095359844 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096828099 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094516393 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094571822 seconds)
  done (took 7.337814481 seconds)
  (24/24) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091172122 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.091528005 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093835192 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095096505 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095287112 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095713054 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095275719 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095485076 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097159148 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094694758 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094706721 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094353241 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095506695 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094029933 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114931088 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091194306 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091314429 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091388325 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090552474 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093555894 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091745492 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092953605 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095142323 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09440897 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095036237 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094274396 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093883542 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094538576 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094239093 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115741742 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093820339 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093646057 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095842612 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.095715027 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094977464 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094437641 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095257768 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094378431 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093976477 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094488606 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095275371 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097279799 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09463399 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115195999 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09116998 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09346098 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095086858 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095543355 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095009013 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095166257 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095029825 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09451258 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097654237 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095262193 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094471058 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094666041 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094650113 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095297585 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115802353 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091111493 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094667973 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096142712 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097469356 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097898852 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095257338 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095319721 seconds)
  done (took 7.379085442 seconds)
done (took 146.295523003 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.162511637 seconds)
    (2/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.191006747 seconds)
    (3/16) benchmarking ("ctranspose!", (20000, 20000))...
    done (took 0.265663098 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.153594739 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.139705673 seconds)
    (6/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.1230552 seconds)
    (7/16) benchmarking ("transpose", (600, 600))...
    done (took 0.091387452 seconds)
    (8/16) benchmarking ("ctranspose!", (600, 600))...
    done (took 0.093240488 seconds)
    (9/16) benchmarking ("ctranspose", (600, 400))...
    done (took 0.099368011 seconds)
    (10/16) benchmarking ("ctranspose", (600, 600))...
    done (took 0.114555078 seconds)
    (11/16) benchmarking ("transpose", (600, 400))...
    done (took 0.092205176 seconds)
    (12/16) benchmarking ("ctranspose!", (600, 400))...
    done (took 0.093553145 seconds)
    (13/16) benchmarking ("ctranspose", (20000, 10000))...
    done (took 0.147503889 seconds)
    (14/16) benchmarking ("ctranspose", (20000, 20000))...
    done (took 0.21826076 seconds)
    (15/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.092553771 seconds)
    (16/16) benchmarking ("ctranspose!", (20000, 10000))...
    done (took 0.129746837 seconds)
  done (took 3.259412663 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.182723973 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.269992442 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110078519 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.096434607 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097783295 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.111188586 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.092539912 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.143936381 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094901781 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.092199757 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.091435297 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.092137711 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.092191637 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.091346577 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.094510388 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.093063566 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.094503319 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.094852888 seconds)
  done (took 3.101112664 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.109392655 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.134937718 seconds)
  done (took 1.311590216 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.115245851 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.126419226 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.268226449 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.119411417 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.107549842 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.102445788 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.125121067 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.127184042 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.167359616 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.093958626 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.095774062 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096940811 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.114142916 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.095565569 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.103837212 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.097404206 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.117030117 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.095043002 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.094572825 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.094633442 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.138220678 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.093084206 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.091045008 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.092390301 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.15990869 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.094041026 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.096897996 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.099372718 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.094129222 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093579937 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.09410809 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.09370481 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.093876868 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.115825932 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.094688601 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.092885752 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.093719983 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.091251004 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.09508073 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.093834466 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.092888061 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.091551441 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.09414361 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.0924643 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.091818622 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.093131469 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.091862291 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.115278565 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.091152483 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.096111358 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.091192655 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.091319193 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.091051816 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.093462169 seconds)
  done (took 6.747538528 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.498541339 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.127020421 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093740682 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.553514666 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094491496 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095671896 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.48435264 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115715798 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.203658328 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.521341962 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.107075491 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.093688333 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.10916779 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.204600337 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.145655103 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.224584332 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.413380856 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.097026085 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.116872754 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.105253487 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.093577362 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095998992 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.095960145 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.693000886 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.091776108 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092406586 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.091495178 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.091952518 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.126538498 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.094861365 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.09184074 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.108320369 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.215715714 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.101178419 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.091393081 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.092520367 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092940339 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.101634368 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.176014241 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.103561732 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.170100969 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092045939 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.115155987 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.092778236 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.094966904 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093291801 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.094010009 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.108036889 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.105630756 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091609367 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.095163413 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.093678788 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.094373289 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.0972927 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.098562546 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.229767469 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.252099975 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093415943 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093884397 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.094322206 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.175182621 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.100082688 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.105662098 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.108263424 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.101667319 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.092857159 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.043083129 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.104792413 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.092556158 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.092919243 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.115353682 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.093343969 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.09462466 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.154059299 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.671146475 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.092779283 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.092831295 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093010091 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.166212085 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.09316963 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092530544 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.10060515 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.091432421 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.094895516 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.11394174 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.091977389 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.10543227 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.188867772 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.092238935 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.092249245 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093441543 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.104250364 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.094975727 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.193142458 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.100701642 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.09809888 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.185752042 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.09319372 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.117682552 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.104624197 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.093535206 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.107379525 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097309439 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.09951618 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09708692 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.099538426 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.104781847 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.10269139 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094540798 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.094807313 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.104884183 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.097475691 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.114003789 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.10622204 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.692882168 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.103742796 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.094973985 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.099072814 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092471253 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.103717902 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092335704 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.177683573 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094951101 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102427491 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.0923845 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.092727382 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.115578597 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.094965158 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098722869 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.094425787 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.092401004 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.09590841 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.198807216 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.101532154 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.092403854 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.173530884 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.173863348 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.092418781 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.108285292 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.095109388 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.128466248 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.096935193 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.092651312 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092463435 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.041890786 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.096286248 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.09411661 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092844153 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.17558018 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092957693 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101749973 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.093452091 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092587078 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.044292865 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.097183326 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.115774514 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.099076848 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092999766 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.093354981 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.092232613 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092544322 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.097099922 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.105454344 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092505338 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.093766865 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.093361462 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.102778168 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.092484142 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.093344668 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.115610111 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.094758759 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.094794749 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.095930901 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.099143472 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.106999499 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.095323688 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.095681121 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.867301948 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093942171 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.094161882 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.10584628 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093025166 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.198269659 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116993887 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.103981535 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.10154852 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.093425375 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.22633526 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.102129498 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.178569867 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.09730876 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.10757231 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093203454 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.09267435 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.09744127 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.094260344 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.092899227 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.094549706 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.115296746 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.093364868 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.149189022 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.094249041 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.204598607 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.092481811 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.106562191 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095452224 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093901706 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.195238274 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093862447 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.097184214 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.094220825 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093085099 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.116966988 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 5.861056402 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.09408323 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.097161576 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095524557 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.09471934 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.103459818 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.093697957 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092676049 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092160767 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.095962947 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.180014223 seconds)
  done (took 40.715457734 seconds)
done (took 56.199096346 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.161512822 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.136984436 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.186248361 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.114798593 seconds)
  done (took 1.766522939 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.180045978 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.111442685 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.17177152 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.092119741 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.175372307 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.115290533 seconds)
  done (took 1.944616996 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.123235827 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.112104389 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.109076728 seconds)
  done (took 1.435976651 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.152611283 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.147152652 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.416598755 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.340530214 seconds)
  done (took 2.250870642 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.207735947 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.095444763 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.094285325 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.173711858 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.178584547 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.132197601 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.09722309 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.103515973 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.100182959 seconds)
  done (took 2.322666218 seconds)
done (took 10.815968093 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/240) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.252219837 seconds)
    (2/240) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.191050628 seconds)
    (3/240) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.215596054 seconds)
    (4/240) benchmarking ("map", abs, Bool, false)...
    done (took 0.229812698 seconds)
    (5/240) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.103315529 seconds)
    (6/240) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.42407704 seconds)
    (7/240) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.110186016 seconds)
    (8/240) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.222309847 seconds)
    (9/240) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.112960346 seconds)
    (10/240) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.168417795 seconds)
    (11/240) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.119378758 seconds)
    (12/240) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.179997222 seconds)
    (13/240) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.220930982 seconds)
    (14/240) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.106702825 seconds)
    (15/240) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.198943196 seconds)
    (16/240) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.17747122 seconds)
    (17/240) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.205696294 seconds)
    (18/240) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.098396051 seconds)
    (19/240) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.092280303 seconds)
    (20/240) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.107556051 seconds)
    (21/240) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.151214002 seconds)
    (22/240) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.196295929 seconds)
    (23/240) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.155617484 seconds)
    (24/240) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.200841891 seconds)
    (25/240) benchmarking ("map", abs, Float64, true)...
    done (took 0.173907258 seconds)
    (26/240) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.121262748 seconds)
    (27/240) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.220229851 seconds)
    (28/240) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.178715457 seconds)
    (29/240) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.203900789 seconds)
    (30/240) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.127568422 seconds)
    (31/240) benchmarking ("perf_sum", Bool, true)...
    done (took 0.104222159 seconds)
    (32/240) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.102678869 seconds)
    (33/240) benchmarking ("map", identity, Bool, false)...
    done (took 0.137350428 seconds)
    (34/240) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.095105675 seconds)
    (35/240) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.179452601 seconds)
    (36/240) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.092370202 seconds)
    (37/240) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.09891462 seconds)
    (38/240) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.102627977 seconds)
    (39/240) benchmarking ("map", identity, BigInt, true)...
    done (took 0.173243282 seconds)
    (40/240) benchmarking ("perf_countequals", "Int8")...
    done (took 0.107313456 seconds)
    (41/240) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.098623454 seconds)
    (42/240) benchmarking ("perf_sum", Int8, true)...
    done (took 0.104791496 seconds)
    (43/240) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.161534995 seconds)
    (44/240) benchmarking ("perf_sum", Bool, false)...
    done (took 0.094755329 seconds)
    (45/240) benchmarking ("map", abs, Float64, false)...
    done (took 0.093240099 seconds)
    (46/240) benchmarking ("perf_sum", Float64, true)...
    done (took 0.106484067 seconds)
    (47/240) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.166228317 seconds)
    (48/240) benchmarking ("map", identity, Int8, false)...
    done (took 0.232454275 seconds)
    (49/240) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.097253113 seconds)
    (50/240) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.110348993 seconds)
    (51/240) benchmarking ("map", abs, Float32, true)...
    done (took 0.17004258 seconds)
    (52/240) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.207178013 seconds)
    (53/240) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.107760015 seconds)
    (54/240) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.179613577 seconds)
    (55/240) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.110124311 seconds)
    (56/240) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.220140171 seconds)
    (57/240) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.176206713 seconds)
    (58/240) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.147793208 seconds)
    (59/240) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.258988448 seconds)
    (60/240) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.205514708 seconds)
    (61/240) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.111992436 seconds)
    (62/240) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.221023297 seconds)
    (63/240) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.100755452 seconds)
    (64/240) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.095679386 seconds)
    (65/240) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.097115797 seconds)
    (66/240) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.116552216 seconds)
    (67/240) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.103292206 seconds)
    (68/240) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.118203065 seconds)
    (69/240) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.095765947 seconds)
    (70/240) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.100589194 seconds)
    (71/240) benchmarking ("map", abs, Int64, true)...
    done (took 0.156017876 seconds)
    (72/240) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.136449174 seconds)
    (73/240) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.115022412 seconds)
    (74/240) benchmarking ("map", identity, Float64, false)...
    done (took 0.138541679 seconds)
    (75/240) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.119208536 seconds)
    (76/240) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.109769838 seconds)
    (77/240) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.092664389 seconds)
    (78/240) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.206277872 seconds)
    (79/240) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.096499084 seconds)
    (80/240) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.152283142 seconds)
    (81/240) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.095253375 seconds)
    (82/240) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.093703398 seconds)
    (83/240) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.219062613 seconds)
    (84/240) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.114231736 seconds)
    (85/240) benchmarking ("perf_sum", Float32, false)...
    done (took 0.106557271 seconds)
    (86/240) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.186328579 seconds)
    (87/240) benchmarking ("perf_countequals", "Float32")...
    done (took 0.103387518 seconds)
    (88/240) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.094288777 seconds)
    (89/240) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.097324171 seconds)
    (90/240) benchmarking ("map", identity, Float32, false)...
    done (took 0.141288071 seconds)
    (91/240) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.099742145 seconds)
    (92/240) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.151240112 seconds)
    (93/240) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.152336452 seconds)
    (94/240) benchmarking ("map", identity, Int8, true)...
    done (took 0.108241441 seconds)
    (95/240) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.107521577 seconds)
    (96/240) benchmarking ("perf_countequals", "Int64")...
    done (took 0.102587347 seconds)
    (97/240) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.134060873 seconds)
    (98/240) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.099403485 seconds)
    (99/240) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.168208516 seconds)
    (100/240) benchmarking ("perf_countequals", "Bool")...
    done (took 0.10421684 seconds)
    (101/240) benchmarking ("map", abs, Float32, false)...
    done (took 0.093315355 seconds)
    (102/240) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.196877121 seconds)
    (103/240) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.097465665 seconds)
    (104/240) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.106361217 seconds)
    (105/240) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.09578614 seconds)
    (106/240) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.13483828 seconds)
    (107/240) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.096491807 seconds)
    (108/240) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.092992517 seconds)
    (109/240) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.098120576 seconds)
    (110/240) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.096059976 seconds)
    (111/240) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.096597788 seconds)
    (112/240) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.092988092 seconds)
    (113/240) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.099500164 seconds)
    (114/240) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.095031631 seconds)
    (115/240) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.095819601 seconds)
    (116/240) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.094614512 seconds)
    (117/240) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.14272105 seconds)
    (118/240) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.134265398 seconds)
    (119/240) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.221966669 seconds)
    (120/240) benchmarking ("perf_sum", Int64, true)...
    done (took 0.107704667 seconds)
    (121/240) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.151411886 seconds)
    (122/240) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.111575856 seconds)
    (123/240) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.099011308 seconds)
    (124/240) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.152946405 seconds)
    (125/240) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.149722552 seconds)
    (126/240) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.095676188 seconds)
    (127/240) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.247499294 seconds)
    (128/240) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.099091114 seconds)
    (129/240) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.108449877 seconds)
    (130/240) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.094083928 seconds)
    (131/240) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.093190451 seconds)
    (132/240) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.096534037 seconds)
    (133/240) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.155974822 seconds)
    (134/240) benchmarking ("perf_sum", Float32, true)...
    done (took 0.094129403 seconds)
    (135/240) benchmarking ("map", abs, Int8, true)...
    done (took 0.152019237 seconds)
    (136/240) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.096954786 seconds)
    (137/240) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.133890719 seconds)
    (138/240) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.097257676 seconds)
    (139/240) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.094706563 seconds)
    (140/240) benchmarking ("map", identity, Float32, true)...
    done (took 0.106761999 seconds)
    (141/240) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.102557777 seconds)
    (142/240) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.112150746 seconds)
    (143/240) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.095084961 seconds)
    (144/240) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.112504895 seconds)
    (145/240) benchmarking ("perf_sum", Int8, false)...
    done (took 0.094530265 seconds)
    (146/240) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.094406216 seconds)
    (147/240) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.096666817 seconds)
    (148/240) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.094720993 seconds)
    (149/240) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.094719259 seconds)
    (150/240) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.120900948 seconds)
    (151/240) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.093839816 seconds)
    (152/240) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.106401172 seconds)
    (153/240) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.10753646 seconds)
    (154/240) benchmarking ("perf_countequals", "Float64")...
    done (took 0.104121265 seconds)
    (155/240) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.094349898 seconds)
    (156/240) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.095376358 seconds)
    (157/240) benchmarking ("map", identity, Int64, true)...
    done (took 0.15410944 seconds)
    (158/240) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.098553098 seconds)
    (159/240) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.119315796 seconds)
    (160/240) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.096136325 seconds)
    (161/240) benchmarking ("perf_sum", Int64, false)...
    done (took 0.095437207 seconds)
    (162/240) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.095021925 seconds)
    (163/240) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.120079346 seconds)
    (164/240) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.094089201 seconds)
    (165/240) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.1061668 seconds)
    (166/240) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.093950664 seconds)
    (167/240) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.095579486 seconds)
    (168/240) benchmarking ("map", identity, Int64, false)...
    done (took 0.0941081 seconds)
    (169/240) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.099464809 seconds)
    (170/240) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.096018804 seconds)
    (171/240) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.09412911 seconds)
    (172/240) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.094230498 seconds)
    (173/240) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.095696872 seconds)
    (174/240) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.105055472 seconds)
    (175/240) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.097982682 seconds)
    (176/240) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.10568923 seconds)
    (177/240) benchmarking ("map", abs, BigInt, false)...
    done (took 0.161354679 seconds)
    (178/240) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.0944821 seconds)
    (179/240) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.107739723 seconds)
    (180/240) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.110869471 seconds)
    (181/240) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.111070294 seconds)
    (182/240) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.094424838 seconds)
    (183/240) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.09570299 seconds)
    (184/240) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.094749826 seconds)
    (185/240) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.093420658 seconds)
    (186/240) benchmarking ("map", abs, BigInt, true)...
    done (took 0.103858131 seconds)
    (187/240) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.096447054 seconds)
    (188/240) benchmarking ("map", abs, Int8, false)...
    done (took 0.093485865 seconds)
    (189/240) benchmarking ("map", identity, Bool, true)...
    done (took 0.106258573 seconds)
    (190/240) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.117269401 seconds)
    (191/240) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.096877316 seconds)
    (192/240) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.094458285 seconds)
    (193/240) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.0931829 seconds)
    (194/240) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.096422649 seconds)
    (195/240) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.097018668 seconds)
    (196/240) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.132471998 seconds)
    (197/240) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.097032387 seconds)
    (198/240) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.108226572 seconds)
    (199/240) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.094260979 seconds)
    (200/240) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.094074803 seconds)
    (201/240) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.099667034 seconds)
    (202/240) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.092419212 seconds)
    (203/240) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.119557918 seconds)
    (204/240) benchmarking ("map", abs, Bool, true)...
    done (took 0.108297302 seconds)
    (205/240) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.094879736 seconds)
    (206/240) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.104400917 seconds)
    (207/240) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.093369832 seconds)
    (208/240) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.190040396 seconds)
    (209/240) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.105629984 seconds)
    (210/240) benchmarking ("map", identity, Float64, true)...
    done (took 0.107149528 seconds)
    (211/240) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.095944229 seconds)
    (212/240) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.112249284 seconds)
    (213/240) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.096005911 seconds)
    (214/240) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.118067034 seconds)
    (215/240) benchmarking ("map", identity, BigInt, false)...
    done (took 0.094637166 seconds)
    (216/240) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.093936577 seconds)
    (217/240) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.096038365 seconds)
    (218/240) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.096507319 seconds)
    (219/240) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.111808935 seconds)
    (220/240) benchmarking ("perf_sum", Float64, false)...
    done (took 0.094507571 seconds)
    (221/240) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.095641118 seconds)
    (222/240) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.103694432 seconds)
    (223/240) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.111911758 seconds)
    (224/240) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.09457802 seconds)
    (225/240) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.093490871 seconds)
    (226/240) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.096804334 seconds)
    (227/240) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.093069151 seconds)
    (228/240) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.117378511 seconds)
    (229/240) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.097853831 seconds)
    (230/240) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.103901235 seconds)
    (231/240) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.096005387 seconds)
    (232/240) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.096929384 seconds)
    (233/240) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.093564903 seconds)
    (234/240) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.103195301 seconds)
    (235/240) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.093892284 seconds)
    (236/240) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.094924851 seconds)
    (237/240) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.093946787 seconds)
    (238/240) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.095771098 seconds)
    (239/240) benchmarking ("map", abs, Int64, false)...
    done (took 0.093789198 seconds)
    (240/240) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.094401054 seconds)
  done (took 30.703110651 seconds)
done (took 31.807910567 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.110707627 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.173135583 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.106290235 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.17469775 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.105857375 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.121752728 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.104707329 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.108572503 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.133978915 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.10833252 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.104324626 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.099495831 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.102987253 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.104950438 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.103609847 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.169376392 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.121520125 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.101946478 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119333343 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.095211476 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.095204765 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.094838976 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.094692846 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.10027965 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.106017988 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.104257918 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.09968373 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.102137086 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.09649167 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.094421607 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.094238407 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.103216891 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.119498982 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.107478463 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.102338428 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.100222533 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.107025045 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.105677429 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.09411143 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.095283664 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.105173609 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.094829718 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.101809164 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.101330118 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.094095948 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.094457725 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.122492546 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.109807646 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.172146473 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.099992204 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.105608724 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.104604932 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.10132506 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.093345983 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.094405109 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.095152851 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.093896076 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.199063266 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.095066434 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.099659521 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.106720777 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.103050696 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.094575345 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094659769 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.094941397 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.112123094 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.106825068 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.120934276 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.115271647 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.094383456 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.094745173 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.096265921 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.095720296 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.094812539 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.103655746 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.10705066 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.093643934 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.093876843 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.102129914 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.102165455 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.094827952 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.124107936 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.095154004 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.094354427 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09683225 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.10035606 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.094812738 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.09481393 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.09409678 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.095270851 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.097438061 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094914617 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.094307483 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.107105474 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.094751046 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.119096415 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.095664451 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.096544762 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.095064383 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.09429402 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.095115406 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.099763578 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.10126493 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.093663591 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.094024814 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.1051946 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.095181413 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.09517002 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.094243553 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.117896683 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.109436707 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.11465016 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.097571901 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.099419726 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.094184276 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.094545777 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.096055664 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.094405202 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.094491267 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.094800454 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.094784425 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.09513096 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.097602932 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.120436181 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.107252855 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.097150713 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.094763838 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097012021 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.094902919 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.101267939 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.094743401 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.095300572 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.093916561 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.11350108 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.099195774 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.095506957 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118777688 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.098205711 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.09577688 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.096994538 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.095508092 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.094747064 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.095261407 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.094662731 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.094309293 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.100877029 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101429305 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.097059854 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.094626841 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.094505292 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.094107256 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.119457039 seconds)
done (took 16.887440063 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/18) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.095467344 seconds)
    (2/18) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.112122987 seconds)
    (3/18) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.09592856 seconds)
    (4/18) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.170952323 seconds)
    (5/18) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.155489919 seconds)
    (6/18) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.098676619 seconds)
    (7/18) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.094184562 seconds)
    (8/18) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.094547155 seconds)
    (9/18) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.101633045 seconds)
    (10/18) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.119225894 seconds)
    (11/18) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.095645144 seconds)
    (12/18) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.097420242 seconds)
    (13/18) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.095096692 seconds)
    (14/18) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.095263096 seconds)
    (15/18) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.095106153 seconds)
    (16/18) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.100097532 seconds)
    (17/18) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.097025869 seconds)
    (18/18) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.095098498 seconds)
  done (took 3.059882878 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.106023435 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.115726178 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.106613714 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.105943943 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.095486871 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.094998611 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.094864367 seconds)
  done (took 1.890800923 seconds)
  (3/5) benchmarking "types"...
    (1/91) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.095233375 seconds)
    (2/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.183452853 seconds)
    (3/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.168939548 seconds)
    (4/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.167602011 seconds)
    (5/91) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.198461909 seconds)
    (6/91) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.172781227 seconds)
    (7/91) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.094887466 seconds)
    (8/91) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.105830405 seconds)
    (9/91) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.095659891 seconds)
    (10/91) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.179945668 seconds)
    (11/91) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.210482821 seconds)
    (12/91) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.095226574 seconds)
    (13/91) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.099824749 seconds)
    (14/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.17241738 seconds)
    (15/91) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.095171499 seconds)
    (16/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.161833022 seconds)
    (17/91) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.094700468 seconds)
    (18/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.123384685 seconds)
    (19/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.165685849 seconds)
    (20/91) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.09566897 seconds)
    (21/91) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.108018405 seconds)
    (22/91) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.103230341 seconds)
    (23/91) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.095232562 seconds)
    (24/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.1778519 seconds)
    (25/91) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.097250861 seconds)
    (26/91) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.096887146 seconds)
    (27/91) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.123073246 seconds)
    (28/91) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.09784034 seconds)
    (29/91) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.121567558 seconds)
    (30/91) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.177027343 seconds)
    (31/91) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.098745486 seconds)
    (32/91) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094952435 seconds)
    (33/91) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.172528334 seconds)
    (34/91) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.096134557 seconds)
    (35/91) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.200297235 seconds)
    (36/91) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.099489916 seconds)
    (37/91) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.174861804 seconds)
    (38/91) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.098339483 seconds)
    (39/91) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.099633958 seconds)
    (40/91) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.096301566 seconds)
    (41/91) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.096646648 seconds)
    (42/91) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.18311495 seconds)
    (43/91) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.095668668 seconds)
    (44/91) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.099237419 seconds)
    (45/91) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.097321816 seconds)
    (46/91) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.18426033 seconds)
    (47/91) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.097519036 seconds)
    (48/91) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.176511109 seconds)
    (49/91) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.095902914 seconds)
    (50/91) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.120905476 seconds)
    (51/91) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.099552224 seconds)
    (52/91) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096692659 seconds)
    (53/91) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.096525721 seconds)
    (54/91) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.09510298 seconds)
    (55/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.184997093 seconds)
    (56/91) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.097389515 seconds)
    (57/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.162974629 seconds)
    (58/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.19198948 seconds)
    (59/91) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.176535072 seconds)
    (60/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.163190412 seconds)
    (61/91) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.097101822 seconds)
    (62/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.204419728 seconds)
    (63/91) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.170639472 seconds)
    (64/91) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.09722007 seconds)
    (65/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095386694 seconds)
    (66/91) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.094411816 seconds)
    (67/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.16344454 seconds)
    (68/91) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.094065737 seconds)
    (69/91) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.101259556 seconds)
    (70/91) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.186365934 seconds)
    (71/91) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095602178 seconds)
    (72/91) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.167777273 seconds)
    (73/91) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.167018745 seconds)
    (74/91) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.100583514 seconds)
    (75/91) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.095227277 seconds)
    (76/91) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.122484703 seconds)
    (77/91) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.096977611 seconds)
    (78/91) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.168540498 seconds)
    (79/91) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095124792 seconds)
    (80/91) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.098265916 seconds)
    (81/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.164814484 seconds)
    (82/91) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.093562269 seconds)
    (83/91) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.0960576 seconds)
    (84/91) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.096177168 seconds)
    (85/91) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.120508056 seconds)
    (86/91) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.099237627 seconds)
    (87/91) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.095393786 seconds)
    (88/91) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.09579725 seconds)
    (89/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.165228362 seconds)
    (90/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.164219941 seconds)
    (91/91) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.09781634 seconds)
  done (took 12.793023912 seconds)
  (4/5) benchmarking "randstring"...
    (1/2) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.095795809 seconds)
    (2/2) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.096417965 seconds)
  done (took 1.400435717 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.103807541 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.095215486 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104643708 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.094842466 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.101462743 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.17966853 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.180471994 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121765198 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.102844694 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.102513691 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.180268032 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.181257667 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.20546221 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.096690236 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.182691577 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.095797002 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.181435154 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.095084939 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.102663224 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097948104 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.09994203 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122424455 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097124802 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.162138976 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.095845291 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.095084633 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.096070201 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.101342676 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.102155259 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.096278856 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.098208439 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.095654148 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.123599827 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.095577731 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.18183248 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096896937 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.094888412 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.095704481 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.095360784 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.096233647 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.182697518 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124927695 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.096358276 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.096175192 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.096255881 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.095843136 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095937172 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.096165937 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.18096991 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.095427323 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.095320238 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095233986 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.10002617 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.122729375 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.096845999 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095789031 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.096042138 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.182549622 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.096323606 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.09637313 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.094626287 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.096660056 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.095958883 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.098269517 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.121247105 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.096366538 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096335658 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.09687422 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096543284 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095530005 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.096536852 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.09513267 seconds)
  done (took 9.371728442 seconds)
done (took 29.679576124 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.105233841 seconds)
  done (took 2.305669284 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.656607243 seconds)
  done (took 1.85733445 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.778363843 seconds)
  done (took 9.010142824 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.366705238 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.283930597 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.873011125 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.135477327 seconds)
  done (took 2.86159794 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.126101997 seconds)
  done (took 2.348940419 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.233769982 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.193843009 seconds)
  done (took 1.634726892 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.744906383 seconds)
  done (took 1.969230031 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.321150108 seconds)
  done (took 2.529449666 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.193057173 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.160754407 seconds)
  done (took 1.581914064 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.542789471 seconds)
  done (took 1.770946312 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.69475646 seconds)
  done (took 8.928745844 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.231445674 seconds)
  done (took 1.454018367 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.26183474 seconds)
  done (took 1.493131533 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 2.072570925 seconds)
  done (took 3.303907847 seconds)
done (took 44.268946979 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.103782149 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.107459406 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.106917155 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.104010737 seconds)
  done (took 1.640262375 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.102596609 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.103934509 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.102537674 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.100553623 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.10236292 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.100920801 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.099962486 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100333583 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.100599288 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.100053817 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.101021958 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.099859398 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.102850399 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.130277494 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.096636276 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.101287092 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.104797792 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.100248151 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.099258842 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.100975154 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.09543901 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.107674088 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.100020853 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.104253987 seconds)
  done (took 3.691645102 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.10295933 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.102379672 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.101434245 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.100922101 seconds)
  done (took 1.644926002 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.104402349 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.107330092 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.106129512 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.104278161 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.10720114 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.107300175 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.101768845 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.096316494 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.098660424 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.10384134 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.108046205 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.101966447 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.131416397 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.104005951 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.106420152 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.095614303 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.103707912 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.108865519 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.103853231 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.103889533 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.10272957 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.103913294 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.095783014 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.099397509 seconds)
  done (took 3.742022413 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.166952475 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.107944482 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.120387493 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 0.122593835 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.098189806 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.122443121 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 0.119450425 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 0.096226745 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.103393579 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 0.095458973 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 0.095794777 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 0.121047214 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.123992321 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.106051727 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.097125903 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.098434262 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.098736967 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.103615064 seconds)
    (19/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.105752004 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.096805687 seconds)
    (21/22) benchmarking ("var", "Int64")...
    done (took 0.150212194 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.111180183 seconds)
  done (took 3.701339942 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.104276545 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.10167511 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.097588637 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.096254273 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.10963464 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.103141971 seconds)
  done (took 1.855084797 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.102531586 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.098676508 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.099596345 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.096558677 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.100559773 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.096725294 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.095853339 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.098217817 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.097680245 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.098798437 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.096427541 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.096189212 seconds)
  done (took 2.41757427 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.21000534 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.11637723 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121442017 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.097254907 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.100103058 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.096898257 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.109453419 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.099026135 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.100094765 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.097472567 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.096540297 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.097153162 seconds)
  done (took 2.583874438 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148768535 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102204971 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15997105 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.459563631 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113081181 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156216861 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.393307233 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124801524 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.154292499 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111189328 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132059562 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112503428 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148015963 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139678825 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109862315 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.376527769 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153293314 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148200599 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114347986 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142801792 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124974018 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163833163 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133781378 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116336167 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140513013 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114630589 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.102881004 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103642383 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120690934 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12274508 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119452983 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143492919 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107870955 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134143774 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113654531 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120180341 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20992771 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106662942 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.23537773 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132024784 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146499037 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110489283 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1540947 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11697915 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106830757 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140832135 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110597448 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.130134066 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.108282703 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113495511 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15534574 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125540755 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.119723815 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109352308 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.431663527 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105661457 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115542889 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146977617 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139991137 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1368726 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130656578 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.101402331 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170289956 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131041985 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127197389 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.111670169 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.117838026 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095984413 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159451781 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165489467 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126370888 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156106155 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.138965838 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108413886 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125579881 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121811528 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149311255 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128140348 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12560638 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.100404427 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144482279 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105691479 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104935861 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.169294675 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101567089 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168698883 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108831437 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.309001317 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137665046 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119881542 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116705119 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121351141 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153253685 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120698403 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.140971172 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115781594 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.117152339 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147685221 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102763684 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117170026 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140850272 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.102371387 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121295171 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.127959517 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124778979 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.132852146 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121918078 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129607284 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.111602772 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133260545 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114273289 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.151048988 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123745353 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133989296 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105184734 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109196972 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134328466 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13072795 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.107602022 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150237711 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132759009 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.139597843 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105370501 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.106243834 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183655173 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111365976 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159526538 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107784028 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105557554 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.128274186 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129613967 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116110753 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.125964074 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104960741 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.122508174 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156562138 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.103966015 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110840043 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133910379 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12784889 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103647427 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137688087 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106739683 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.115596548 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.125305427 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.109222944 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143963432 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127565615 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126724471 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109482234 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132034591 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113338366 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106007457 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.129931275 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147331859 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.100590015 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.126991404 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132797353 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103794392 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175628335 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.119082314 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177533626 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127445007 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105100745 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177023747 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103634375 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.126963387 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.105577151 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121540616 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119222658 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.126671832 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14763846 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.142347814 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.123439595 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116250688 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11916268 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.156068302 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116037277 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.107586121 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128017824 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125374232 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.101818297 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.096982301 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.104963788 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113015811 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102181407 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109122694 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147270858 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119871354 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146685097 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128104084 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108393942 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158705201 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.103131431 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118880328 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.12628756 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110692742 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.126094635 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130903771 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132099709 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105473274 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135072752 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.104681105 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10225985 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.103294065 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121042134 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108855133 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105657895 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106560418 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132838282 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12288963 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140617714 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152015993 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146631336 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141498788 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.102840262 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.143462033 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116098203 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128180376 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.176391773 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106006379 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.117551767 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133237066 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108934297 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139289269 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124813895 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126565822 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156340049 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.129021348 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103495445 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108930509 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158782799 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105014007 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113185633 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107519304 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105564414 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108780166 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.109307128 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097226107 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151926144 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114296968 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1135179 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.11565746 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139723609 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104759791 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10752073 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131213614 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138159583 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.122278657 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12132813 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117809662 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113014789 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136473497 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122252343 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103939019 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.441378543 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127795602 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125372788 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106264273 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107342458 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157549957 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113247144 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114158456 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177930264 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108174425 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127930049 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15677513 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.107259278 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106377084 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114445398 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115617992 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.128928833 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.098260949 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.122986333 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.14083534 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12580651 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139387642 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130519811 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126794836 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.12160378 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.120331344 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1093879 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166919696 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125296266 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122892204 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.128301267 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.114265303 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178292984 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128000888 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104168425 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.098488766 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176238931 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109229646 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126894527 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.17566807 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152255702 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130828868 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158604648 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137097183 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.103378432 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126572329 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14154169 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151038205 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108504055 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.108115438 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131851689 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.165840145 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130515014 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156503022 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.411727783 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143035326 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118901595 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.121288211 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.438889356 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105365546 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105655364 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113779846 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118721008 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.103385978 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.17603788 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128593121 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109290957 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114004716 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107885461 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172291345 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13951252 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.107678483 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121353464 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.106514721 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117785749 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111130046 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118940024 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115592307 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.143375476 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117247128 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132953835 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.122246385 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.102983398 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126703856 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125609255 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126142987 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115659829 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110367415 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205697891 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105204734 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114276004 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104851379 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098679083 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150160019 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.151675679 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128916442 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118460735 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125653606 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107215639 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100576611 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109998723 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126296927 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108506174 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.105637244 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12545176 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.131792068 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129193749 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129528286 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109808067 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129535926 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1079506 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09880733 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107903774 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110375884 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107471726 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.170022264 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123634413 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.098798543 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120398373 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111245185 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11989376 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111432815 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133432305 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 15.519114303 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.104539977 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132551577 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122360909 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167770997 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115885739 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129882536 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12840656 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143179504 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.108101288 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108950076 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.208146433 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110742184 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.123186678 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105546413 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109635893 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142340556 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.098826714 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116657225 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15291544 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113348179 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.107581449 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.124105545 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113587077 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.133272862 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114904017 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136399791 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147988146 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127309782 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177330471 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107992328 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153058048 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115678429 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104831329 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.118709719 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121241369 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145323529 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109575592 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.106339589 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.109814649 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129352661 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.105269756 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122373613 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154127649 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127982094 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128638878 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.099314059 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126202635 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106393633 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128018891 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098555797 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.108462203 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155457458 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107475746 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.105654364 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130916303 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111382272 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.126166223 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09927792 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.169316078 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134123426 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.103536058 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106363161 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.397702539 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151944037 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20264839 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.131999655 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109282064 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139310542 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11617992 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.12284844 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132010009 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.100291236 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108989809 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.098955983 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.219144789 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.149379332 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130903474 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149812408 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113210024 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180653894 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.111492611 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.2772367 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11622717 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132269677 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.150381431 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.103622871 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111140169 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10639324 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11058462 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174831819 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1304851 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.128707108 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.110833872 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099210674 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.107095094 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107036687 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115659903 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110753348 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155419369 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109739821 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.118967942 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1091456 seconds)
  done (took 79.850300606 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.163770216 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.138628769 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.151247405 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.219318881 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.167118656 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.282383924 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.238710728 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.249533728 seconds)
  done (took 2.945354956 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.103823837 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.123578091 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.122166513 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.123839107 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.10441567 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.305902925 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.143590956 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.100452658 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.143730821 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.1265973 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.102245048 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.460802852 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.100995402 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.103576551 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.127146081 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.101293869 seconds)
  done (took 3.71663629 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.474653151 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.343738677 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 3.568068855 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.206009239 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.417790956 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.124599856 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.53036339 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.102746141 seconds)
  done (took 10.104094128 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.137228903 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.129961918 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.215843265 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.231227386 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.136884553 seconds)
  done (took 2.188373436 seconds)
done (took 121.298162332 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.106470766 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.108789591 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.109496901 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.107553374 seconds)
  done (took 1.75545759 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.156821524 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.100817996 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.102484375 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.103039369 seconds)
  done (took 1.804445775 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.427934645 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.102111915 seconds)
  done (took 1.909915286 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.132412889 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.126044885 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.125181957 seconds)
  done (took 1.7357967 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.114175478 seconds)
  done (took 1.461382363 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.107382899 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.107287922 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.176676099 seconds)
  done (took 1.739557586 seconds)
done (took 11.750314169 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.208441462 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.945129085 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.411344151 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.153546732 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.701712743 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.393606785 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.437316764 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.1013239 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.110901312 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.100599883 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.101874526 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.680666787 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.38700658 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.874633027 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.421246932 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.873619864 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.6833691 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.127546149 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.101187538 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.100698826 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.385665493 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.101185216 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.101237146 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.101074309 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.681188186 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.399845666 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.101131063 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.874968721 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.101405941 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128589575 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.388291475 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.101231888 seconds)
  done (took 20.712876443 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.133905407 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123099189 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.106512892 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.101993888 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.101437272 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.102899217 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.106177535 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.101461564 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.117822255 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.1011432 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.102448722 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.126775237 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104943663 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.102061242 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.11703114 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.102854296 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.100846727 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.104025853 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.103178886 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.101340945 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.104639883 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.101054478 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.127788554 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.102778077 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.101154568 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.110481874 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.100998817 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.101483841 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.105299145 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.101503368 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.102728808 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.102209229 seconds)
  done (took 4.778147614 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.144158648 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.140015966 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.107166886 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.133231514 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.132656472 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.107102291 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.157616766 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.105499815 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.145419482 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.101985676 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.102739954 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.102394969 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.118533226 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.102565275 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.117759846 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.103067094 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.102194938 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.100944585 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.104038764 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.127862381 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.105451851 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.101817082 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.102455015 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.101454719 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.102587844 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.112158178 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.103365753 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.101553812 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.101705311 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.129484316 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.105251748 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.103195774 seconds)
  done (took 4.984930405 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.101974868 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.110585128 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.134783744 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.136864436 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.100816538 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.100579967 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.101979224 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.10106234 seconds)
  done (took 2.247812937 seconds)
done (took 34.075306729 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.115330359 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.109631893 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.112454335 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.111414769 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.168434089 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.099921936 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.110652788 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.099852732 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.108448312 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.114491281 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.129344314 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.104758297 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.113359424 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.104401312 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.170731205 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.110143658 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.170729934 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.199877875 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.10161885 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.110792211 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.100737256 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.171015773 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.106005957 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.102082971 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.194702326 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.104948316 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104680079 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.104214852 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.10446679 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.103732632 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.170005059 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.104066681 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.101920542 seconds)
  done (took 5.382067722 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.175581016 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.100249203 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.101457644 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.101183235 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.099939785 seconds)
    (6/30) benchmarking ("IntSet", "Int", "start")...
    done (took 0.100419114 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.175851807 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.100442176 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.128533735 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.101192353 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.100959709 seconds)
    (12/30) benchmarking ("IntSet", "Int", "next")...
    done (took 0.192712003 seconds)
    (13/30) benchmarking ("IntSet", "Int", "done")...
    done (took 0.102300288 seconds)
    (14/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.101161245 seconds)
    (15/30) benchmarking ("Set", "Int", "next")...
    done (took 0.103048495 seconds)
    (16/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.097272617 seconds)
    (17/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.100788588 seconds)
    (18/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.102184242 seconds)
    (19/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.206658753 seconds)
    (20/30) benchmarking ("Set", "String", "start")...
    done (took 0.10085897 seconds)
    (21/30) benchmarking ("Vector", "String", "next")...
    done (took 0.103107042 seconds)
    (22/30) benchmarking ("Set", "Any", "next")...
    done (took 0.10261622 seconds)
    (23/30) benchmarking ("Vector", "String", "start")...
    done (took 0.100241406 seconds)
    (24/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.100936143 seconds)
    (25/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.195481929 seconds)
    (26/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.096788429 seconds)
    (27/30) benchmarking ("Set", "String", "done")...
    done (took 0.101087917 seconds)
    (28/30) benchmarking ("Set", "Any", "done")...
    done (took 0.10054329 seconds)
    (29/30) benchmarking ("Set", "Int", "start")...
    done (took 0.129841305 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.101325126 seconds)
  done (took 4.897680235 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.105708406 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.120209177 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.119921307 seconds)
    (4/117) benchmarking ("IntSet", "Int", "intersect", "IntSet")...
    done (took 0.124252756 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.103629104 seconds)
    (6/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.101933599 seconds)
    (7/117) benchmarking ("Vector", "Int", "setdiff", "IntSet")...
    done (took 0.115694073 seconds)
    (8/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111539815 seconds)
    (9/117) benchmarking ("IntSet", "Int", "union!", "Vector")...
    done (took 0.107048465 seconds)
    (10/117) benchmarking ("IntSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.138935645 seconds)
    (11/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.10135818 seconds)
    (12/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.105421996 seconds)
    (13/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.131926673 seconds)
    (14/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.102593256 seconds)
    (15/117) benchmarking ("Vector", "Int", "intersect", "IntSet")...
    done (took 0.114879716 seconds)
    (16/117) benchmarking ("Set", "Int", "setdiff", "IntSet")...
    done (took 0.114924722 seconds)
    (17/117) benchmarking ("Set", "Int", "intersect", "IntSet", "IntSet")...
    done (took 0.115472882 seconds)
    (18/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.101739397 seconds)
    (19/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.112356804 seconds)
    (20/117) benchmarking ("Set", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 0.152154205 seconds)
    (21/117) benchmarking ("IntSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.108633592 seconds)
    (22/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.109805705 seconds)
    (23/117) benchmarking ("IntSet", "Int", "setdiff!", "Vector")...
    done (took 0.107994861 seconds)
    (24/117) benchmarking ("IntSet", "Int", "symdiff!", "Set")...
    done (took 0.106532931 seconds)
    (25/117) benchmarking ("IntSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.107358071 seconds)
    (26/117) benchmarking ("IntSet", "Int", "<", "IntSet")...
    done (took 0.142313631 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.124749105 seconds)
    (28/117) benchmarking ("IntSet", "Int", "union!", "IntSet")...
    done (took 0.10249962 seconds)
    (29/117) benchmarking ("IntSet", "Int", "symdiff!", "IntSet")...
    done (took 0.10271394 seconds)
    (30/117) benchmarking ("IntSet", "Int", "union!", "Set")...
    done (took 0.110803812 seconds)
    (31/117) benchmarking ("IntSet", "Int", "⊆", "self")...
    done (took 0.101784989 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.103473623 seconds)
    (33/117) benchmarking ("Set", "Int", "union", "IntSet")...
    done (took 0.125186148 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.114157104 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.102487561 seconds)
    (36/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.106128371 seconds)
    (37/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.112155178 seconds)
    (38/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.104774415 seconds)
    (39/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.137399795 seconds)
    (40/117) benchmarking ("IntSet", "Int", "intersect", "Set")...
    done (took 0.11410162 seconds)
    (41/117) benchmarking ("IntSet", "Int", "⊆", "Set")...
    done (took 0.105319903 seconds)
    (42/117) benchmarking ("IntSet", "Int", "symdiff", "Vector")...
    done (took 0.103280562 seconds)
    (43/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.123315215 seconds)
    (44/117) benchmarking ("IntSet", "Int", "union", "Set")...
    done (took 0.102744234 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.102336301 seconds)
    (46/117) benchmarking ("IntSet", "Int", "==", "self")...
    done (took 0.100452431 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "IntSet", "IntSet")...
    done (took 0.112246915 seconds)
    (48/117) benchmarking ("Set", "Int", "setdiff!", "IntSet")...
    done (took 0.115507761 seconds)
    (49/117) benchmarking ("IntSet", "Int", "intersect", "Vector")...
    done (took 0.113729792 seconds)
    (50/117) benchmarking ("Set", "Int", "symdiff", "IntSet")...
    done (took 0.102536156 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "IntSet", "IntSet")...
    done (took 0.123580506 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.128851145 seconds)
    (53/117) benchmarking ("IntSet", "Int", "setdiff!", "Set")...
    done (took 0.102506765 seconds)
    (54/117) benchmarking ("Vector", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 0.106313162 seconds)
    (55/117) benchmarking ("IntSet", "Int", "setdiff", "Set")...
    done (took 0.102093179 seconds)
    (56/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.101854776 seconds)
    (57/117) benchmarking ("IntSet", "Int", "setdiff!", "IntSet")...
    done (took 0.122995197 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.112676498 seconds)
    (59/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.10567874 seconds)
    (60/117) benchmarking ("IntSet", "Int", "symdiff", "IntSet")...
    done (took 0.104770194 seconds)
    (61/117) benchmarking ("IntSet", "Int", "union", "IntSet")...
    done (took 0.102316777 seconds)
    (62/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.103316123 seconds)
    (63/117) benchmarking ("IntSet", "Int", "union", "Vector", "Vector")...
    done (took 0.123358377 seconds)
    (64/117) benchmarking ("Set", "Int", "intersect", "IntSet")...
    done (took 0.113123466 seconds)
    (65/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.102722435 seconds)
    (66/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.146755096 seconds)
    (67/117) benchmarking ("Vector", "Int", "union", "IntSet")...
    done (took 0.101851704 seconds)
    (68/117) benchmarking ("IntSet", "Int", "⊆", "IntSet")...
    done (took 0.102079285 seconds)
    (69/117) benchmarking ("IntSet", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 0.105609125 seconds)
    (70/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.102683881 seconds)
    (71/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.119065948 seconds)
    (72/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.102222492 seconds)
    (73/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109371916 seconds)
    (74/117) benchmarking ("IntSet", "Int", "⊆", "Vector")...
    done (took 0.105068367 seconds)
    (75/117) benchmarking ("Set", "Int", "union", "IntSet", "IntSet")...
    done (took 0.123507396 seconds)
    (76/117) benchmarking ("IntSet", "Int", "==", "IntSet")...
    done (took 0.100746633 seconds)
    (77/117) benchmarking ("IntSet", "Int", "union", "Vector")...
    done (took 0.103015285 seconds)
    (78/117) benchmarking ("IntSet", "Int", "intersect", "IntSet", "IntSet")...
    done (took 0.102208367 seconds)
    (79/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.129612055 seconds)
    (80/117) benchmarking ("Set", "Int", "⊆", "IntSet")...
    done (took 0.109067837 seconds)
    (81/117) benchmarking ("IntSet", "Int", "intersect", "Set", "Set")...
    done (took 0.109445711 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.112073142 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "IntSet")...
    done (took 0.103385002 seconds)
    (84/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.103026985 seconds)
    (85/117) benchmarking ("IntSet", "Int", "setdiff", "IntSet")...
    done (took 0.103301034 seconds)
    (86/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.102877634 seconds)
    (87/117) benchmarking ("empty", "Int", "<", "IntSet")...
    done (took 0.101119886 seconds)
    (88/117) benchmarking ("Set", "Int", "union")...
    done (took 0.103451792 seconds)
    (89/117) benchmarking ("IntSet", "Int", "symdiff")...
    done (took 0.10162351 seconds)
    (90/117) benchmarking ("empty", "Int", "⊆", "IntSet")...
    done (took 0.10184928 seconds)
    (91/117) benchmarking ("IntSet", "Int", "union")...
    done (took 0.102229912 seconds)
    (92/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.101074995 seconds)
    (93/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.131255198 seconds)
    (94/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.103793278 seconds)
    (95/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.102934083 seconds)
    (96/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.101177989 seconds)
    (97/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.107651978 seconds)
    (98/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.102726357 seconds)
    (99/117) benchmarking ("IntSet", "Int", "symdiff", "Set")...
    done (took 0.102869458 seconds)
    (100/117) benchmarking ("IntSet", "Int", "symdiff!", "Vector")...
    done (took 0.102751421 seconds)
    (101/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.110750831 seconds)
    (102/117) benchmarking ("IntSet", "Int", "union", "Set", "Set")...
    done (took 0.123585034 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "IntSet")...
    done (took 0.10340758 seconds)
    (104/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.109525611 seconds)
    (105/117) benchmarking ("Vector", "Int", "⊆", "IntSet")...
    done (took 0.108704888 seconds)
    (106/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.102062301 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.152497529 seconds)
    (108/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.10385691 seconds)
    (109/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.104492871 seconds)
    (110/117) benchmarking ("IntSet", "Int", "union", "IntSet", "IntSet")...
    done (took 0.116184961 seconds)
    (111/117) benchmarking ("IntSet", "Int", "intersect")...
    done (took 0.103368483 seconds)
    (112/117) benchmarking ("IntSet", "Int", "setdiff", "Vector")...
    done (took 0.103248861 seconds)
    (113/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.110683348 seconds)
    (114/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.103319208 seconds)
    (115/117) benchmarking ("IntSet", "Int", "intersect!", "IntSet")...
    done (took 0.104991352 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.101786705 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.130831621 seconds)
  done (took 14.320282651 seconds)
  (4/6) benchmarking "optimizations"...
    (1/19) benchmarking ("Vector", "concrete", "Void")...
    done (took 0.177546388 seconds)
    (2/19) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.233864309 seconds)
    (3/19) benchmarking ("Set", "concrete", "Void")...
    done (took 0.283736392 seconds)
    (4/19) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.247246199 seconds)
    (5/19) benchmarking ("Dict", "abstract", "Void")...
    done (took 0.187150347 seconds)
    (6/19) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.163509639 seconds)
    (7/19) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.258520078 seconds)
    (8/19) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.111526087 seconds)
    (9/19) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.233693072 seconds)
    (10/19) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.109017942 seconds)
    (11/19) benchmarking ("Dict", "concrete", "Void")...
    done (took 0.154924975 seconds)
    (12/19) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.234247593 seconds)
    (13/19) benchmarking ("BitSet", "Int8")...
    done (took 0.11527776 seconds)
    (14/19) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.29234646 seconds)
    (15/19) benchmarking ("Set", "abstract", "Void")...
    done (took 0.106443995 seconds)
    (16/19) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.128433198 seconds)
    (17/19) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.125039237 seconds)
    (18/19) benchmarking ("Vector", "abstract", "Void")...
    done (took 0.102896431 seconds)
    (19/19) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.112330943 seconds)
  done (took 4.761778624 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/76) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.104855707 seconds)
    (2/76) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.12244112 seconds)
    (3/76) benchmarking ("IntSet", "Int", "in", "true")...
    done (took 0.104399208 seconds)
    (4/76) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.101823431 seconds)
    (5/76) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.10273836 seconds)
    (6/76) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.104006271 seconds)
    (7/76) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.113803872 seconds)
    (8/76) benchmarking ("Vector", "String", "push!")...
    done (took 0.107307723 seconds)
    (9/76) benchmarking ("Set", "String", "in", "false")...
    done (took 0.103729912 seconds)
    (10/76) benchmarking ("Set", "Int", "first")...
    done (took 0.106156946 seconds)
    (11/76) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.117037667 seconds)
    (12/76) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.118165038 seconds)
    (13/76) benchmarking ("IntSet", "Int", "push!", "overwrite")...
    done (took 0.106438261 seconds)
    (14/76) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.15132462 seconds)
    (15/76) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.108058219 seconds)
    (16/76) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.102458238 seconds)
    (17/76) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.101814997 seconds)
    (18/76) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.110663269 seconds)
    (19/76) benchmarking ("Dict", "String", "getindex")...
    done (took 0.103736787 seconds)
    (20/76) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.12391127 seconds)
    (21/76) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.112290624 seconds)
    (22/76) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.107013123 seconds)
    (23/76) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.106188954 seconds)
    (24/76) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.101747863 seconds)
    (25/76) benchmarking ("IntSet", "Int", "length")...
    done (took 0.101083837 seconds)
    (26/76) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.102404174 seconds)
    (27/76) benchmarking ("Vector", "Int", "last")...
    done (took 0.101920855 seconds)
    (28/76) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.132241371 seconds)
    (29/76) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.102588486 seconds)
    (30/76) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.107751241 seconds)
    (31/76) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.107009785 seconds)
    (32/76) benchmarking ("Vector", "Int", "length")...
    done (took 0.101012378 seconds)
    (33/76) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.107235248 seconds)
    (34/76) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.109195894 seconds)
    (35/76) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.104529829 seconds)
    (36/76) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.107923522 seconds)
    (37/76) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.102642642 seconds)
    (38/76) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.107443046 seconds)
    (39/76) benchmarking ("Dict", "Int", "first")...
    done (took 0.213109836 seconds)
    (40/76) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.10244226 seconds)
    (41/76) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.101577659 seconds)
    (42/76) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.101579962 seconds)
    (43/76) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.104408382 seconds)
    (44/76) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.102070993 seconds)
    (45/76) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.103913405 seconds)
    (46/76) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.111237902 seconds)
    (47/76) benchmarking ("Dict", "Int", "length")...
    done (took 0.100662431 seconds)
    (48/76) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.10143225 seconds)
    (49/76) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.110418984 seconds)
    (50/76) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.101802216 seconds)
    (51/76) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.102195742 seconds)
    (52/76) benchmarking ("Vector", "Int", "push!")...
    done (took 0.103151381 seconds)
    (53/76) benchmarking ("IntSet", "Int", "first")...
    done (took 0.133344464 seconds)
    (54/76) benchmarking ("Vector", "String", "getindex")...
    done (took 0.103293329 seconds)
    (55/76) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.104461718 seconds)
    (56/76) benchmarking ("Vector", "Int", "first")...
    done (took 0.104339247 seconds)
    (57/76) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.102704373 seconds)
    (58/76) benchmarking ("IntSet", "Int", "pop!", "unspecified")...
    done (took 0.114048703 seconds)
    (59/76) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.102769994 seconds)
    (60/76) benchmarking ("Set", "String", "in", "true")...
    done (took 0.102817406 seconds)
    (61/76) benchmarking ("IntSet", "Int", "in", "false")...
    done (took 0.104179673 seconds)
    (62/76) benchmarking ("IntSet", "Int", "pop!", "specified")...
    done (took 0.110761557 seconds)
    (63/76) benchmarking ("Vector", "Any", "push!")...
    done (took 0.104167659 seconds)
    (64/76) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.102280724 seconds)
    (65/76) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.104135911 seconds)
    (66/76) benchmarking ("IntSet", "Int", "push!", "new")...
    done (took 0.106754108 seconds)
    (67/76) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.135969188 seconds)
    (68/76) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.112254648 seconds)
    (69/76) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.10233533 seconds)
    (70/76) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.103938571 seconds)
    (71/76) benchmarking ("Set", "Int", "length")...
    done (took 0.101549424 seconds)
    (72/76) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.10788089 seconds)
    (73/76) benchmarking ("IntSet", "Int", "last")...
    done (took 0.101452554 seconds)
    (74/76) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.102907723 seconds)
    (75/76) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.102845567 seconds)
    (76/76) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.109191028 seconds)
  done (took 9.67335221 seconds)
  (6/6) benchmarking "deletion"...
    (1/19) benchmarking ("Vector", "String", "pop!")...
    done (took 0.103304409 seconds)
    (2/19) benchmarking ("Set", "Int", "filter!")...
    done (took 0.113622745 seconds)
    (3/19) benchmarking ("Set", "String", "filter!")...
    done (took 0.117794941 seconds)
    (4/19) benchmarking ("Set", "Any", "pop!")...
    done (took 0.10598578 seconds)
    (5/19) benchmarking ("Vector", "Any", "filter")...
    done (took 0.113085321 seconds)
    (6/19) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.103122218 seconds)
    (7/19) benchmarking ("Vector", "String", "filter")...
    done (took 0.113143866 seconds)
    (8/19) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.117486393 seconds)
    (9/19) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.115064078 seconds)
    (10/19) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.102930073 seconds)
    (11/19) benchmarking ("Vector", "String", "filter!")...
    done (took 0.114805831 seconds)
    (12/19) benchmarking ("Set", "Int", "pop!")...
    done (took 0.104235557 seconds)
    (13/19) benchmarking ("Set", "Any", "filter!")...
    done (took 0.143014183 seconds)
    (14/19) benchmarking ("Vector", "Int", "filter")...
    done (took 0.114150985 seconds)
    (15/19) benchmarking ("Set", "String", "filter")...
    done (took 0.112777064 seconds)
    (16/19) benchmarking ("Set", "Int", "filter")...
    done (took 0.11282639 seconds)
    (17/19) benchmarking ("Set", "Any", "filter")...
    done (took 0.113565026 seconds)
    (18/19) benchmarking ("Set", "String", "pop!")...
    done (took 0.105258758 seconds)
    (19/19) benchmarking ("IntSet", "Int", "pop!")...
    done (took 0.108160536 seconds)
  done (took 3.532276528 seconds)
done (took 43.929010436 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.391860471 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.588362157 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.386855111 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.385518431 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.407657867 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.388259902 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.385511991 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.386570653 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.938151434 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.387781905 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.385870771 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.385508161 seconds)
done (took 30.787974544 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.450484432 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 1.388866138 seconds)
    (2/2) benchmarking "String"...
    done (took 1.391644105 seconds)
  done (took 4.445567314 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 1.38895308 seconds)
    (2/2) benchmarking "String"...
    done (took 1.389041489 seconds)
  done (took 4.149921995 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.396347509 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.391529076 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.383575028 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.571066569 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.436650403 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.384231892 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.383603003 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.387581906 seconds)
  done (took 18.310753142 seconds)
done (took 33.127213335 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.406590281 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.576613014 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.650881479 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.386110217 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.384532356 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.385243826 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.386853099 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.403994919 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.383962602 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.390059133 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.737218486 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.650031008 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.38740343 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.791499535 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.385506011 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.395861608 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.384162487 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.620439776 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.385088474 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.431361344 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.385672677 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.391264757 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.399874451 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.404470769 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.484909403 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.390501773 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.440423575 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.38674978 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.570839042 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.421058885 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.431467708 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.385147703 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.449019689 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.388261982 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.392507805 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.398075655 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.566924271 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.485050613 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.399092018 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.386114053 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.568461664 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.387556361 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.392253959 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.388262871 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.390961656 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.414546575 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.642856911 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.483405138 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.389522289 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.387121978 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.408859473 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.781344452 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.398765153 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.38557007 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.391827938 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.607179817 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.395085763 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.42324046 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.405225777 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.384141393 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.38410029 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.387967205 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.415920102 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.388630971 seconds)
  done (took 156.05901093 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.383320616 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.384849882 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.384659535 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.386437249 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.384646997 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.384604429 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.384101507 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.383916808 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.384177317 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.412301942 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.385369944 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.384547923 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.384875408 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.331470215 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.383910364 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.406134405 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.386749826 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.384825986 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.384289039 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.384754366 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.390047804 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.384818879 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.385095018 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.384440881 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.41278941 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.456310585 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.415272815 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.390870843 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.384573705 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.384838581 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.411199723 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.390479079 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.877092682 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.23656404 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.394178973 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.406658451 seconds)
  done (took 86.768830882 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.383516032 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.38383439 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.383587768 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.410107364 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.384155287 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.854517052 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.851253649 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.366994106 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.457987554 seconds)
    (10/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 1.804644933 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.38311117 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.449771052 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.509967535 seconds)
    (14/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.383794098 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.384011653 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.469979927 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.395827334 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.384456361 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.426849278 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.409799006 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.384902532 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.384228624 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.853994926 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.397404952 seconds)
    (25/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.506309971 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.542197238 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.384563352 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.410299351 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.818111589 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.384984857 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.410142048 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.765816097 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.410950261 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.385326559 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.601174799 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.326312086 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.49219002 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.385222748 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.410210219 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.383399129 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.653581767 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.385868985 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.384794726 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.387331976 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.921169271 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.38466131 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.853259247 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.384760516 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.251229372 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.38439127 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.384467968 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.919395375 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.84381201 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.384049417 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.383863882 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.386971199 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.384181111 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.384165384 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.409937133 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.774501683 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.527994358 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.384658617 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.386741724 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.410358778 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.383929653 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.383684815 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.333621931 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.445352537 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.15325895 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.853499807 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.384372323 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.383534122 seconds)
    (73/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 21.41897855 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.474403767 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.494502712 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.384290137 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.383931231 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.383804392 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.384494174 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.48867629 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.384416548 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.738269751 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.542010448 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.384536459 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.448932368 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.475677612 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.38388851 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.641649853 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.384535176 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.383663369 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.028135828 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.47293868 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.383765407 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.383925282 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.384099666 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.73715902 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.848156642 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.536694767 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.385477569 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.769230436 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.385812709 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.731974372 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.841003673 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.94968337 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.384913392 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.488061673 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.541312195 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.385484261 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.383187202 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.445726302 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.385214967 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.437704236 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.384467673 seconds)
    (114/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.383893086 seconds)
  done (took 386.010604795 seconds)
done (took 630.210615523 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.397881532 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.390493869 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.388548974 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.393923283 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.392745531 seconds)
  done (took 13.336053501 seconds)
done (took 14.707865271 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.600944223 seconds)
    (2/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.599969283 seconds)
    (3/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.445121432 seconds)
    (4/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "10-90")...
    done (took 1.414496845 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.50547552 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.556865289 seconds)
    (7/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.421628594 seconds)
    (8/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.607815534 seconds)
    (9/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.602834332 seconds)
    (10/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.557304915 seconds)
    (11/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.408642686 seconds)
    (12/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "50-50")...
    done (took 1.430702261 seconds)
    (13/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.50490934 seconds)
    (14/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.505246344 seconds)
    (15/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.600231213 seconds)
    (16/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.452102771 seconds)
    (17/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.599108272 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.60145781 seconds)
    (19/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.504804079 seconds)
    (20/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "90-10")...
    done (took 1.453802148 seconds)
    (21/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.424801189 seconds)
    (22/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.600569559 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.408626669 seconds)
  done (took 36.188418245 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.750180478 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.745916633 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.435653283 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.73231318 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.419567921 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.746587276 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.605400817 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.622375541 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.597868316 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.446192159 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.403401408 seconds)
  done (took 18.886691487 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.698145491 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.707034521 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.438096616 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.695863941 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.421355545 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.691323792 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.579850814 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.584588406 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.577416497 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.410188211 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.403482506 seconds)
  done (took 18.587815447 seconds)
done (took 75.042425791 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.416404905 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.466273835 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.398663484 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.399400915 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.398606292 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.397635267 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.400423471 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.398992359 seconds)
  done (took 12.6570486 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.397551666 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.397332005 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.398069077 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.397711454 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.397293781 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.397624998 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.396865151 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.397930807 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.397434292 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.396839385 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.397245725 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.397350411 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.397123926 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.39773874 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.398095645 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.397466112 seconds)
  done (took 23.740970058 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.399895918 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.396818717 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.396835751 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.397973146 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.397456169 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.397454826 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.40049705 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.397186269 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.3973338 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.397582687 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.398242777 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.397937143 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.396856573 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.397025991 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.39743263 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.401328212 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.39712374 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.397192496 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.401975037 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.397441658 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.39720621 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.39761577 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.397253517 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.397058628 seconds)
  done (took 34.931564716 seconds)
done (took 72.709221667 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.391652413 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.393704621 seconds)
  done (took 6.16571805 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.785276557 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.896185026 seconds)
  done (took 5.061970238 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.397642579 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.396922426 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.398190784 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.398016092 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.397458667 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.39781631 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.398368357 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.398203996 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.397575626 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.399824501 seconds)
  done (took 15.360886362 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.397333462 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.397853459 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.397518613 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.397883241 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.398062745 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.397425413 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.397178204 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.397159653 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.397648062 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.397168463 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.397052416 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.397709548 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.397453819 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.397619081 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.397224958 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.39723372 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.397259848 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.397245698 seconds)
  done (took 26.535104239 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.412441685 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.420538106 seconds)
  done (took 4.213054603 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.532272188 seconds)
    (2/7) benchmarking "second"...
    done (took 1.441862204 seconds)
    (3/7) benchmarking "month"...
    done (took 1.505122802 seconds)
    (4/7) benchmarking "year"...
    done (took 1.496310327 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.441566622 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.427081807 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.441641621 seconds)
  done (took 11.66639222 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.398200185 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.64903782 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.796440295 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.139315232 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.398260121 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.401428073 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.158286073 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.401743088 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.40355056 seconds)
  done (took 16.126870337 seconds)
done (took 86.509582052 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.398847941 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.394396653 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.39569407 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.399012854 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.760768089 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.413188437 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.395531002 seconds)
done (took 17.537196167 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.398329284 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.392858931 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.403108402 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.40164071 seconds)
  done (took 10.976338653 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.348570812 seconds)
    (2/2) benchmarking "read"...
    done (took 1.719300644 seconds)
  done (took 5.448751621 seconds)
done (took 17.805070372 seconds)
(10/20) benchmarking "scalar"...
  (1/24) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.397255942 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.39749224 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.396961007 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.398034634 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.39776297 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.399236241 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.397417612 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.397519121 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.397998652 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.397904848 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.397905564 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.399589367 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.398047342 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.398006583 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.39770196 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.397624403 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.397652759 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.397843326 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.398337739 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.39746639 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.398337372 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.397669897 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.397476556 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.397522009 seconds)
  done (took 34.930044517 seconds)
  (2/24) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.397434159 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.397914757 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.398153919 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.397701764 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.397679976 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.397798477 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.397476147 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.397484159 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.397909407 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.398594539 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.397370372 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.397466012 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.397907223 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.39745598 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.397559004 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.397540501 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.397789663 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.399498756 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.397678624 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.398024559 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.397870852 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.39752229 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.397733408 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.399306547 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.39759392 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.397024258 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.397629722 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.397405252 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.397294543 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.397823854 seconds)
  done (took 43.315592492 seconds)
  (3/24) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.401170788 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.402277833 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.397296767 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.397417295 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.397343243 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.397499672 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.398019834 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.398392542 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.397743184 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.397333019 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.397473551 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.397429323 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.397780804 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.397616733 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.398375265 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.398062228 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.397597933 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.397695188 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.39978188 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.397944989 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.397874784 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.397969749 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.398080673 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.398040683 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.398125686 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.398305321 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.39865456 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.398234205 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.399331491 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.397412092 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.398132541 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.397815183 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.397460835 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.397709639 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.397858349 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.398522795 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.401394045 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.402323681 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.397472726 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.397476504 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.39763988 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.397996908 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.398115273 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.397513914 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.397385476 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.397680476 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.397242052 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.397588731 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.399698033 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.397919309 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.397796609 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.398009744 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.398086216 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.397895624 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.397886531 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.397805598 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.397432995 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.3976214 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.397301989 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.397900119 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.397608229 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.397871655 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.397671651 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.397380205 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.397887534 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.39799115 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.397443867 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.397746912 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.397757747 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.397617074 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.397194805 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.397807942 seconds)
  done (took 102.04602131 seconds)
  (4/24) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.397562389 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.397928149 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.397738224 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.397722749 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.397880652 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.398639882 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.397690312 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.39973679 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.398087918 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.398679854 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.397912783 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.398140449 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.398329403 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.39810834 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.398532127 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.398616615 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.398181337 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.398285593 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.3981048 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.39827448 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.397804622 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.39808299 seconds)
  done (took 32.141452551 seconds)
  (5/24) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.397810742 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.398963512 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.397714741 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.398305334 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.399356432 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.398945434 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.397887191 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.39889426 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.397787275 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.397666503 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.397487617 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.39751825 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.399217309 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.397779212 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.397306364 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.40123987 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.397589251 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.399329199 seconds)
  done (took 26.5526065 seconds)
  (6/24) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.397991339 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.397616358 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.398120714 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.397546676 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.398135102 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.397992723 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.397719992 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.397815502 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.397771864 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.398210716 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.397704157 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.397886523 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.398091832 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.397583263 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.397348496 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.398327106 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.397779963 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.397836467 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.398007141 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.397820288 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.398127565 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.397505849 seconds)
  done (took 32.134723557 seconds)
  (7/24) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.397594919 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.39799378 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.397821867 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.398340098 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.39718592 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.397704357 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.399625343 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.397478109 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.399186606 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.397692824 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.397426771 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.397825092 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.400325889 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.397711346 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.397810866 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.397746329 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.398593037 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.397645029 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.39794407 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.398067303 seconds)
  done (took 29.343443749 seconds)
  (8/24) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.399329629 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.399687756 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.399180629 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.39960128 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.399229893 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.399388089 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.399225201 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.400264869 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.399806452 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.40088207 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.399583336 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.39909069 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.400224786 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.399331288 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.399845016 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.399518109 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.401967503 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.399996871 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.399235902 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.399801796 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.40062697 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.399377634 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.400137593 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.398904665 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.399200094 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.399571644 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.399011447 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.399613777 seconds)
  done (took 40.574540824 seconds)
  (9/24) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.398061313 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.398078755 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.398387094 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.39830949 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.397970986 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.397954012 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.398120406 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.397694023 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.398503373 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.398072899 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.398102343 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.397750384 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.398180939 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.398022394 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.397736964 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.397894864 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.398033257 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.39797519 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.39797615 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.400129953 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.398287474 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.397386306 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.398111544 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.397805414 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.398480875 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.398416819 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.397752983 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.398078074 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.39870418 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.39790064 seconds)
  done (took 43.326138755 seconds)
  (10/24) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.460150596 seconds)
    (2/2) benchmarking "in"...
    done (took 1.463329559 seconds)
  done (took 4.304789138 seconds)
  (11/24) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.3980317 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.397943577 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.397786436 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.398136153 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.398969098 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.398965717 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.398856342 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.398871927 seconds)
  done (took 12.568547966 seconds)
  (12/24) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.402133575 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.399256545 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.398607392 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.39803052 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.398801382 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.400760864 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.409865087 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.403288922 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.401511177 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.402186987 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.40315121 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.403407345 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.403670495 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.402128124 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.401043195 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.406187993 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.400768307 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.399271835 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.398987446 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.398699379 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.399052902 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.402596109 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.405349092 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.401436176 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.399381489 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.409166754 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.408065468 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.401517973 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.398962709 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.405313506 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.40162699 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.399616126 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.399360703 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.39873589 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.39789292 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.398252166 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.408885151 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.405456418 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.407438717 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.402570953 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.40044413 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.397918494 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.401666069 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.40249661 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.402652722 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.40143655 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.398419445 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.398444933 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.398890879 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.403116556 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.401373814 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.398698454 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.398967592 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.4049468 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.404227544 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.409322972 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.404144701 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.40146508 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.404326614 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.407658253 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.417206048 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.410965248 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.406306294 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.401298333 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.407884537 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.411552504 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.409385426 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.402974087 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.39947233 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.398680251 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.409019348 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.421079846 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.418492827 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.400606454 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.399518012 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.398261701 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.399949523 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.399010037 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.408067072 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.408269664 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.401416802 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.399193795 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.408019388 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.40919654 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.400536361 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.399654391 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.398967448 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.399133075 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.39969862 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.408034911 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.404210291 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.398617461 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.400641676 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.400437768 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.402782216 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.399554528 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.399815484 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.401760767 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.39945947 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.398325532 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.398796926 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.404398919 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.404509762 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.401032237 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.399102729 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.408571176 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.40228655 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.399853057 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.408488063 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.402591191 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.399109099 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.401605823 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.405045099 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.39943308 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.402551725 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.403801961 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.400711287 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.401751561 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.401059795 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.398338924 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.408016263 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.414266263 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.400517361 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.398254874 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.404266582 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.404455827 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.398958228 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.403575646 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.400781223 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.398880264 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.398685458 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.403873157 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.400541863 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.401051245 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.400415222 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.401586981 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.399638657 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.398146869 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.399319415 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.401964168 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.403509935 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.402450617 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.402345033 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.404588471 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.401256 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.401838305 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.411792679 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.404088445 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.402501035 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.403504828 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.400378218 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.399012042 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.401490977 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.400845182 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.401035306 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.403024541 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.400294828 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.400227711 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.398545976 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.399526021 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.398841793 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.401218448 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.404503558 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.400701523 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.405144663 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.40250456 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.399589937 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.398450371 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.398570614 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.399889803 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.399459963 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.399168734 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.403289422 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.402879474 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.398279434 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.399060222 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.402917926 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.401650969 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.399095755 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.398873185 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.402501871 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.404102681 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.400352923 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.407409556 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.40342682 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.398908314 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.398479154 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.400465378 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.400814556 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.40099972 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.402613272 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.402930881 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.417771618 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.419615262 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.400887992 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.399210959 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.399894386 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.399809492 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.404804633 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.401722889 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.398672212 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.399241559 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.399993967 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.400676886 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.401349904 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.40044062 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.399374474 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.400187504 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.400112238 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.39946465 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.398876758 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.401850868 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.403030422 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.40031329 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.39924822 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.399217858 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.400710101 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.400013121 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.400072624 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.400790303 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.399765838 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.399901503 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.408265274 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.404863864 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.402796221 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.404254401 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.404193776 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.40066995 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.399917761 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.403027678 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.403666006 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.409545312 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.405887899 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.402900375 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.409063915 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.405043657 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.400568071 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.404785984 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.401200795 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.398887308 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.402327858 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.403198742 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.399803644 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.398955106 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.39899882 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.400485311 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.400271309 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.407967736 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.402354896 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.400070932 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.39977026 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.402039203 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.399808856 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.403008826 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.405945792 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.402556806 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.404587311 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.401608766 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.399125633 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.401665166 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.400449576 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.399539159 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.398940452 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.402221462 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.403731646 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.405348962 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.403731009 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.403773114 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.40159416 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.399309429 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.401139946 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.400367217 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.401996468 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.419613999 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.415503777 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.415895947 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.414374591 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.400509093 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.407261026 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.404416477 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.401510874 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.401612682 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.403340765 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.40243283 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.403045451 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.400732389 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.402596901 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.400292058 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.402626759 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.402442734 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.399520585 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.399330062 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.4000491 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.400775485 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.399410486 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.398926522 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.400109199 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.399758832 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.403810839 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.404824047 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.402463262 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.401267465 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.410302744 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.406684195 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.403765072 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.403932543 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.401471293 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.400633648 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.403014316 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.402164155 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.403676323 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.402340802 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.402850966 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.406117129 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.401625133 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.409367131 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.403286246 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.403114094 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.402289367 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.398882236 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.399515124 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.401608938 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.400158647 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.409348544 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.404826569 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.401745754 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.401669684 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.399720965 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.399534788 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.398862632 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.39913142 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.399446737 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.399397874 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.409950965 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.405825844 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.400900489 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.404281946 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.401937167 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.399393643 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.398851049 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.399652974 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.406893941 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.401995249 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.402425265 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.404364601 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.404078905 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.399894843 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.399656251 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.399179517 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.400035017 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.398634163 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.40873677 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.407226452 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.401678809 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.398933183 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.409473031 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.4030646 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.409079497 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.404850637 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.401708429 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.401754199 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.39916409 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.402112718 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.402419357 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.403479306 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.401509084 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.399883933 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.401893418 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.399963165 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.403209774 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.403463872 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.401735402 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.400695401 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.409484501 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.410082301 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.400882079 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.401592438 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.399417805 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.401005381 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.400628718 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.400182482 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.39983191 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.403710319 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.40768678 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.402673846 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.400900639 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.401108311 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.402127196 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.400919226 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.398719974 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.399037556 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.399796798 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.399744352 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.401396542 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.400481316 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.40630876 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.401296758 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.401435598 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.403733473 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.40144444 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.408605005 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.403504311 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.40163821 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.40159535 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.40104205 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.40109297 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.404181359 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.401404868 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.402920438 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.40032094 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.400465528 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.4040483 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.40280687 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.404705246 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.405166291 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.4008402 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.401654128 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.402206001 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.400505991 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.399085867 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.399913812 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.401964218 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.401642683 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.401133899 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.400899026 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.399980164 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.400974286 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.400592333 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.402651989 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.404823149 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.402540905 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.401078717 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.400150032 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.399163876 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.402430238 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.402434556 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.41133991 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.410631974 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.406884406 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.403801959 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.40058277 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.401069764 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.405316979 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.405168682 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.402406354 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.402897647 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.40130675 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.403680272 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.402506578 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.403866383 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.400662874 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.408494831 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.405105304 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.40114193 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.410510132 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.407998616 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.401642031 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.400270882 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.401871699 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.402842837 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.399977163 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.39942833 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.400589634 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.410499921 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.408464422 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.401213333 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.403644136 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.406401991 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.400811891 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.400469953 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.399107486 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.402350814 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.401740417 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.401821224 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.402548439 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.399327514 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.399255624 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.400394426 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.401878829 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.404404039 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.403182314 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.400433998 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.404034894 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.403965519 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.402922789 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.401302466 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.398866423 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.399131797 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.39920583 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.400469368 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.401208526 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.401405377 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.405436445 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.403153337 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.401593091 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.400039682 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.399657266 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.403553071 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.409022753 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.404210284 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.399370856 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.400380538 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.403027911 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.406162149 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.402663179 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.399796052 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.401591113 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.4045681 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.401023471 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.400267496 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.399617964 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.403718062 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.414042746 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.405339993 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.402399208 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.403908606 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.408306043 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.402352732 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.399739961 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.399664495 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.404671091 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.406007427 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.403917385 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.400059392 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.409375378 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.40666335 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.402172221 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.400190635 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.405530808 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.404833042 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.405609763 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.402942543 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.400053997 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.404826148 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.415615038 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.403380631 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.409126232 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.418865713 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.407760821 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.404222003 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.401266442 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.400511169 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.401139268 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.403342132 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.401384919 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.39984494 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.399745071 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.400587972 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.40084842 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.404921675 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.405876445 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.407694394 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.404195923 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.401116272 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.403312575 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.400777474 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.400123087 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.400220445 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.399847004 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.402058649 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.400139111 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.401841223 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.420070445 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.4196995 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.400847112 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.400293518 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.39941252 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.405250095 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.40630794 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.406950957 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.403533769 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.400243258 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.400654085 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.403856612 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.402600129 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.400598177 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.40256375 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.402122422 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.40241433 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.40140091 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.41457923 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.412903031 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.406715383 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.405984296 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.401115064 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.400026482 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.404137923 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.401316348 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.400997726 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.406311346 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.40411959 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.403027986 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.400788424 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.399769426 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.403909096 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.403736484 seconds)
  done (took 837.393202768 seconds)
  (13/24) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.401960894 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.39997177 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.399993792 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.399337242 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.401055936 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.399778158 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.399750053 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.399456326 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.399660544 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.401025105 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.399493874 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.399775518 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.400775551 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.401457937 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.400704343 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.401182303 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.399379461 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.399642162 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.399058938 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.399630048 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.401111998 seconds)
  done (took 30.78816533 seconds)
  (14/24) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.399784458 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.399051417 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.400241459 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.401543773 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.400063699 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.399673041 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.399979071 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.399638172 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.399520395 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.399687031 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.399913787 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.399464325 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.399415539 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.399643212 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.39961051 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.399835901 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.399758098 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.399510386 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.399860979 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.399763602 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.40024369 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.399903128 seconds)
  done (took 32.179887365 seconds)
  (15/24) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.400252347 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.400531435 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.401449357 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.400600314 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.40007494 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.399808898 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.400668337 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.400027557 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.399617581 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.402106673 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.40133688 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.404255871 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.404484516 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.403677184 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.403367292 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.401451923 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.400736004 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.400806863 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.400943868 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.400342981 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.408302388 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.404079243 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.399856313 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.400885578 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.401652669 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.400018076 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.400339861 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.400078616 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.40124989 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.401010826 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.399431746 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.401246129 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.404915793 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.403225618 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.401357293 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.400182181 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.400064222 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.399576738 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.399747042 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.409346894 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.409708158 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.400497242 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.418560541 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.41212827 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.3999203 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.404390203 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.403873031 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.39985891 seconds)
  done (took 68.696682255 seconds)
  (16/24) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.399735137 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.399792265 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.400162462 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.399535783 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.400391929 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.399579913 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.39970271 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.399945806 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.399774748 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.400210983 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.40040833 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.400449021 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.400480143 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.400061798 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.399952699 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.399618461 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.39992077 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.399986095 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.400306981 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.399929633 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.400094874 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.399605348 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.400459546 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.399796337 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.399797982 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.401995369 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.399797638 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.399709223 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.400537301 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.399852237 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.400161229 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.400065071 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.400589705 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.400199795 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.400818228 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.399775243 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.40054075 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.400509187 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.400604378 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.400691686 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.400108748 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.399951574 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.40004463 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.400411205 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.400324384 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.400569673 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.400217012 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.400606119 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.40044129 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.400387776 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.399965611 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.400625383 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.399891375 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.399917998 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.399878376 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.402148547 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.399740254 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.399707112 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.400247754 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.400750184 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.399858518 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.40034195 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.400457108 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.399777454 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.39983839 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.400827704 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.400007154 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.400275786 seconds)
  done (took 96.59842687 seconds)
  (17/24) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.400370085 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.400154793 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.400078184 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.400018393 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.399986265 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.400572868 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.399832305 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.399690355 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.400751762 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.400455298 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.400954763 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.400282541 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.401603372 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.400811422 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.400219471 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.401566514 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.400656478 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.400429719 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.401790787 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.40031316 seconds)
  done (took 29.394287697 seconds)
  (18/24) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.400279912 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.400191807 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.400371458 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.400184709 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.400062493 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.400393749 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.399939098 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.399877508 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.400159575 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.40024811 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.401055563 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.400445034 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.400834863 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.400537291 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.401867618 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.400536189 seconds)
  done (took 23.790150184 seconds)
  (19/24) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.400757312 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.400856551 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.401271228 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.400667776 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.40029877 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.401145687 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.400494871 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.400278381 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.401333977 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.400572275 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.40053734 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.400894219 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.402439588 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.400805261 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.399989431 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.40090564 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.400261823 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.400379838 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.400985029 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.400272108 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.401342492 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.399924192 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.401172117 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.399423919 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.39978478 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.400963785 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.399679107 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.40074394 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.399900366 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.400152532 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.400258715 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.400579508 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.399954443 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.400151028 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.400589488 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.399914394 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.399810735 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.400654504 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.400975032 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.400445475 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.400138127 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.400649599 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.399977938 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.402615959 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.40022596 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.399704307 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.40100937 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.400522741 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.399786237 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.401357975 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.400133356 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.400747874 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.400367674 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.40062376 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.400877659 seconds)
  done (took 78.415951507 seconds)
  (20/24) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.400074062 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.400686613 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.399991484 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.400299741 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.400807115 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.400388511 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.400465933 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.402462581 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.400504935 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.401027488 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.400452298 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.401812315 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.400465488 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.400532147 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.401273952 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.400451812 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.400847827 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.400727333 seconds)
  done (took 26.59752984 seconds)
  (21/24) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.40284181 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.400536837 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.400147203 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.400660304 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.400228191 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.400789541 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.400468069 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.400267872 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.400246094 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.402552334 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.400276437 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.400143378 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.400191703 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.400066064 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.401241522 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.400169684 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.400835427 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.400285238 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.400090472 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.400165009 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.400756056 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.401227989 seconds)
  done (took 32.198515607 seconds)
  (22/24) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.401531611 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.400661595 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.400822738 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.410476305 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.4038386 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.401327743 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.400694973 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.400943308 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.414487576 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.422885263 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.415742821 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.403714152 seconds)
  done (took 18.260581337 seconds)
  (23/24) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.400383703 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.400387867 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.400439944 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.400532948 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.400850995 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.400857632 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.400438863 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.400477958 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.400285699 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.40228349 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.400321133 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.400343234 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.400268783 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.400784233 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.400370784 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.400449567 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.400468356 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.400614907 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.400490021 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.40119449 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.400767763 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.400568141 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.400679162 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.400353039 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.400895612 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.400249873 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.400343359 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.403484735 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.400404276 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.400653165 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.40120308 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.401282047 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.400799196 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.403002595 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.401009625 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.40104583 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.401118223 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.400494974 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.400162586 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.401054249 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.40095053 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.400724064 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.400779503 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.400936595 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.401539503 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.400720455 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.401314578 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.400774182 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.400717447 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.401453212 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.400387618 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.401035481 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.400307597 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.400798803 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.401243976 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.401244458 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.402232953 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.401006865 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.402663861 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.401686024 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.400939649 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.4008995 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.400542027 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.401900988 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.400701233 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.400670382 seconds)
  done (took 93.84633178 seconds)
  (24/24) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.40002001 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.400607354 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.400369654 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.401818071 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.400824093 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.400203358 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.400362776 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.400563918 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.400833509 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.400600616 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.400797191 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.401050713 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.400694409 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.400974832 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.400873755 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.400341526 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.400592365 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.400923712 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.400778404 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.401891484 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.400454731 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.400968539 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.402481968 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.400658889 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.402100617 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.401160615 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.401189055 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.401524618 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.401110737 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.401567729 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.401569095 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.401419869 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.401619083 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.400701529 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.401500317 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.400610102 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.400939414 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.401563816 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.401129552 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.400641535 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.400996162 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.400724785 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.40127395 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.400819713 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.402634919 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.400859991 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.401621409 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.401208635 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.400585087 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.401073038 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.402707885 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.402108089 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.403155706 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.403013376 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.400932598 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.400999814 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.400624272 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.401380969 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.400649574 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.400873307 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.400835868 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.400943451 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.401830346 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.40108693 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.400915901 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.400922796 seconds)
  done (took 93.861897112 seconds)
done (took 1864.63991826 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.565175831 seconds)
    (2/16) benchmarking ("transpose", (20000, 20000))...
    done (took 2.755608049 seconds)
    (3/16) benchmarking ("ctranspose!", (20000, 20000))...
    done (took 2.488622039 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.43737518 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 2.397091692 seconds)
    (6/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.404830817 seconds)
    (7/16) benchmarking ("transpose", (600, 600))...
    done (took 1.918722109 seconds)
    (8/16) benchmarking ("ctranspose!", (600, 600))...
    done (took 1.594681359 seconds)
    (9/16) benchmarking ("ctranspose", (600, 400))...
    done (took 1.874458972 seconds)
    (10/16) benchmarking ("ctranspose", (600, 600))...
    done (took 2.090578502 seconds)
    (11/16) benchmarking ("transpose", (600, 400))...
    done (took 1.736771641 seconds)
    (12/16) benchmarking ("ctranspose!", (600, 400))...
    done (took 1.523371651 seconds)
    (13/16) benchmarking ("ctranspose", (20000, 10000))...
    done (took 2.441210461 seconds)
    (14/16) benchmarking ("ctranspose", (20000, 20000))...
    done (took 2.481098548 seconds)
    (15/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.801569972 seconds)
    (16/16) benchmarking ("ctranspose!", (20000, 10000))...
    done (took 2.411434905 seconds)
  done (took 35.307041276 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.434928697 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.409936736 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.504100886 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.404793307 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.427777591 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.569180105 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.453761224 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.411102552 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 2.396679101 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.429954459 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.39782606 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.42583419 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.405383347 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.334806449 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.746812635 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.570060048 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.628327439 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.396741088 seconds)
  done (took 31.732457282 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.769526524 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.690203897 seconds)
  done (took 5.843675191 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.421727366 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.404854572 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.406104206 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.403445612 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.395490035 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.396230411 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.402287392 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.399152318 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.395393428 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.509296425 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.404949399 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.415017946 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.405350893 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.40493185 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.401867219 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.44565135 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.540971352 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.40187571 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.401115154 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.409204011 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.403137639 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.513571266 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.441880757 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.401398101 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.509092086 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.39579615 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.405685319 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.41032511 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.532782055 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.402613009 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.402038419 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.407023136 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.405377851 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.178538234 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.868304619 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.396030866 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.41341867 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.414434151 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.401491331 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.563711501 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.404091205 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.40984339 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.397617206 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.845848692 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.517978605 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.517341651 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.396698062 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.405256207 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.405819071 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.470859259 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.403954854 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.406078061 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.441293698 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.206036217 seconds)
  done (took 88.857436345 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.470388175 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.396221197 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.598327107 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.3987551 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.396407377 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.395615838 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.396539099 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.630193728 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.506692672 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.395560703 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.663917928 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.88488075 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.404452014 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.46415288 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.448743894 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.450277837 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.395975363 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.395508957 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.397751883 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.405755558 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.884680267 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.396221242 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.395881405 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.593568575 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.432028751 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.921242748 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.399232217 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.395827293 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.395702867 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.39592981 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.866080959 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.402751944 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.455223058 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.400754341 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.650108465 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.740258355 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.713317315 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.396207703 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.395512609 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.399965965 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.413538952 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.901822634 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.738040427 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.396420131 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.39636154 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.90094307 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.396669501 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.400734339 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.402552373 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.665222471 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.396626533 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.39676355 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.399121408 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.396426884 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.395578136 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.464896448 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.477065785 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.911289979 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.396025705 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.395718971 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.474669715 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.396932866 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.403680205 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.404056441 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.400231804 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.741001809 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.296896362 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.401056233 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.737349474 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.853724879 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.396176682 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.932836684 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.396190032 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.414948933 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.550400004 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.39581252 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.396030546 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.911399942 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.410390735 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.3959984 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.717856993 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.397286081 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.663276466 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.396030755 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.396431238 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.914076981 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.397253313 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.45734707 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.395835784 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.395932771 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.395879885 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.401613564 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.652544016 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.483450028 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.396705995 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.395880591 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.427026379 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.396019592 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.39643685 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.40179814 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.933964492 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.405370569 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.396063919 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.398828529 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.395792702 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.396519959 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.395605683 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.397418847 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.677825037 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.39614003 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.406575271 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.401291942 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.395698581 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.398944051 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.59529782 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.400929163 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.655416466 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.396659413 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.396186063 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.40391469 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.396038221 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.405442491 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.396574381 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.401782103 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.396235928 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.721323951 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.396988809 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.39694963 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.39716795 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.396671042 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.396715107 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.396632557 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.451689053 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.401015112 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.089820102 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.443124666 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.453755786 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.395809045 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.399187759 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.39624734 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.401098714 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.40032868 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.764401227 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.64794644 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.299959024 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.397430844 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.396841661 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.163553232 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.462229614 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.593577305 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.3964734 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.397013526 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.703144268 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.298373331 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.397189141 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.396134281 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.396572909 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.6731996 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.396853443 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.766831469 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.882931286 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.397255072 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.402415976 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.150968865 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.396066098 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.396633789 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.396091235 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.659482648 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.397350509 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.396379253 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.396231473 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.397089397 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.398447581 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.397089363 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.39915929 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.396625549 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.396087247 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.944684032 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.604218974 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.397365931 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.401459217 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.911385461 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.450834693 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.396359516 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.40385216 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.397842279 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.396177972 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.453582452 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.404271421 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.404788143 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.398713641 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.401564137 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.928735693 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.395931912 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.398356276 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.606106651 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.008797915 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.396473123 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.396046376 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.396385839 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.452337439 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.940990026 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.400767916 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.654894577 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.397489573 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.432188512 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.396035565 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.443590466 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.940717961 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.398328448 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.396369978 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.080837633 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.396926112 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.212310792 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.396367038 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.397395005 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.997530506 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.396046697 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.39844488 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.396148679 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.396040954 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.701717656 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.396325102 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.428811483 seconds)
  done (took 516.873840134 seconds)
done (took 679.997623799 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.396532237 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.397162745 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.397425817 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.396964954 seconds)
  done (took 10.97279655 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.403015373 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.402573574 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.401505798 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.401452771 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.403506309 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.404323916 seconds)
  done (took 9.801589705 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.398384525 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.39739409 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.397787051 seconds)
  done (took 8.578054314 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.574198486 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.39978976 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.707622401 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.405519447 seconds)
  done (took 9.472090106 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.401550353 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.401470429 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.401835043 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.402816454 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.402995129 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.404131559 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.403961509 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.403193511 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.403334231 seconds)
  done (took 14.008759767 seconds)
done (took 54.217094693 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/240) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.396620596 seconds)
    (2/240) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.745621969 seconds)
    (3/240) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.39810594 seconds)
    (4/240) benchmarking ("map", abs, Bool, false)...
    done (took 1.513806145 seconds)
    (5/240) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.071392175 seconds)
    (6/240) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.867108536 seconds)
    (7/240) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.411625002 seconds)
    (8/240) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.346996289 seconds)
    (9/240) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.06673352 seconds)
    (10/240) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.630631811 seconds)
    (11/240) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.396821832 seconds)
    (12/240) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.546071354 seconds)
    (13/240) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.544424057 seconds)
    (14/240) benchmarking ("perf_sum2", Int64, true)...
    done (took 2.040246087 seconds)
    (15/240) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.399017148 seconds)
    (16/240) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.405346004 seconds)
    (17/240) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.397193904 seconds)
    (18/240) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.414320325 seconds)
    (19/240) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.018359075 seconds)
    (20/240) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.400265175 seconds)
    (21/240) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.867532002 seconds)
    (22/240) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.894548546 seconds)
    (23/240) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.397364095 seconds)
    (24/240) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.396653899 seconds)
    (25/240) benchmarking ("map", abs, Float64, true)...
    done (took 2.110404027 seconds)
    (26/240) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.408603923 seconds)
    (27/240) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.368503854 seconds)
    (28/240) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.397801565 seconds)
    (29/240) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.351391362 seconds)
    (30/240) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.901733622 seconds)
    (31/240) benchmarking ("perf_sum", Bool, true)...
    done (took 1.67236787 seconds)
    (32/240) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.398472497 seconds)
    (33/240) benchmarking ("map", identity, Bool, false)...
    done (took 1.521077944 seconds)
    (34/240) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.400086106 seconds)
    (35/240) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.744518858 seconds)
    (36/240) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.404849964 seconds)
    (37/240) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.410948615 seconds)
    (38/240) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.016627112 seconds)
    (39/240) benchmarking ("map", identity, BigInt, true)...
    done (took 1.831015345 seconds)
    (40/240) benchmarking ("perf_countequals", "Int8")...
    done (took 1.483867258 seconds)
    (41/240) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.405785452 seconds)
    (42/240) benchmarking ("perf_sum", Int8, true)...
    done (took 1.684282465 seconds)
    (43/240) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.398987827 seconds)
    (44/240) benchmarking ("perf_sum", Bool, false)...
    done (took 1.692931524 seconds)
    (45/240) benchmarking ("map", abs, Float64, false)...
    done (took 1.676389377 seconds)
    (46/240) benchmarking ("perf_sum", Float64, true)...
    done (took 1.832243104 seconds)
    (47/240) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.76264499 seconds)
    (48/240) benchmarking ("map", identity, Int8, false)...
    done (took 1.514393017 seconds)
    (49/240) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.411820524 seconds)
    (50/240) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.599060439 seconds)
    (51/240) benchmarking ("map", abs, Float32, true)...
    done (took 2.104570685 seconds)
    (52/240) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.397937278 seconds)
    (53/240) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.419438384 seconds)
    (54/240) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.79994629 seconds)
    (55/240) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.711785931 seconds)
    (56/240) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.954910099 seconds)
    (57/240) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.397513569 seconds)
    (58/240) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.397486162 seconds)
    (59/240) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.40720021 seconds)
    (60/240) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.398652681 seconds)
    (61/240) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.398070065 seconds)
    (62/240) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.399827323 seconds)
    (63/240) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.412151182 seconds)
    (64/240) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.39708324 seconds)
    (65/240) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.412877486 seconds)
    (66/240) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.398661608 seconds)
    (67/240) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.399447594 seconds)
    (68/240) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.705534584 seconds)
    (69/240) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.850170877 seconds)
    (70/240) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.630771323 seconds)
    (71/240) benchmarking ("map", abs, Int64, true)...
    done (took 2.128829812 seconds)
    (72/240) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.30185817 seconds)
    (73/240) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.39649781 seconds)
    (74/240) benchmarking ("map", identity, Float64, false)...
    done (took 1.66963438 seconds)
    (75/240) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.413305825 seconds)
    (76/240) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.159690887 seconds)
    (77/240) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.937355116 seconds)
    (78/240) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.404853877 seconds)
    (79/240) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.396594033 seconds)
    (80/240) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.396773753 seconds)
    (81/240) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.541576653 seconds)
    (82/240) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.402247469 seconds)
    (83/240) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.403453103 seconds)
    (84/240) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.397984738 seconds)
    (85/240) benchmarking ("perf_sum", Float32, false)...
    done (took 1.90159723 seconds)
    (86/240) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.411751124 seconds)
    (87/240) benchmarking ("perf_countequals", "Float32")...
    done (took 1.489888491 seconds)
    (88/240) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.396746847 seconds)
    (89/240) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.409722232 seconds)
    (90/240) benchmarking ("map", identity, Float32, false)...
    done (took 1.665897331 seconds)
    (91/240) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.634923048 seconds)
    (92/240) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.397116395 seconds)
    (93/240) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.397201751 seconds)
    (94/240) benchmarking ("map", identity, Int8, true)...
    done (took 1.806138691 seconds)
    (95/240) benchmarking ("perf_sum4", Int64, false)...
    done (took 2.276073218 seconds)
    (96/240) benchmarking ("perf_countequals", "Int64")...
    done (took 1.484957146 seconds)
    (97/240) benchmarking ("perf_sum4", Float64, false)...
    done (took 2.189857508 seconds)
    (98/240) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.398579463 seconds)
    (99/240) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.762632288 seconds)
    (100/240) benchmarking ("perf_countequals", "Bool")...
    done (took 1.484209029 seconds)
    (101/240) benchmarking ("map", abs, Float32, false)...
    done (took 1.671199035 seconds)
    (102/240) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.835587371 seconds)
    (103/240) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.398877764 seconds)
    (104/240) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.561133537 seconds)
    (105/240) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.402992485 seconds)
    (106/240) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.034766471 seconds)
    (107/240) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.409503036 seconds)
    (108/240) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.640002832 seconds)
    (109/240) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.397118192 seconds)
    (110/240) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.39949562 seconds)
    (111/240) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.761155582 seconds)
    (112/240) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.749498787 seconds)
    (113/240) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.411213105 seconds)
    (114/240) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.793909424 seconds)
    (115/240) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.403553815 seconds)
    (116/240) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.397306441 seconds)
    (117/240) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.733498619 seconds)
    (118/240) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.397407585 seconds)
    (119/240) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.988398252 seconds)
    (120/240) benchmarking ("perf_sum", Int64, true)...
    done (took 1.918973732 seconds)
    (121/240) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.953351788 seconds)
    (122/240) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.397605839 seconds)
    (123/240) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.126560216 seconds)
    (124/240) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.397976806 seconds)
    (125/240) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.403850152 seconds)
    (126/240) benchmarking ("perf_sum4", Float64, true)...
    done (took 2.186935222 seconds)
    (127/240) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.398971682 seconds)
    (128/240) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.398589809 seconds)
    (129/240) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.546971151 seconds)
    (130/240) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.710796053 seconds)
    (131/240) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.403074883 seconds)
    (132/240) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.889038394 seconds)
    (133/240) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.412244813 seconds)
    (134/240) benchmarking ("perf_sum", Float32, true)...
    done (took 1.861656278 seconds)
    (135/240) benchmarking ("map", abs, Int8, true)...
    done (took 1.807094973 seconds)
    (136/240) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.413221157 seconds)
    (137/240) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.177538702 seconds)
    (138/240) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.758504861 seconds)
    (139/240) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.41155378 seconds)
    (140/240) benchmarking ("map", identity, Float32, true)...
    done (took 2.108128909 seconds)
    (141/240) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.621852047 seconds)
    (142/240) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.617623703 seconds)
    (143/240) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.615804818 seconds)
    (144/240) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.371620513 seconds)
    (145/240) benchmarking ("perf_sum", Int8, false)...
    done (took 1.703973394 seconds)
    (146/240) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.400978252 seconds)
    (147/240) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.557966952 seconds)
    (148/240) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.396870323 seconds)
    (149/240) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.413856517 seconds)
    (150/240) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.396369291 seconds)
    (151/240) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.399447118 seconds)
    (152/240) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.978378849 seconds)
    (153/240) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.541317226 seconds)
    (154/240) benchmarking ("perf_countequals", "Float64")...
    done (took 1.489617497 seconds)
    (155/240) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.410789874 seconds)
    (156/240) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.080052092 seconds)
    (157/240) benchmarking ("map", identity, Int64, true)...
    done (took 2.130863792 seconds)
    (158/240) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.398760214 seconds)
    (159/240) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.899046923 seconds)
    (160/240) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.409566861 seconds)
    (161/240) benchmarking ("perf_sum", Int64, false)...
    done (took 1.957229621 seconds)
    (162/240) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.126424138 seconds)
    (163/240) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.891851173 seconds)
    (164/240) benchmarking ("perf_sum2", Int64, false)...
    done (took 2.095472831 seconds)
    (165/240) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.404633999 seconds)
    (166/240) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.399415884 seconds)
    (167/240) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.848741587 seconds)
    (168/240) benchmarking ("map", identity, Int64, false)...
    done (took 1.679368428 seconds)
    (169/240) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.398612633 seconds)
    (170/240) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.35077009 seconds)
    (171/240) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.398506815 seconds)
    (172/240) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.130846698 seconds)
    (173/240) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.352449415 seconds)
    (174/240) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.399035289 seconds)
    (175/240) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.4150843 seconds)
    (176/240) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.398340624 seconds)
    (177/240) benchmarking ("map", abs, BigInt, false)...
    done (took 2.397141915 seconds)
    (178/240) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.399869176 seconds)
    (179/240) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.079629523 seconds)
    (180/240) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.21239084 seconds)
    (181/240) benchmarking ("perf_sum4", Float32, false)...
    done (took 2.260291005 seconds)
    (182/240) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.633670582 seconds)
    (183/240) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.309323003 seconds)
    (184/240) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.409684516 seconds)
    (185/240) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.120582078 seconds)
    (186/240) benchmarking ("map", abs, BigInt, true)...
    done (took 2.398413607 seconds)
    (187/240) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.902647986 seconds)
    (188/240) benchmarking ("map", abs, Int8, false)...
    done (took 1.517415902 seconds)
    (189/240) benchmarking ("map", identity, Bool, true)...
    done (took 1.792145212 seconds)
    (190/240) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.410858266 seconds)
    (191/240) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.740727078 seconds)
    (192/240) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.619497596 seconds)
    (193/240) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.550282251 seconds)
    (194/240) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.408298882 seconds)
    (195/240) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.409668043 seconds)
    (196/240) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.877428902 seconds)
    (197/240) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.399849778 seconds)
    (198/240) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.397439601 seconds)
    (199/240) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.410998582 seconds)
    (200/240) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.397520921 seconds)
    (201/240) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.413740516 seconds)
    (202/240) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.410324986 seconds)
    (203/240) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.396998744 seconds)
    (204/240) benchmarking ("map", abs, Bool, true)...
    done (took 1.79007665 seconds)
    (205/240) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.397757125 seconds)
    (206/240) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.503691817 seconds)
    (207/240) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.398138526 seconds)
    (208/240) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.403340508 seconds)
    (209/240) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.818509843 seconds)
    (210/240) benchmarking ("map", identity, Float64, true)...
    done (took 2.104215717 seconds)
    (211/240) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.651421762 seconds)
    (212/240) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.40948232 seconds)
    (213/240) benchmarking ("perf_sum4", Float32, true)...
    done (took 2.255670721 seconds)
    (214/240) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.13373804 seconds)
    (215/240) benchmarking ("map", identity, BigInt, false)...
    done (took 1.551314716 seconds)
    (216/240) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.020504485 seconds)
    (217/240) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.399101604 seconds)
    (218/240) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.998653381 seconds)
    (219/240) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.952287458 seconds)
    (220/240) benchmarking ("perf_sum", Float64, false)...
    done (took 1.86592476 seconds)
    (221/240) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.983902545 seconds)
    (222/240) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.55092596 seconds)
    (223/240) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.971709772 seconds)
    (224/240) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.731616112 seconds)
    (225/240) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.074285682 seconds)
    (226/240) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.398634251 seconds)
    (227/240) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.554652118 seconds)
    (228/240) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.414192021 seconds)
    (229/240) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.396901317 seconds)
    (230/240) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.59493306 seconds)
    (231/240) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.396727486 seconds)
    (232/240) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.397922734 seconds)
    (233/240) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.602346535 seconds)
    (234/240) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.398658386 seconds)
    (235/240) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.414382182 seconds)
    (236/240) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.030472415 seconds)
    (237/240) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.400190929 seconds)
    (238/240) benchmarking ("perf_sum4", Int64, true)...
    done (took 2.24225149 seconds)
    (239/240) benchmarking ("map", abs, Int64, false)...
    done (took 1.696949881 seconds)
    (240/240) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.398117575 seconds)
  done (took 490.149765241 seconds)
done (took 491.534372669 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.417779727 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.426611425 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.407067388 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.407567788 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.422970078 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 2.40134582 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.426357541 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.412409003 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.413418599 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.408038098 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.407045361 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 2.10355006 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.409878371 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.409142596 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.406587954 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.408417347 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.406642692 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.411970963 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.406941341 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.420331309 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.407453505 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.407586592 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.407899812 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 2.102979052 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.411716323 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.413820513 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.412743975 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.41285396 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.423832675 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.411980647 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.413465258 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.422735511 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.398495168 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.407334912 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.405030173 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.41347151 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.423601882 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.420654649 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.411584933 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.414531776 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.39843915 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.407862861 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.410135028 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.408365528 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.408309021 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.414325432 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.410472101 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.41727665 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.410551925 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.408928244 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.398701219 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.408912606 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.412206514 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.408380051 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.424526605 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.408878301 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.417079165 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.415532666 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.422294232 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.415366298 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.39820272 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.415260254 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.412237792 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.406620175 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.416834024 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.39880238 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.405795958 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.415753476 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.398748131 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.416459785 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.398464086 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.416892421 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.411330905 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.40865873 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.414690005 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.398046741 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.405394089 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.406495391 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.418922453 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.408103967 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.419893128 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.408487932 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.412560739 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.408206883 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.408045563 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.401046394 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.426398843 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.411222756 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.420969788 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.423083401 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.417227897 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.424548182 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.412479358 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.40653384 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.421476483 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.41841272 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.413213825 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.412815445 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.413705715 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.426189361 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.399200925 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.417337427 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.405263543 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.40529984 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.408377352 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.409566869 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.399535226 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.411203915 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.419032448 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.417774656 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.411413616 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.399307078 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.414196716 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.427798759 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.421813181 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.412739237 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.406712166 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.399040068 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.412777537 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.410887676 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.410106349 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.407894387 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.428023232 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.411770587 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.405353641 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.399364865 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.412669191 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.40958916 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.421976792 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.425762076 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.415849838 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.408866711 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.41210029 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 2.401851364 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.429446687 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.415075631 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.412304256 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.415819025 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.407746896 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.405441639 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.424974553 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.425293717 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.409392089 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.418137011 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.406323152 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 2.399532081 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.411098091 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.409494688 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.409091866 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.422134138 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.405975129 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.40013208 seconds)
done (took 237.382030723 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/18) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.403546074 seconds)
    (2/18) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.404030874 seconds)
    (3/18) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.536882287 seconds)
    (4/18) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.404068795 seconds)
    (5/18) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.548031014 seconds)
    (6/18) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.404121438 seconds)
    (7/18) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.403787791 seconds)
    (8/18) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.412462822 seconds)
    (9/18) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.404332445 seconds)
    (10/18) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.403520753 seconds)
    (11/18) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.537185811 seconds)
    (12/18) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.403158415 seconds)
    (13/18) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.537728262 seconds)
    (14/18) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.547940355 seconds)
    (15/18) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.536291315 seconds)
    (16/18) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.403053695 seconds)
    (17/18) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.403653749 seconds)
    (18/18) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.403259175 seconds)
  done (took 30.484083671 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.480488882 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.476584537 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.513349822 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.404203669 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.456607209 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.514945906 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.404978833 seconds)
  done (took 11.637523508 seconds)
  (3/5) benchmarking "types"...
    (1/91) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.411371962 seconds)
    (2/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.403269731 seconds)
    (3/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.467740879 seconds)
    (4/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.468452183 seconds)
    (5/91) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.404103988 seconds)
    (6/91) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.593733371 seconds)
    (7/91) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.417012119 seconds)
    (8/91) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.403215859 seconds)
    (9/91) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.465609161 seconds)
    (10/91) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.403932523 seconds)
    (11/91) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.40315621 seconds)
    (12/91) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.412630094 seconds)
    (13/91) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.400731145 seconds)
    (14/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.467538701 seconds)
    (15/91) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.418019304 seconds)
    (16/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.522391218 seconds)
    (17/91) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.406850732 seconds)
    (18/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.404235201 seconds)
    (19/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.581290371 seconds)
    (20/91) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.403506743 seconds)
    (21/91) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.412542423 seconds)
    (22/91) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.46195827 seconds)
    (23/91) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.416948391 seconds)
    (24/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.403731809 seconds)
    (25/91) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.412418358 seconds)
    (26/91) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.403595388 seconds)
    (27/91) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.403357515 seconds)
    (28/91) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.403703572 seconds)
    (29/91) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.481853275 seconds)
    (30/91) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.40329781 seconds)
    (31/91) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.400591377 seconds)
    (32/91) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.402788965 seconds)
    (33/91) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.404157952 seconds)
    (34/91) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.403454912 seconds)
    (35/91) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.403191674 seconds)
    (36/91) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.405022436 seconds)
    (37/91) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.403442815 seconds)
    (38/91) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.403356615 seconds)
    (39/91) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.403821828 seconds)
    (40/91) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.403185115 seconds)
    (41/91) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.403523513 seconds)
    (42/91) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.428809883 seconds)
    (43/91) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.403237798 seconds)
    (44/91) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.404298395 seconds)
    (45/91) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.403718465 seconds)
    (46/91) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.403657204 seconds)
    (47/91) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.462290847 seconds)
    (48/91) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.403638886 seconds)
    (49/91) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.403569482 seconds)
    (50/91) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.403959962 seconds)
    (51/91) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.466875315 seconds)
    (52/91) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.413219176 seconds)
    (53/91) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.403964072 seconds)
    (54/91) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.403185462 seconds)
    (55/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.405385583 seconds)
    (56/91) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.40391027 seconds)
    (57/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.581720666 seconds)
    (58/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.467434336 seconds)
    (59/91) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.404288422 seconds)
    (60/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.467664312 seconds)
    (61/91) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.403111346 seconds)
    (62/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.404613541 seconds)
    (63/91) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.403157802 seconds)
    (64/91) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.403423108 seconds)
    (65/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.47548682 seconds)
    (66/91) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.403467378 seconds)
    (67/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.468072859 seconds)
    (68/91) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.4033578 seconds)
    (69/91) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.59763657 seconds)
    (70/91) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.428635613 seconds)
    (71/91) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.404696312 seconds)
    (72/91) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.409337626 seconds)
    (73/91) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.409299445 seconds)
    (74/91) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.406336481 seconds)
    (75/91) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.411375206 seconds)
    (76/91) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.403133834 seconds)
    (77/91) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.406983367 seconds)
    (78/91) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.411636198 seconds)
    (79/91) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.403478531 seconds)
    (80/91) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.404280786 seconds)
    (81/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.594161916 seconds)
    (82/91) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.40344331 seconds)
    (83/91) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.423031354 seconds)
    (84/91) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.412664712 seconds)
    (85/91) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.403763456 seconds)
    (86/91) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.470874616 seconds)
    (87/91) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.403170835 seconds)
    (88/91) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.403496665 seconds)
    (89/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.491477207 seconds)
    (90/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.522533489 seconds)
    (91/91) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.464953081 seconds)
  done (took 135.478742879 seconds)
  (4/5) benchmarking "randstring"...
    (1/2) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.422156687 seconds)
    (2/2) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.40846945 seconds)
  done (took 4.217087505 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.408217705 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.404507715 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.40369961 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.40332977 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.404934658 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.403468222 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.404216263 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.40631689 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.405765153 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.404213512 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.403774893 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.40610662 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.404192882 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.404910357 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.404744551 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.403864262 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.405086446 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.404129757 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.403848031 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.405226246 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.013721948 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.404553003 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.406912963 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.404555071 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.404929926 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.403661117 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.430735342 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.403903072 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.404735017 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.415505469 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.406934857 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.404156977 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.405397142 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.409379847 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.405117134 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.405508361 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.404315266 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.405649142 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.403719709 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.403695038 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.405438347 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.405236744 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.403962547 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.405519632 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.40714895 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.405381811 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.405950601 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.430798078 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.404295178 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.405316688 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.40526218 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.403869896 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.403708784 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.407661447 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.40735292 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.408251853 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.406936227 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.404164369 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.404578979 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.404754808 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.404154869 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.404017275 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.406520654 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.404796989 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.404267345 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.405034447 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.404870109 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.405183039 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.404380339 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.403758101 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.404903314 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.403850754 seconds)
  done (took 103.222913931 seconds)
done (took 286.426987731 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.32141959 seconds)
  done (took 4.708322993 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.805211955 seconds)
  done (took 4.192374378 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 9.732208417 seconds)
  done (took 11.130101608 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.481826528 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.420472347 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.421923843 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.401215779 seconds)
  done (took 11.112310251 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.121489356 seconds)
  done (took 4.508291325 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.398479554 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.410063347 seconds)
  done (took 6.196144623 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.669529182 seconds)
  done (took 4.056490088 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.643193514 seconds)
  done (took 4.037123981 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.415376598 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.421084307 seconds)
  done (took 6.23129908 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.399300699 seconds)
  done (took 3.786421738 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.177094756 seconds)
  done (took 9.563736754 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.399154006 seconds)
  done (took 3.787454783 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.454135793 seconds)
  done (took 3.840996111 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.297442246 seconds)
  done (took 4.684014154 seconds)
done (took 83.221371113 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.398720901 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.3990729 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.399771304 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.399164025 seconds)
  done (took 10.983808304 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.470348422 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.462822298 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.47965678 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.457124549 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.461645567 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.46376408 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.430135503 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.429443747 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.464239732 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.459419564 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.466841616 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.455352625 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.473209982 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.430123477 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.458949812 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.474968655 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.46053017 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.469838771 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.430577513 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.45816165 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.404995025 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.463482301 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.456774447 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.404573312 seconds)
  done (took 36.275196586 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.805126176 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.477337155 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.612709641 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.457647422 seconds)
  done (took 7.740339443 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.497124164 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.509159567 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.50884529 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.555150299 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.581531335 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.507771441 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.431185659 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.426187173 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.411812003 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.507652174 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.571890154 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.404316809 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.679959628 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.404146793 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.698490933 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.403936732 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.40385802 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.499152002 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.547775808 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.563902898 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.404014518 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.495443877 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.503794768 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.403868825 seconds)
  done (took 37.309290442 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.412575707 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.420562739 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.405185884 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 1.406025007 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.405818643 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.406702088 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 1.419985121 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 1.406623164 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.411906348 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 1.405394712 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 1.405412713 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 1.405586747 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.419016916 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.405593292 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.405465932 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.411928728 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.408978051 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.411693526 seconds)
    (19/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.405388085 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.405478199 seconds)
    (21/22) benchmarking ("var", "Int64")...
    done (took 1.414967069 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.411805887 seconds)
  done (took 32.399984319 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.399565534 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.398767725 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.750400126 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.655496035 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.399351087 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.399286813 seconds)
  done (took 14.390016052 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.464819314 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.486820005 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.405950249 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.689239698 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.752444544 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.406648586 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.406301433 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.52008927 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.755967568 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.830726819 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.441226624 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.44960147 seconds)
  done (took 19.998083629 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.409416618 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.399381651 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.405371225 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.415571953 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.450124084 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.408162643 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.411823143 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.398431276 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.450622481 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.453528119 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.40798493 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.451588918 seconds)
  done (took 22.451331703 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.166831963 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.292818558 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.406683869 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.611511828 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398914842 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.398491975 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.620286499 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.839467291 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.404519546 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674615854 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403224681 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048277717 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.414603796 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407877198 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.398787178 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.399278204 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409357133 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.160545337 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399713158 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404062668 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.401243224 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.401578853 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.399368084 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.587809712 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.401128806 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398857984 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.660922765 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.398788729 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.65891616 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.631385778 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.631004815 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401749174 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674914734 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.776641872 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.540508114 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.586651173 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406900751 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.402645375 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.40966289 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.409539054 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410702833 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.401823018 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.629316701 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400533208 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.398387722 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402257621 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.841307188 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.406818611 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.399425353 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.400113279 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.636239434 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.053147081 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.405952623 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.398632767 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.646118505 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399435643 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.40415687 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.606815875 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.398749577 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405798703 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407278759 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.399241285 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.402859003 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400735429 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020379532 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.406810155 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.404299824 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.406027045 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40414335 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.399496589 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.424320511 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399271612 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.421905455 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399498771 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.127543454 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.408165276 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412406821 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.110995514 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40634128 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.399691851 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400437345 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400335214 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399249026 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.398988879 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.398686619 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.205484876 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442163173 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.399804505 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415762048 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.840653306 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.585702358 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.279294708 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.412196199 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.411391382 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.406311176 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401436208 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.405420484 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410141055 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42412097 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.840224082 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404433719 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.404702093 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409013377 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.610622988 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408012122 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.399148682 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.842640904 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402271041 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.42348511 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.400933934 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.580493922 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.941004734 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.634617804 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40167173 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42939907 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.399197182 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.2653278 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40388563 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.40467699 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.40465789 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.662053288 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.407792698 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400040022 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.5197702 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.42544142 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.399929487 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408535391 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401222868 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.400978745 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.652671183 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402143103 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.631399585 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.400637462 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398884297 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.404109903 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404275319 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.400814404 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.405098752 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400207039 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674523059 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399120582 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402584846 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399109149 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.406477007 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.408061683 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.405676375 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412022709 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400023429 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.39926451 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.633710501 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427645612 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.542875613 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426294402 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.398713914 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.411016759 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.405721801 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.405098892 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409338505 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.401767763 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427396126 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.408600711 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405936281 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.941145178 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369438881 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.412906575 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.292894083 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.414826653 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.520397577 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.407743716 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.587165208 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.403834701 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403389615 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.407254378 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.406017492 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414412127 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.634541357 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.41000468 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.573861103 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.840101622 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.943512739 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.866478424 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.400778914 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.399162415 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.399220898 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400294244 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39929831 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.399709238 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.58420043 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.643315154 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.408119767 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.950817585 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403487121 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.399380707 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.408178049 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.634681909 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.409426945 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400470198 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.403569236 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401318111 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402736576 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.633605357 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.680613123 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.415417888 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.399518651 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.961840476 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.408059434 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.40042716 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.399465125 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429343646 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.408683197 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.918078397 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398920397 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402622144 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.637221177 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.402506212 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.416949714 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.3996282 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405824701 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401482263 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.4223372 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408942248 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.584522456 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.40052558 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402039683 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.399208071 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.112259555 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887670568 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405641128 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.400650048 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.400176954 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.841167959 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403556229 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399815352 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.613702207 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.842161796 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399512276 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.841284784 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.400361912 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.050462131 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.63357972 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400575652 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40612757 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.400878415 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.637859288 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.612551274 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431489016 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.399687341 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413423488 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.415516411 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923380756 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401827649 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.579862419 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.841715622 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399219524 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.40184758 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.549779948 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.39963653 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.745835866 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.400125753 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400181839 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.410846033 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.399805388 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.922971743 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.412671543 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401038883 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028251279 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.40961766 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.842419859 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400255129 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.586572586 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.63521189 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.703587667 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.40157095 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.40811676 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.407192509 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.638473538 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405553114 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.408895337 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894154343 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.247467371 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.406653904 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402645638 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.265762478 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408454584 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.656779758 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.407371687 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.405824276 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419190465 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.401027593 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399817961 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.399793317 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.410521839 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36792308 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.013709154 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.416336159 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415630676 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400630226 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403816962 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.400096669 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.416525826 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.936530876 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407572505 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415973357 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428518865 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.404672296 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405395812 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.41106217 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.399922445 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.402124067 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.648990354 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.40627791 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.407867786 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.406771472 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.620971747 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.611605126 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.399702044 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.400185378 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.618997028 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.401551136 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.423060167 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.127409175 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.415754376 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.399806403 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401974351 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.421419741 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420624788 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.523489834 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.583599435 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.633126327 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.635461853 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.747533204 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399809261 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402552366 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 2.196622036 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.169262264 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407445498 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.409292484 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.399455569 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.940076759 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.109574818 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.952905666 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.638797236 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.404918912 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404336794 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400766813 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.715807608 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400056872 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.675569318 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409595749 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.412679297 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421927688 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407488522 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411231559 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.610309561 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674794054 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400102899 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407685574 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400483082 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.400419326 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.636723027 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.613266466 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.152933755 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.109875916 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400609624 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.400178825 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.844092935 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676185284 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39995182 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40131832 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400392838 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.400569277 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.400978399 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.408087639 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410187415 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.67480321 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.632885892 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.780956735 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.631138932 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 16.278768601 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.279424287 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399279014 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.406962055 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401192398 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.583762399 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.933833732 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.062245794 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402199434 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.524516869 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.587806795 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.400928766 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.714412653 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.408359274 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.399947835 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400335 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403685812 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.400117704 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.631012163 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.957148033 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415953911 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.40593565 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.406866174 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.400001451 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.582223833 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.418798048 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.218260284 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.404945499 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.63502923 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.413492199 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.400914535 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.944595333 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.639683847 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401746857 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.40612566 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.613594889 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.406410436 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.43479069 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.274071406 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.399477523 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.276725938 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.610778543 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.278432194 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41012497 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.065204674 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.949761267 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.402056421 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.025575947 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400338044 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410672528 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.675967396 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.407562249 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.400005384 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.68797864 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.404955819 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.408543918 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.58820424 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.935549666 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.055228037 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.40310244 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406767841 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.40234228 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400332457 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.59629118 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411079202 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.427806037 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.836626037 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.400449285 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401502457 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.019805412 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.410910788 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400132738 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.39982792 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400536261 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.408667324 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.414022465 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.401584943 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.402235253 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.608988923 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.916915201 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415790829 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.024357784 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.7354559 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.412901273 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.41049901 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.404354091 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.410304852 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400257647 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399714847 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400150115 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.404599375 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.275205307 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.408805493 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.630578273 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.407704947 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.610758641 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.610833353 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.406654623 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.585719837 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400789801 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.420705366 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.413125614 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401018111 seconds)
  done (took 1033.736535127 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.441562565 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.438409985 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.421679979 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.524371614 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.462882162 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.562441236 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.515508634 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.429562361 seconds)
  done (took 21.185700259 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.410476005 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.411442167 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.405367407 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.41173431 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.406530555 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.665195064 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.402053234 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.411706276 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.417416089 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.40606499 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.402970241 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.813006471 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.411468603 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.402682661 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.403687625 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.411706318 seconds)
  done (took 32.596600381 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.258614675 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.553034251 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.853416078 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.409805163 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.408526306 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.408706491 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.679436091 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.403047166 seconds)
  done (took 24.366354002 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.418405981 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.418034639 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.419104987 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.420117025 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.419497203 seconds)
  done (took 8.483972821 seconds)
done (took 1303.305574308 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.406213068 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.406496258 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.406342349 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.407949628 seconds)
  done (took 7.015548591 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.401461135 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.401372881 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.402328419 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.822304911 seconds)
  done (took 10.416150409 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.752751392 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.893679209 seconds)
  done (took 5.034627322 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.401645651 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.400461205 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.414197343 seconds)
  done (took 8.604507663 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.826312991 seconds)
  done (took 3.215542462 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.888989769 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.846680574 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.559174053 seconds)
  done (took 6.683634391 seconds)
done (took 42.357644758 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.400484239 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.178401989 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.558106613 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.400608049 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.56126487 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.557894643 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.683549992 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.399833463 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.410472305 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.408333824 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.400017735 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.560867184 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.671733026 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.178784833 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.671602128 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.176573666 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.560623464 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.404984882 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.399588099 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.410090512 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.683245786 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.403611693 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.400186423 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.400130617 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.562218358 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.545982998 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.402826296 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.176083676 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.400565098 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.400641382 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.557680572 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.400241603 seconds)
  done (took 83.716730063 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.400719344 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.401231979 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.402691603 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.399656323 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.403713955 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.400904847 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.403794889 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.400925855 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.401134848 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.400379174 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.400802294 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.400790839 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.404917244 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.401681303 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.402207576 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.4007078 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.408370917 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.400477586 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.411534851 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.400399866 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.401404799 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.402970087 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.400368397 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.399973902 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.402581979 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.400418095 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.40164301 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.400772893 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.401146302 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.406821131 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.403597043 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.40076053 seconds)
  done (took 78.260377118 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.400956319 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.407055694 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.40095825 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.400910578 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.405716926 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.402192408 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.415082736 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.400550095 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.40020576 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.400260096 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.412274968 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.406880633 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.401512716 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.400876522 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.404288921 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.401811203 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.400908375 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.400472596 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.400605584 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.400668825 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.404314353 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.400851041 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.401561386 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.402946945 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.411107823 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.402966944 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.40089245 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.399956205 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.40090005 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.400956984 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.40187599 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.404814078 seconds)
  done (took 78.287050698 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.630734494 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.406337128 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.407817998 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.400713374 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.407921631 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.406146949 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.40045935 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.634978361 seconds)
  done (took 15.084090593 seconds)
done (took 256.736674685 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.400406091 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.926559846 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.428338635 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.400260964 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.431474008 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.43275106 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.579333331 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.430987135 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.562376404 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.401623523 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.427894863 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.401038983 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.194617308 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.519694926 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.302974381 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.402011628 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.266976176 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.400620171 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.987362493 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.585069744 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.428495499 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.401167286 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.295087454 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.274065115 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.401729454 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.413988331 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.411654095 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.524893442 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.494757139 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.412268766 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.922995557 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.401360922 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.401023396 seconds)
  done (took 64.655817823 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.406196089 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.405890378 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.406230535 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.405859495 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.406375281 seconds)
    (6/30) benchmarking ("IntSet", "Int", "start")...
    done (took 1.40533856 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.405860626 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.405479023 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.406043137 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.405828802 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.40610441 seconds)
    (12/30) benchmarking ("IntSet", "Int", "next")...
    done (took 1.408923263 seconds)
    (13/30) benchmarking ("IntSet", "Int", "done")...
    done (took 1.406300298 seconds)
    (14/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.4069401 seconds)
    (15/30) benchmarking ("Set", "Int", "next")...
    done (took 1.406726928 seconds)
    (16/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.40615062 seconds)
    (17/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.406307046 seconds)
    (18/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.411547477 seconds)
    (19/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.406825367 seconds)
    (20/30) benchmarking ("Set", "String", "start")...
    done (took 1.406584767 seconds)
    (21/30) benchmarking ("Vector", "String", "next")...
    done (took 1.40620598 seconds)
    (22/30) benchmarking ("Set", "Any", "next")...
    done (took 1.410676119 seconds)
    (23/30) benchmarking ("Vector", "String", "start")...
    done (took 1.406230445 seconds)
    (24/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.406453566 seconds)
    (25/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.406905664 seconds)
    (26/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.406112393 seconds)
    (27/30) benchmarking ("Set", "String", "done")...
    done (took 1.405946358 seconds)
    (28/30) benchmarking ("Set", "Any", "done")...
    done (took 1.405906737 seconds)
    (29/30) benchmarking ("Set", "Int", "start")...
    done (took 1.406258467 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.406741086 seconds)
  done (took 43.589951451 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.406951829 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.120731348 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.40165758 seconds)
    (4/117) benchmarking ("IntSet", "Int", "intersect", "IntSet")...
    done (took 1.411785262 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.767099135 seconds)
    (6/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.740127852 seconds)
    (7/117) benchmarking ("Vector", "Int", "setdiff", "IntSet")...
    done (took 2.283567233 seconds)
    (8/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.636653228 seconds)
    (9/117) benchmarking ("IntSet", "Int", "union!", "Vector")...
    done (took 1.416183231 seconds)
    (10/117) benchmarking ("IntSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.494812449 seconds)
    (11/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.416223049 seconds)
    (12/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.407154772 seconds)
    (13/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.408559657 seconds)
    (14/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.124055964 seconds)
    (15/117) benchmarking ("Vector", "Int", "intersect", "IntSet")...
    done (took 1.439999223 seconds)
    (16/117) benchmarking ("Set", "Int", "setdiff", "IntSet")...
    done (took 2.02775931 seconds)
    (17/117) benchmarking ("Set", "Int", "intersect", "IntSet", "IntSet")...
    done (took 1.483750975 seconds)
    (18/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.791668949 seconds)
    (19/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.552072743 seconds)
    (20/117) benchmarking ("Set", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 2.401605928 seconds)
    (21/117) benchmarking ("IntSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.596395968 seconds)
    (22/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.530505929 seconds)
    (23/117) benchmarking ("IntSet", "Int", "setdiff!", "Vector")...
    done (took 1.411022092 seconds)
    (24/117) benchmarking ("IntSet", "Int", "symdiff!", "Set")...
    done (took 1.415908837 seconds)
    (25/117) benchmarking ("IntSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.440610527 seconds)
    (26/117) benchmarking ("IntSet", "Int", "<", "IntSet")...
    done (took 1.413363735 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.844043046 seconds)
    (28/117) benchmarking ("IntSet", "Int", "union!", "IntSet")...
    done (took 1.412706919 seconds)
    (29/117) benchmarking ("IntSet", "Int", "symdiff!", "IntSet")...
    done (took 1.413149791 seconds)
    (30/117) benchmarking ("IntSet", "Int", "union!", "Set")...
    done (took 1.415800098 seconds)
    (31/117) benchmarking ("IntSet", "Int", "⊆", "self")...
    done (took 1.411603618 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.738467539 seconds)
    (33/117) benchmarking ("Set", "Int", "union", "IntSet")...
    done (took 2.414539902 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.404803113 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.844208555 seconds)
    (36/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.406019391 seconds)
    (37/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.005923828 seconds)
    (38/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.406671348 seconds)
    (39/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.602511766 seconds)
    (40/117) benchmarking ("IntSet", "Int", "intersect", "Set")...
    done (took 1.413205728 seconds)
    (41/117) benchmarking ("IntSet", "Int", "⊆", "Set")...
    done (took 1.406218257 seconds)
    (42/117) benchmarking ("IntSet", "Int", "symdiff", "Vector")...
    done (took 1.413669723 seconds)
    (43/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.403553651 seconds)
    (44/117) benchmarking ("IntSet", "Int", "union", "Set")...
    done (took 1.414276086 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.831978326 seconds)
    (46/117) benchmarking ("IntSet", "Int", "==", "self")...
    done (took 1.406401801 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "IntSet", "IntSet")...
    done (took 1.44000547 seconds)
    (48/117) benchmarking ("Set", "Int", "setdiff!", "IntSet")...
    done (took 1.735036004 seconds)
    (49/117) benchmarking ("IntSet", "Int", "intersect", "Vector")...
    done (took 1.410565938 seconds)
    (50/117) benchmarking ("Set", "Int", "symdiff", "IntSet")...
    done (took 2.410979245 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "IntSet", "IntSet")...
    done (took 2.400506908 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.831554225 seconds)
    (53/117) benchmarking ("IntSet", "Int", "setdiff!", "Set")...
    done (took 1.411993807 seconds)
    (54/117) benchmarking ("Vector", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 2.407791517 seconds)
    (55/117) benchmarking ("IntSet", "Int", "setdiff", "Set")...
    done (took 1.411757375 seconds)
    (56/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.831584927 seconds)
    (57/117) benchmarking ("IntSet", "Int", "setdiff!", "IntSet")...
    done (took 1.412935064 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.295120452 seconds)
    (59/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.734297635 seconds)
    (60/117) benchmarking ("IntSet", "Int", "symdiff", "IntSet")...
    done (took 1.413969147 seconds)
    (61/117) benchmarking ("IntSet", "Int", "union", "IntSet")...
    done (took 1.413540081 seconds)
    (62/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.407807386 seconds)
    (63/117) benchmarking ("IntSet", "Int", "union", "Vector", "Vector")...
    done (took 2.401584908 seconds)
    (64/117) benchmarking ("Set", "Int", "intersect", "IntSet")...
    done (took 1.481341728 seconds)
    (65/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.410353897 seconds)
    (66/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.400835558 seconds)
    (67/117) benchmarking ("Vector", "Int", "union", "IntSet")...
    done (took 2.4012194 seconds)
    (68/117) benchmarking ("IntSet", "Int", "⊆", "IntSet")...
    done (took 1.412583429 seconds)
    (69/117) benchmarking ("IntSet", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 1.420552306 seconds)
    (70/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.831464444 seconds)
    (71/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.401836148 seconds)
    (72/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.401508739 seconds)
    (73/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.651064881 seconds)
    (74/117) benchmarking ("IntSet", "Int", "⊆", "Vector")...
    done (took 1.410175375 seconds)
    (75/117) benchmarking ("Set", "Int", "union", "IntSet", "IntSet")...
    done (took 2.411620918 seconds)
    (76/117) benchmarking ("IntSet", "Int", "==", "IntSet")...
    done (took 1.406865416 seconds)
    (77/117) benchmarking ("IntSet", "Int", "union", "Vector")...
    done (took 1.413105333 seconds)
    (78/117) benchmarking ("IntSet", "Int", "intersect", "IntSet", "IntSet")...
    done (took 1.417522074 seconds)
    (79/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.407149545 seconds)
    (80/117) benchmarking ("Set", "Int", "⊆", "IntSet")...
    done (took 1.406488085 seconds)
    (81/117) benchmarking ("IntSet", "Int", "intersect", "Set", "Set")...
    done (took 1.50287134 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.530413404 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "IntSet")...
    done (took 1.740450611 seconds)
    (84/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.745947723 seconds)
    (85/117) benchmarking ("IntSet", "Int", "setdiff", "IntSet")...
    done (took 1.413966288 seconds)
    (86/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.54979041 seconds)
    (87/117) benchmarking ("empty", "Int", "<", "IntSet")...
    done (took 1.411422845 seconds)
    (88/117) benchmarking ("Set", "Int", "union")...
    done (took 1.74138443 seconds)
    (89/117) benchmarking ("IntSet", "Int", "symdiff")...
    done (took 1.406738796 seconds)
    (90/117) benchmarking ("empty", "Int", "⊆", "IntSet")...
    done (took 1.411268465 seconds)
    (91/117) benchmarking ("IntSet", "Int", "union")...
    done (took 1.410669377 seconds)
    (92/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.406956867 seconds)
    (93/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.255305646 seconds)
    (94/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.405503342 seconds)
    (95/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.406920988 seconds)
    (96/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.406744794 seconds)
    (97/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.5541829 seconds)
    (98/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.844657887 seconds)
    (99/117) benchmarking ("IntSet", "Int", "symdiff", "Set")...
    done (took 1.415504804 seconds)
    (100/117) benchmarking ("IntSet", "Int", "symdiff!", "Vector")...
    done (took 1.414532553 seconds)
    (101/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.552395629 seconds)
    (102/117) benchmarking ("IntSet", "Int", "union", "Set", "Set")...
    done (took 2.402845277 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "IntSet")...
    done (took 2.401316952 seconds)
    (104/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.738641823 seconds)
    (105/117) benchmarking ("Vector", "Int", "⊆", "IntSet")...
    done (took 1.407333388 seconds)
    (106/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.402505803 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.401266439 seconds)
    (108/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.545204182 seconds)
    (109/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.406483751 seconds)
    (110/117) benchmarking ("IntSet", "Int", "union", "IntSet", "IntSet")...
    done (took 1.418705749 seconds)
    (111/117) benchmarking ("IntSet", "Int", "intersect")...
    done (took 1.411228826 seconds)
    (112/117) benchmarking ("IntSet", "Int", "setdiff", "Vector")...
    done (took 1.410641284 seconds)
    (113/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.661731033 seconds)
    (114/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.740294365 seconds)
    (115/117) benchmarking ("IntSet", "Int", "intersect!", "IntSet")...
    done (took 1.413807039 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.4015592 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.775949603 seconds)
  done (took 204.068687645 seconds)
  (4/6) benchmarking "optimizations"...
    (1/19) benchmarking ("Vector", "concrete", "Void")...
    done (took 1.408537126 seconds)
    (2/19) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.401220875 seconds)
    (3/19) benchmarking ("Set", "concrete", "Void")...
    done (took 2.401451246 seconds)
    (4/19) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.402153765 seconds)
    (5/19) benchmarking ("Dict", "abstract", "Void")...
    done (took 2.401534507 seconds)
    (6/19) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.402881831 seconds)
    (7/19) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.401439069 seconds)
    (8/19) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.401829284 seconds)
    (9/19) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.401646438 seconds)
    (10/19) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.401677001 seconds)
    (11/19) benchmarking ("Dict", "concrete", "Void")...
    done (took 2.401288174 seconds)
    (12/19) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.402683888 seconds)
    (13/19) benchmarking ("BitSet", "Int8")...
    done (took 2.401614122 seconds)
    (14/19) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.402897091 seconds)
    (15/19) benchmarking ("Set", "abstract", "Void")...
    done (took 2.401087512 seconds)
    (16/19) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.403739609 seconds)
    (17/19) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.402378604 seconds)
    (18/19) benchmarking ("Vector", "abstract", "Void")...
    done (took 1.407662418 seconds)
    (19/19) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.400952443 seconds)
  done (took 45.038236026 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/76) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.406266277 seconds)
    (2/76) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.820215567 seconds)
    (3/76) benchmarking ("IntSet", "Int", "in", "true")...
    done (took 1.406321568 seconds)
    (4/76) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.405528454 seconds)
    (5/76) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.452059116 seconds)
    (6/76) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.406810369 seconds)
    (7/76) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.401211349 seconds)
    (8/76) benchmarking ("Vector", "String", "push!")...
    done (took 1.542822889 seconds)
    (9/76) benchmarking ("Set", "String", "in", "false")...
    done (took 1.407920191 seconds)
    (10/76) benchmarking ("Set", "Int", "first")...
    done (took 1.407101086 seconds)
    (11/76) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.406909277 seconds)
    (12/76) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.401089246 seconds)
    (13/76) benchmarking ("IntSet", "Int", "push!", "overwrite")...
    done (took 1.410762 seconds)
    (14/76) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.862761562 seconds)
    (15/76) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.408139343 seconds)
    (16/76) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.861718847 seconds)
    (17/76) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.408406939 seconds)
    (18/76) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.406854869 seconds)
    (19/76) benchmarking ("Dict", "String", "getindex")...
    done (took 1.406569478 seconds)
    (20/76) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.862415692 seconds)
    (21/76) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.403548401 seconds)
    (22/76) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.736791336 seconds)
    (23/76) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.455216242 seconds)
    (24/76) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.86308152 seconds)
    (25/76) benchmarking ("IntSet", "Int", "length")...
    done (took 1.408261449 seconds)
    (26/76) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.406314871 seconds)
    (27/76) benchmarking ("Vector", "Int", "last")...
    done (took 1.40620018 seconds)
    (28/76) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.861418764 seconds)
    (29/76) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.409389595 seconds)
    (30/76) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.873937001 seconds)
    (31/76) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.40876717 seconds)
    (32/76) benchmarking ("Vector", "Int", "length")...
    done (took 1.406453562 seconds)
    (33/76) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.454998596 seconds)
    (34/76) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.455648948 seconds)
    (35/76) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.403819633 seconds)
    (36/76) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.731878564 seconds)
    (37/76) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.434664678 seconds)
    (38/76) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.51287302 seconds)
    (39/76) benchmarking ("Dict", "Int", "first")...
    done (took 1.407343783 seconds)
    (40/76) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.409921107 seconds)
    (41/76) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.866875183 seconds)
    (42/76) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.4090305 seconds)
    (43/76) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.409841515 seconds)
    (44/76) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.411914842 seconds)
    (45/76) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.828796122 seconds)
    (46/76) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.829107074 seconds)
    (47/76) benchmarking ("Dict", "Int", "length")...
    done (took 1.407582596 seconds)
    (48/76) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.406491576 seconds)
    (49/76) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.862464909 seconds)
    (50/76) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.829441299 seconds)
    (51/76) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.823351693 seconds)
    (52/76) benchmarking ("Vector", "Int", "push!")...
    done (took 1.540987335 seconds)
    (53/76) benchmarking ("IntSet", "Int", "first")...
    done (took 1.407511633 seconds)
    (54/76) benchmarking ("Vector", "String", "getindex")...
    done (took 1.406617909 seconds)
    (55/76) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.731963006 seconds)
    (56/76) benchmarking ("Vector", "Int", "first")...
    done (took 1.407103342 seconds)
    (57/76) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.866903318 seconds)
    (58/76) benchmarking ("IntSet", "Int", "pop!", "unspecified")...
    done (took 1.411715223 seconds)
    (59/76) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.407709793 seconds)
    (60/76) benchmarking ("Set", "String", "in", "true")...
    done (took 1.409989147 seconds)
    (61/76) benchmarking ("IntSet", "Int", "in", "false")...
    done (took 1.406951516 seconds)
    (62/76) benchmarking ("IntSet", "Int", "pop!", "specified")...
    done (took 1.410659073 seconds)
    (63/76) benchmarking ("Vector", "Any", "push!")...
    done (took 1.543467953 seconds)
    (64/76) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.863667763 seconds)
    (65/76) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.731989997 seconds)
    (66/76) benchmarking ("IntSet", "Int", "push!", "new")...
    done (took 1.410758937 seconds)
    (67/76) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.401510779 seconds)
    (68/76) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.402390972 seconds)
    (69/76) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.407622568 seconds)
    (70/76) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.455145204 seconds)
    (71/76) benchmarking ("Set", "Int", "length")...
    done (took 1.408060976 seconds)
    (72/76) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.400674093 seconds)
    (73/76) benchmarking ("IntSet", "Int", "last")...
    done (took 1.407325057 seconds)
    (74/76) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.453812688 seconds)
    (75/76) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.722810147 seconds)
    (76/76) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.402628946 seconds)
  done (took 125.43969552 seconds)
  (6/6) benchmarking "deletion"...
    (1/19) benchmarking ("Vector", "String", "pop!")...
    done (took 1.505047667 seconds)
    (2/19) benchmarking ("Set", "Int", "filter!")...
    done (took 1.876054187 seconds)
    (3/19) benchmarking ("Set", "String", "filter!")...
    done (took 2.401746128 seconds)
    (4/19) benchmarking ("Set", "Any", "pop!")...
    done (took 2.401738276 seconds)
    (5/19) benchmarking ("Vector", "Any", "filter")...
    done (took 1.524069117 seconds)
    (6/19) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.504555613 seconds)
    (7/19) benchmarking ("Vector", "String", "filter")...
    done (took 1.616475769 seconds)
    (8/19) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.473437177 seconds)
    (9/19) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.462046575 seconds)
    (10/19) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.505665345 seconds)
    (11/19) benchmarking ("Vector", "String", "filter!")...
    done (took 1.522526735 seconds)
    (12/19) benchmarking ("Set", "Int", "pop!")...
    done (took 1.853317559 seconds)
    (13/19) benchmarking ("Set", "Any", "filter!")...
    done (took 2.402078145 seconds)
    (14/19) benchmarking ("Vector", "Int", "filter")...
    done (took 1.485758241 seconds)
    (15/19) benchmarking ("Set", "String", "filter")...
    done (took 1.994119096 seconds)
    (16/19) benchmarking ("Set", "Int", "filter")...
    done (took 1.648434572 seconds)
    (17/19) benchmarking ("Set", "Any", "filter")...
    done (took 2.23090852 seconds)
    (18/19) benchmarking ("Set", "String", "pop!")...
    done (took 2.402696474 seconds)
    (19/19) benchmarking ("IntSet", "Int", "pop!")...
    done (took 1.541519899 seconds)
  done (took 35.743798748 seconds)
done (took 519.925058766 seconds)
SAVING RESULT...
DONE!
