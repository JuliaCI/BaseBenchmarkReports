cset: moving following pidspec: 11195
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.696714122 seconds)
loading group "shootout"... done (took 1.215528982 seconds)
loading group "string"... done (took 0.441424295 seconds)
loading group "linalg"... done (took 8.230233767 seconds)
loading group "parallel"... done (took 0.160980193 seconds)
loading group "find"... done (took 1.383743721 seconds)
loading group "tuple"... done (took 2.006133528 seconds)
loading group "union"... done (took 13.168338458 seconds)
loading group "dates"... done (took 1.403110872 seconds)
loading group "micro"... done (took 0.242165618 seconds)
loading group "simd"... done (took 4.626001534 seconds)
loading group "io"... done (took 1.070632354 seconds)
loading group "random"... done (took 9.458366393 seconds)
loading group "problem"... done (took 1.507055801 seconds)
loading group "array"... done (took 20.244019139 seconds)
loading group "misc"... done (took 1.628581069 seconds)
loading group "scalar"... done (took 41.812535123 seconds)
loading group "sort"... done (took 3.218704248 seconds)
loading group "sparse"... done (took 12.426462896 seconds)
loading group "collection"... done (took 17.990516972 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.521394204 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.1214735 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.126904441 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.121519674 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.185671025 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.119704869 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.127791988 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084341328 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.86233849 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.144955261 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.114733754 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.435475605 seconds)
done (took 5.336726905 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.172838335 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.092219413 seconds)
    (2/2) benchmarking "String"...
    done (took 0.083675586 seconds)
  done (took 1.330226831 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065683048 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.136290019 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066323731 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067226946 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067049997 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066473628 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06674984 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066590265 seconds)
  done (took 1.687599804 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072410061 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067715274 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066184646 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067877301 seconds)
  done (took 1.430243617 seconds)
done (took 5.860986961 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.24316826 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.102662169 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.292664722 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.449805869 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.616433408 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.094508177 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.075404736 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.071045916 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.130563243 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.351809583 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.102240264 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.181099476 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089320333 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.167158484 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.994420864 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.121836276 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.087153644 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.124495161 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.094203595 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.130805353 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.393306322 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.07910946 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.076860815 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.071395576 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.068536446 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.646251416 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.661888144 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.123705011 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.085313462 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.16047495 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.117058941 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.650582845 seconds)
  done (took 10.8468066 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.094445804 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.091606498 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069945426 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.124907311 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.095285881 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.071052757 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.076326312 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067579858 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.089190258 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.124307827 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.091168991 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.099269086 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067368359 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069682214 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.074680407 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.197608109 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.078931228 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080793352 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.068308229 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.082052737 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.106977315 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079063393 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078769993 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.0790796 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.130813214 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.170917821 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096053523 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097331446 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.06499172 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.086667962 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115829681 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.126987407 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068001527 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065497283 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.120102957 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096080569 seconds)
  done (took 4.600813443 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.976527033 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.095562827 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.101507632 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.636649158 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067269472 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.15342205 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.243471696 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.073930538 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.367835297 seconds)
    (9/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.115076094 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.150064335 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.113826112 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.14737996 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.117802261 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.069591737 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.267925403 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.12012188 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.547788743 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.069313364 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.06800657 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.06661346 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.069331113 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.068414542 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064100557 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.070366753 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.096474467 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.088811672 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.192361041 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.976566563 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.298872518 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.069028298 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.16617848 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.086689816 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.382491258 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.068987554 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.083197281 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.451546432 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.123187651 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067376738 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.172933063 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.118404586 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06579364 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.12255034 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.079832747 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.06995002 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.070012889 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.069086369 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.071988829 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.079120239 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.101879227 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.067138872 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065655678 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.173549165 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06586841 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.067257943 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.067940722 seconds)
    (56/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064751648 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.150596023 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065559018 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.143624703 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064999485 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.069474177 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.104144793 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.069458319 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.087713426 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.095371172 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.329139869 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.040483446 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.069293726 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.234159222 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075194065 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.066239585 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.071122174 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.067363772 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.068712848 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.068437507 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.073318777 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.071014055 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.07010517 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.110394314 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.068219671 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.071163772 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.065736126 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.067031208 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.073186221 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.09823077 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066786635 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.512313281 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.098693143 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.066019987 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.076798673 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065007383 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.105802941 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.06618386 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.070142779 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.06774526 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.067587343 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.067070043 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.067738275 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.070098127 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.097873758 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.070986909 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114424787 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.167131577 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.068726682 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.067295964 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.076107777 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.070296634 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.070839051 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.067944083 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.06965119 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.069107006 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065836751 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.108452333 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.068281366 seconds)
  done (took 22.389632293 seconds)
done (took 39.968310478 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.255136542 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.078879955 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078988386 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.08229334 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.079085407 seconds)
  done (took 1.823821048 seconds)
done (took 3.064240368 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.110109992 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.064420343 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.100858989 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.100966702 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.064640249 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.064742882 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.099846013 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.064516665 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.099336742 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.100762181 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.102271032 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.102025144 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.064513371 seconds)
  done (took 2.385968844 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.071333592 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.082317735 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.083390212 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.062450549 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.072439914 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.082503521 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.062284405 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.081613068 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.088127407 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.082784162 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.082361189 seconds)
  done (took 2.090068253 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.073129883 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.081734067 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.084216988 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.062621292 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.073574104 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.082903966 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.062408691 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.082576724 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.084979125 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.082584448 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.082862361 seconds)
  done (took 2.077440063 seconds)
done (took 7.78334799 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.066383254 seconds)
  done (took 1.27239481 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.518618621 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.201851033 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.066906333 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.08710748 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.195043873 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.093393699 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.201250813 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.072015869 seconds)
  done (took 7.82103088 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.101290461 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069091218 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.068252287 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069900243 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.068876106 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.069491043 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.06950084 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.067944373 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.068467841 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068331083 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067906581 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.069447469 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068738775 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.069326086 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069696113 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068494113 seconds)
  done (took 2.443700567 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.100031296 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.098703255 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072871014 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.073179103 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071272229 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071387679 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073896229 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072818066 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070374394 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071965039 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.07290642 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.072212753 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071311669 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.062536993 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073300956 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07382756 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.069840099 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.072341685 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073651887 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074443553 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073134619 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.062565193 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071017916 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.072402455 seconds)
  done (took 3.109746668 seconds)
done (took 15.872973546 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.181335159 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.075370671 seconds)
  done (took 1.470793402 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.069124864 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.068423699 seconds)
  done (took 1.373104369 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.074648767 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.060844209 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.079422245 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.071143996 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.061700556 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.061403418 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.076927714 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.061620583 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.061473112 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.061684198 seconds)
  done (took 1.90458832 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.064023141 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.069449697 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.067695964 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.068869972 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.067298934 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.06262284 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.065574494 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.062917286 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.069466225 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.061819519 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.065703302 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081286072 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.06586715 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083822434 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.065405718 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.065889243 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.067967698 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.065300846 seconds)
  done (took 2.459841051 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.062359189 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.061981728 seconds)
  done (took 1.373780964 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.065583598 seconds)
    (2/7) benchmarking "second"...
    done (took 0.061993911 seconds)
    (3/7) benchmarking "month"...
    done (took 0.064586547 seconds)
    (4/7) benchmarking "year"...
    done (took 0.064900535 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062529937 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061512909 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.061857242 seconds)
  done (took 1.682708387 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.416433279 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.122531217 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.339630957 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.06928696 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.07703958 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.25475472 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.06402986 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.068516691 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.068660257 seconds)
  done (took 2.766180763 seconds)
done (took 14.277843714 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082690778 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.180112822 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.089782258 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.415434259 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.09275212 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067488185 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.112983435 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.169176957 seconds)
done (took 2.466316467 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.230769868 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.350467884 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.914016132 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.06722335 seconds)
  done (took 3.578089788 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.337958004 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.079939779 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.078526481 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068700517 seconds)
  done (took 1.821725024 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066757235 seconds)
    (2/2) benchmarking "read"...
    done (took 0.072217251 seconds)
  done (took 1.386489639 seconds)
done (took 8.274995978 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065575961 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.093634466 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.063825465 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.06448529 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.064051337 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.064380757 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064417657 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.063775159 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.063591898 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.063908758 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.063873647 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.064267755 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063466905 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.064145154 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063927956 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064181421 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063878121 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064192798 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064271036 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.064111743 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064503129 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063719209 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064576156 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064060806 seconds)
  done (took 2.842808805 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.080628128 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.06594012 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.067345787 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.067395061 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.067741516 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.066919026 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.067192622 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065692607 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.067087171 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.065766828 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067308409 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.067377664 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.06516918 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.067466607 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065984679 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.06799029 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.067448791 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065967993 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06592786 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.067943511 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.066644814 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065705156 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.067193857 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066774855 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.067449482 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.0676202 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.065817073 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066312852 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067272013 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.067789471 seconds)
  done (took 3.28258785 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.067222827 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.060206069 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.061442143 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070611523 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.060499394 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.060439983 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.06148172 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.060004936 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.060629761 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.061660656 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.061025206 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.060356766 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.061045713 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.060089144 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.060585547 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.061170134 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.065359501 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079473028 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.060745055 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.060273965 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.06478589 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.060283476 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.060225383 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.060102669 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.061027416 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.060118011 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.06042782 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.060390109 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.060061813 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.061150071 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.060620804 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.064682836 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.065401431 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.060214695 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070274076 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.07466513 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.060347587 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.065438895 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.061897536 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.060514814 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.060090154 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.06043475 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.060301541 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.060291689 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070094291 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.060638552 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.061497369 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.060679051 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.060501671 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.060219887 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.060071047 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.06172059 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.065467146 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.061367298 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.060169445 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.061475655 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.060288289 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.060891474 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.060455559 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.060209024 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.060241163 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.063939108 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.063236645 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.060923112 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.07964744 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.061764206 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.07019664 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.060200022 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.061260432 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.064108421 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.060468304 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077336699 seconds)
  done (took 5.778944828 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085264854 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086512699 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066008676 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06492636 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0610107 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.060733568 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068791639 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061113967 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065678093 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.080746492 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060734045 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064983033 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065226448 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.064450406 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0611603 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065008112 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.068634576 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061216658 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.060822287 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.064823967 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.060584063 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068356211 seconds)
  done (took 2.751503243 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.140056516 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066320726 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10504309 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07496242 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069335937 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074791112 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.066264479 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066135242 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066166893 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067458473 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067077178 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066044266 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069042 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066968073 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066489832 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066549718 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066430581 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066581806 seconds)
  done (took 2.607316074 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.07803495 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06616078 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087110063 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066700193 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066281156 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066123393 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069703338 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.070095752 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.065587906 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.0661741 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.069872352 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065560856 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.065764308 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066001919 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065906408 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065988747 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.065296655 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065706615 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069728813 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069372261 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069718529 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069762961 seconds)
  done (took 2.785882463 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077949092 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.065107844 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.079906589 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066284415 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060901184 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060767253 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.065742644 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065397919 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.065927852 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.064927709 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065420826 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.060500433 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.066454781 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065082978 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.066847293 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065341572 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.065053395 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065389223 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065330288 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060627077 seconds)
  done (took 2.596934562 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087995495 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063160035 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063168785 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083274133 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063115891 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.063144615 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082406873 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.063661971 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.063423441 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.084753615 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063435449 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.063524569 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082582921 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.083116841 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.063497806 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08297742 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082553904 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082925157 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.063418116 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063614286 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.084826283 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.063325347 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083509004 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062979139 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063210205 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.063439459 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063841123 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.082819569 seconds)
  done (took 3.296254117 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065191565 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064408066 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064004261 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064063757 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064978308 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.064395342 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064622886 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064458413 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063846629 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064363356 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.063591676 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.064174861 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064213399 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.063546072 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.063946792 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.063662432 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063735327 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064665065 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064141319 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063903023 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.063835192 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063808925 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.063350672 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064364302 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06392591 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.063690007 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064020185 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06400147 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063783021 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064168789 seconds)
  done (took 3.206019452 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074171682 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072276318 seconds)
  done (took 1.43111009 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063147031 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077848868 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.060229188 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073043046 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069115509 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.064244052 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.069154367 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068512118 seconds)
  done (took 1.823572597 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.06775438 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.090725071 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.062442198 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.063111687 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.065522756 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.122470503 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.07476373 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.073685351 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.076236055 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064798353 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.062500325 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.074600241 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.064962485 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.075271882 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.063560645 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.070872191 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068938462 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074316371 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074605745 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.060546923 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07441683 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062865552 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.060668024 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.063085326 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.062201852 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068640599 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077499396 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074318197 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070351189 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060119028 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.080953313 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.061379718 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.062200946 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07043763 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.065582117 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.061034949 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.097519903 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.061813381 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.066083204 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060965279 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073066866 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082013352 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075812721 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.078978784 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.063004421 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.062570587 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060773168 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.063238212 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065021135 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070624483 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060826172 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068365027 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060425162 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.062676787 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071258255 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.061264153 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.065934709 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070604885 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07456232 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071542006 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.06994717 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.076497653 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.069855365 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.068315432 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.060409817 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080298405 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.062569582 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.074530078 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.075847622 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.062485193 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074582819 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060625158 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060205552 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.060638046 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094855728 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.06294911 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.062393145 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.060847564 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.060872564 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.062234654 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070184435 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.066176648 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068507244 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.064376466 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076583758 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070056741 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.060821642 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.067561262 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.078611147 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06443215 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.061289931 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.077492373 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065013601 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.060406952 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078551573 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070832246 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.06255368 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.061881397 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064231058 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.073875757 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.061985326 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059344724 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069674089 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.062452754 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.063487511 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.065550314 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069128486 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.060783853 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.0710336 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.06583712 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.062411085 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.059612659 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065487694 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.061887578 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059524642 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069641924 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.061029162 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.074891981 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066639682 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.074845514 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.075194707 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.07153941 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076486248 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.060930785 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.059244194 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.078017691 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069747335 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.061971675 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077991039 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.059526255 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070426964 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.192757188 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.064196176 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.072509875 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061800854 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.064003963 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.062319071 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.067644225 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.063094969 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063117547 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066131296 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.070033422 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073684975 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.062679367 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070422456 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.061946546 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.077212235 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071873832 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066602634 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.06552617 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.062323924 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072858007 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067389743 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.071547478 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06069255 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.062424821 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.061544396 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072524546 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.071812216 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.063581176 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.068627696 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066137968 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.062220362 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.061637336 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.062096013 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065051129 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064981655 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.061828134 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06930146 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070104581 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.075310478 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068668895 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070264804 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06035999 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.060823015 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.066222499 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.060797299 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065329879 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070952032 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.0764214 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072383908 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081858973 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.061206849 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071187566 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.062716962 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077440403 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074437888 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.061928478 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.066345 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.060642533 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.062859163 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070825589 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072184198 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.074528715 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.075834007 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066040319 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065563298 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.060862679 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074755986 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.060463195 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06826726 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.069523191 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.064281038 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.060514869 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.062774695 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070256007 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066162408 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.061282233 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.076782922 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.067129113 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061184991 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.075131785 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.061560097 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.072114676 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060724779 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064849949 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066410793 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.063161268 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070849934 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076749346 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060406637 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.0617761 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076765754 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.063159288 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.062850112 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069797052 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.076230286 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065915001 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.06900212 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072257525 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071137154 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.065763173 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071244133 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.062482932 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.070339148 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.064036108 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072969203 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.060433573 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.079007869 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.059708502 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.07567222 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.061389455 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.07169868 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.061507434 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070415306 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.061781385 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.077371982 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.062375763 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.061818019 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072629194 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.059667779 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069740974 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.060502235 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065703752 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067678572 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.070416412 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.062357647 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070033688 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.062582395 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068832883 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.06491482 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068683046 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.069564561 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.064898622 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.060203335 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068621533 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070992237 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068211966 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.200869186 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.064236075 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.063249806 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071977055 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.063943902 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.063663122 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070374145 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066169249 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067423107 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.062958185 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.063544429 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.062927575 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070937488 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071722041 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.080049164 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071285144 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06910953 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071010704 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061354823 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076656133 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.061408839 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069160627 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.060266198 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.066937959 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070627013 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.061640274 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.08001435 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.062957165 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069527435 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073731056 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070134063 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065081294 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079385327 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.06456714 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.070218167 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069152743 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066232535 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067603273 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.06307316 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.070362553 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070950435 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072262969 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.063194828 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069237436 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070417591 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.06308373 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.069097477 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.063593458 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069621461 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.062703338 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060611575 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066613985 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.072400891 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066236676 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065996482 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.061141475 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.059914527 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.061375874 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.067957847 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065705122 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069970737 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.07544585 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059617863 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.061991148 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.060863218 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064913205 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.078540097 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.069500529 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067694025 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064848372 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063190954 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.062687044 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.063074383 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.061634849 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.064773203 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059751007 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.060611112 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071754863 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.062960317 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065818753 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061702075 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.062401942 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070745581 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.066169088 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.061969322 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068461162 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.061792435 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066587131 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.060722972 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.062694893 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066249173 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.061564633 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065745808 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.071583536 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.077739738 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067795791 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070433995 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.06308053 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069345315 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076586459 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.068448278 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062276132 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070502334 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.060690644 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.079930906 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071059653 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069512492 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071429645 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.062230852 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077567656 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065582535 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070991728 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.07652804 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.061840135 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.067532371 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.060359226 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.076425386 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065112903 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.060345947 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.068564086 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068538444 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.06659668 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072732832 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.061714788 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068958595 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066076117 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.064570638 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.062799014 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.062582446 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.06996054 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.07652833 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.061834254 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.064740929 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069174789 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068983805 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065382332 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.214067687 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069977006 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063353966 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.063622754 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065663745 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.06320768 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073675685 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062560363 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066488283 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066373042 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.061504824 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068188663 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078221623 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071390173 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071373337 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.060899032 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.061190807 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.079395579 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065454937 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.064904552 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070059752 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070894449 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073822522 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.071224848 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.07770461 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.062318932 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.06742428 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074434325 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.06255738 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.061547532 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065702169 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.063403983 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.071142667 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.071297964 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069525359 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063571212 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068200223 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.07542371 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.062623993 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066291303 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.066103174 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.062232855 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071992497 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.06955401 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069997071 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.062721382 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061011797 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064885631 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069826279 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068819394 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070477313 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062463269 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.067605565 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.074773349 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069238037 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.064227791 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060714017 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.06426638 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070805969 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.065760984 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061273701 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066148749 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065300124 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.06785173 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070367369 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066221232 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060899916 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077823342 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069537802 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.070888006 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.063210488 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.063492238 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062422787 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061474842 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.072666309 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061297957 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.062839917 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065931346 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.062811675 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.078974604 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069879514 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.077440127 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06297585 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065978068 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060810545 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071153138 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066240029 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.061504861 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071829796 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.060911282 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.076363945 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.072846356 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.066259068 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061032626 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066201473 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069486153 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.079048322 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070896913 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069980466 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.06505201 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.070609361 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.063246652 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.072155014 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.061223536 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.06043838 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071353765 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07035739 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.073576403 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061030441 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.071523984 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.062911718 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069551558 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069546843 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.062724203 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.0622372 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.062850392 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070127654 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065367549 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070632992 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065404559 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077091974 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.061823531 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071727849 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070140093 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.071497248 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074755882 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072951852 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068703657 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.061724452 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067910463 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068663852 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.062072085 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065533699 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.064032611 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.082284096 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.062148792 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.200947367 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.077022791 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.069206242 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.062333511 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.0689384 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068608892 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.072040161 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.063218354 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.072076596 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.06555775 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.062503502 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06626201 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066223693 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.060912615 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.06135523 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.061415861 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.070896494 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.066037436 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.061789837 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.080327537 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.062653633 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.070152477 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072460832 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067674824 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.063057723 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060599026 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.06253691 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.074479086 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.076453661 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065277695 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069870935 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.063351388 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070549674 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.060624604 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070508661 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.06980875 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069462118 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061374017 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061573853 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.094410978 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.076560833 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066299357 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071229186 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070359135 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.062761322 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.082865778 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070375294 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062197194 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.071789737 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063325476 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.060550901 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.060221979 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.062556891 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.07284687 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.060826364 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.063495208 seconds)
  done (took 42.120380927 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099849113 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.061904319 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061239925 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061621847 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072701702 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061989675 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061492567 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062087987 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.061917542 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.063853649 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.060725428 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061096586 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071995298 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.074104306 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071169678 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065022895 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061077159 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061449927 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.060444008 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061546614 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070772682 seconds)
  done (took 2.774273058 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.068582223 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.076452805 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072549735 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07759425 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069230856 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06522473 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072248282 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064796085 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072828703 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070776491 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.072279901 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065011542 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.070360504 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.070471522 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070162649 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065264345 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072235565 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069206204 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.06491508 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072055171 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065452063 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072267349 seconds)
  done (took 2.905162681 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.063332241 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.061834198 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.070555483 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060511618 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.060285285 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.064065343 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.060993984 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.065093204 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.065039031 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.065170857 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069525848 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.061251529 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.060625917 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.066457454 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.060340873 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.061078995 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.103228782 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.062137031 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.061546158 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.060259833 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.063470726 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069988795 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060436225 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.060592271 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067906393 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.063842839 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.060504977 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.063235316 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.061720993 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064886553 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.061820933 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.060621241 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.070014764 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068997703 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065420173 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064848659 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.062143097 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.061795614 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060579625 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.060744432 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069326932 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.062149386 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.061061881 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.061960811 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069627718 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.06072481 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.060615158 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069544233 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060481052 seconds)
  done (took 4.522931985 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.071920835 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.112967375 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066562946 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09288911 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.073347415 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.066881922 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.066974497 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094552663 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.061765922 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.06235749 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.075245491 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.074454706 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063887244 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.064849023 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.067933258 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.063406044 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064281872 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063538351 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.066203267 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063276058 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.066129561 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.067723606 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.073117451 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.074175737 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.064778381 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.062862644 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062985971 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.064796266 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.073623172 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.066558274 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.065300936 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.065859082 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.074161301 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.068347862 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063387477 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.063269199 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.074548054 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.063893292 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.063676139 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062064427 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.063650669 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.065725546 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.067989285 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.074715386 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063997088 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.06892536 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064043065 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.061682603 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.074021053 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.06353188 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.067330234 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.075380687 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.064968856 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064212656 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.064949397 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.07500646 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064156437 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.062692096 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.064072295 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.074041035 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.061754323 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.064606946 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.074436754 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.063181099 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.067488031 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.075297615 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.068906136 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.064847962 seconds)
  done (took 6.150287942 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071385339 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095896679 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072359504 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072171985 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07136407 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072256292 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071509561 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.07197526 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071588777 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072107604 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071760647 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110998816 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067839012 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075764285 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071448618 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.07196425 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071526964 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071420068 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071596032 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07136237 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071414819 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071974196 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071181007 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072095895 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.073636045 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067664485 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07092607 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.070859428 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072057629 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071832132 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.07404103 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071357615 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071233775 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07181709 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.074060183 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071138134 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.061621458 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071548333 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.07144531 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071683787 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067995271 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071936811 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07171169 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067551608 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071649156 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071381117 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072017475 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.073377877 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078019673 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072002668 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072006266 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071898993 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071513309 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07169744 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072185184 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.078594154 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072629125 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071724477 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071879859 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071802147 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072036877 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.078274561 seconds)
  done (took 5.922173614 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075416682 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067565857 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.079928245 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061303574 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.061017467 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069964366 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.061111422 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.061130978 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070581995 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.068081734 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069198688 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070322878 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072423395 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069389716 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070357718 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072142734 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070657382 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070149875 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067879049 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070537678 seconds)
  done (took 2.779502666 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076966753 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.080248624 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067036843 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070371083 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.066800453 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070866637 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.065786514 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066730787 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067105717 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066618313 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071430001 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071322029 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066874461 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070251155 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.071069576 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070122634 seconds)
  done (took 2.506402783 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.068555416 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.068286339 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.068224817 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.062555028 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065841917 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.06140562 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.061467349 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060504065 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061179281 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.075554756 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.062160929 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.074223766 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.062060688 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.061231552 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.061753873 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.067193168 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061218684 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.061926343 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.062126366 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.066952558 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.068359764 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.062567322 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066543759 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.062043024 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067340349 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.069316012 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.063598703 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065778571 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.061905208 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.062011479 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.067524569 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068511837 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062707751 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062547705 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.060739868 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.06210983 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.061932033 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.06222756 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067579395 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.061695208 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.060659165 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066687121 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.06213628 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.062675582 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061291404 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.062646003 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061493949 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067436643 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062027618 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067017153 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.06186045 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.063911677 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.062443887 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.069033355 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.064126174 seconds)
  done (took 4.924455966 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078321156 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066282622 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06070437 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060712461 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.066351578 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066307897 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.066167717 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.0664811 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067082987 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.060896055 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067184295 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.065992534 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066568059 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066407717 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067048328 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065839605 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060696231 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.06596586 seconds)
  done (took 2.587715424 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073325222 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066589773 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.071264559 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066053881 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.068173103 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.065709158 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061437639 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.061050744 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06124203 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066134685 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065614137 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.065446146 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061137235 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.06527586 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065879331 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065796923 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.065847783 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.061218525 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065928931 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060818608 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06534314 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.061527572 seconds)
  done (took 2.827706672 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.088829594 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084376951 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.127823452 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.080126361 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.088403317 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.072504033 seconds)
  done (took 1.938169076 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094368881 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104553145 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066432845 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066304869 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074467253 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069050279 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068666487 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068895631 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074554051 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072848424 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068967192 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074300065 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074558453 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070741692 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074179749 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076631874 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069491137 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069655557 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066026721 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076661935 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068857341 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074578919 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069264327 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068936528 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068846751 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071197998 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077005676 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073185722 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068821408 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07429 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07673414 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069285144 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074582191 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076404463 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066230192 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074539154 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069183822 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076873265 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074914635 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071055322 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066251957 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075165748 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075138555 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071383413 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076107537 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067901385 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071923924 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069214321 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069362789 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079242606 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075517257 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071197116 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074933677 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077384501 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077573374 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079142498 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073658746 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070928468 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074912556 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073702305 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071472827 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07515794 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071652548 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073729965 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077309025 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07108223 seconds)
  done (took 6.233902091 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101955387 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067421515 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070278039 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073657475 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071081213 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069837498 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069806248 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069667481 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069583476 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06663011 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104478097 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069547475 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071732642 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07130229 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069883831 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069258555 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069221981 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071114427 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066871096 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079694286 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069475194 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071806574 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071425752 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071354799 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073570357 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077111221 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069529506 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069445133 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069041176 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06975714 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070677551 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069180103 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071258876 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066634342 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070695968 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069386323 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069552202 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071298572 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069705042 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074829073 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071098785 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077096887 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069574477 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069612379 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073274222 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069086357 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069427646 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066340033 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068915229 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066834725 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073618049 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07392029 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07303099 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071655246 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069332895 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069743121 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069563029 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069696324 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069515741 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077567815 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071274754 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069436452 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079724208 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069376989 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069633054 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071380311 seconds)
  done (took 6.158163867 seconds)
done (took 128.005350254 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.213641098 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184680933 seconds)
  done (took 1.774138053 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.075899957 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098239203 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.07632839 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.136278575 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071216657 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.104499309 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.103519254 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.074920289 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071069995 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071062994 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.07172944 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.073541624 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.135679184 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071008702 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071122812 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.073232096 seconds)
  done (took 2.776326328 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.108608778 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.185380395 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.114988962 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.070300246 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.1084338 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077351315 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.071365451 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.081751327 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.074570708 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.08287593 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077504717 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.076071657 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.072981509 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.076264632 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074137081 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.077454734 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.073109595 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.077730453 seconds)
  done (took 2.989721152 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.099868107 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.086642946 seconds)
  done (took 1.601625862 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.158479929 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.104001748 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.143315997 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.322770158 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.129413855 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.128424103 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.131600824 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.126223197 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.111187099 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.120321068 seconds)
  done (took 2.879658967 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.107895072 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.175060475 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.311831982 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.119716668 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.075564176 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.096878647 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.121985933 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.081194517 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.078573436 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.078424379 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079343731 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078013478 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.103027514 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077097677 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.07591138 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080612911 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.10611785 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075222898 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076080589 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076521104 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.107216492 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.071558105 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076998232 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074796786 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078771647 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078707365 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.07284475 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.070989165 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07655269 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075847214 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078532971 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.096787705 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.07928353 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.099646986 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.075772481 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.100915863 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075658526 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.075311037 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.07720747 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073648843 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.075697282 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.07797182 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.080800846 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077680704 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.073063631 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075364081 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.072577859 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.070581494 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.079113512 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.071869269 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078871475 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078720418 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.099041415 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.072268821 seconds)
  done (took 6.195980419 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110853792 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105165864 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071474382 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.114483936 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107550029 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07137908 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.106211568 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.101943433 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.110799599 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071257931 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069911837 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070192603 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077359295 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.080487345 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.114424112 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.106841327 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07045269 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069136306 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.106204128 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.106323496 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068197657 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100178716 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.099045895 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10480963 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067764129 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068783342 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067542033 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.068152767 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.074696525 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.076320213 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069970483 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077004929 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.086341408 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.075450499 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068759281 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069309416 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06929485 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.076690034 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077587137 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077863453 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.075916268 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069116299 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069333941 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070432447 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070460653 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068887392 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076011819 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.077033882 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.075258158 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069732282 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069602767 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069804219 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070164796 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.076379034 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.075206846 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.075209742 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075020598 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069516485 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069656973 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071766078 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078753683 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078283757 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077890854 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070939211 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078144393 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069845745 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079897956 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08189136 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068797537 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069978406 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069697292 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069707458 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068813919 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.073434146 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.073447823 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068011363 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.067800002 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069052425 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.077374705 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07602197 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069284824 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075043706 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069105998 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069489699 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070000269 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069725996 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.074962284 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.076618985 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070341915 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069002517 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.06956293 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069364304 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.06881659 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075286225 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076695472 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.075505476 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.074223196 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06748992 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.074037602 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07403719 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068032376 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.073784844 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067635752 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068102405 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068728397 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.073523855 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.072409289 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.074623149 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066870109 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067086838 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.074381298 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07601911 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06669953 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.071052342 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.073716414 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.207166105 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069160647 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078219385 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069109136 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076810837 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069215649 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077140265 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071679517 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.075091769 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068823005 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068401861 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068320878 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.074919006 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069485809 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068177485 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06857068 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068508808 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.074605076 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078028921 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069633846 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074830957 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.074395072 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069532715 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.074264955 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06848009 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.075172532 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068521846 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068697529 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067544309 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.07673358 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068108442 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067894582 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068298655 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076131918 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068176121 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076238 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.073676109 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067426797 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077542644 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077118859 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.073963163 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.076129681 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069039943 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068451578 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068662932 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069400017 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.075632026 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077341047 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070617811 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069514113 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.075418357 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079040191 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069787551 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.075567606 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.076092662 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.075858002 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069968857 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069634321 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079033255 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.077661369 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.074055036 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.073415573 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074479719 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068019589 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.073326723 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.073828567 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068201985 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079998263 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068129816 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.078102772 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.074366672 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.073489583 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074385251 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.077998763 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079042547 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079079349 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081646202 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07014766 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069681733 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.075708237 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069574727 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069816547 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.075906833 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070183803 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070302158 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081292015 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068152789 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.075821611 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067666559 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.074609538 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067326221 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070640452 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081605715 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070135119 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070214375 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076216348 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069935915 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075959594 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078630455 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.0731546 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067559609 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068203844 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.074300222 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.074917042 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067762845 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067572423 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068137315 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.072822102 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.072240276 seconds)
  done (took 18.298306327 seconds)
done (took 37.938026229 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.223582316 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.168843484 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.200861111 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.115063577 seconds)
  done (took 2.222474955 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.093282838 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101572885 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.076770566 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.066358204 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.0819182 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.06682616 seconds)
  done (took 1.944571015 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.25754679 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.190517876 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.172161165 seconds)
  done (took 2.066739403 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.219109848 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.195930111 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.498668052 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.302013266 seconds)
  done (took 2.769110886 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.131181366 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.079110916 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.064779249 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.0756741 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.104359101 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.134303985 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.087080921 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.107158491 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.075488413 seconds)
  done (took 2.374755272 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.128554912 seconds)
done (took 12.976242152 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.127236597 seconds)
    (2/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.214687909 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.106737467 seconds)
    (4/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.232605464 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.074352056 seconds)
    (6/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.075727691 seconds)
    (7/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.124732794 seconds)
    (8/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.241059488 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.185312884 seconds)
    (10/309) benchmarking ("sort", Float64, false)...
    done (took 0.140009191 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.077421985 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.093820867 seconds)
    (13/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.076911374 seconds)
    (14/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.078384065 seconds)
    (15/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072499538 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.093642973 seconds)
    (17/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.072961141 seconds)
    (18/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.237452317 seconds)
    (19/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.073254375 seconds)
    (20/309) benchmarking ("sort", BigInt, false)...
    done (took 0.49366088 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.148500517 seconds)
    (22/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.204408485 seconds)
    (23/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.216977541 seconds)
    (24/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.145268467 seconds)
    (25/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.195866498 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.067130724 seconds)
    (27/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.22136463 seconds)
    (28/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.145249015 seconds)
    (29/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068185227 seconds)
    (30/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.175834916 seconds)
    (31/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.077217289 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.08931229 seconds)
    (33/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.155080363 seconds)
    (34/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.22266241 seconds)
    (35/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.239641679 seconds)
    (36/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.224336091 seconds)
    (37/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.098635279 seconds)
    (38/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.080114502 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074827923 seconds)
    (40/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.066911757 seconds)
    (41/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.064930552 seconds)
    (42/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074484573 seconds)
    (43/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.199960749 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.124144332 seconds)
    (45/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.167071781 seconds)
    (46/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074306108 seconds)
    (47/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.093673159 seconds)
    (48/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.183398626 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088397416 seconds)
    (50/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.079703652 seconds)
    (51/309) benchmarking ("sort", Bool, false)...
    done (took 0.144933843 seconds)
    (52/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.113220112 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.066039136 seconds)
    (54/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.202203255 seconds)
    (55/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.079176444 seconds)
    (56/309) benchmarking ("sort", Int64, false)...
    done (took 0.067807218 seconds)
    (57/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078468768 seconds)
    (58/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.073657204 seconds)
    (59/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.073837035 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.082927698 seconds)
    (61/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.065932881 seconds)
    (62/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.06733475 seconds)
    (63/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075518498 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.098625163 seconds)
    (65/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.074050015 seconds)
    (66/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065244079 seconds)
    (67/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.078871167 seconds)
    (68/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.182832761 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.123189917 seconds)
    (70/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.06678998 seconds)
    (71/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.064079236 seconds)
    (72/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.226601018 seconds)
    (73/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.184723133 seconds)
    (74/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.077199235 seconds)
    (75/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.064782033 seconds)
    (76/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.072882527 seconds)
    (77/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.063577276 seconds)
    (78/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.168173892 seconds)
    (79/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.148156743 seconds)
    (80/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.138544195 seconds)
    (81/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.188229951 seconds)
    (82/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.223072402 seconds)
    (83/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.206138291 seconds)
    (84/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.069683028 seconds)
    (85/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.169832774 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.122190233 seconds)
    (87/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.066334053 seconds)
    (88/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.078788594 seconds)
    (89/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.074260006 seconds)
    (90/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.072139253 seconds)
    (91/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.067063326 seconds)
    (92/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.074944089 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.066841546 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.127024435 seconds)
    (95/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.204122576 seconds)
    (96/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.076695044 seconds)
    (97/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.0883516 seconds)
    (98/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070127542 seconds)
    (99/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.228597887 seconds)
    (100/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.096521582 seconds)
    (101/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074663715 seconds)
    (102/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.163647319 seconds)
    (103/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.065842649 seconds)
    (104/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.15051572 seconds)
    (105/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.07660277 seconds)
    (106/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.067747761 seconds)
    (107/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.216714152 seconds)
    (108/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.1384451 seconds)
    (109/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.17050364 seconds)
    (110/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.074532551 seconds)
    (111/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.073914715 seconds)
    (112/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.06732076 seconds)
    (113/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.14865654 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.066899591 seconds)
    (115/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.07668753 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.077254835 seconds)
    (117/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.0680172 seconds)
    (118/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075151739 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092509267 seconds)
    (120/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.220459076 seconds)
    (121/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.194843014 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.155176563 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066985378 seconds)
    (124/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.175350531 seconds)
    (125/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.094261993 seconds)
    (126/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.065563772 seconds)
    (127/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.067721539 seconds)
    (128/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067541494 seconds)
    (129/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.076196565 seconds)
    (130/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.161990603 seconds)
    (131/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.13504533 seconds)
    (132/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.06737037 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.077757257 seconds)
    (134/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.079822729 seconds)
    (135/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.067476865 seconds)
    (136/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.06628144 seconds)
    (137/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.065291642 seconds)
    (138/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.064937503 seconds)
    (139/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.173429677 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.084440797 seconds)
    (141/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.168309935 seconds)
    (142/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.068116307 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.148750352 seconds)
    (144/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.065931975 seconds)
    (145/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074065583 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.127292374 seconds)
    (147/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.066797319 seconds)
    (148/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075893645 seconds)
    (149/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.138018427 seconds)
    (150/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073558808 seconds)
    (151/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.072748664 seconds)
    (152/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.076754665 seconds)
    (153/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072355061 seconds)
    (154/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.06386362 seconds)
    (155/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.157889817 seconds)
    (156/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.064685846 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.0809232 seconds)
    (158/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.06762855 seconds)
    (159/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.077562284 seconds)
    (160/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.068880628 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088849226 seconds)
    (162/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.066169238 seconds)
    (163/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.144403064 seconds)
    (164/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.066460106 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.085861249 seconds)
    (166/309) benchmarking ("sort", Float32, false)...
    done (took 0.139020914 seconds)
    (167/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.066707923 seconds)
    (168/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.065388584 seconds)
    (169/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.151290263 seconds)
    (170/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.065457378 seconds)
    (171/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.065063792 seconds)
    (172/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.160600949 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.09153415 seconds)
    (174/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.065869993 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.155465047 seconds)
    (176/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.06792129 seconds)
    (177/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.079675079 seconds)
    (178/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.067058756 seconds)
    (179/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.066727446 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066978134 seconds)
    (181/309) benchmarking ("sort", Int8, false)...
    done (took 0.168439615 seconds)
    (182/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.067138803 seconds)
    (183/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.164800603 seconds)
    (184/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.067181227 seconds)
    (185/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.229500292 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.118542541 seconds)
    (187/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073520055 seconds)
    (188/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.180072418 seconds)
    (189/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.07400844 seconds)
    (190/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.138129984 seconds)
    (191/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.068593217 seconds)
    (192/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.074925031 seconds)
    (193/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.066750439 seconds)
    (194/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.308381396 seconds)
    (195/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.066052783 seconds)
    (196/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.140109841 seconds)
    (197/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.067388147 seconds)
    (198/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.074208807 seconds)
    (199/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068900006 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.085469852 seconds)
    (201/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.130175831 seconds)
    (202/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.073437944 seconds)
    (203/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.064103741 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065382311 seconds)
    (205/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077001963 seconds)
    (206/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076342506 seconds)
    (207/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.187704472 seconds)
    (208/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.066097837 seconds)
    (209/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.09182829 seconds)
    (210/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.080743981 seconds)
    (211/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.147539326 seconds)
    (212/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.06513422 seconds)
    (213/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.064291775 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089267767 seconds)
    (215/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.073827299 seconds)
    (216/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067886263 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.090394912 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088235947 seconds)
    (219/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.140782175 seconds)
    (220/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.073034932 seconds)
    (221/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072988434 seconds)
    (222/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.065508026 seconds)
    (223/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.075667161 seconds)
    (224/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.064937084 seconds)
    (225/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.064988079 seconds)
    (226/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.17603796 seconds)
    (227/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.065753022 seconds)
    (228/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067944198 seconds)
    (229/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.078696119 seconds)
    (230/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.06561827 seconds)
    (231/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079756077 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.115962301 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.131885781 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.080207084 seconds)
    (235/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.065702235 seconds)
    (236/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072495156 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.151226522 seconds)
    (238/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.064866726 seconds)
    (239/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.06501517 seconds)
    (240/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.06590971 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.121867444 seconds)
    (242/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.072288747 seconds)
    (243/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.064083794 seconds)
    (244/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.065228065 seconds)
    (245/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.063479905 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.084361209 seconds)
    (247/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067395977 seconds)
    (248/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.07169978 seconds)
    (249/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.063864674 seconds)
    (250/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.077229758 seconds)
    (251/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086141409 seconds)
    (252/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.065424472 seconds)
    (253/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.065422427 seconds)
    (254/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.063879197 seconds)
    (255/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.06451847 seconds)
    (256/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.064245631 seconds)
    (257/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.065913433 seconds)
    (258/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071505171 seconds)
    (259/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.149598618 seconds)
    (260/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.076315079 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.086966983 seconds)
    (262/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.06552867 seconds)
    (263/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.066467759 seconds)
    (264/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.066015303 seconds)
    (265/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.067908852 seconds)
    (266/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.067101149 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.09303888 seconds)
    (268/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.067117529 seconds)
    (269/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.065395763 seconds)
    (270/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.227780432 seconds)
    (271/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.074471505 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087297106 seconds)
    (273/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.067243776 seconds)
    (274/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.065700504 seconds)
    (275/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.14026546 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.066524648 seconds)
    (277/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.065520433 seconds)
    (278/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067461923 seconds)
    (279/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066143081 seconds)
    (280/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.066819101 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.131957076 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.067102164 seconds)
    (283/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.064750517 seconds)
    (284/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.065126853 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.140074007 seconds)
    (286/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072283292 seconds)
    (287/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065016831 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065299287 seconds)
    (289/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.066668819 seconds)
    (290/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.065119654 seconds)
    (291/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069365986 seconds)
    (292/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.064323421 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076830623 seconds)
    (294/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.066087042 seconds)
    (295/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072384238 seconds)
    (296/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.064645464 seconds)
    (297/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.064426497 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072425525 seconds)
    (299/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.088175881 seconds)
    (300/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072068797 seconds)
    (301/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.066674051 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.130144634 seconds)
    (303/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.064378566 seconds)
    (304/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065352048 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.09020327 seconds)
    (306/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.066985805 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.064946966 seconds)
    (308/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.063882591 seconds)
    (309/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.06977859 seconds)
  done (took 33.460350637 seconds)
done (took 34.928653275 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.089620096 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09291534 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074922795 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.087460799 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083387907 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.102675952 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076531952 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081214578 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.082915988 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.08191139 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.08065562 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.07469854 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.076869618 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076784836 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074341883 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.087922226 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.080543447 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073634871 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073625941 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064448356 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073572611 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065597955 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.063958085 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.072393996 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078118084 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074608105 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.076784575 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076299554 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066711243 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066927488 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070176291 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075503149 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066796734 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.07861432 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075698945 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076158133 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.079826303 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079800992 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.065915904 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.067264249 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.078115708 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066846527 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075681381 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073857362 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072742545 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.075008638 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075520411 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078576982 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090384809 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072530016 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.078606758 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.078799881 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.07847128 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072471457 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073211666 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075382182 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074135204 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090334843 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.076341506 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071598655 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076625659 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.076353484 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074742354 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07408515 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073248982 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076804559 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.077930946 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.074752017 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.077936967 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073659987 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.06680968 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.075252983 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071815892 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.067056724 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078696782 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.081151853 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065394054 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071386616 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.075909958 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.076012491 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066747135 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071825801 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.065766837 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072255648 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071818078 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.073731389 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.072486608 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.074930743 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065973872 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076084653 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074360459 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.075059667 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066089884 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.078841697 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066706668 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.073786261 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067165076 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066920126 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.065833951 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072127651 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066561924 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07208525 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075301163 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065285789 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072029053 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080407597 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.066532719 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07523518 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065965846 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066356921 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.077840483 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.07844684 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066633037 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071628774 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066060334 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072894121 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066009972 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066098827 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066723319 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067466129 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072104107 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067272615 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071949429 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072834045 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.079159684 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066614414 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072204031 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071917413 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066984449 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073908429 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.067573971 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066846064 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.066024895 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.080763796 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071446107 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066987538 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072458376 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071984402 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.075252388 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.065114065 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.075418993 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.073207318 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070652908 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072497995 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064749092 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.077714152 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071138956 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070414856 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.208176018 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.06673827 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066693505 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067720136 seconds)
done (took 12.918134421 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069656251 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.106501312 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.075053383 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.083318577 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.080071894 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068616302 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.071442768 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.083824079 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070682875 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.086646249 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.092832051 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.088496424 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.093610285 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065921941 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067465058 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.067818208 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.065954676 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.074655524 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.082180623 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.090561884 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.096494259 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.067633916 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.076432375 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.08299817 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.077802094 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.084329626 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068470651 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.067864153 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069283679 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.081859171 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.090723184 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.065759545 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066730397 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.078309651 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.079203009 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.072198411 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.06831346 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.069639437 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066351109 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065911327 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067185234 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.079187877 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.068824764 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.068819293 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.066465135 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.0666726 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067333519 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.073342335 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.080839715 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.071428257 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.075033159 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.079394907 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069210904 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.066184565 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063883928 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.069570471 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.066851088 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067899915 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067700156 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067338035 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.068111032 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069210567 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.068552067 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.068271504 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.07140208 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.069073722 seconds)
  done (took 6.42692049 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086448426 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.096654585 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082888637 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083218251 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065705144 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067238087 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066411211 seconds)
  done (took 2.12135122 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068021308 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.07830491 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081325041 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081045388 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.07396881 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.084444127 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066515267 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.096826299 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066909565 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.080640787 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.113406902 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.084264709 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.071280308 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.080933284 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067011983 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.075955615 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.068201037 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.076686994 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.07532244 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.084432536 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071572044 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.097258118 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.08063642 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.06698994 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.085240138 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.069954452 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.066374963 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067608765 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.0683059 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068792874 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068376156 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107054272 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.071175838 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078957677 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068926713 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.066969232 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.073495208 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071044283 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.070116973 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.076642029 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.072864891 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.06937276 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066381156 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.069251849 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069980119 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.071512627 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066975826 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.069003488 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068540771 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.079218228 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066900693 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.071974332 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070956643 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.072795995 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.074411543 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072282866 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076619531 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.06965535 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.079656885 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.076468525 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069098059 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.075493935 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.073856403 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.073134859 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.075798275 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.108082144 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.071090883 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.072536662 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069023768 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.069753457 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069069756 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.075557833 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.067180876 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.069791693 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.071305783 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.06869179 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.069637401 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.082460456 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.08338328 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080764901 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070299689 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068631119 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.071519056 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.084559922 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07199848 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068868595 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.071302681 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066737068 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072375519 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068796901 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.07403211 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.0690116 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.076195295 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.070205002 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072251733 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075641325 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068115893 seconds)
  done (took 8.778752326 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.06890904 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068590032 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069217866 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069295567 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.06887505 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.069451003 seconds)
  done (took 2.019904121 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.08818676 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.067994804 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.082679968 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.068565705 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104056337 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.074954211 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.075374911 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076460493 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.081315851 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.080896222 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.074559792 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.07744978 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.074140663 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.070118859 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.074987298 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.069451667 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.074569377 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.071645002 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.080500944 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070185656 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.081327554 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.069769617 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07018138 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.079740494 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.071005496 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.068577161 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.069196165 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.081189777 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.080623074 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.07592126 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.068168502 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.068807811 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.073939661 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.076279322 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.07259884 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073836757 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.066567806 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.071549504 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.068255131 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.068742004 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.074569045 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067777078 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.068504341 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.071176775 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.073024284 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074077943 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.07169783 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.06978808 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.071981798 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.071113611 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.071660439 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.066658978 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.068762304 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.071460168 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.076699103 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076231145 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.073643576 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.074524973 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.069680026 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075556402 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068546695 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071600783 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075832353 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.070797917 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.073330607 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.073715932 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.076809737 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070089022 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070107841 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.068296462 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.073969898 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068193049 seconds)
  done (took 6.868438811 seconds)
done (took 27.777759263 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.55101485 seconds)
  done (took 2.101985855 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.573816323 seconds)
  done (took 2.164840703 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.703775226 seconds)
  done (took 8.29324767 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.299391568 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.321196988 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.740034779 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131310094 seconds)
  done (took 3.115532942 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.749668583 seconds)
  done (took 2.343189124 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.239926519 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.22641932 seconds)
  done (took 2.071023313 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.343053877 seconds)
  done (took 1.928401251 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.137383009 seconds)
  done (took 2.720220595 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.226599784 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.159040564 seconds)
  done (took 1.978550529 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.496823479 seconds)
  done (took 2.089094515 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.323650022 seconds)
  done (took 5.918870865 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.232770771 seconds)
  done (took 1.861588211 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.234144619 seconds)
  done (took 1.830215557 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.772844342 seconds)
  done (took 3.363998841 seconds)
done (took 43.384264513 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.086135607 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.085550387 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.085895291 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081534537 seconds)
  done (took 1.911881943 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.075558906 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.070580871 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.074218209 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.074911305 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.072793217 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.073816736 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.074017369 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071314899 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073116396 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.071270403 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.069983128 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.07121618 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.073860178 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.071077378 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.073576896 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.075069652 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.07095991 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.071044625 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074146184 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.070882733 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.074204097 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.071545363 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.070209924 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071287792 seconds)
  done (took 3.338490686 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079003974 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072702547 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076196163 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072447734 seconds)
  done (took 1.906116375 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.078259889 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.084768275 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.084177372 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.089857633 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076157039 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.075646558 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.082094385 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.084624162 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067365915 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.086591881 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.06735427 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.066673416 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.066495668 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.084698939 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.081427463 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.062243884 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.063433396 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.07580588 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.075377568 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.077410178 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.067974534 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.064802797 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076251517 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.074991264 seconds)
  done (took 3.419043538 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.080543226 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.065366353 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077805607 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.09050412 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092685897 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065132424 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.077918093 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092424214 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.123300415 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065154158 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.0710928 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06513608 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.103379663 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065212608 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079747587 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.10603366 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108616536 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070726331 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099699131 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064998038 seconds)
  done (took 3.277714764 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.07856095 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071426928 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.072142451 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067691416 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078927758 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.075945451 seconds)
  done (took 2.060622324 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069991212 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068499778 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067355222 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066676089 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071901686 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067229398 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065752133 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067589002 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067482223 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067207765 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066372034 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.068316278 seconds)
  done (took 2.422889158 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.168607393 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071526836 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069159257 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065480211 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071109019 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066489603 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080804068 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.071490464 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.085455062 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068279706 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.069069427 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.072021869 seconds)
  done (took 2.571263496 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.1003092 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.100102221 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.144050186 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.115944422 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092661976 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.09332807 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.158108813 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.134501725 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.115249492 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.068906859 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086114092 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099142889 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097999207 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.132434312 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.110808863 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.072019615 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.110666766 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080268369 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.112855838 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.120806465 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.113662844 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.120120797 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.091623347 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.09744717 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.105052753 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.116730591 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.07180471 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.07161934 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.148034873 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.099040032 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.091760496 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.09793839 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107304095 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.068404467 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.085782287 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.105504201 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083003283 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.118620878 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.086475947 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.0972631 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080265242 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.133334086 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.105176232 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101977586 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.130589945 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091896962 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109092465 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.105452394 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.081240178 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.116943247 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097194035 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089921517 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078406423 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.157327786 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.088111325 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.109493452 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.110315875 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.08034246 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.087531635 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.099954597 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.128048033 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.103536382 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111873163 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.258734384 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.091347892 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091326255 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.130007532 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084352041 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.099669078 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.12945139 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.092184979 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.074933341 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.095472152 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.069637507 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.096127868 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.10631208 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090594547 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.110271263 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.076359469 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.12582463 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.107532703 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.072838613 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.115936653 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097279023 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.153159248 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094070568 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.099476811 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090517057 seconds)
    (89/481) benchmarking "5d"...
    done (took 0.149020031 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08456819 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.079369408 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096833789 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.127087229 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09439442 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.095094714 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.127513075 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095608919 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.086297715 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.074783752 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.088697231 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101981428 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109568175 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103432613 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089102435 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.086651325 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097627507 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076665347 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.082725145 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.103151632 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086780958 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.125026246 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.10780876 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.122244085 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.077947867 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104636236 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.095794015 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.126868417 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.115778024 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.083825974 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10857483 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138949826 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.11286446 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.084049236 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.098767218 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109630138 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106304092 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.095373692 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.135643539 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.114336469 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088178602 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.091794584 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.246763914 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.112161073 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.154636773 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08914419 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.103757406 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.137447113 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.112531219 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09055155 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.083365439 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.094608978 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104782657 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.139357646 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.095286787 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.070119938 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091487345 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.129378714 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075668126 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09886787 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.092325488 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.082760601 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.080126993 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.067946568 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.100387876 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.13481056 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.112552949 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097264998 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.107105537 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.06923769 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.098040444 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103495916 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.140092497 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.115095491 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096953439 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.100184888 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106262786 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.079160903 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.1325618 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.134588512 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.093305237 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092221435 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.12230969 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.094891756 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.103862699 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.112828524 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.102483748 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.099772921 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.140098713 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.118783795 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.12321227 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103422648 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.122862967 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.081400055 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.115397035 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.074310926 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.103663591 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.076692893 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.105028565 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.078171129 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.109597308 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.077891097 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.097581566 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.068465696 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.072202543 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.107879856 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.243170526 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086045536 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.135095742 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.129926029 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.081098907 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.100624226 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.09963633 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100584019 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.108115051 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.088960233 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090832191 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.078223459 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.079783816 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097235418 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092897295 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.106156279 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.077453999 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.074653415 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.137626787 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102358367 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090159141 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.094069697 seconds)
    (218/481) benchmarking "4d"...
    done (took 0.119386111 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.087897903 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.087703681 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103210528 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.13730103 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.116418889 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.079997643 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.091208331 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.068882765 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.084059282 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.076245578 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109735 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.074341481 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.109416205 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.068353694 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.127931268 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085432851 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.101670386 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097133125 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.130219981 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.092379515 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.130286963 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089096982 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10966554 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095427894 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.096997166 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.110560259 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.096107433 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.106039551 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.110689622 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094103043 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089057215 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.121482402 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106420615 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.119167033 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.107463638 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.1351432 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.111023923 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.07422294 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102998763 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.09927211 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.145447528 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.098972981 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.088471279 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.094495878 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101584811 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.080531133 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.294986305 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086817648 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.086253808 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.112819904 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.087784427 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.096531053 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076184297 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.100362772 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.093293976 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.112251292 seconds)
    (275/481) benchmarking "3d"...
    done (took 0.098648003 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 0.092471526 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108161773 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109685832 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.085684568 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.085848165 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.122960925 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.127258422 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.100679061 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093045497 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087698197 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.097866069 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093009385 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.107776262 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079549876 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.075222111 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.0679846 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.07202613 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.115671233 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.107009947 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096784603 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.098299883 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.103822724 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.073018792 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08814585 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092726902 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.083731735 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089548963 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.11440789 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.102879297 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.127810409 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.101532201 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088008422 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.144462157 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.130060493 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087071152 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.0938003 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103203877 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.076252884 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.148343475 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.117623136 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.07684011 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.084784933 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.077011299 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083156083 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.070920613 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102678588 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102850345 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075135975 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.101993483 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096403337 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.12279343 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095741522 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076178074 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.078664454 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.074619227 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.074931678 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.101493053 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.076509222 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075722046 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.128180474 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101870151 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104956416 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.082124211 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.228344262 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.131181034 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.069868594 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.13193952 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.082312875 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.109423407 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.080603544 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079347426 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088814284 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.105248157 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104985001 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.111699936 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.070753302 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102366719 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.153027162 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075634923 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07533945 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.074190018 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.110679449 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089204783 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.144556057 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091465611 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094893766 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078690227 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.129498048 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.103871719 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.08315485 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.12802429 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.078923188 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.070697734 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.086730395 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.111148136 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.073923053 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.076916323 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.114650504 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 0.509256088 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089964752 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.075530002 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.088040643 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.126929723 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082688514 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107686782 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.11715354 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.105752688 seconds)
    (383/481) benchmarking "6d"...
    done (took 0.185648182 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.075371207 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093338452 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.104610822 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.098535249 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091702515 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.078516243 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.086828289 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086941155 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.083819513 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.106168315 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.079942168 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.089917908 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.079238672 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.102765093 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.128569339 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08583081 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.10087623 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086679248 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089793771 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098206874 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.110487401 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.104939067 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.08650399 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086964115 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.106845636 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.082449015 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.23347088 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.101135213 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.079138494 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080760385 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.12042363 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.086335991 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.096458303 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106143815 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.092291645 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.115470869 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.119424785 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.113652043 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.09861872 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080834127 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.087040202 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.088629318 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073809817 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077982727 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.07416662 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.07043896 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106313239 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084761872 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.080617576 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.098677854 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.108740534 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.099850981 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.105937152 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089977583 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096456766 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.099687414 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.125841442 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.144111255 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.09912768 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.124087164 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.131919902 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.076366051 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.075363825 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.07971038 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.130725323 seconds)
    (449/481) benchmarking "2d"...
    done (took 0.081157882 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091861446 seconds)
    (451/481) benchmarking "7d"...
    done (took 0.237425252 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.077660202 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.083054572 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.093480626 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109147793 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.08466092 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081949396 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100961536 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.113168089 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086702835 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082688353 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.094437504 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.110008374 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.131097837 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.091376322 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077333332 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.108900765 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.103914657 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.124189695 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.074783554 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081086874 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.127683282 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087381879 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.106367686 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.082397907 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.126445912 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.134650908 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07581239 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.090897725 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.075136352 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089087957 seconds)
  done (took 50.964411784 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.150210573 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.14352163 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.082389998 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.097055792 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.186557538 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.196377116 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.118475681 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.095037281 seconds)
  done (took 2.835361431 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070589751 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.08236665 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100380985 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082709587 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066355898 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067570883 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.201155178 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080638011 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066345251 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.105570172 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.074192717 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068160823 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.360141986 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065339942 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.066596671 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.073985678 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066841727 seconds)
  done (took 3.416995693 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.375889696 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.620562347 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.321940582 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075355894 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.984779124 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088305312 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.232982599 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.138101233 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.081821658 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.547205993 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.370928285 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.131666409 seconds)
  done (took 18.691395583 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.078657561 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.077327846 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.080489645 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.07992361 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.076115715 seconds)
  done (took 2.11608564 seconds)
done (took 100.55346637 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.085203231 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.175353366 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.06991485 seconds)
  done (took 2.003859552 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.084916793 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.083225874 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.082904495 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.080204127 seconds)
  done (took 2.063021635 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.077371451 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.078526263 seconds)
  done (took 1.882057297 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.238367797 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.172532772 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.09293219 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085252764 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.082172736 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.082880363 seconds)
  done (took 1.987798906 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07409784 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073767619 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073987646 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.074038712 seconds)
  done (took 2.016152065 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.070340084 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.068598955 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.070228197 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.072799478 seconds)
  done (took 2.007198981 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085529702 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.080672984 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080135621 seconds)
  done (took 1.974488092 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.112128022 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.099818843 seconds)
  done (took 1.939925498 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083068293 seconds)
  done (took 1.812017786 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.092180561 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.09878111 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.143512197 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109242432 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.142846524 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.128463382 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.078515001 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.079693237 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.075399982 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.073606563 seconds)
  done (took 2.7486424 seconds)
done (took 22.746177067 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082306932 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.375639953 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362835331 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090210127 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.673686107 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358613666 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.992966386 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093652141 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.10191612 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07042629 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087228419 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649565153 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.988360338 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.333350849 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.973207355 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.332509184 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.65194044 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069840437 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069495059 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070806861 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.976733748 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068830881 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070030614 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070494287 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.652008388 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.37656256 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070968395 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.333173319 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069866911 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072351444 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356722779 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068525366 seconds)
  done (took 16.316407159 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072956884 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124249281 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073079856 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084051767 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070026662 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068754027 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.07107794 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068420089 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.111776976 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070948554 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088558631 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069829478 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072537921 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069022365 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088019173 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068901645 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069545837 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069311147 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069202069 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069206789 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087265933 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069127724 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069485033 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072292009 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068987265 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081273591 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069768367 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068623366 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06857986 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071481818 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071881507 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069945146 seconds)
  done (took 4.16020653 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.125028457 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.129048235 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075725827 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.112108913 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.119941409 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072282736 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.150920531 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091210376 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.114237156 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067841039 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08498232 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068874005 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104004494 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070298705 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089021066 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069134601 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07033705 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069513478 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068908604 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069131359 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087427728 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068083425 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069371276 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069286871 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069229752 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08332949 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069360805 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069091749 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068689522 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071168605 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072640701 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069562613 seconds)
  done (took 4.435707082 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072768541 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.077019534 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082116835 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082970427 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068654498 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.07112577 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072115184 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069218066 seconds)
  done (took 2.345635905 seconds)
done (took 29.007708627 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.08172564 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069846658 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073283154 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.090013708 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.076498859 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.072056125 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066717111 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.076256542 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073195583 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073224508 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074938915 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068592447 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071870563 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066748444 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074114479 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068594624 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.074899043 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072862667 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.073512608 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.074742891 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070939258 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073916811 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.077489115 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.073025168 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.073683823 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.073585719 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077762416 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.074538107 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069382387 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.072166303 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.071013513 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083223775 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.075089863 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.073232033 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.06785199 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067558709 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071401598 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.070063305 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.075489363 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077397679 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069853797 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076348148 seconds)
  done (took 4.799944458 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.091319718 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.095873776 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.088103046 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.084332248 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.106928207 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.082232818 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.09177876 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.080135662 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.079447001 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.090511877 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074208378 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.078243322 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079666089 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.071911616 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077878529 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074168536 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.079777708 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.073338756 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.078703362 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.078334565 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.090089205 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.071331285 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.078443643 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079619681 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.073889245 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.079740696 seconds)
  done (took 3.879994671 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075175191 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.089087106 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.091822767 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.140156396 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.109530234 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.082304921 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081962087 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.102096009 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.1010835 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069355735 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073739867 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.09686898 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.099337249 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.07792598 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.109864267 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.088417791 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081819015 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071301326 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.076903306 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.105178278 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.094139152 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.089647742 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.103980847 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.090751932 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069412702 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079808838 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.076743953 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.086626103 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.077682686 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.083321537 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.074486347 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073644981 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.07102044 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082117649 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073988121 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.067960454 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092398066 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082289773 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.084670702 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.108465661 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078286592 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069496983 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.096408631 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.135849368 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.069550145 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.072416849 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.073886442 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.082172313 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.071063122 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.099665122 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.088608482 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069550509 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.088782038 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070652923 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.071094471 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085718546 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.07130072 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.07168686 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.081999807 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075612257 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.090703151 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.075140086 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.090348025 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069821465 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.08101866 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069673065 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069419286 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066226069 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.103683133 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076832545 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.120274809 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068897916 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.0654715 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079752681 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078492998 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074146324 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068533532 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088978805 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.081597812 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.073207909 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.081070565 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072884913 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072532074 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.106291233 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.06846636 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.067475124 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.06744344 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.071392735 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071226707 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.067807539 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082072716 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068247607 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071031832 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.081238899 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067030053 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.067791544 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.069491003 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.06809662 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067426652 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078161862 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071717699 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069094815 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079392917 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068311906 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070509393 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.082165121 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076298041 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067139149 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.068429801 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.069980968 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068935204 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071591729 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070521041 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069366081 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.073701672 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074294335 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072832971 seconds)
  done (took 11.149169478 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.16199705 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.152856861 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.068656204 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.147435192 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077556878 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.072198676 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.147643779 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.086696886 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067782345 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069267087 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.067274407 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.095350317 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.090641138 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.10180561 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.071769175 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068893926 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.093680726 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.100977205 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.149756535 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.145328878 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.091526676 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075785067 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070415892 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069174326 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069564152 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.0769891 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.08410243 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076366247 seconds)
  done (took 4.441294149 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.078157019 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.114272006 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074854649 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.094758896 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.089922339 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070612707 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.072597136 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069640368 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.085558106 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.075177539 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067742985 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072238639 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.071655307 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.070030156 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068459669 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074455921 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074496627 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.067075328 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.07215679 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072093458 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078281127 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.092626134 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072107138 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.06756952 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.070192308 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067676716 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.074154245 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.077377752 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067682577 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.098310159 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067628177 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075244509 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.08462061 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071279678 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.069364472 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.070301318 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070250913 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.069336222 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.06888032 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066239445 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065692893 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.071986229 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066890858 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.073695436 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.081608272 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.074835413 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.069252425 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.070046712 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.070035247 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064634912 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071359442 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070738331 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070852297 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076155983 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071513627 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.070373044 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069231852 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096132432 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074246608 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067261514 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.066666955 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.0691132 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.068814104 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.075367388 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.084715927 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.068738311 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066476263 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067917299 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.073963152 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.084644659 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.0682568 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.073061113 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064933011 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.067848147 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.070465418 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072248538 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.071302119 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.068010168 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069766467 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.070026854 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.07018743 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.070257358 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.069389696 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072483968 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067613183 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068272447 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.070396661 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.070228455 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.074021324 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.066739879 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.070380573 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068577836 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066464889 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072131091 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.074165565 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070897333 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.089130074 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.078459635 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070569408 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067198966 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081819027 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.069401752 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067276494 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.073715093 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.072269618 seconds)
  done (took 9.459144279 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093153927 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070177016 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087359654 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093823464 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.078345831 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.073382773 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.081710877 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068999346 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.084374855 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.067585488 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077300708 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.066210024 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080452874 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076825091 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069233279 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078514403 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.070232451 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.087949348 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082751936 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.066368392 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075846342 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079965055 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.080688049 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.085115087 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.085010377 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.086295008 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.080522919 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.070832057 seconds)
  done (took 3.994923747 seconds)
done (took 39.469495425 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.832055202 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.987134126 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.820978551 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.013505862 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.019457205 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.941482982 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.940639179 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.813928055 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.970953277 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.842011539 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.113890378 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.179119541 seconds)
done (took 67.288302015 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.839005321 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.964044437 seconds)
    (2/2) benchmarking "String"...
    done (took 2.030454902 seconds)
  done (took 5.740355736 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.968722726 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.448828134 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.09113923 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.816354996 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.816012895 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.317915461 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.626684319 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.298940796 seconds)
  done (took 31.162109835 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.967780491 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.03693767 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.511474235 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.545475613 seconds)
  done (took 15.849065974 seconds)
done (took 64.397024455 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.857669811 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.809359285 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.851915042 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.849031184 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.815335281 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.81040436 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.81380619 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.814906399 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.855351127 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.883353893 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.809317091 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.822062876 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.812928551 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.876290814 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.525541079 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.87082458 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.826277694 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.82746297 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.834665577 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.834574038 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.819583405 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.810611309 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.283678795 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.99884636 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.422540047 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.107205086 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.360733743 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.229787266 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.823110949 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.808473446 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.891720108 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.091865287 seconds)
  done (took 205.793241404 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.815149427 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.88011589 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.95002726 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.850039145 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.363337058 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.993083144 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.908394219 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.386882923 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.816853386 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.833706253 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.046764595 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.815207759 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.079241024 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.762278523 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.851941018 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.817070775 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.963245256 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.080467128 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.857314534 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.963035244 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.833797554 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.997979407 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.926664412 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.022455116 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.819940975 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.857408756 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.8172191 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.81951415 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.004806561 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.9510817 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.84197462 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.863324786 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.976319953 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.67994494 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.830582967 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.827313621 seconds)
  done (took 171.854262318 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.002339487 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.824578088 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.81448086 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.873199739 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.935279229 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.816386863 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.467994662 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.828520665 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.147277522 seconds)
    (9/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.817496526 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.816627375 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.81563308 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.815812838 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.817136944 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.829965655 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.890858096 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.816791723 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.832672018 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.821754917 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.842609225 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.810978439 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.819015586 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.816464866 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.816567683 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.817204252 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.817205884 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.816841716 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.451590711 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.053143852 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.821343202 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.823003782 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.704269084 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.83363113 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.150264926 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.827728002 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.917320982 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.876094508 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.936398636 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.82114125 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.041078081 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.896963452 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.818472684 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.821560108 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.885656112 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.83142324 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.821947606 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.823262963 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.827444957 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.885112636 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.064813661 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.818137907 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.940642298 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.303767602 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.816440353 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.821150183 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.81951916 seconds)
    (56/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.821302254 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.435246822 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.820722046 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.8193767 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.825196743 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.825357881 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.820432804 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.821367631 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.207674754 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.888334097 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.184662734 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.37310288 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.820850021 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.622336863 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.901920441 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.82411162 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.824111896 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.824762157 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.822511475 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.825462877 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.827893056 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.949604269 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.83086092 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.951353572 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.903285744 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.943367473 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.823649471 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.824854116 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.838960967 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.65572188 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.893860873 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.859032571 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.655212768 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.826424457 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.198705613 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.822990611 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.610148146 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.827689592 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.824961397 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.841536704 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.823263135 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.822842473 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.826513019 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.90537436 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.820791607 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.951059794 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.55172832 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.467104483 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.827778415 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.823926227 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.835158913 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.910765642 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.947639753 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.828398233 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.892590462 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.827686609 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.827128057 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.931832466 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.825874678 seconds)
  done (took 407.626387111 seconds)
done (took 789.080590868 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.428512734 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.393054391 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.477283119 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.415829335 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.384961754 seconds)
  done (took 13.857395313 seconds)
done (took 15.609104598 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.84029803 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.832222692 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.882907578 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.913242766 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.843055929 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.844091973 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.907776153 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.849711803 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.875024229 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.880504845 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.914589288 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.908121032 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.84760844 seconds)
  done (took 26.099940848 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.838646767 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.978531904 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.04612993 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.870761136 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.837812668 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.049833834 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.89305068 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.96859293 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.973326946 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.051261995 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.056860532 seconds)
  done (took 23.326752914 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.836085658 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.974158512 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.049793654 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.873103303 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.836852809 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.050751209 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.896443219 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.973116067 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.974291413 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.057236897 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.091781203 seconds)
  done (took 23.380689545 seconds)
done (took 74.561272611 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.832921491 seconds)
  done (took 3.592514916 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.858225953 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.02512569 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.837173595 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.834072877 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.834796641 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.834732458 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.83401716 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.834367232 seconds)
  done (took 16.653646068 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.834777536 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.834221898 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.83662865 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.829071753 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.834062355 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.836655196 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.832876335 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.831529566 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.835832965 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.834460525 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.832850888 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.835135391 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.836569679 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.832865682 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.833325617 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.83441091 seconds)
  done (took 31.109177714 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.832775331 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.838274134 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.834919231 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.834218976 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.836495162 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.834950006 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.832884741 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.833710186 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.83290662 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.835516809 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.829823845 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.830318894 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.833240461 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.834201519 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.835497793 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.83052307 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.831457875 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.836108765 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.837406643 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.834609891 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.833967434 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.835041379 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.829357939 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.830921542 seconds)
  done (took 45.77235539 seconds)
done (took 98.894404334 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.549775024 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.881601288 seconds)
  done (took 10.196684976 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.836420842 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.837122347 seconds)
  done (took 5.44529141 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.83138063 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.83389096 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.832905098 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.835881709 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.833219916 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.829979831 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.832961133 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.834010794 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.836511639 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.835935079 seconds)
  done (took 20.100162621 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.833540225 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.833992288 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.834553373 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.832992814 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.834454274 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.834161402 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.834736429 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.834123072 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.836545508 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.839414159 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.837628889 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.836202532 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.833811776 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.83825184 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.835393925 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.834448365 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.833411184 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.834699662 seconds)
  done (took 34.797320646 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.836635028 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.835069069 seconds)
  done (took 5.438031112 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.836236685 seconds)
    (2/7) benchmarking "second"...
    done (took 1.835064207 seconds)
    (3/7) benchmarking "month"...
    done (took 1.834470837 seconds)
    (4/7) benchmarking "year"...
    done (took 1.83784803 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.831230223 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.838658838 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.83382138 seconds)
  done (took 14.611796398 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.837626427 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.980852201 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.03276882 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.442061164 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.838862886 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.835683465 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.665430414 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.839080267 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.838285838 seconds)
  done (took 20.073678658 seconds)
done (took 112.423379609 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.640474788 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.834185566 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.074089857 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.903362009 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.899883943 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.173721438 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.865522162 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.429036789 seconds)
done (took 42.582660981 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.871368742 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.834690503 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.863359143 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.867607198 seconds)
  done (took 22.327467719 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.848089944 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.149637372 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.855602368 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.699805056 seconds)
  done (took 22.335282356 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.213865944 seconds)
    (2/2) benchmarking "read"...
    done (took 2.180919079 seconds)
  done (took 6.163540099 seconds)
done (took 59.461195021 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.838032104 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.838598711 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.834920882 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.840746125 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.836546044 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.83546977 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.83598995 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.836992047 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.839966451 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.838380801 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.840099316 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.844945803 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.842873613 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.837082039 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.838856382 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.840441674 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.838926048 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.840543131 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.838571048 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.842829808 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.840019716 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.841044234 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.843121494 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.842417096 seconds)
  done (took 45.916511653 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.839503497 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.845799815 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.839103098 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.840167293 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.843846764 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.840535713 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.841856925 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.842346554 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.840961331 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.839900727 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.843800721 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.841626603 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.837900945 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.842986914 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.840839502 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.846574693 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.845337403 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.845962617 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.839192335 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.838737081 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.842379263 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.840539712 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.842512795 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.839743633 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.838484991 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.838802047 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.842712972 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.846121622 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.84485232 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.844174763 seconds)
  done (took 57.025971248 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.844655885 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.838571112 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.840663516 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.841487657 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.841704733 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.845075577 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.841725798 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.844707686 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.845847528 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.84443613 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.841877191 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.839790931 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.845679974 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.845300175 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.843197297 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.845781834 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.842316148 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.847246128 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.843953535 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.847845778 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.843949005 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.841958848 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.843326453 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.846764347 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.842712529 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.841375809 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.841019348 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.844608676 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.841242505 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.84208547 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.844894705 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.844688964 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.840806943 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.842221104 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.847369917 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.846642746 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.84640333 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.844327802 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.845994415 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.846262151 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.842230313 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.845265138 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.84721849 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.844347476 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.849144726 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.845865959 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.84743663 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.846693276 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.844629263 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.844718699 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.851486531 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.848153152 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.847410424 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.848408631 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.849611116 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.847372653 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.848940515 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.848207115 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.843345594 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.851374728 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.848095029 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.843366916 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.847376166 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.847112597 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.848687412 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.847854219 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.845426421 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.844972969 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.847086025 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.850635998 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.846462458 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.853595718 seconds)
  done (took 134.636010724 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.847388905 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.85059123 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.843213353 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.847088502 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.846998566 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.84874125 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.847206508 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.849848627 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.848767446 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.847765976 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.849160789 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.852084145 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.848889641 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.849139521 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.847004429 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.8499545 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.848124795 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.851764951 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.845070512 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.851052504 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.850501475 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.848076548 seconds)
  done (took 42.445524334 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.850269352 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.845671391 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.847428584 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.847597254 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.847464881 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.849147881 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.847671479 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.848923181 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.850894568 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.846448367 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.851335346 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.848450023 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.851602054 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.851939392 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.847898225 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.851407385 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.851620968 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.85023846 seconds)
  done (took 35.061062491 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.847587192 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.850185538 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.851706295 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.851046098 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.853620171 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.852602969 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.849979389 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.849978894 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.852091747 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.850670557 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.854777599 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.853834168 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.854186884 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.852992551 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.855676468 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.850727928 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.853458809 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.849419884 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.851132028 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.845858415 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.853324581 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.853220209 seconds)
  done (took 42.516082727 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.851912237 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.849790419 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.852631906 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.8519957 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.851305137 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.849507249 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.851872351 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.853520636 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.845229172 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.84691114 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.852121616 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.850299095 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.85479201 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.849950833 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.85366476 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.848548944 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.85587167 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.853631549 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.855716858 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.85049825 seconds)
  done (took 38.807999799 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.852967747 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.85194484 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.851666449 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.848593556 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.851360811 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.856388298 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.850965581 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.853840842 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.852556128 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.852951935 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.854135656 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.853225441 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.853730821 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.853841457 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.849602426 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.853595355 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.852441037 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.85119624 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.848687788 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.850574725 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.850776716 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.854154086 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.850845334 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.851355739 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.850339993 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.850478351 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.853312091 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.852658292 seconds)
  done (took 53.636665055 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.848375817 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.851075039 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.853271236 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.855034841 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.85143497 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.854084281 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.853478339 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.851980379 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.849603987 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.851175921 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.852319077 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.849832546 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.856635527 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.854542452 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.851728484 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.853990422 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.852205688 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.848741084 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.855505801 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.85548972 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.854319611 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.854254146 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.852468746 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.853201146 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.855648715 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.855078701 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.856854648 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.854648306 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.855293867 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.856144078 seconds)
  done (took 57.377652774 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.874054756 seconds)
    (2/2) benchmarking "in"...
    done (took 1.878833939 seconds)
  done (took 5.531777886 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.852797824 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.854185649 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.856233972 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.851729277 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.856263817 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.85692728 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.856178836 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.852074115 seconds)
  done (took 16.615465382 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.856665373 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.854846131 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.851019479 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.857157021 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.857562612 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.863324225 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.857671705 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.856594088 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.857893954 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.857966305 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.862687153 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.85939401 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.864721604 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.861586849 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.855718923 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.856451657 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.859720732 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.854402712 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.854374669 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.857473311 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.855432084 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.85343013 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.857666982 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.855983363 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.854013376 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.855792313 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.870186239 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.85959034 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.856344416 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.857133031 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.863524506 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.85858612 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.85662332 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.856157696 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.860389369 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.856732048 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.865038634 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.857036117 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.85570726 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.855624734 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.857517155 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.858160827 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.861065631 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.862940875 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.859071319 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.855731342 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.858915364 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.854674221 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.856680963 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.863945645 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.870060173 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.860387778 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.858338544 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.858536084 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.863045695 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.85811096 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.860375205 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.85897348 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.871706986 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.867544456 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.864095246 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.882773973 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.868738106 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.862947637 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.857935328 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.868791338 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.890238503 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.857662512 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.861369016 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.862714786 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.864788096 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.861444341 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.861924381 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.859257814 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.875036913 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.870199192 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.861804775 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.865202743 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.86320075 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.861919824 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.867021546 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.856786205 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.86214509 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.859747366 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.871242431 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.890090615 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.860453659 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.860513945 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.865497248 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.860243754 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.866391785 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.862494377 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.861265803 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.860026843 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.859828093 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.864641159 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.863511763 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.861164355 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.859568737 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.871649067 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.864164479 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.861343594 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.86251656 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.871509492 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.862706227 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.862272592 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.861136878 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.862312774 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.871624054 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.858538088 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.861025425 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.861261096 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.864278672 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.866000253 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.861954351 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.870346739 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.87279578 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.871168354 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.865219567 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.862357707 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.866504597 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.861296193 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.871037164 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.886805545 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.86875906 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.870089374 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.869245589 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.876385183 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.868464434 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.857225317 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.866982842 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.861014546 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.864139491 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.869225577 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.860011211 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.865119656 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.861268417 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.866203968 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.867986278 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.865839578 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.865978435 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.864590009 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.869273153 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.864070896 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.870968384 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.867849411 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.865639342 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.873542669 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.86048993 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.867445951 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.863234234 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.869634413 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.861766991 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.862260198 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.866159974 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.8637494 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.867082627 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.866551392 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.864329593 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.864378648 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.86356099 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.86281069 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.865968371 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.865326586 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.862161855 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.865111917 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.871484491 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.867773462 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.869895193 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.863088719 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.865598783 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.869941526 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.869747688 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.866769422 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.866264709 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.866568732 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.864297018 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.864086526 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.869328226 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.879100414 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.872137101 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.874899915 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.868172631 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.877650489 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.869348489 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.865049831 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.869038699 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.863521587 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.869204147 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.867350673 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.86288247 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.868635441 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.891267072 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.876922626 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.87037933 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.870425051 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.870599577 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.874050562 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.874164374 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.864876772 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.869726923 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.872537299 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.867728643 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.869769006 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.873120084 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.874433363 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.866124194 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.868336654 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.874976421 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.869689114 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.872625347 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.870015353 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.870268591 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.869147468 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.866758194 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.872046469 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.864559173 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.865478873 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.876213507 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.869273592 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.869900248 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.873555389 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.87057445 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.869580086 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.868140097 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.869261845 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.877201707 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.869101164 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.868239756 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.882357586 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.872192653 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.872107129 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.872659671 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.868271086 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.872218761 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.870985589 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.876390215 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.882363481 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.868963663 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.867625454 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.87838445 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.868628139 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.873638326 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.866206514 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.868968155 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.867909119 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.871291567 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.871034513 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.870350407 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.878096282 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.872745958 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.874625293 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.866471515 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.871707958 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.870024365 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.874231992 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.870600327 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.874727322 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.882617578 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.878984131 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.874436886 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.875956267 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.872551568 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.867966414 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.878149136 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.86789981 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.883755582 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.886353117 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.870150085 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.873759528 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.871080613 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.874005214 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.873201817 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.873539369 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.879564424 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.871532963 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.874522046 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.87505504 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.874857282 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.872702379 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.884870653 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.877629088 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.874841803 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.871858493 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.871521994 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.876416645 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.866503396 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.873921905 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.876551593 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.876813653 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.879829809 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.873353685 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.879166788 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.871636962 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.886501408 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.875871217 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.87770421 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.884871197 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.876362665 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.87445076 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.87630933 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.876727704 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.870173256 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.875278839 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.87320127 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.879309786 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.873205545 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.876885546 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.887643652 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.880279075 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.882025785 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.873898654 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.891383303 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.86977137 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.875795144 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.876719118 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.881484263 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.881998918 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.876596511 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.873390989 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.886911486 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.878710533 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.877374223 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.881125252 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.875929543 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.877044373 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.87664533 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.878624815 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.883374975 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.875540988 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.876133359 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.877399841 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.875554616 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.878329321 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.881266832 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.880423993 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.874066836 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.877735416 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.875843168 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.878626372 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.876230532 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.875166349 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.878197034 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.878499913 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.877279741 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.888482352 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.878632022 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.879278991 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.88528211 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.878825799 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.888712015 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.880285344 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.875688042 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.879661994 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.87679108 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.884966356 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.879603433 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.877864644 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.880781832 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.875858654 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.881824074 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.890706033 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.889736399 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.878741644 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.883832637 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.880475605 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.882322309 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.891729113 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.902434612 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.880893623 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.884354028 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.88552247 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.890101499 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.880567182 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.888851984 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.885117531 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.891858915 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.881710585 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.878713772 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.883781639 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.897457852 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.877631938 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.883469698 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.883096831 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.883830434 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.883012677 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.88206622 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.882030956 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.887017838 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.883479773 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.89372426 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.879246227 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.882228053 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.881108565 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.882928677 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.886502018 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.879622805 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.881653132 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.88318862 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.882652975 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.882587828 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.88421578 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.887896463 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.883352634 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.887267273 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.893555308 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.883192132 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.882638284 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.885392301 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.880442644 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.884618735 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.883434133 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.884136677 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.886284668 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.882344282 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.883779093 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.887755233 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.890121119 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.881022481 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.881323687 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.885017132 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.888531433 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.881654147 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.88270975 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.885455745 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.891304162 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.886412814 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.896416545 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.896262928 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.884501347 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.88308245 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.888203445 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.894233015 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.88538925 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.885243348 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.886282018 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.887640465 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.886057137 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.885922125 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.885402355 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.885466347 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.891720434 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.883368226 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.883832895 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.888158941 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.884687596 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.888247769 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.885745595 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.891378834 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.885304445 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.882221048 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.885060986 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.884555284 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.887157574 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.886947774 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.886805818 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.885279551 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.887466975 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.887464024 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.8903932 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.88676594 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.885552572 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.885278516 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.884304778 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.886364021 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.885659571 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.888902248 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.886148355 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.888811796 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.896120114 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.887079619 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.889896544 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.887575513 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.890644253 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.885433626 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.888367749 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.887981109 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.88795452 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.895121544 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.885016396 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.886760537 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.888504283 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.887035504 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.893185332 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.88641101 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.8926901 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.883560197 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.88793706 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.887237463 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.891064128 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.897457204 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.893997315 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.893536762 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.898331519 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.892866226 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.887302005 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.888705779 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.884107831 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.888134561 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.886869453 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.885619955 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.887984289 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.888108754 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.886145656 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.890115757 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.88704996 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.888507762 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.887602503 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.885607204 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.889420052 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.897767501 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.894269054 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.886837496 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.88928529 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.880764934 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.889937547 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.90087931 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.881455832 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.888140437 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.884902576 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.884041995 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.889204098 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.890685036 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.896459312 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.89252526 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.884909258 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.890099968 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.906288318 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.88953596 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.897031963 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.919280189 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.889145706 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.885652216 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.888004113 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.887586878 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.887927148 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.891937271 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.887278377 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.894264197 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.889077963 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.89004277 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.89613613 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.88749279 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.886211892 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.886846033 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.890518778 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.896028251 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.887605263 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.895597368 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.888790718 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.887625798 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.889789725 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.886008081 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.891180347 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.883133369 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.888126556 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.891648932 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.884698229 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.889570817 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.899176678 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.888819575 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.888866717 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.901772266 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.903438107 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.890001787 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.891269349 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.88525267 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.89313544 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.889697972 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.885291219 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.893565846 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.895156074 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.892389292 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.895937398 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.890676009 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.888552669 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.88815059 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.888728963 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.891005439 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.900890897 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.898568571 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.889351243 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.891036966 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.898023152 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.893784171 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.897834063 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.899585308 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.89097837 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.89117579 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.890621994 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.890319674 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.892077433 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.891214742 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.893779545 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.899697506 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.893298987 seconds)
  done (took 1120.36266445 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.895384879 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.889713142 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.889331881 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.891748696 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.894678195 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.891034474 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.892529608 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.893459366 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.892329806 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.89115653 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.893579656 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.892284194 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.893852562 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.89232528 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.895188099 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.892369902 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.892405794 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.889642722 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.891412055 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.890969928 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.890160766 seconds)
  done (took 41.55713734 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.893796864 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.895392542 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.892755559 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.890866269 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.890148698 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.894220967 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.891112875 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.892125891 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.892181302 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.888375798 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.893118877 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.894159535 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.891590945 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.891445799 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.895723655 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.89285895 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.893542975 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.893221216 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.893099554 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.892228141 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.895302752 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.893123228 seconds)
  done (took 43.461691699 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.898686554 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.894870697 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.89521819 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.894242814 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.89160114 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.895654927 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.892050489 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.898120452 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.895895206 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.894417472 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.901857405 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.904157435 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.890754657 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.895801564 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.893486441 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.892901685 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.040004647 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.895528727 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.895241887 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.894907097 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.894224937 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.900636259 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.894953716 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.896175026 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.895606139 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.893435794 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.894867473 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.893785149 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.894992904 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.894017385 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.89914265 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.895012888 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.895171602 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.89677628 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.893793195 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.898694889 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.901629031 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.890830659 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.895941976 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.895735845 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.902310137 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.923092457 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.895247558 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.89280254 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.90424099 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.89375773 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.895871185 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.90031951 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.904824673 seconds)
  done (took 94.908272969 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.896907453 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.895912977 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.896407815 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.89588235 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.895147943 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.894424549 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.896855389 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.895845079 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.895554888 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.896213496 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.898665697 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.895862515 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.896469098 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.900855573 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.895891055 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.893868742 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.89794469 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.895096605 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.898095647 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.895187192 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.898866581 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.897251863 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.898495256 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.898928176 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.898738272 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.893323676 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.894094538 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.895355046 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.894661181 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.894479351 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.892836547 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.896601996 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.897280007 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.8959249 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.895140935 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.892352916 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.8919741 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.893865065 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.893197071 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.890851933 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.892099187 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.892821346 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.892702777 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.892618204 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.894147158 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.891871545 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.893377495 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.892433386 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.894239507 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.891421632 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.891611707 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.890448771 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.891655926 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.892285044 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.892434602 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.89053923 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.892440337 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.891536292 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.891599981 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.890379475 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.892025081 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.895013764 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.896361913 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.892174363 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.887841506 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.88568196 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.886210381 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.88470787 seconds)
  done (took 130.620260003 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.886391177 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.885240866 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.885169982 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.885050874 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.88466033 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.883641091 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.88498451 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.88572081 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.887519169 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.885579768 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.88573211 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.884277093 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.884879438 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.88476645 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.885839493 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.88520429 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.885654054 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.886646669 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.884665518 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.885918761 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.884631844 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.886991258 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.886472141 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.886516415 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.884709329 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.886424595 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.88555296 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.886580415 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.886154208 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.885886698 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.887216766 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.887330691 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.887539517 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.887064917 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.88755876 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.886865604 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.887513816 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.885146988 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.886074122 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.887137827 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.887422784 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.888977175 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.886853008 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.887380205 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.888086327 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.887885876 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.887441477 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.888571099 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.887461567 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.889288361 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.88875597 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.888091754 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.888088823 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.88824625 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.889407592 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.887270075 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.886869574 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.886242562 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.888253186 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.887930629 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.887872414 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.889936101 seconds)
  done (took 118.791388155 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.889020843 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.88819283 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.887397531 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.887814657 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.887304944 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.888140133 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.888076352 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.88879726 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.888859619 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.88838332 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.888286677 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.890014629 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.890421646 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.890027523 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.888944253 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.888641518 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.889154671 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.887997664 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.889721057 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.888906506 seconds)
  done (took 39.594719775 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.890347018 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.889210538 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.89005706 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.888340121 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.89024042 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.889333325 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.888954172 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.889445149 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.890387406 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.892118689 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.890554839 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.888933914 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.889969163 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.891448848 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.888094774 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.89233366 seconds)
  done (took 32.058924631 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.891205091 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.890482182 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.890066419 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.890087165 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.889998987 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.889776079 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.892125875 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.890984829 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.892550362 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.890270606 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.88943411 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.891966625 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.892218356 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.890044875 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.890437802 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.890869186 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.890170171 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.890334042 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.890388628 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.890736252 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.891314791 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.890594326 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.892699461 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.890933576 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.890675758 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.893446285 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.891220486 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.890852142 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.893718331 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.892197729 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.891387243 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.891425836 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.894125246 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.891668854 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.890464871 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.893074829 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.891934259 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.892332813 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.891815574 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.892299325 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.892189196 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.893577592 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.892089243 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.89271057 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.893039792 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.892695276 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.892443223 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.894105186 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.891902758 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.892300088 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.892956369 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.892514978 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.892332614 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.892544335 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.892554344 seconds)
  done (took 105.864329938 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.892350798 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.893614433 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.892181697 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.892481723 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.892808015 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.893716261 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.891470677 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.892389715 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.892130341 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.893571388 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.893368151 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.892802615 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.894055807 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.89311908 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.894301306 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.894102388 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.892676428 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.892478997 seconds)
  done (took 35.89737228 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.893977157 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.894052422 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.892692732 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.893655019 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.896490936 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.894450077 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.894169914 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.894512842 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.894273761 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.894007591 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.894897607 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.893987392 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.894103932 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.894368409 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.89431758 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.894160769 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.894637984 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.894199564 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.89555013 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.893937097 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.89430594 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.895328089 seconds)
  done (took 43.49983357 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.894109504 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.89399919 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.910454413 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.918046477 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.92017389 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.938272611 seconds)
  done (took 13.30106659 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.896182024 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.896921611 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.896549802 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.89712937 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.894802195 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.89719964 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.897952795 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.90061079 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.895678859 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.898536799 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.894975383 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.897157258 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.898065686 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.896997018 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.896030464 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.895910965 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.897765905 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.89642945 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.896319686 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.896542495 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.896045312 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.897762783 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.896704791 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.896821222 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.899488841 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.897781501 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.898194709 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.899519897 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.898150235 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.896863691 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.898520295 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.899393195 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.896616515 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.901313022 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.899849166 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.898374159 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.900009319 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.899398032 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.899074508 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.899906519 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.898720681 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.898556288 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.897557409 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.8981546 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.898609353 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.899959084 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.90146462 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.898834942 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.900943857 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.902850428 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.901390576 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.900403328 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.900754954 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.899832027 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.900511513 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.900380152 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.899364657 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.899590294 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.900816598 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.903345363 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.898691852 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.899498646 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.900409534 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.899595701 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.898081106 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.899083423 seconds)
  done (took 127.132289899 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.900112539 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.900238887 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.900797105 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.899761539 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.900998057 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.899544717 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.900814146 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.897935434 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.900654599 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.902182848 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.903598989 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.901447387 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.906166814 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.900333702 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.899668235 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.898947452 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.900255937 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.89953147 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.900517711 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.899953341 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.899244363 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.899572555 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.901908376 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.900704656 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.900878114 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.899439508 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.899349851 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.902816095 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.900163032 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.901462922 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.90181558 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.903731583 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.902691511 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.900700545 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.90080483 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.902430558 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.901540687 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.902366262 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.902111784 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.90070623 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.900832524 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.902809244 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.901841861 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.902518505 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.904789619 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.905356921 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.90145898 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.905923114 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.901208201 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.902118462 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.902229874 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.902827798 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.902216821 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.90127927 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.902371924 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.902101134 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.903362544 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.903365865 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.903061098 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.90254605 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.904997996 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.903676203 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.905713673 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.904369144 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.903278358 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.902523624 seconds)
  done (took 127.348547991 seconds)
done (took 2605.738787105 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.998462415 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.976823113 seconds)
  done (took 15.810236583 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.069990445 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.026006317 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.91183797 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.9486143 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.908968342 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.92012109 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.929194697 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.911537143 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.909973187 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.909849057 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.911997004 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.097997177 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.932240275 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.90970579 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.911022288 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.004071153 seconds)
  done (took 53.060302901 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.915864495 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.910786182 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.923129735 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.91174447 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.913777845 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.928243878 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.941349855 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.918943376 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.951606561 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.929079855 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.983274304 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.928421925 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.916333689 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.964019359 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.930935631 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.92827915 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.010568982 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.993762605 seconds)
  done (took 36.735592332 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.997161217 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.947077663 seconds)
  done (took 10.785659304 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.931675013 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.922812242 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.912746434 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.906311082 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.915017394 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.921484557 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.917444231 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.91692497 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.903180504 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.918195616 seconds)
  done (took 71.024457069 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.914059458 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.912398459 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.912002939 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.908137845 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.906505745 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.914985684 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.908193967 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.912012285 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.619547799 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.95272914 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.922855055 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.918588807 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.910195249 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.910609732 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.907794552 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.932664929 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.076304616 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.90695324 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.907447747 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.916130469 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.910567197 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.997035977 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.92634145 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.911266198 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.945746183 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.610730415 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.925345634 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.916670412 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.08114757 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.907452698 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.910446212 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.121255343 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.918861672 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.281067097 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.227798834 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.91884178 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.920246637 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.916606538 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.906414268 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.092034739 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.911825224 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.91612706 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.783047183 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.20079862 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.001265914 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.955010149 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.294789056 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.915621044 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.910119163 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.943107285 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.91365006 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.912018791 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.930892417 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.42034801 seconds)
  done (took 135.363254609 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.907860918 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.159289327 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.062058713 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.912565599 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.165642403 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.125563878 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.910989757 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.955422248 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.913592827 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.106925397 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.162290939 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.012100904 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.913260306 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.90760052 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.913141413 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.906817011 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.056192772 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.978565001 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.912213589 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.910066999 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.932604901 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.110130119 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.032597428 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.91252759 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.936108342 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.118865523 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.032173999 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.014220153 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.775314097 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.911495675 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.973701961 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.91352186 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.917168005 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.909810974 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.067741424 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.009144267 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.993278485 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.914499748 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.910940198 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.910254327 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.589008058 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.114117566 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.007833922 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.032518001 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.164334959 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.128227781 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.597021409 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.909462948 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.551137856 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.077256383 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.116892601 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.115489826 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.031489475 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.915087696 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.207865881 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.910017266 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.9106436 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.13712256 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.135928859 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.013810638 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.915508165 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.91257067 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.911744934 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.151141536 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.916222555 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.002710417 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.916762479 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.911076899 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.005012022 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.013658351 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.138669447 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.13625991 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.94422026 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.25699113 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.453821776 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.11533245 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.980369327 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.137138211 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.91617789 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.91137734 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.988196474 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.781790413 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.164778341 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.154933754 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.11205767 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.943890355 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.543924419 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.911021714 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.099168693 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.098187709 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.148859579 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.158827934 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.150557729 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.460046849 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.913165695 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.911792131 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.267410924 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.027401624 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.909146869 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.254497355 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.147111679 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.405485808 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.940076751 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.202391324 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.043207153 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.918105288 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.557503261 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.914419553 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.121834896 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.951505587 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.915073598 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.915681932 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.103175093 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.822308999 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.91483606 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.633352894 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.974850197 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.917671941 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.117405762 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.919006117 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.162085528 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.917254162 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.14788433 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.067166488 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.94513012 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.091533863 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.162087986 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.572398021 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.159203366 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.159512369 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.031307712 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.144199936 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.728253059 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.917973556 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.176808734 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.919810138 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.915881958 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.081321514 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.916946315 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.060641117 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.921669648 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.185374129 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.937627782 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.146140566 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.921906519 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.150227665 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.949854932 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.968171299 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.920579701 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.044913542 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.917004188 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.750545893 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.076443333 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.919816635 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.916902811 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.514893828 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.919104531 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.066444291 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.143085982 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.939482165 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.987636335 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.458737939 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.91698157 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.998409169 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.940801326 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.219763227 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.919322716 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.167342715 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.890813721 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.390531592 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.91786206 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.153756712 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.106430752 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.919128642 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.918460452 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.760452726 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.916576912 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.916925195 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.072167408 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.260325134 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.710632951 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.118760231 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.921241136 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.047329627 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.921262268 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.266695201 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.249938554 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.917035886 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.916401211 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.918845117 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.920126626 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.91971034 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.131113299 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.946344038 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.354384098 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.053988334 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.173510106 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.222478485 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.117448067 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.960970051 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.926349127 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.149769165 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.924092502 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.982479893 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.923806244 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.938908551 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.150600618 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.923310207 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.126534596 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.155355993 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.794652856 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.967827104 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.923801348 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.922139198 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.856181558 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.065912061 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.011304087 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.923106355 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.919151576 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.033760576 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.042395048 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.102290684 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.639264957 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.126188425 seconds)
  done (took 911.523401676 seconds)
done (took 1236.134587213 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.922610563 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.919435029 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.924782289 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.924165942 seconds)
  done (took 29.540588895 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.927913847 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.923427535 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.923780709 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.921897835 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.921585343 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.919918055 seconds)
  done (took 13.390031445 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.919762961 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.921257882 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.924289468 seconds)
  done (took 22.61633226 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 2.000021436 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.3434193 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.068780795 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.366996891 seconds)
  done (took 10.630461683 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.929034709 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.923870726 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.922699084 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.92393259 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.927654321 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.928045232 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.922898252 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.923998247 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.927756297 seconds)
  done (took 19.182714438 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.926790812 seconds)
done (took 101.135652115 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.616522949 seconds)
    (2/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.923797183 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.94006371 seconds)
    (4/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.120355699 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.943433677 seconds)
    (6/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.001499032 seconds)
    (7/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.673290274 seconds)
    (8/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.22750632 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.949335942 seconds)
    (10/309) benchmarking ("sort", Float64, false)...
    done (took 5.631999083 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.94312134 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.250820368 seconds)
    (13/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.592742133 seconds)
    (14/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.217369854 seconds)
    (15/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.025038057 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.310658566 seconds)
    (17/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.076816278 seconds)
    (18/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.30774753 seconds)
    (19/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.938025916 seconds)
    (20/309) benchmarking ("sort", BigInt, false)...
    done (took 6.924921112 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.062306781 seconds)
    (22/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.044209621 seconds)
    (23/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.763707698 seconds)
    (24/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.289048505 seconds)
    (25/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.315409 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.320146561 seconds)
    (27/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.157261713 seconds)
    (28/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.287227018 seconds)
    (29/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.925350891 seconds)
    (30/309) benchmarking ("map", abs, Int64, false)...
    done (took 3.775076725 seconds)
    (31/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.012902167 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.277843023 seconds)
    (33/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.927545251 seconds)
    (34/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.926208745 seconds)
    (35/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.168927728 seconds)
    (36/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.927103583 seconds)
    (37/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.92772979 seconds)
    (38/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.045752457 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.086497157 seconds)
    (40/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.004293225 seconds)
    (41/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.021176704 seconds)
    (42/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.936085414 seconds)
    (43/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.809709474 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.520270634 seconds)
    (45/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.032250814 seconds)
    (46/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.938716791 seconds)
    (47/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.925574755 seconds)
    (48/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 8.540328963 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.799664547 seconds)
    (50/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.352600512 seconds)
    (51/309) benchmarking ("sort", Bool, false)...
    done (took 2.141166518 seconds)
    (52/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.402026211 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.32965632 seconds)
    (54/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.279795934 seconds)
    (55/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.936315568 seconds)
    (56/309) benchmarking ("sort", Int64, false)...
    done (took 5.534621904 seconds)
    (57/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.605218085 seconds)
    (58/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.033243609 seconds)
    (59/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.052327089 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.174886704 seconds)
    (61/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.073810791 seconds)
    (62/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.260332682 seconds)
    (63/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.950132507 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.901055862 seconds)
    (65/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.038170104 seconds)
    (66/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.017264403 seconds)
    (67/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.925091887 seconds)
    (68/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.195811303 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.929560539 seconds)
    (70/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.298967724 seconds)
    (71/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.013006846 seconds)
    (72/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.863694556 seconds)
    (73/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.472903901 seconds)
    (74/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.944249352 seconds)
    (75/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.307712053 seconds)
    (76/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.230164636 seconds)
    (77/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.069610762 seconds)
    (78/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.833549135 seconds)
    (79/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.929616697 seconds)
    (80/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.08350577 seconds)
    (81/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.116176533 seconds)
    (82/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.929028103 seconds)
    (83/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.369857614 seconds)
    (84/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.578651426 seconds)
    (85/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.168914888 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.056442943 seconds)
    (87/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.023331594 seconds)
    (88/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.926376084 seconds)
    (89/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.383621669 seconds)
    (90/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 2.006597909 seconds)
    (91/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.92711141 seconds)
    (92/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.199401399 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.265886538 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.928503247 seconds)
    (95/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.162381891 seconds)
    (96/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.047206916 seconds)
    (97/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.7159795 seconds)
    (98/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.999879235 seconds)
    (99/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.233226863 seconds)
    (100/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.969163807 seconds)
    (101/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.942604263 seconds)
    (102/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.063321935 seconds)
    (103/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.008938223 seconds)
    (104/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.926928975 seconds)
    (105/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.943747188 seconds)
    (106/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.129695812 seconds)
    (107/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.237749625 seconds)
    (108/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.012020434 seconds)
    (109/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.449608112 seconds)
    (110/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.193016793 seconds)
    (111/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.944869442 seconds)
    (112/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.027748994 seconds)
    (113/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.929371528 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 4.368435456 seconds)
    (115/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.954131108 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.224053759 seconds)
    (117/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.926491081 seconds)
    (118/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 3.732196146 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.702656788 seconds)
    (120/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.730411825 seconds)
    (121/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.106762316 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.957880635 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.219439468 seconds)
    (124/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.934206274 seconds)
    (125/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.94682858 seconds)
    (126/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.68798773 seconds)
    (127/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.930723048 seconds)
    (128/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.339350449 seconds)
    (129/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.94674953 seconds)
    (130/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.003919222 seconds)
    (131/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.062447196 seconds)
    (132/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.178109598 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.18496811 seconds)
    (134/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.832790998 seconds)
    (135/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.934134794 seconds)
    (136/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.698498222 seconds)
    (137/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.635926371 seconds)
    (138/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.933999448 seconds)
    (139/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.929136043 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.245417083 seconds)
    (141/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.38096684 seconds)
    (142/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.17269409 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.957362724 seconds)
    (144/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.390430928 seconds)
    (145/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.944093422 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.728906179 seconds)
    (147/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 7.020599643 seconds)
    (148/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.980972886 seconds)
    (149/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.412719226 seconds)
    (150/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.938511216 seconds)
    (151/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.94119257 seconds)
    (152/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.608548877 seconds)
    (153/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.9640757 seconds)
    (154/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.219040024 seconds)
    (155/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.039339781 seconds)
    (156/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.95332594 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.169387711 seconds)
    (158/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.935782363 seconds)
    (159/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 10.354691425 seconds)
    (160/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.155164756 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.93790907 seconds)
    (162/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.247232297 seconds)
    (163/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.184307594 seconds)
    (164/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.935905557 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.889439221 seconds)
    (166/309) benchmarking ("sort", Float32, false)...
    done (took 5.595759422 seconds)
    (167/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.920906275 seconds)
    (168/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.226647962 seconds)
    (169/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.939997018 seconds)
    (170/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.207223454 seconds)
    (171/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.200870086 seconds)
    (172/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.200503297 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.288337974 seconds)
    (174/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.240173108 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.938099273 seconds)
    (176/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.28330884 seconds)
    (177/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.938544784 seconds)
    (178/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.135905771 seconds)
    (179/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.044852082 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.25938261 seconds)
    (181/309) benchmarking ("sort", Int8, false)...
    done (took 4.871000307 seconds)
    (182/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.252359836 seconds)
    (183/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.030948826 seconds)
    (184/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.93612473 seconds)
    (185/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 7.013552628 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.084794833 seconds)
    (187/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.943723716 seconds)
    (188/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.934314769 seconds)
    (189/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.671690894 seconds)
    (190/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.210867753 seconds)
    (191/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.025698065 seconds)
    (192/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.946607432 seconds)
    (193/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.991447603 seconds)
    (194/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.320281664 seconds)
    (195/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.1402556 seconds)
    (196/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.013243053 seconds)
    (197/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.225841017 seconds)
    (198/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.17941001 seconds)
    (199/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.646695148 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.191264623 seconds)
    (201/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.937009919 seconds)
    (202/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.944649028 seconds)
    (203/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.299023041 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.334752949 seconds)
    (205/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.558733663 seconds)
    (206/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.225793515 seconds)
    (207/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.933164163 seconds)
    (208/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.135225613 seconds)
    (209/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.938070508 seconds)
    (210/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.495610056 seconds)
    (211/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.935933953 seconds)
    (212/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.941849526 seconds)
    (213/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 4.1651445 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.821772839 seconds)
    (215/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.720926163 seconds)
    (216/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.092858969 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.530849745 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.845367599 seconds)
    (219/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.053866823 seconds)
    (220/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 2.0266067 seconds)
    (221/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.946168611 seconds)
    (222/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.040970873 seconds)
    (223/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.069789207 seconds)
    (224/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.328936835 seconds)
    (225/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.066160799 seconds)
    (226/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.078579783 seconds)
    (227/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.311774213 seconds)
    (228/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.033541286 seconds)
    (229/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.733945468 seconds)
    (230/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.221285442 seconds)
    (231/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.489011386 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.088829527 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.034584837 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.247790619 seconds)
    (235/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.073046643 seconds)
    (236/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.96107247 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.934375921 seconds)
    (238/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.344886166 seconds)
    (239/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.256764615 seconds)
    (240/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.213992666 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.899301686 seconds)
    (242/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 2.063813385 seconds)
    (243/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.014577469 seconds)
    (244/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.937152527 seconds)
    (245/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 3.628146383 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.83967375 seconds)
    (247/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.013427346 seconds)
    (248/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.050885629 seconds)
    (249/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.044278797 seconds)
    (250/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.072576289 seconds)
    (251/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.946521186 seconds)
    (252/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.574690754 seconds)
    (253/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.809731152 seconds)
    (254/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.365437695 seconds)
    (255/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.699455442 seconds)
    (256/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.041091428 seconds)
    (257/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.940675256 seconds)
    (258/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.953937839 seconds)
    (259/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.936364806 seconds)
    (260/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.420713545 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.841249208 seconds)
    (262/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.041647617 seconds)
    (263/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.186640321 seconds)
    (264/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.141606749 seconds)
    (265/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.365023799 seconds)
    (266/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.936635054 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.602690645 seconds)
    (268/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.117309068 seconds)
    (269/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.123257922 seconds)
    (270/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.271085335 seconds)
    (271/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.961104373 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.060323734 seconds)
    (273/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.835423609 seconds)
    (274/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.23871832 seconds)
    (275/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.029077626 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.268140972 seconds)
    (277/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.32878252 seconds)
    (278/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.229186066 seconds)
    (279/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.139979614 seconds)
    (280/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.942199783 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.083092072 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.258678503 seconds)
    (283/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.340654878 seconds)
    (284/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.072619308 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.077460475 seconds)
    (286/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.949839354 seconds)
    (287/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.023617192 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.188215201 seconds)
    (289/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.046822562 seconds)
    (290/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.326751252 seconds)
    (291/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.960369651 seconds)
    (292/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.086548583 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.836743995 seconds)
    (294/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.937895065 seconds)
    (295/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.99170731 seconds)
    (296/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.190309901 seconds)
    (297/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.195500785 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.955488788 seconds)
    (299/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.952381779 seconds)
    (300/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.942547068 seconds)
    (301/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.432492283 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.152234341 seconds)
    (303/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.240318363 seconds)
    (304/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.948886477 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.77563806 seconds)
    (306/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.94841615 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.169126759 seconds)
    (308/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.022394067 seconds)
    (309/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.09323276 seconds)
  done (took 1031.751146568 seconds)
done (took 1033.666713155 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.967320448 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.96209982 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.943238092 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.965588434 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.057905272 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.989092638 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.957618277 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.949472598 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.995587566 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.993908486 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.943382062 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.986567569 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.946753757 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.946158395 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.944459207 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.961153185 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.255620639 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.980778154 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.96397055 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.956917256 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.963336124 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.944438101 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.996300296 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.986333345 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.95140391 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.950474517 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.95058322 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.966427765 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.062951294 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.950602808 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.95238488 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.95951941 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.255911549 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.978948812 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.944078527 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.965833198 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.95963042 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.958518855 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.951857717 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.979231836 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.410482468 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.952892775 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.947696637 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.947866088 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.946310176 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.955567476 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.948007835 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.954816493 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.963019691 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.964072738 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.405246089 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.970774179 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.951885988 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.947275002 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.960719121 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.947775801 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.951849415 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.964391213 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.968576279 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.963810256 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.244128183 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.990543878 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.951581957 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.966942018 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.956637379 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.440829459 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.954329105 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.957147621 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.412145111 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.963036837 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.441629594 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.965146326 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.949347447 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.96526041 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.981672749 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.258626739 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.980026318 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.947715692 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.958726216 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.947237256 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.961506709 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.963980353 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.95612667 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.950518072 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.96369901 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.993884547 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.962897212 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.952519389 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.964166058 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.969845328 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.960160271 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.963324611 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.957774462 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.948099931 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.964546026 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.954215893 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.953881815 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.956095386 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.956034787 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.965168868 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.411569977 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.976944354 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.949164518 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.94873702 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.953512703 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.966447005 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.410086857 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.960745617 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.975287136 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.999566067 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.954471988 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.24768022 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.989756528 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.968749022 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.96423296 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.953675457 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.950224727 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.249373706 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.445198844 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.974148584 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.951643198 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.951534515 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.970707316 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.952283576 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.948758586 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.260339765 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.989365791 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.968715614 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.075543247 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.965079178 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.984162687 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.951227272 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.957143117 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.999834924 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.971153553 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.987514434 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.955119211 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.96930864 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.972006337 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.951547096 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.966310592 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.967759518 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.953587771 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.961957209 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.950786742 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.997782519 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.972883146 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.969348984 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.976193084 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.077501565 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.952179863 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.251021217 seconds)
done (took 306.624278893 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.037390469 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.949667102 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.043631814 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.949470948 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.044639662 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.035797568 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.95182691 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.949487622 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.951949161 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.464457269 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.952237409 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.957071354 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.95259286 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.950793305 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.026842906 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.953014756 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.951939627 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.249760299 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.951912116 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.036644242 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.949957697 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.953007295 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.950259895 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.466975046 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.953300289 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.954403413 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.047685407 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.951417318 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.245726944 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.953796754 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.95456421 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.245515621 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.042347483 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.964947675 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.964914523 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.960431813 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.054885903 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.96823466 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.023969368 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.025869062 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.045355014 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.987070411 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.954077185 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.950670489 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.958020006 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.954693522 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.956717775 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.984726463 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.952662076 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.959224525 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.238658567 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.959237136 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.962209704 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.955339741 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.955103666 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.967772873 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.955465978 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.954506467 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.040299261 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.958182154 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.02614696 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.472224909 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.492572372 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.95571757 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.954393906 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.95446041 seconds)
  done (took 190.379333041 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.02269415 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.028268036 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.0233393 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.961600423 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.007531991 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.024593322 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.963443438 seconds)
  done (took 15.913514137 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.963116502 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.954688384 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.015144404 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.017314254 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.958085189 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.135372723 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.966360317 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.959130184 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.982231401 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.954546663 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.60258427 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.017037396 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.962383886 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.954063522 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.96736309 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 2.021286676 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.958283787 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.958424292 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.063654768 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.105132565 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.962190106 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.964906002 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.983114752 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.970760621 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.958722058 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.961406713 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.957666426 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.9679095 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.960091305 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.961304048 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.959054837 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 2.022099182 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.962639977 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.959045195 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.960446152 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.958059137 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.964053895 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.961033389 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.960319887 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.959818879 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.957428685 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.959389578 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.959978252 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.959256403 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.96112887 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.984405812 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.960198811 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.959040495 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.96011697 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.964032646 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.988796066 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.961184375 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.960743185 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.964794952 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.00248478 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.970223866 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.961269218 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.958080158 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.96045055 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.962413582 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.958699038 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.108797068 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.020685874 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.964893808 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.022097472 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.114971081 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.962436855 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.957938779 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.960862365 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.056019683 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.961500604 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.023766372 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.96081142 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.08301023 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.960276103 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.14196227 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.984480884 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.964463628 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.969099233 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.960926676 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.973801395 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.965320878 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.96616364 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.968454851 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.969233193 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.963542196 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.962978961 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.962327541 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.968057863 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.962709673 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.017497524 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.960798921 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.969679297 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.102474676 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.963112502 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.071966667 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.987452942 seconds)
  done (took 214.907380099 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.97267836 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.974282069 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.966805807 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.981201491 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.962085913 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.965088395 seconds)
  done (took 13.71040262 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.969380637 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.970140505 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.967043727 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.96745049 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.966834824 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.966074003 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.96320687 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.966984712 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.972641058 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.965432523 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.964382121 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.968608375 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.968081426 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.963116906 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.964630195 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.966009349 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.966126679 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.965878141 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.9659164 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.966081566 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.099359978 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.965955058 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.96366357 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.973837965 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.974154426 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.96637169 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.978701292 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.969290508 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.967383071 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.977533621 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.973114438 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.969158877 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.979270094 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.972117168 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.976582451 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.974736458 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.968981248 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.966998751 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.964495078 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.969634164 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.968195913 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.967388444 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.966422878 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.968495279 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.969718246 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.981911146 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.975319454 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.98716023 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.970571134 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.973841527 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.970740034 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.973378978 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.967362442 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.968998359 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.977308812 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.978014829 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.975336863 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.971077919 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.968038989 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.976861423 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.973163993 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.966500614 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.974576164 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.975252458 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.977179968 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.9707947 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.975696507 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.97289052 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.970075584 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.970301565 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.970400595 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.970570951 seconds)
  done (took 144.900310381 seconds)
done (took 581.710598866 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.045716849 seconds)
  done (took 8.941227187 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.070461421 seconds)
  done (took 9.057388456 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.87337645 seconds)
  done (took 10.773116662 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.98230657 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.019101415 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.991370083 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.981667078 seconds)
  done (took 29.885503376 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.246169815 seconds)
  done (took 9.146130698 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.984155794 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.966355903 seconds)
  done (took 15.921841573 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.105084653 seconds)
  done (took 9.003232867 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.110282041 seconds)
  done (took 9.029887281 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.982734406 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.985190122 seconds)
  done (took 15.889783164 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.976119768 seconds)
  done (took 8.878548439 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.896717367 seconds)
  done (took 9.88210364 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.988635317 seconds)
  done (took 8.912063291 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.058087761 seconds)
  done (took 8.95632945 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.131906661 seconds)
  done (took 9.034681069 seconds)
done (took 165.209198344 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.979216056 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.977099274 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.970910448 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.973041083 seconds)
  done (took 29.795859207 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 2.011166193 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 2.00768931 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 2.014657276 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 2.006803799 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.998508727 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 2.000965574 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 2.009834767 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.009427199 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 2.003515013 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 2.005721773 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.009774264 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 2.008211762 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 2.012309379 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 2.024404673 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 2.021374826 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 2.005266346 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 2.01303615 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 2.014814899 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 2.001971535 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 2.018541486 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 2.012038976 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 2.01135885 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.976552832 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.97441826 seconds)
  done (took 50.072199184 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.163017403 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.044287639 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.135323632 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.022775891 seconds)
  done (took 10.267334285 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.976964772 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.041138065 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 2.023601571 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 2.021401153 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.061350156 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.076668741 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 2.030369531 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.21032273 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.093110345 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.156398517 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.982585479 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 2.00116866 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 2.002931806 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 2.02479398 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.075921851 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.975887525 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.973057271 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.093363314 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 2.045260053 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.187346986 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.97406177 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 2.034433823 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.064986306 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 2.033359486 seconds)
  done (took 51.061532676 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.977699709 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.990199025 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.985609302 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.980070077 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.9788153 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.983103913 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.986265014 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.98075409 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 2.001603291 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.981072748 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.974573531 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.976531952 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.981517003 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.979726358 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.97656355 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.993953023 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.997943973 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.978656451 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.981918744 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.986016876 seconds)
  done (took 41.576645523 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.97747115 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.824315056 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.319993385 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.229042992 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.978471355 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.980862242 seconds)
  done (took 32.217962965 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.992650242 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.987583541 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.979629777 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.034617359 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.116254579 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.987744927 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.980564557 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.989520316 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.026464489 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.048450183 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.999224659 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 2.009058733 seconds)
  done (took 26.060595015 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.977921887 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.980401228 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.986512113 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.989325706 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.995802781 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.991910623 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.986053994 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.980913758 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.996216663 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.997659171 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.990253426 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.995060234 seconds)
  done (took 45.778077885 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.196492367 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.204293991 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.199060662 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.586572974 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.982022777 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.877078251 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.606243307 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.635395428 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.272320463 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.96306744 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.941203966 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.869211089 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.222989241 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.980657261 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.233063213 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.904595039 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.98037192 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.251442104 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.982954462 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.98656604 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.316626857 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.035371453 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.191986235 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.028833682 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.194979176 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.459478303 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.232052456 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.235791971 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.323616643 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 7.03541479 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.186503005 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.034359709 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.990126883 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.99558777 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.985101362 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.994705063 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.25414718 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.98250516 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.984519783 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.970706493 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.905477235 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.290269546 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.092657379 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.536936894 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.105713278 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.225855569 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.986171523 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.183504374 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.044913238 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.230447348 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.087666434 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.196348658 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.908762475 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.293520332 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.108920497 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.985304041 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.985721616 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.684093719 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.221950512 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.067471007 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.290588408 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.094807852 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.986020091 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.075790576 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.986286795 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.087559839 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.355007468 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.989353282 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.979883292 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.990251994 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.081791495 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.19754842 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.984968278 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.986364988 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 2.003616871 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.986889493 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.342643356 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.553779964 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.983661609 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.554373173 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.515138809 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.955101815 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.480482571 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.027506374 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.287543361 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.215017566 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.238552254 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.232149561 seconds)
    (89/481) benchmarking "5d"...
    done (took 3.871084586 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.98753212 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.791950722 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.06663476 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.062810467 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.985544973 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.184126468 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.28331888 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.100098431 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.984765537 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.91563467 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.997999195 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.187489514 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.461858596 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.044815761 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.987364298 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.986017967 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.991580688 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.984749118 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.999741151 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 2.000594689 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.513610911 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.264888537 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.090336021 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.237915147 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.978474216 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.725732851 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.260503451 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.117175699 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.55813991 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.121618675 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.988567052 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.132932839 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.999100578 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.988571285 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.361008456 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.508304805 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.188390639 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.233053887 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.026371611 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.023255815 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.99715106 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.070274123 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.206557118 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.987008298 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.231837124 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.231102848 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.667706871 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.023484398 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.06396993 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.995997895 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.203834136 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.070891028 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.538517447 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.204922172 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.570409322 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.985979719 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.493367059 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.233736184 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.372379266 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.007642108 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.190826803 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.023651923 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.687672495 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.914793596 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.995725515 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.324458267 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 7.034783542 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.087296188 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.991631245 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.99231299 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.997030773 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.068777764 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.059301905 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.063898684 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.917593673 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.993678569 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.992616062 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.992133644 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.534144871 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.628158424 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.282423587 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.991165206 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.050455968 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.994020963 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.605554774 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.994413896 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.111350969 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.995653696 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.733711786 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.020176237 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.248892185 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.43723901 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.103290822 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.992120496 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.00086915 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.689992592 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.000712636 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.691334734 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.277466296 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.989772247 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.434225688 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.050871074 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.244973233 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 2.01007419 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.991107214 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.990274961 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.992896378 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.192754476 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.499248876 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.30899004 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.338168157 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.078504989 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.26532396 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.170209562 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.481506924 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.68782011 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.500117941 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.217523854 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.994117005 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.992705264 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.647416987 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.999957471 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.207013687 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.193933309 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.264717044 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.289442527 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.403848417 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.993610455 seconds)
    (218/481) benchmarking "4d"...
    done (took 3.006303554 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.242343937 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.992670718 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.425806879 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.032948628 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.327995989 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.801320602 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.251397556 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 2.056160867 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 2.003393625 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.645386782 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.117805577 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.95346444 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.111078935 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.917872773 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.640126381 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.288118283 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.278450078 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.973729256 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.328973593 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.287055027 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.243188305 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.63210215 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.996952855 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.045214507 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.080711006 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.003029804 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.550471983 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.038408112 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.039584205 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.999088131 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.996072525 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.999341845 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.726927472 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.072408865 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.111761573 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.737737542 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.514698011 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.910628229 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.270481262 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.051683319 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.442261261 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.037864629 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.21130912 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.000500532 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.602702986 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.050304586 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.267995237 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.953947461 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.210249751 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.201983301 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.029523111 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.004858434 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.925917656 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.882425777 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.001380713 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.204186567 seconds)
    (275/481) benchmarking "3d"...
    done (took 2.882279769 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 1.998585894 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.304978984 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.656598252 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.038678636 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.002827364 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.327527753 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.388690426 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.274135744 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.010517494 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.208927056 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.122848254 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.916477381 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.49563045 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.581781251 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.695414638 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 2.012060187 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.20061123 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.309190703 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.31287522 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.041074091 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.07485114 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.274724283 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.978749804 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.998385202 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.519453329 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.095570422 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.24479003 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.309962224 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.523113917 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.358065286 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.406618524 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.062303878 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.211926233 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.366950268 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.24901835 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.0027509 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.098207193 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.212192547 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.283090103 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.887557126 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.707483861 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.248968387 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 2.003265232 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.948009977 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.210031808 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.499501489 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.392901 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.540467821 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.213825437 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.033932205 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.494992345 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.019725623 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.946077668 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.00432832 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.960402189 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.219029062 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.210737459 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.044526316 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.570046203 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.260512569 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.411897535 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.279733834 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.043785707 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.924491713 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.643784674 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.950009255 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.037154887 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.039299568 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.073795243 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.998846079 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.203998407 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.444220156 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.050773575 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.55462608 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.20595944 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.301093741 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.277678297 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.309603626 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.965855922 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.271475414 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.957488593 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.65506766 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.095452671 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.097099477 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.004730181 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.003272851 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.269421016 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.314954482 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.595203273 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.03940392 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.325509561 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.103025693 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.000405552 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.009645918 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.487480161 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.241778129 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.216887889 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.079567531 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 7.130740754 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.076288953 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.518565976 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.00591578 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.004488601 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.130391949 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.003138038 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.667592305 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.310456472 seconds)
    (383/481) benchmarking "6d"...
    done (took 3.747801139 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.204772463 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.523873685 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.89352283 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.212209466 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.050650542 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.007912291 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 7.004103411 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.009980328 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.241812178 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.273432036 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.764364322 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.011647166 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.00168457 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.882920651 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.627485048 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.242126379 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 7.01587117 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.061994492 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.011065874 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.105472715 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.004932745 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.259341257 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.056051161 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.001925135 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.011467255 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.212316076 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.516377633 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.019633086 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.70433606 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.209086149 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.008109888 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.493963393 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.456446765 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.277344422 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 2.051228621 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.217351125 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.255593138 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.521269918 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.215439442 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.001558221 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.231150616 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.008161719 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.275559499 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.276383678 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 2.010090152 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.215428635 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.496020252 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.29887918 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.014928717 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.883951683 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.011711156 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.271034556 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.05481844 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.002086701 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.01216176 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.549828807 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.66050449 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.477601106 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.165206739 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.312529312 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.739640938 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.76352557 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.007922294 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 2.010065065 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.632598349 seconds)
    (449/481) benchmarking "2d"...
    done (took 2.745508686 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.220585873 seconds)
    (451/481) benchmarking "7d"...
    done (took 2.29414401 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.958772722 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.210704164 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.717026432 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 7.010042561 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.274919281 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.939478186 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.010165616 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.645895885 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.286800723 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.959563266 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.01807354 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.595937423 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 7.009008881 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.093938459 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.010798922 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.129539015 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.276737932 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.358443312 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 2.124577718 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.660438842 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.653680771 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.950225135 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.056620844 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.814702873 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.581734317 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.653585088 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.035493344 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.027530924 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.935499748 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.012660035 seconds)
  done (took 1708.908815806 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.03750664 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.091530844 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.061368488 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.067679906 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.093698528 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.112540826 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.058979334 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 7.034556958 seconds)
  done (took 58.495126043 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 7.007168829 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.026651366 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 2.018090315 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.01056618 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.033594986 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 7.023046486 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.168546983 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.024318861 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.015881257 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 2.018935772 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 7.011536514 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 7.007530744 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.283035301 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.032876372 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 7.014095936 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.012745518 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.016294122 seconds)
  done (took 76.668994732 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.009430639 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.34610128 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.067633604 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.01095338 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.948406392 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.026591153 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.211327345 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.053550138 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.017183895 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.172063209 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.317127521 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.021723797 seconds)
  done (took 92.140976764 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.018685538 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 2.01133901 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.011514741 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 2.01544257 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 2.014344713 seconds)
  done (took 12.014073093 seconds)
done (took 2237.025393877 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.256067613 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.066858729 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.114191217 seconds)
  done (took 6.115204959 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.155577685 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.211283183 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.356204982 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.084140671 seconds)
  done (took 10.75648636 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.273144825 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.404913401 seconds)
  done (took 6.618023497 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.385341984 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.031822073 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.419967676 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 7.017809612 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.01484721 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.018158054 seconds)
  done (took 22.994278771 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.014881726 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.011453903 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.01077592 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.016412085 seconds)
  done (took 9.994826824 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 7.015521948 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.690504024 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 7.015977645 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.024192661 seconds)
  done (took 21.684529713 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.150046982 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.025633651 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.152625305 seconds)
  done (took 8.267757333 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.233230164 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.022668222 seconds)
  done (took 7.191829106 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.14995105 seconds)
  done (took 4.088346565 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.042193666 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.292582544 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.492334251 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.97029359 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.646884629 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.098691593 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.391361683 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.296571607 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.416870456 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.477340389 seconds)
  done (took 27.067031357 seconds)
done (took 140.805415073 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.559307176 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.06478134 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.217862142 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.412528772 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.251500795 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.21421159 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.284741685 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.403652185 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.104615995 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.112910993 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.417087809 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.251160518 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.235528002 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.057071244 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.246202532 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.063104468 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.246501445 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.425971151 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.069805507 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.329627574 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.296426273 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.044963303 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.238754702 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.057348 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.247861371 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.173068873 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.600721346 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.062223681 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.23807992 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.600467175 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.173704649 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.489728435 seconds)
  done (took 174.13184574 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.018290992 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.02207236 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.013611106 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.01801432 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.34770929 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.01974934 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.01917089 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.021276788 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.308498416 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.280490975 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.01883558 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.323137493 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.017477561 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.019382413 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.021813611 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.020583983 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.452502436 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.020091582 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.023770294 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.01962717 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.02419093 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.183151322 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.018489739 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.192638699 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.423545472 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.019727229 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.022020274 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.017383925 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.020158914 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.01748465 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.020427809 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.021322739 seconds)
  done (took 212.931299051 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.017986197 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.018886494 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.020150814 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.019752094 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.022251387 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.025415233 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.024120006 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.017991503 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.686099195 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.668696472 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.02384982 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.019533972 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.022930252 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.021461213 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.022171017 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.023140809 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.022638902 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.021374899 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.020159203 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.02119584 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.022637537 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.659949319 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.021195322 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.694811024 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.020086202 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.026843831 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.02402742 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.023447296 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.021445562 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.020780844 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.021220095 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.021862066 seconds)
  done (took 225.263752786 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.264170561 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.022299747 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.023953127 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 3.03837528 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.024502784 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.024891468 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.032273593 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.268893982 seconds)
  done (took 20.647051148 seconds)
done (took 634.92941291 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.420150286 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.799005127 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.165223849 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.047778759 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.306521561 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.091276432 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.042420275 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.10940554 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.891152774 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.118962919 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.449900152 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.050819335 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.845338715 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.071143088 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.165793374 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.10134742 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.411322041 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.729822282 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.186782305 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.760883141 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.207723229 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.974663853 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.126294077 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.941491701 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.474809115 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.01179196 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.08217593 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.417817439 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.044382414 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.200065073 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.705926767 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.335137688 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.062172587 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.042730411 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.097031898 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.074645649 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.265495183 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.059783134 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.161232585 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.768517721 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.748219749 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.771627683 seconds)
  done (took 107.28730379 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.031914264 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.026379902 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.031388209 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.031107423 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.039298378 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.029520451 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.029055056 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.02862237 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.028473119 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.025565229 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.029938882 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.038705867 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.029503914 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.044487722 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.03090181 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.029196787 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.031486759 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.038261102 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.033795288 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.029535415 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.031001346 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.033849101 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.031219548 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.031152553 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.032318152 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.030636969 seconds)
  done (took 54.790296089 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.028065468 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.192806201 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.275942275 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.047852203 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.025595123 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.029714013 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.060560847 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.034817867 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.029999698 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.0307803 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.128434696 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.027603852 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.03957398 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.270151443 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.045488412 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.027252076 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.023433438 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.030917725 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.199077015 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.045827917 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.056662818 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.033054522 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.06041723 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.042680859 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.030619298 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.029622155 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.032715793 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.458091241 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.042089863 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.134771372 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.101915974 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.061287207 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.392146002 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.283186734 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.088261894 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.036564778 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.031392653 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.137382627 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.035007307 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.03148254 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.055438891 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.036046196 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.269277002 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.560261702 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.048961761 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.027843895 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.459918821 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.145196541 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.069162035 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.038791274 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.27870662 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.049178078 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.032390281 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.030718406 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.064180118 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.042871986 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.031801823 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.32709345 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.048379996 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.056850969 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.037882059 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.029109108 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.209080841 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.041268516 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.197146612 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.042469962 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.038443248 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.030402742 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.275526128 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.046262549 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.573414652 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.043535931 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.028583472 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.132236688 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.202062002 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.481564122 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.044406947 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.205843808 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.409052963 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.069243856 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.043939743 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.442725635 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.071794129 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.042531257 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.033558309 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.029814474 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.030429156 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.07395352 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.060279428 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.494601262 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.576076998 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.349806749 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.071395649 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.043257555 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.03195703 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.326811878 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.039658342 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.032668625 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.266728373 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.587703089 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.049366839 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.041240532 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.545033463 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.048971374 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.061023254 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.042751718 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.280996768 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.049202289 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.077302181 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.030651548 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.04026421 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.037577057 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.059429933 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.042156139 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.032111077 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.548583082 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.148947904 seconds)
  done (took 251.262490623 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.031540248 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.029981087 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.026283734 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.030769007 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.032814951 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.032321881 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.03037891 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.030041355 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.037139411 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.031825591 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.030777461 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.03091081 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.032356303 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.030003471 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.07139537 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.031817855 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.519376254 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.033323894 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.030778263 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.033115821 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.593359007 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.03545836 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.034440248 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.030598281 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.034295178 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.031774911 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.040565765 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.064484064 seconds)
  done (took 171.980922162 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.034754846 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.089406865 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.042962614 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.077869145 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.044497304 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.033374492 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.132068838 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.05093776 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.036550739 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.030837844 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.036165829 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.062795665 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.042503437 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.127456468 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.061324992 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.140945729 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.134803041 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.038819176 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.032637446 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.031214235 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.080507852 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.042725788 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.060366948 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.090513 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.044471898 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.083459666 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.044482487 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.031509528 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.032341987 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.147130268 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.0516585 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.061076732 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.069134152 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.052762722 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.150196173 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.148458728 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.141506101 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.134753304 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.039314203 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.033603828 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.029966585 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.035925223 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.087706532 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.047922982 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.033331613 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.151626931 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.04931264 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.03237399 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.030943459 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.028800564 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.045601156 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.052539178 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.068209982 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.157626398 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.07847629 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.057721831 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.134259691 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.15758984 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.033985613 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.133064803 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.040433773 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.146828247 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.053329353 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.036434635 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.036060067 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.034922524 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.078448287 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.150077244 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.134203694 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.041053373 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.131298515 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.089792526 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.048480283 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.035287861 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.035448445 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.089812562 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.148856948 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.090562028 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.098940899 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.072620569 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.044274771 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.035381734 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.035133494 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.064281975 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.038351707 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.149028513 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.152481359 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.042056238 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.03769705 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.034852194 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.032884664 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.062640985 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.101103832 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.072668913 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.145402719 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.074757428 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.076993501 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.042200237 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.047580267 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.03748754 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.073596177 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.045704033 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.048706516 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.315118216 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.07044756 seconds)
  done (took 219.703139791 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.389394003 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.079574954 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.109786101 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.288453491 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.430845706 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.992892003 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.07539904 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.081405568 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.094842969 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.212719127 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.147681669 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.129434338 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.074780754 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.05950729 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.08353421 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.099386752 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.126725902 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.392712023 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.300917058 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.593753389 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.075333444 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.346566028 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.42315649 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.45735732 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.131988664 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.477092742 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.682625672 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.182606663 seconds)
  done (took 67.505882291 seconds)
done (took 874.473716407 seconds)
SAVING RESULT...
DONE!
