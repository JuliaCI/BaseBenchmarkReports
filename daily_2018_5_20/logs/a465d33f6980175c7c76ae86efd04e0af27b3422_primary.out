cset: moving following pidspec: 32610
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.766775332 seconds)
loading group "string"... done (took 0.592700491 seconds)
loading group "linalg"... done (took 9.888894935 seconds)
loading group "parallel"... done (took 0.186516525 seconds)
loading group "find"... done (took 1.688301619 seconds)
loading group "tuple"... done (took 2.233386306 seconds)
loading group "dates"... done (took 1.529660001 seconds)
loading group "micro"... done (took 0.217588123 seconds)
loading group "io"... done (took 0.626182801 seconds)
loading group "scalar"... done (took 48.627907514 seconds)
loading group "sparse"... done (took 14.720175959 seconds)
loading group "broadcast"... done (took 1.292408323 seconds)
loading group "union"... done (took 11.353742611 seconds)
loading group "simd"... done (took 2.833139704 seconds)
loading group "random"... done (took 11.052391452 seconds)
loading group "problem"... done (took 1832.012250642 seconds)
loading group "array"... done (took 26.302065936 seconds)
loading group "misc"... done (took 1.226386012 seconds)
loading group "sort"... done (took 4.072764038 seconds)
loading group "collection"... done (took 20.674886625 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.750661992 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.151026811 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.237736243 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.378680867 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.237947499 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.164936022 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.168223439 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.585967091 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.04722284 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.225916117 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.151360481 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.594355371 seconds)
done (took 6.383503474 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.257982733 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.388007716 seconds)
    (2/2) benchmarking "String"...
    done (took 0.175650479 seconds)
  done (took 1.192996316 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.07222444 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.182628837 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.108442932 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.097239249 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.110220228 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.110357446 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.10979002 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.109366566 seconds)
  done (took 1.458851991 seconds)
done (took 3.619464789 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.535980625 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.865354515 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.597871893 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.162348345 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.321668849 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.42894332 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.340100032 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.203708213 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.108760233 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.107043792 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.175629696 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.403604369 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.486936826 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.012122433 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.105447167 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.09258407 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.129606725 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.77798382 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.076738295 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.131115421 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.581600554 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.213430584 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.109445906 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.114404511 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.195986921 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.116199028 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.175230677 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.102184521 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.658540623 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.130631487 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.199777069 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.095181752 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.157834832 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.245457086 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.223431278 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.105581253 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.672561384 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.199834546 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.097822144 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.098511855 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.673665927 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.129930818 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.166636085 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.103210954 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.089153328 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.188868268 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.116042267 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.09073279 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.111426151 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.084791533 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.16061748 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.464038087 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.092970424 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.167108459 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.090168207 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.693740901 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.096701011 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.277500202 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.135739015 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.103951225 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.073916291 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.101366372 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.156170697 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.107293771 seconds)
  done (took 20.76541592 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.159750193 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.172555856 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.08970113 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140348621 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.143325396 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.093868896 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.08127398 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.090089031 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.125994536 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.236880011 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.13843339 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.168885738 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.085851212 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.083917046 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.143133286 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.252415485 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.122832563 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.105532955 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.098760166 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.104178715 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.124738094 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.110521126 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107204274 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092904229 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.182171593 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.201683918 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.105801803 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.121048356 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.099619811 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.114924115 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.137156624 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.148799376 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.090856891 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083069409 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.187162277 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.118576305 seconds)
  done (took 5.314618305 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.225752607 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.12265168 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.237622072 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.17785111 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.145855206 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.165442806 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.157503993 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.298536252 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.256135153 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.175668899 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109992949 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.109869839 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090600432 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08239501 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.093192648 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.699809091 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.185564075 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.148272682 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.151244179 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101365379 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.084198842 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.380240778 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097180831 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.078022706 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100337894 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.073378174 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.223450273 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09970926 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.231445343 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.082351393 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.105808344 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127683317 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.188262016 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.133917941 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.125179455 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100482557 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.094971908 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.219206815 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.108848005 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.073706026 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.134606142 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131391377 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.133214066 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097102038 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.093030554 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.239350442 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.081737162 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.11948116 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.168232796 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.212277081 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.176432342 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.075956623 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.336948708 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.114331162 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101287312 seconds)
    (56/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.079302969 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.095630276 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.311366648 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.133081096 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.07781596 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.093927261 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08403492 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.091484866 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.426865203 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105957427 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.310324686 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.092765997 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.165916005 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096225166 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103422742 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080814997 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099312461 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.113105829 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.076304152 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.091540317 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.07641555 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.092507751 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081527552 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.117714334 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.09795985 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.076745126 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.172047549 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.144066809 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.079676272 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.107866507 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.11270592 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.120062395 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.082196208 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.093049615 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.123866557 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.078803133 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.092939117 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.080571652 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.168808776 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102560118 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.118544255 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098647324 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.123455781 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.09290553 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.238159745 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.0791187 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124511787 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.097093176 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109581841 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.113772739 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.092954275 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080794927 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.090876256 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.07620304 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160806748 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.077752668 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.093670977 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.095649196 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.0931836 seconds)
  done (took 24.376962292 seconds)
done (took 51.08638532 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.526031831 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.119178703 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.119136349 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.100453059 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.11882716 seconds)
  done (took 1.695095046 seconds)
done (took 2.37805642 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.385825917 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.186842359 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.125429351 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.185825622 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.103806932 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.192607405 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.19245745 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.099939796 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.221911664 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.096216138 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.183697465 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.096256864 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08747688 seconds)
  done (took 2.869306488 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096032239 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.125000697 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.09624048 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112031634 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075277079 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112211657 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.108241816 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.110752487 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110091706 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086861571 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093568973 seconds)
  done (took 1.805719534 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092201003 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.119326547 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083851139 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.108251097 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075184152 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.108195072 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.090805867 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.123412515 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107615217 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08872421 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091800544 seconds)
  done (took 1.767069524 seconds)
done (took 7.116580961 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.205152855 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 9.0958291 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.148011544 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.203041823 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.387136382 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.252176669 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.638468316 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.166405245 seconds)
  done (took 12.98741519 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.118442788 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.141932841 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.101703781 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.100580255 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.082505912 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.096675555 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.08322364 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.09675848 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.083251915 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.099149394 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.083279522 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.099294756 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.081942709 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.098004774 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.097339584 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.083448793 seconds)
  done (took 2.29839085 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.121719791 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.121574098 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.106683014 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.109721955 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087118932 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.103708032 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.105225844 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089516804 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.101378923 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.087282628 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.107612989 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.107017183 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.091868563 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.101638069 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.105037306 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.09450886 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.103147493 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.090403652 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106734183 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.105759712 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.092889203 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.103688589 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.106188621 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.092873715 seconds)
  done (took 3.238856706 seconds)
done (took 19.203047919 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.178797702 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.09641143 seconds)
  done (took 0.960942775 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.148798475 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.149023315 seconds)
  done (took 0.990086626 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.110947272 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.09537571 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.141645995 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.119809573 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.083831982 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.099161937 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.137785822 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.083087966 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.099562209 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.084666134 seconds)
  done (took 1.751362147 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.087172198 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.100397505 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.094385254 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.145876352 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.110854932 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.102728508 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087327747 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.10142779 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.087179715 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.097662535 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.105699331 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.121347663 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.089779499 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.124772826 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.101069116 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.091682666 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.111038873 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.106516929 seconds)
  done (took 2.564219725 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080074303 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096811504 seconds)
  done (took 0.870798453 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.087120726 seconds)
    (2/7) benchmarking "second"...
    done (took 0.096378081 seconds)
    (3/7) benchmarking "month"...
    done (took 0.08692581 seconds)
    (4/7) benchmarking "year"...
    done (took 0.103647198 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.099216174 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.085507568 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.099418696 seconds)
  done (took 1.351900517 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.580913145 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.282980762 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.393263002 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.124339888 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.146892813 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.412012941 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.147165427 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.114285191 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.09853695 seconds)
  done (took 3.043739171 seconds)
done (took 12.22646663 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.089412877 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.221002635 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.646098218 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.123135863 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.096818202 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.140441531 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.332953232 seconds)
done (took 2.351637428 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.348863365 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.156844414 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.088303581 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.094543794 seconds)
  done (took 1.383863558 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.075801732 seconds)
    (2/2) benchmarking "read"...
    done (took 0.104473585 seconds)
  done (took 0.881531145 seconds)
done (took 2.972009108 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079105228 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.076820448 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.093990561 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.129882277 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.07832948 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.095214329 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.078663649 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.096172396 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.077789355 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.094747178 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.079183932 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.093855358 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.078749245 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09300451 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077685395 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092754534 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077494461 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.094239921 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078661197 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.094474012 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080743135 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097513469 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.080426988 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.096093493 seconds)
  done (took 2.855482074 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.103643379 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098667702 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.100859087 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.085567206 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.104502767 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088482371 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.104356076 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.100380516 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088986744 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.09957361 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088458342 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.104824767 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.101381006 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.089686972 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100947231 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.09039079 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.104926927 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10039501 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083838935 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.105091007 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.087685732 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100258484 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.104995258 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088659958 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.106803328 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104398535 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.08516497 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.101664651 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090383771 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.105471043 seconds)
  done (took 3.626666833 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.087744109 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.090953199 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.080803336 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.102455789 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077920065 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.09823744 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.07845615 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.096045296 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.08500265 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.097623917 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.084985258 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.097235615 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078957809 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.099269973 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.08374786 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.101936281 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.0935726 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.096579416 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.078512946 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.098879905 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.084056843 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.094895765 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.081852364 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.099103074 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.081548672 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.095330884 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.081847511 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.09792787 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.081977495 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.09786605 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.083804008 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.102367274 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.081413044 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.108294944 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.0849612 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.097571673 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.087130297 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.094484613 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.084211658 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094742098 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.077593502 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.097609292 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079579625 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.107370368 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.08178745 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.100584678 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078532373 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.101035656 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.081998298 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.103586019 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.094672348 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.080143935 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.101705792 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.0855139 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.101972248 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.079445839 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.099130166 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078903024 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.099245876 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.082199691 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.09442328 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078114112 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.102465625 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.083439493 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.116734309 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.089161227 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.092158988 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.08314821 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.099608587 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.084698367 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.100193889 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.107509995 seconds)
  done (took 7.279670656 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.095908124 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107680009 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082805652 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097460826 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081076528 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.097860761 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.090738681 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100724204 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100646376 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.093923742 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098425963 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081842441 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097542835 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081798371 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096894238 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.081905674 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.104883451 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096796535 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.080964839 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.097842974 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081900355 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.104775391 seconds)
  done (took 2.765564118 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.263233064 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088684752 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.15146891 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.11562146 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.119456559 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.098649597 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102315873 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.103588957 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085472768 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108631809 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108423658 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086948774 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.121140381 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108178879 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092111269 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.111476776 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101706278 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.094246189 seconds)
  done (took 2.774382301 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.099224234 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.10143742 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.107032747 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099902257 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.101225821 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083488176 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.108795504 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.115306894 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084250403 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.098461964 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.093916708 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099994047 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.082925582 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100180746 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09891365 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.084075427 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.099364841 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08382999 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109881325 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110978766 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.092698453 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109975779 seconds)
  done (took 2.883056753 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102180373 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10007775 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.134638198 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089020474 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.099627144 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.08304489 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.105820668 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.082907377 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.108281386 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.218750609 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084425715 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.098598712 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.092661706 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.100337724 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.106472332 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084181825 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.098599375 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083841242 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099069626 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.082431263 seconds)
  done (took 2.771944774 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.179197473 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097522439 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.114844165 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.129958379 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098515227 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.115045652 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.13030143 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.09906622 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113619369 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.13221167 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097694391 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.11440942 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12743045 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.123719412 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099665088 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12859958 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.128657953 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.127266498 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.098850628 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114653565 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.130058065 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09920798 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.128272937 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.114843332 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099358874 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.116862552 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09815441 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.122656022 seconds)
  done (took 4.002196266 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081411164 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.079604203 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.095859399 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.078755135 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.095725894 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.079979639 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.09662155 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.078718465 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.09734538 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.079830015 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.095594224 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.080385761 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.096707182 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.080582814 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096778503 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.079459316 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096614782 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.079436745 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096661407 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079497839 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.096855982 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080122359 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.096043675 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.080326863 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098262409 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.079398874 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096383114 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.080367844 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095764522 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.080375742 seconds)
  done (took 3.351829035 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.094516785 seconds)
    (2/2) benchmarking "in"...
    done (took 0.124621806 seconds)
  done (took 0.942445496 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.091078199 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.118161109 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080156003 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.098007222 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.09092275 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.098371205 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109444325 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091870067 seconds)
  done (took 1.50041213 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.148496374 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.149683691 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.087737538 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.111579041 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.148882719 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.143065062 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.145301783 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.08767659 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.101361522 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.075004852 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.142438998 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.093762557 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.08705721 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100311554 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.084668649 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.109032837 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.097817021 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.093032027 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.106886674 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.083120845 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104051577 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093258595 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105193896 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.111356573 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.078341374 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.106195671 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.090038922 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.11316773 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.099734213 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.089620639 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.101509389 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.08256746 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.102447206 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.087375341 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.100524767 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.148470963 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11221894 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082993375 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.103874431 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087034295 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110062443 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.081726929 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.105806113 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.100446596 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090870044 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.104405544 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.088964682 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.099341798 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.078393675 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.096032701 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.083870039 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.098808541 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.081380988 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105674986 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.105227339 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095402012 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.101378204 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.079969784 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.098545008 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.081597057 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.103542202 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.081547454 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106250661 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.102755325 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.083058539 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.103661734 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087211586 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.10105404 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.083428341 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.099055139 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.086516155 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.12069057 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.107044734 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.086677789 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107262544 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.082526754 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.101195873 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107041627 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086168499 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.105342346 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.086524551 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109791456 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.083626175 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099170928 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.098423555 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.089744578 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.101014573 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.085692406 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.092956866 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097005891 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.101801696 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.081261499 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.095758192 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.084966185 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.099448545 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.102379998 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.07857327 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103710177 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.081125943 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.105090236 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088104336 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097347903 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.089079488 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106285061 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106540327 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.086408749 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.144444325 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10090869 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.082916065 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.103032179 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089190169 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.097546356 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.085626417 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.098520347 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07972439 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.099254186 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.089281592 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.104884311 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.101940129 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.086988173 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.100963398 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.090772994 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.10192454 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.080563947 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.099159691 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.086484936 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.109855887 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.106440727 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.085172655 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.100226072 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.082417465 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.10434071 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.086519689 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.102170837 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089145375 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.101319119 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.081350042 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.101342651 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.105611546 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.088279111 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.099959508 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.086888945 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.106479143 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.104134704 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.086020418 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.10573039 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.082253711 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.096173041 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.088150635 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.100958706 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.084156569 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109738815 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.103213002 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.085310558 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.100533279 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.092687013 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.102417198 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.087904942 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102382783 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.088253057 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107071472 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.075674286 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102245979 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.103474699 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.089886962 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.100874648 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.083878141 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.101070858 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090345149 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.099074072 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.086903551 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.096701885 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.080342431 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.107134619 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.101900727 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.08733073 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.099484619 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099916089 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.115117818 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089164906 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.103770764 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.10473354 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.086677779 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.102430441 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.08611075 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106675959 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.088551247 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.101981519 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.084392399 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107243091 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.097374878 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.08807288 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.103281343 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088161627 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.094471087 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.083597197 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.094397446 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.087103352 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.108914533 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086549769 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.105804689 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085232608 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102598088 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.111192336 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.08362749 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.105458035 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.078805941 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.106204175 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.094677229 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.107785743 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089632149 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.10715611 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.102550447 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.084460555 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111859803 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085121948 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.104878923 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.083660542 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.098279735 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.080698997 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.107552307 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.103272993 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.083504206 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.100118651 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08878266 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108356208 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.093826203 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.097818063 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.088322481 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109923959 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.100403107 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087618247 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.101408541 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.085670154 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115752888 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.078323573 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.100558566 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.108457806 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.088398046 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.099193301 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.084153417 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.102731708 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.089440158 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.102987331 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.084973771 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.102337626 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.09068728 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.102100831 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.080968039 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.101339961 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.102918676 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.081196724 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.109939874 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.087717468 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.101730488 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.083463544 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110541561 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089680266 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.10816844 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10385696 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.087674156 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.107728974 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.089206292 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.099721547 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.089577593 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.100513246 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.079382529 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.101331725 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.076818343 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.103148706 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.099911494 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.089126957 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.102360057 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087288158 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.104487977 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089540764 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.101627362 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.106021884 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100358965 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.097627701 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.079098085 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103558851 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10457706 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.083721252 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.100527713 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.084272514 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.105799248 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.087306548 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108975937 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.080470055 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.101281283 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.08955091 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.101141835 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107560153 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.090687762 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.106914533 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.082472882 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.105542665 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.082866218 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11073725 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.080897534 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.105279449 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103589029 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086758927 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.101952016 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.084367112 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.101785208 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.079769999 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.101376422 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.089410703 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.099035549 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.104548219 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.085297936 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.102274404 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.081141204 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101861168 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.089159341 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.098238751 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.090968008 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.101678787 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.079243204 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.098325907 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.087575396 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106602405 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.108065276 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.082595282 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.104269705 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.091088347 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.104820389 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.081970385 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.110735522 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091694007 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.107960564 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112385161 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.078601976 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.102105043 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094224795 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.100295836 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.085636486 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.102782988 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.080475578 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109089973 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.090870325 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.107077614 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.103077298 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.080490242 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.101845004 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.090024742 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.105563028 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.087166241 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.102723846 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088916199 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.100457651 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086166376 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.108158384 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.087700303 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108826408 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10634762 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.088454044 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.102532677 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.08926991 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.101877619 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.080071451 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.098623963 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.085878336 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.110091779 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.077139834 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.105802906 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.087603455 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.10247522 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.103973253 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.087643756 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.101380245 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.085171197 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10683209 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.083356831 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.113307094 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.083573467 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.101470768 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.088355541 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.107108181 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.098295194 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.084092951 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10118839 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.091056415 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.104240191 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.088772752 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105922195 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088527174 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.103814338 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.087863848 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.106114772 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.107416588 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.080199312 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.109251277 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092373437 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.103279153 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.084694841 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104205835 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.081153358 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.104787396 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.107986846 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.084411825 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.111048665 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.089499672 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.10398132 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.084760922 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.108652697 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08716319 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108794527 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.099557365 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088638033 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.099009415 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.091501318 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.105231726 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.091178892 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.103154756 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.082400927 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106769304 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.088927672 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10541259 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.109707409 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.089962924 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.099201159 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.080973684 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.10501851 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.086033294 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.114519105 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.083279464 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.104012422 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105274596 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.084857592 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.101257568 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.092472564 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.100029719 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.084566979 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.107005395 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.087596528 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.099793379 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.081158898 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.105860606 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.086155677 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106440174 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.105293777 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.082105678 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.104481396 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.091183773 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.105209497 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.078962857 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.103603018 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090304185 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.105234915 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.10281259 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.081802021 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113094484 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.089507076 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.109993228 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.081714471 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.107062926 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.103592309 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.087113183 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.10991394 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.0851198 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10699054 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.084668616 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10816161 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113274275 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.080997526 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.100584985 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.095345633 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.107646474 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.088911847 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.104825466 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.086020416 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109892501 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112296523 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.0859365 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.099748974 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.081478389 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.100836876 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.082640941 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.104340174 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09512684 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.10685655 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.084703831 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106849102 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088010366 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.105280313 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.085837759 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.099405306 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109980346 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.085647768 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.110971268 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.080852724 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.097537675 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.085661417 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107606703 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.082452508 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.102419929 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.083910208 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.105175166 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.082382394 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.104674065 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.110111897 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087742712 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.108732671 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086743529 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.104583903 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.085214808 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.115193194 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.08454625 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.103102602 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116073418 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.090801988 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10685385 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.087137896 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111303768 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.091219602 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.104037364 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.109953085 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.086669846 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.100792676 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.09157511 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.110721744 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098646748 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106156371 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.080135958 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.106701958 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.081971994 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.100453301 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.110702582 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.092252376 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.110365519 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.087841684 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.103565198 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.092324585 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10446972 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106138431 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.085712187 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.104977167 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.08745831 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10426806 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.087282486 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.103758037 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.09244993 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.110881941 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088834465 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.112496725 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.079957734 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114841668 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.110201194 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.093057546 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.103743276 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.08094012 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.101710564 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.086030789 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.11168801 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.090788039 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.106317055 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.086352387 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.107488681 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.088248315 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107000983 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.103833988 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.091699312 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.10861862 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.084328713 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.109869758 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.08281415 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102080653 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.083646499 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.109885129 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.090800531 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.107310286 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.11430976 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.091457938 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.104779471 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.084472166 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.108700026 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.085921215 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.108620175 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08733474 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.102990787 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.10018815 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.090619614 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.110201093 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088383969 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.111697131 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.093301926 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.106681594 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.090259628 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.112403348 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.108496364 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.084509981 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.108633326 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.087145105 seconds)
  done (took 58.593209799 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.164509582 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094035567 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104899004 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.085809798 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.134190366 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107306468 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086132653 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108023854 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08776087 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.119953466 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104642216 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085674458 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.130487767 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.138986884 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.134718487 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.120049917 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086568438 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.106453879 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.086051326 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10728717 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108591613 seconds)
  done (took 3.075996357 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.111401452 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.126312982 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.125656755 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.127032206 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096599956 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.12258729 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.124696134 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122184416 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108750053 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.117686792 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.127170005 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.12288768 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.098642173 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.119091584 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.119096194 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116503323 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.107153474 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.116195661 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.124673091 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.123393243 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09984655 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.124220245 seconds)
  done (took 3.356081982 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.094609224 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.107874118 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.091397488 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.104427895 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.089754736 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.104070705 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.09554511 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.104296613 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.094942772 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.105485025 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.082179048 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.103937163 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.086832845 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.103924285 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.084081966 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.105250869 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.113744569 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.089045133 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.111254795 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.085151501 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.121978871 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.085621343 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.107039665 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.083544999 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.11938976 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.110707135 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.086072263 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.10872909 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.080889069 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.108693976 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.085257076 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.106708238 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.089088614 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.103024679 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.080700077 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.110653363 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.088863412 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.105517811 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.085145352 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.103866094 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.088025617 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.109140091 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.111504741 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.08728774 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.104386877 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084724197 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.108648492 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.086215449 seconds)
  done (took 5.483974647 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.12712053 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.166094518 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.090844912 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.153675234 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.128852448 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.121573612 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.089750189 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.131344704 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.110285083 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.111914103 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.110785242 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.131313876 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.111944334 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.117126391 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.094709047 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.113034347 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.094412538 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.111181035 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.121606847 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.092664104 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.120070198 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.11481063 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.127076192 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.108424881 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.115944 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.111128248 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.092116614 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.116859309 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.126306882 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.101695783 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.117953852 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.119107583 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.129052995 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.093297618 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.111198346 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.092842397 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.130921935 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.114357282 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09310239 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.108945566 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.113845765 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.096701682 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.114735929 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.132815599 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.094189691 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.117267278 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.113234607 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.089658948 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.128690119 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.112472188 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.102773312 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.13174262 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.115478309 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.093056448 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.117727231 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.129284405 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.11296503 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.091831778 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.114058269 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.127266135 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.090485351 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.115183588 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.130950245 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.093748008 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.121038299 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.132081691 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.09646105 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.115559779 seconds)
  done (took 8.677834005 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12211819 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.117010772 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.131869032 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.131461426 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.099939574 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.117359077 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.117470098 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.098058378 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.117446518 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.125503372 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.097267717 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.226627704 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.094673669 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.124165441 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.117022585 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099393482 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11659152 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11768023 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098198045 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118684607 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.116836491 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.111777088 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.116614777 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.13177162 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.133598314 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.093596222 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.117803863 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.11718389 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111392705 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.117955406 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.134251328 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.117708322 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.097287137 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.132272431 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.134082062 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.117561022 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.090344579 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118255194 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.118141543 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.098560143 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.11286302 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.132189535 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.097939516 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.114571431 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.097607146 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.118139605 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.132537 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.135765555 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.123736744 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.107235142 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.11701726 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.131649875 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118216992 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09907346 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.131136123 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.141976435 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133095265 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.131856456 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098133265 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.132186042 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.13280725 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.142139424 seconds)
  done (took 8.185052476 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087562856 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.086246906 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.107880291 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.086211945 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107798257 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085936536 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.106816739 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.085711552 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.10633763 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.086191475 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107135461 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085658737 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107389536 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086983423 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.106342772 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086348218 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106237715 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086505894 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107052313 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085619068 seconds)
  done (took 2.700752447 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.10039919 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.132104465 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.090338187 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.120370591 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.110819741 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.099868512 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.110496045 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090063365 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112714831 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110534205 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103269924 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.122595457 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110518546 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.100182187 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.124685794 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.120046435 seconds)
  done (took 2.552118678 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.116141257 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.131593154 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.170043791 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.114201389 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.091629468 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.119228286 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.090306397 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.113720694 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.108862626 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.098347334 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.115187893 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.094058588 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.110793238 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.090902503 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.111426238 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.114629114 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.089536779 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.114857138 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.091762861 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.170425829 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.117791955 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.093252626 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.112140411 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.114684681 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.093845085 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.117332578 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.099526011 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.112677451 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.11269965 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.090943072 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.11581158 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.100488873 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.110532 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.115957548 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.092443144 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.111598556 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.090988995 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.112060062 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.096647358 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.111008205 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.092251007 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.116258951 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.110266175 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.094262125 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.109370705 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.091580825 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.10800677 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.098503864 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.114201634 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.113474414 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.090835218 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.116915909 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.096375557 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.122757737 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.120378639 seconds)
  done (took 6.769024291 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105670303 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.112629842 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.106306551 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.108939174 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090924647 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.113663465 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.112653009 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.094020118 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.113470875 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087551583 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.112879947 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.093056437 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.113720117 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.112809439 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.094144275 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112353408 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.088044343 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11249534 seconds)
  done (took 2.680482861 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.097716399 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.111639506 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.096898169 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.110898946 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.090750027 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111120547 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088650408 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.108680772 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088392052 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.110609913 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089916722 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.110962989 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08859354 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.11140368 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.110613944 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090824365 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.111218803 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089281713 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.110787597 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089462778 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.111695415 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08917731 seconds)
  done (took 3.016289786 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.10453884 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.169966729 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.121509313 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.181074621 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.112570504 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.088955137 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.122273461 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.110777746 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.110582073 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.108646308 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.087434124 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.109300582 seconds)
  done (took 2.229929307 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120573772 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.152650018 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111281113 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0924277 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125618437 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097399612 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11837705 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117408141 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129101801 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114812146 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118707939 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13069186 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130451368 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131090594 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105090217 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124911957 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11765975 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098254576 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112339457 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141252755 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097626142 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130448396 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117745795 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118374722 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09949505 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132357715 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130488076 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135772797 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099350366 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13034628 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125312158 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119095921 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109563575 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135296011 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111890454 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129815478 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099358345 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142467462 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126252885 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132803677 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.092750214 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125019134 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130214486 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127377423 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11046032 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118579596 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126831836 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096764107 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119250074 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.15057579 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124812122 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133103885 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105047242 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131014053 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130835469 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.151537268 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134816997 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132783 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124328871 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11474475 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132658358 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126101206 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132993591 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13673848 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10354527 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132426922 seconds)
  done (took 8.864144924 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138879974 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.114134673 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119069392 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136856498 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111353742 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119265268 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119432054 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099281139 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120449758 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114295061 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.170289649 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099692969 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133879057 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13226459 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118726158 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099683434 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122388069 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13265837 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093900706 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.150973671 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119563164 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13364309 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132592134 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132452092 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117185807 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126873914 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118765474 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099029327 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120281692 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119170929 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107200915 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120910147 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13251091 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.11322253 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112797873 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119329123 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119361388 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107010639 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119921854 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125465736 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133516126 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142621438 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099517622 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119524518 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135381617 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097732411 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120417125 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113521441 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099554076 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116077288 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13648612 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136119234 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116250968 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134083546 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11939208 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118724279 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099160273 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119375672 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118815337 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104708591 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132755711 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12012484 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152814065 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099156095 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120627307 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133648165 seconds)
  done (took 8.795637555 seconds)
done (took 160.436038548 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.154354992 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.175467858 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.150770494 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.149848885 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.106415194 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.120574281 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.140065502 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.154742602 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.084858257 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.105733047 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.084921187 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.111317102 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.151418858 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.105681008 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.085252939 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.110254928 seconds)
  done (took 2.794808959 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.210143798 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.323399821 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.128429784 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.118346685 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.094599966 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.109466796 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.094569322 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.118189906 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.110343236 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.10078915 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.109302459 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.088180966 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.122406831 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.109994894 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.090074107 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.108813716 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.121093448 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.089087725 seconds)
  done (took 3.05882069 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.115037278 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.151290598 seconds)
  done (took 1.081489463 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.125859207 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.194749024 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.331067944 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.161545781 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.137798066 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.113470327 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.16321836 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.128741794 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.205076045 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.132960333 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.13270748 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.112215506 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.119808461 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.121176847 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.125651825 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.09322463 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.144154127 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.123320689 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.102124953 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.117483137 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.140206667 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.095031156 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.121797643 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.103248247 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.215578878 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.111148896 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.116435264 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.115273172 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.097093008 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.122831755 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.095591259 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.134242507 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.13223882 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.205465581 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.099069686 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.203438761 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.102198253 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.115074564 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.122428922 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.092770316 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119679436 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118550769 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.110103656 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.115282389 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.114046884 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.10235339 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.114973968 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.092942654 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.118610885 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.123847029 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.117883126 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.097125847 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.198081711 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.104064212 seconds)
  done (took 7.885367886 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.923876602 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.158152349 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091736157 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.055702565 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.141756597 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12907184 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.908438101 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.138436841 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.285411059 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.925970715 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.10753279 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.127576976 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.265100183 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.302594434 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.192626756 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.374961071 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.77616833 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.127209785 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.122772882 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.165163528 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124137933 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.141746297 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.137792781 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.453185994 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.113526496 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091081713 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.122723544 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.12471748 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.182562538 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.089581775 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.118239908 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.222721411 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.288329818 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.23045791 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.113666307 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090545798 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109756632 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.188391778 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.30729559 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.249489305 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.184865853 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108249848 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.088272692 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122959553 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.136680607 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086331631 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.205852825 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.194068591 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.217984568 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.11617453 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.105672671 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.126154408 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.119602412 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.183932777 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.109335675 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.378770704 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.378851596 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111033457 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102920768 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.128724218 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.301866565 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.110616648 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.261890415 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.141253597 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.245189559 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091360834 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.862684599 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.20896822 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090518761 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118550346 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.099918643 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120811537 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121602424 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.181576677 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.397166257 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124643132 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.096812049 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112019776 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.27201527 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.0918291 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110090463 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.187445943 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.114920427 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101834052 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.127628425 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.125397354 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.191618272 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.293074902 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.103953989 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.125148112 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.11938452 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125018657 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.094186969 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.257267133 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.255273208 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.179672664 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.25980689 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100999028 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.206702312 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.187805641 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119483979 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.19121011 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.122872566 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12768215 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099706371 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.272795437 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.155103289 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.091104652 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.119694546 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.124888808 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.158599694 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.095570916 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.123473719 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.191143304 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.517209377 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.186976741 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.10929716 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.093700534 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125817505 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.203655024 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10111749 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.294235913 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125316755 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.187650862 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.123633853 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.108789728 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.101730942 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.208275711 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.099773489 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125802037 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121204071 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101538306 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.29584738 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.255136959 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.125097669 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.268195098 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.190110798 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.099012653 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.217110546 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101010547 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.214751636 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123664988 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10036961 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114570802 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.854204925 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.127401231 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.102229339 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.119791984 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.20522628 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111131915 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.092528031 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.110794782 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.088860785 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.848184151 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.11420162 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.088863033 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.112404091 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099434953 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.124732968 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123450283 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.09852494 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.20428271 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.271199871 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.125728413 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.10028274 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.113789054 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.181853099 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.116142359 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.089695179 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.112494504 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.111071949 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.103470673 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.119689823 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.091488166 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.21698885 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.18057257 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.254996394 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.577949695 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.11251697 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.089680747 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.288218525 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090966943 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.343341922 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124188404 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.26304828 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.211028493 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.088852085 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.372361484 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.213378296 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.206776068 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.114680178 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.195730322 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088904971 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.124936832 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.203552014 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091682351 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122158171 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.179739881 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.129002568 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.125267685 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.19825891 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.0905841 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.276944499 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.088463499 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.213780369 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.093112531 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121959275 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.350974207 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.114160264 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.131199385 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.186161956 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.119688539 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.092518908 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.78755246 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.090593851 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.128671723 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119775191 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.260233042 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.187465794 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.125535111 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125137949 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.126092859 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.185362113 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.257901813 seconds)
  done (took 47.859223854 seconds)
done (took 63.489718699 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.327330068 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.285318643 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.342167884 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.234124792 seconds)
  done (took 2.107615755 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.232109405 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.163322725 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.192604492 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.112522942 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.20262846 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.112063874 seconds)
  done (took 1.851944665 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.544120951 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.421022978 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.378989625 seconds)
  done (took 2.183590359 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.282718586 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.277270137 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.368613156 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.505570613 seconds)
  done (took 2.409833439 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.259358473 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.137883581 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.129963093 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.185930162 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.223696509 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.223703712 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.153548451 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.170304314 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.115046723 seconds)
  done (took 2.492144494 seconds)
done (took 11.884414776 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.348841789 seconds)
    (2/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.340696678 seconds)
    (3/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.301744553 seconds)
    (4/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.207400124 seconds)
    (5/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.174140939 seconds)
    (6/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.12713718 seconds)
    (7/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.111037891 seconds)
    (8/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.224177292 seconds)
    (9/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.238710369 seconds)
    (10/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.275892844 seconds)
    (11/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.267473824 seconds)
    (12/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.281648 seconds)
    (13/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.124336293 seconds)
    (14/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.08977011 seconds)
    (15/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.324700134 seconds)
    (16/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.250488829 seconds)
    (17/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.099979121 seconds)
    (18/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.247356201 seconds)
    (19/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.205597545 seconds)
    (20/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.280421831 seconds)
    (21/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.320890682 seconds)
    (22/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.129980159 seconds)
    (23/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.098734955 seconds)
    (24/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.181650765 seconds)
    (25/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.268641019 seconds)
    (26/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.18306207 seconds)
    (27/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.119650722 seconds)
    (28/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.273648366 seconds)
    (29/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.098033308 seconds)
    (30/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.293564932 seconds)
    (31/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.203014573 seconds)
    (32/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.159674268 seconds)
    (33/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.263655994 seconds)
    (34/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.203723078 seconds)
    (35/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.179202928 seconds)
    (36/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.098620926 seconds)
    (37/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.102732351 seconds)
    (38/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.097658049 seconds)
    (39/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.199891394 seconds)
    (40/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.121966315 seconds)
    (41/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.080822221 seconds)
    (42/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.263519992 seconds)
    (43/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.235517307 seconds)
    (44/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.153914682 seconds)
    (45/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.188042057 seconds)
    (46/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.216840787 seconds)
    (47/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.130840301 seconds)
    (48/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.211287581 seconds)
    (49/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.298152505 seconds)
    (50/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.234069333 seconds)
    (51/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.098333837 seconds)
    (52/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.116121682 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.154285857 seconds)
    (54/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.082980206 seconds)
    (55/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.226878097 seconds)
    (56/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.235876086 seconds)
    (57/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.225498926 seconds)
    (58/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.081071179 seconds)
    (59/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.219456868 seconds)
    (60/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.081737248 seconds)
    (61/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.10463342 seconds)
    (62/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.081054413 seconds)
    (63/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.120209168 seconds)
    (64/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.082164814 seconds)
    (65/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.222940808 seconds)
    (66/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.080301153 seconds)
    (67/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.13418072 seconds)
    (68/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.178989257 seconds)
    (69/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.103359729 seconds)
    (70/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.121978334 seconds)
    (71/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.097090289 seconds)
    (72/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.104866809 seconds)
    (73/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.113624245 seconds)
    (74/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.104493503 seconds)
    (75/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.152706827 seconds)
    (76/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.085404408 seconds)
    (77/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.104539383 seconds)
    (78/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.109669711 seconds)
    (79/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.103728778 seconds)
    (80/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.230800555 seconds)
    (81/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.081667322 seconds)
    (82/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.155734298 seconds)
    (83/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.097617704 seconds)
    (84/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.138977944 seconds)
    (85/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.12081605 seconds)
    (86/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.100228832 seconds)
    (87/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.119950951 seconds)
    (88/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.159082188 seconds)
    (89/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.199670536 seconds)
    (90/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.12085218 seconds)
    (91/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.081115673 seconds)
    (92/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.200148487 seconds)
    (93/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.201546475 seconds)
    (94/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.133603877 seconds)
    (95/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.09873183 seconds)
    (96/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.10976613 seconds)
    (97/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.100414193 seconds)
    (98/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.184332425 seconds)
    (99/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.090352294 seconds)
    (100/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.122889596 seconds)
    (101/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.17671842 seconds)
    (102/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.213758003 seconds)
    (103/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.129763996 seconds)
    (104/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.08249513 seconds)
    (105/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.121037147 seconds)
    (106/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.208323458 seconds)
    (107/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.098012774 seconds)
    (108/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.113858233 seconds)
    (109/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.080290973 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.120241848 seconds)
    (111/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.220400042 seconds)
    (112/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.081887929 seconds)
    (113/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.10460712 seconds)
    (114/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.159310761 seconds)
    (115/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.104373115 seconds)
    (116/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.089706568 seconds)
    (117/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.166479334 seconds)
    (118/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.090677814 seconds)
    (119/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.105982282 seconds)
    (120/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.09902858 seconds)
    (121/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.120626126 seconds)
    (122/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.120875348 seconds)
    (123/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.103668616 seconds)
    (124/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.119748184 seconds)
    (125/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.093951083 seconds)
    (126/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.120585734 seconds)
    (127/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.090204413 seconds)
    (128/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.202329315 seconds)
    (129/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.083099357 seconds)
    (130/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.121122401 seconds)
    (131/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.098546587 seconds)
    (132/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.117809849 seconds)
    (133/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.082465745 seconds)
    (134/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.10487724 seconds)
    (135/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.114604476 seconds)
    (136/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.140634925 seconds)
    (137/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.122547296 seconds)
    (138/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.100330433 seconds)
    (139/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.122034178 seconds)
    (140/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.083007566 seconds)
    (141/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.103390882 seconds)
    (142/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.099995292 seconds)
    (143/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.153786516 seconds)
    (144/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.082758918 seconds)
    (145/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.111130452 seconds)
    (146/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.083882086 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.122362365 seconds)
    (148/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.082957428 seconds)
    (149/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.11381055 seconds)
    (150/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.099754776 seconds)
    (151/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.17921541 seconds)
    (152/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.081867032 seconds)
    (153/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.106062608 seconds)
    (154/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.088748465 seconds)
    (155/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.106043297 seconds)
    (156/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.08281169 seconds)
    (157/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.12476847 seconds)
    (158/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.089075061 seconds)
    (159/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.081525882 seconds)
    (160/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.121497747 seconds)
    (161/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.202516122 seconds)
    (162/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.08206888 seconds)
    (163/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.114078727 seconds)
    (164/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.081968139 seconds)
    (165/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.114553026 seconds)
    (166/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.083147718 seconds)
    (167/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.087389516 seconds)
    (168/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.122651766 seconds)
    (169/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.081977843 seconds)
    (170/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.121440971 seconds)
    (171/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.082456804 seconds)
    (172/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.103341929 seconds)
    (173/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.118479313 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.12068584 seconds)
    (175/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.081382488 seconds)
    (176/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.114806985 seconds)
    (177/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.082146545 seconds)
    (178/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.082339986 seconds)
    (179/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.121629339 seconds)
    (180/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.083752195 seconds)
    (181/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.106351042 seconds)
    (182/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.083883595 seconds)
    (183/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.121574293 seconds)
    (184/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.100005048 seconds)
    (185/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.122638957 seconds)
    (186/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.082562083 seconds)
    (187/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.138874265 seconds)
    (188/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.081380134 seconds)
    (189/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.104714024 seconds)
    (190/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.083454203 seconds)
    (191/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.10378808 seconds)
    (192/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.091867874 seconds)
  done (took 28.066948318 seconds)
done (took 28.919828738 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.234165362 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.107207263 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.127643728 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.125005386 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.184217057 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.106368713 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.136486546 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.127790206 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.106827957 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.121481847 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.092304073 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.132184558 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.101062809 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.208317749 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.106410594 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.119320866 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.093226007 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.130777792 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.133769327 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.113394865 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.184034981 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117830883 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.107279521 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.117941043 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.184982913 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093430539 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.125651467 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.125930127 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.34903277 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.123531372 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.100858196 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.116414331 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.13360338 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.11097147 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.113561544 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.098496359 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115048122 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.090799414 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.122094219 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.099219337 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.132325493 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.121816502 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.104179945 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.117782969 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.099322323 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.12179369 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092607492 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.129986396 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.114761166 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.101242404 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11687614 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.113419598 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.121009497 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.091150563 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.114449358 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.117241222 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.108095005 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.11436791 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.11029575 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114037109 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.095182469 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115065928 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.101366699 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114869207 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.097053059 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.116230751 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.121623737 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.103322814 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.120604515 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095370029 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114011439 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.097126436 seconds)
done (took 9.678832575 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.09841443 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.178426541 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.18349943 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.190216701 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.149201217 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.135865973 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.137516855 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.123147948 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.132968891 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.140947228 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.131291747 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.146595781 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.195455892 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.130786154 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.133899845 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.101110327 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.131072294 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.101595825 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.218013349 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.119587887 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.152895542 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.130902418 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.154577255 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.113970861 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.122769742 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.146023243 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.102980398 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.12439422 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.099594555 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.140872908 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.14169399 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.099556662 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.12588046 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.138155974 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.110410644 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.12861545 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.134952506 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.101788976 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.122887359 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.098585077 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.135658436 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.13264832 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.097478507 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.135994055 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.123035772 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.10920356 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.129465463 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.106571631 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.126655023 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.124524518 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.102617052 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.153255411 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.129363642 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.110478903 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.131810284 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.128696643 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.107198001 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.127993633 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.101619991 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.129417868 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.121022721 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.099999419 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.125579719 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.149220385 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.102157678 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.129358113 seconds)
  done (took 9.428064614 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.120939557 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.160967064 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.132648958 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.109730589 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.129922926 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.112450055 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.089943481 seconds)
  done (took 1.75367906 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.091202967 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.186267039 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.184934562 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.184676052 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.183371798 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.219990833 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.113527716 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.115223537 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.151312464 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.103655624 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.184733062 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.243090843 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.10018998 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.132587369 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.189457954 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.091069239 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.214044399 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.09202274 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.128793212 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.188917188 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.105885961 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.146701968 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.131826249 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.091103919 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.180736572 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.117672234 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.243865251 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.133673862 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.1209487 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.102372827 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.128860187 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.203540164 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.182968547 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.130831503 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.095044532 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.18427994 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.181601996 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.128750934 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.196445495 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.120451997 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.180911655 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.103559077 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.128752847 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.104897083 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.128878837 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.16890472 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.132983124 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.105351439 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.126971036 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.190588242 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.128305192 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.181986258 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.10051906 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.127613602 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.10448082 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.129946053 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.134663369 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.104311768 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.188708076 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.132412935 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.185002155 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.183088487 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.18278439 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.184117079 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.139109458 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.185424498 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.17991231 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.100789593 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.125877064 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.129257356 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.18472925 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.103830896 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.130225796 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.170961794 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.132095112 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.183334075 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.183362533 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.101221664 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.130190543 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.096281804 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.125807337 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.09245532 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.171916949 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.126818972 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.100108512 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.136811213 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.131195056 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.10538833 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.121950616 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.1444728 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.103980495 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.129320288 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.133184485 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.104059289 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.134288321 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.186554349 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.129707268 seconds)
  done (took 14.824174345 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.093958788 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.117875889 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.101452448 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.119728328 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.097168342 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.119760443 seconds)
  done (took 1.561450056 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.123710209 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.130650177 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.140439255 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.1079968 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.188392444 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.18831586 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.193186331 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.127258136 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.147680712 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.117736214 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.19246409 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.219137421 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.190891122 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.110990492 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.193723405 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.133507831 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.19390597 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.128697175 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.114906869 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.127626339 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.135261641 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.110306065 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.127027116 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.182109622 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.131668719 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.107911159 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.12886469 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.114709718 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.139661767 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.12679741 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.108994085 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.131465126 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.123851045 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.10381465 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.192916322 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.125023162 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.126298119 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.111553742 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.133787994 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.131543025 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.194853767 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.102682935 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.139413107 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.135968728 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.10294053 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.124521246 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.111308083 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.129929589 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.191388668 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.135706472 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.135973734 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.106609433 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.133572842 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.111115165 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.124274807 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12721591 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.111232961 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.218008521 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.110237422 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.124869069 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.106778607 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.133999485 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.143823599 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.110974042 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.13285827 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.13561463 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.100302413 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.13179859 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.102373709 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.13179262 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.136745465 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.106817873 seconds)
  done (took 10.724770425 seconds)
done (took 39.185490868 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.136683246 seconds)
  done (took 2.049154778 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.923690628 seconds)
  done (took 1.838029761 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.466808965 seconds)
  done (took 18.417442384 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.571139372 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.664847999 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.975554875 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.173072087 seconds)
  done (took 3.302693202 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.018044146 seconds)
  done (took 1.951614935 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.386534977 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.262853403 seconds)
  done (took 1.566644421 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.714536141 seconds)
  done (took 1.644409904 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.167763619 seconds)
  done (took 3.087382854 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.383227115 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.198212649 seconds)
  done (took 1.519520839 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.698328204 seconds)
  done (took 1.629388692 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 29.717192518 seconds)
  done (took 30.648816853 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.245941699 seconds)
  done (took 1.18881727 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.317663462 seconds)
  done (took 1.251599347 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.611179346 seconds)
  done (took 4.547426817 seconds)
done (took 75.5681472 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.105532025 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.134193224 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.108862445 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.131061143 seconds)
  done (took 1.409499856 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.114650083 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.130928371 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.109620567 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.130382703 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.138891102 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.105932348 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.129555974 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.112259545 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.129148559 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.132484796 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.106109045 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.130413331 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.10789135 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.12928133 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.128745099 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.108468695 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.134370057 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.106571891 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.131065563 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.131440297 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.105570621 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.131275348 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.133297537 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.109260006 seconds)
  done (took 3.867412247 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.105224274 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.122446757 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.100633885 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.121916056 seconds)
  done (took 1.394869524 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.114185468 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.148386267 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.145635964 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.113707966 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.147160248 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.145366815 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.103938317 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.124891597 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.104501408 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.139041122 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.153861565 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.125494065 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.14634817 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.132540575 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.115333019 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.12312456 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.107651663 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.146902817 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.138628517 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.11502693 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.129986086 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.137874177 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.104074191 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.14421385 seconds)
  done (took 4.050006814 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.217176261 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.119319753 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.155500504 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.18469876 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.164574726 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.103354106 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.15766244 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.134346473 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.110588903 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.134176222 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.132796484 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.192056666 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.107964001 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.13191857 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.106414216 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.135788482 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.143528484 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.135289723 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.176895667 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.110405374 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.134873493 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.141800923 seconds)
  done (took 4.0743876 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.106244982 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.121868679 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.092269967 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.122588535 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.105857011 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.125785437 seconds)
  done (took 1.617180053 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.099399157 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.11558094 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.097555358 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.118059622 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.097049214 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.11576551 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.090325077 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.116228459 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092035988 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.11597882 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.093854973 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.08923249 seconds)
  done (took 2.187275819 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.315590073 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.097148867 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.127352525 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.122549912 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.105793255 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.121034994 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.140136667 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.098315091 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.265012957 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.092081291 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.141873954 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.202534529 seconds)
  done (took 2.780741606 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229671991 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106849789 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.325109925 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.394257724 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172491034 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180697482 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.288278297 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182295275 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.208883719 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151608396 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240449322 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144331682 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167521476 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198213937 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155040423 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.229372673 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194110884 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221089827 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16138082 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.250007073 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179280992 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182070129 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198150193 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165445669 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122747963 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174477832 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.133532782 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138088582 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191255565 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188156763 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193764928 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163015464 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154672566 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222991563 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254676957 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199006504 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.336670761 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145582569 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.211455723 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.201309246 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.292039296 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151275074 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219799874 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169038946 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141764703 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198190623 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170409688 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.200898222 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.11716628 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154634373 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229391751 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191584937 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.203622696 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150581109 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.312390311 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160401213 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.164237079 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196070085 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208274312 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207936708 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180506244 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.13168443 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199642098 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197401035 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22198265 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.131955433 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.211272586 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11157042 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189553059 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.212276971 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225547714 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180291658 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.204516634 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145514873 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178131194 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187227331 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16715165 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19358048 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173250096 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.103314494 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16287963 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149272813 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136221098 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.174179368 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133262102 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223849951 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148023084 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.404726227 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221493563 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173197219 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176567566 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179446718 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181109918 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16074414 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.13328982 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159426111 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.176975189 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171979995 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116785026 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171960163 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15536569 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.139980589 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166696863 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.106529709 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174918825 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.164782336 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18522337 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179413147 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.115496226 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179896638 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163425471 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.170737542 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187244229 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201467117 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143582256 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142595366 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213086305 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171223786 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.146864721 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.192223157 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.207558661 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.181570784 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150172631 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18329378 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212498428 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153851841 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207315431 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158250829 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116814609 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.169849058 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174266203 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173406199 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.16646993 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111019297 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.16731453 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241690994 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.109920236 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148701846 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19028791 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139590515 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110506144 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152325547 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148659102 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.152299347 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.138819057 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.149782558 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170556451 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173386381 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167419415 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174994857 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15568946 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211651934 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14352903 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.172668427 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133276119 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.130755911 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.20068561 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203279362 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141042866 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215743824 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.187089481 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239681252 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17746938 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140407887 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.196040499 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113810183 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.132536152 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180843337 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.177402704 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180055086 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.203909762 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207781459 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.213953712 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.141210531 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161614098 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184751429 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.190537568 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173333492 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.158830765 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176000364 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18659831 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.133364283 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.10942827 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.140831076 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152534332 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14253624 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116748882 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201263921 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207034949 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203255643 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176588498 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150435055 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.199764257 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.110963835 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181039376 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.217280937 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1221775 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.205527444 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225988039 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183260276 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128002389 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185645091 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.131933591 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133418583 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.120791892 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.184556039 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14397043 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145216094 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156171699 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200860231 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194255325 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162745458 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220083055 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184703866 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.23768653 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.106545471 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.178054718 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188343059 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17110773 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.198124228 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119789496 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.177220461 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.194208699 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158709051 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207850251 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176253673 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184899792 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248453012 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.169088376 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115256569 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163322346 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178525038 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153039506 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.181232609 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159625024 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146313022 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14250594 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.149074768 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139974158 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201256816 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156556275 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199671644 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.173309252 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192904817 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136878587 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157033087 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175335288 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158952614 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.103917916 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188115245 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235731202 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132795991 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173436847 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194203663 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143823333 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.33743552 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235896731 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205763675 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148337477 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12930308 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176656764 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176482498 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179830375 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195337832 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157681085 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197725429 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173202572 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.156955284 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145986338 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134376771 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164067721 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.169545124 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.147353457 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.170876304 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.155208748 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206977869 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154023754 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171107428 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153080818 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.161015964 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.170240575 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151414968 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221036315 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172326463 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196546827 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.170825941 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.185115084 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219327398 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136260141 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110735879 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.141013085 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.198402955 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143120965 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173256997 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.196450809 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212864764 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172433717 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182487639 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150420132 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.135745524 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14679664 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162581883 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240775571 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156516486 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.123573597 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240003309 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.141038402 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1439381 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17910028 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.298524576 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158143486 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192242589 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.132194115 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.28642451 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111527891 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142567753 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176055595 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188931184 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.162396052 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.170525152 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176058948 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155216714 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176314428 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150152356 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204311946 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25253631 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186200927 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192557714 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.157875857 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176213551 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180192032 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194768746 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155980148 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.131739325 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176354803 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199949056 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.23180304 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.118262843 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177097617 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177548048 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174082046 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195612555 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145453413 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21754002 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143001783 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180380735 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153482125 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109646749 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172103096 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.223417396 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117212851 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219782366 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144981783 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143971528 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138643541 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166359227 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143362254 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156247137 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.141064344 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200022708 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.138919862 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17714143 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196835665 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11392502 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16802872 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159919199 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145738034 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129253003 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157928594 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148083374 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.15727887 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225545858 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.116382543 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222138107 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187846573 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181076608 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175080089 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128427205 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.67719007 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.14218356 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198816924 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162386765 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20832473 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164685901 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183387301 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175791889 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133459715 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181663042 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164297173 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.238181381 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179878678 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.179159725 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143472331 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157039539 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126331997 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.146386235 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1666418 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177054687 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153098005 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.123104894 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.175629935 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15950426 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.15889646 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149510631 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201939507 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132453508 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235343918 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19856609 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124411608 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179944287 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223503009 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111669486 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.180325634 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189972755 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153767004 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169219978 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.146702107 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.120265037 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196112961 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.134820696 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176065563 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173838403 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176566391 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178105274 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147446044 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146166662 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15652299 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175913626 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139809744 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.171703289 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171300256 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116856763 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.142765473 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168264951 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175810196 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.173148636 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110611052 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.184162552 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200632147 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.106266279 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146668702 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.295511067 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172220558 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209611733 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.169743243 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14802589 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157920762 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170914818 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.143086281 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173902754 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.142574986 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142766214 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.117316482 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.19802754 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.17196937 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171369814 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197697923 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178758035 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219208655 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.159616885 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.283751738 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150098735 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141096349 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.144939328 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.144834465 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124048092 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147585082 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161501833 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.206213175 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194100317 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.166652858 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.158107595 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140255312 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.106488855 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144369676 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178169767 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170671686 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171727661 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130485847 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.131796194 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15912794 seconds)
  done (took 84.713788768 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.153618298 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.144627461 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.156510266 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.206457874 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.173981297 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.266656404 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.211998965 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.236203154 seconds)
  done (took 2.580778456 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.107875691 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.144018273 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.151693474 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.131845392 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.132038543 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.440886367 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.14655796 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.132944344 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.195567553 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.14502667 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.127931007 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.609873937 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.129655039 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.131316182 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.12389111 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.130223631 seconds)
  done (took 4.003583044 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.509328597 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.551987477 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.018997693 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.2610164 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.242519136 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.189896446 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.75401581 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.179914026 seconds)
  done (took 12.735300577 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.136734016 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.150464768 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.360627686 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.225173687 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.169541534 seconds)
  done (took 2.084795295 seconds)
done (took 128.430815307 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.109735467 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.150708595 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.108490344 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.152719196 seconds)
  done (took 1.544981599 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.157595081 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.11971954 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.09438092 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.117606361 seconds)
  done (took 1.529909884 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.537644159 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.089207811 seconds)
  done (took 1.696102559 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.134641169 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.156092609 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.152223489 seconds)
  done (took 1.489049076 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.11722727 seconds)
  done (took 1.153135808 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.116220313 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.135274661 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.198852355 seconds)
  done (took 1.494189338 seconds)
done (took 9.948317161 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.13221405 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.435498061 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.423475435 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.115787506 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.737538033 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.383281452 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.047577142 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.165060744 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.216203651 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.125069162 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.117314382 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.70469232 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.069631176 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.345796597 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.053623963 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.436110094 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.705469864 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.096380235 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.131714363 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.125066516 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.993737697 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.123878579 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.098859278 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.124292252 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.677476036 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.445374196 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123569432 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.452503693 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.123806221 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.103305312 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.410685153 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09663565 seconds)
  done (took 17.365819312 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.145134471 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.194042643 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.137287776 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.098434508 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.134069683 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.097260795 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.138138547 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.140883477 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.208191573 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.09698733 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.148626481 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.123362327 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102915744 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.125015552 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.120731189 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.124916442 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097962313 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.125409396 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.106033915 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.128323886 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.145412216 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096957756 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.126380611 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.097473516 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.12400918 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.12869897 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.125875207 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.138128542 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097647096 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.13337193 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100553699 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124977789 seconds)
  done (took 5.081798998 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.151787017 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.20473842 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.139458502 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132184383 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.186513682 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.127202122 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.218357197 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.167129313 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.206907606 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124946655 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.121373509 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.125473881 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.140136943 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.126089364 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.149569923 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.097836297 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124935317 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.098406861 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.133320406 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.099318673 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.147523677 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.123422109 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.099860201 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.124717582 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.098157127 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.159039437 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095767688 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.140993646 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.124828541 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.105357775 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.129025336 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097665977 seconds)
  done (took 5.370615075 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.11318144 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.138905318 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.123611755 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.152751117 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.104038161 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.138195095 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.138462574 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.103886988 seconds)
  done (took 2.066807676 seconds)
done (took 30.925895565 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.12870582 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.14438944 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.117463551 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.138849026 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.204948936 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.100568238 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.143400246 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.100449978 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.139668582 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.119429236 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.126566599 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.102794735 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.147015557 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.10712822 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.185768355 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.141618539 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.194461776 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.188711545 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.10255408 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.141020064 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.101280735 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.194984654 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.138285856 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.131819285 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.169462624 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.131059998 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.183612147 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.106023069 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.135257011 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.133625615 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.160116485 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.138710295 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.130457336 seconds)
  done (took 5.676696922 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.211505983 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.214665088 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.103262672 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.1314547 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.216643713 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.102584342 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.207958965 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.13280355 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.102562005 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.131814147 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.101404154 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.208758072 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.221229126 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.230640222 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.244126455 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.217748359 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.206845897 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.214881127 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.202149194 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.220116794 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.209501358 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.132264669 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.220513276 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.218336181 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.101794937 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.131489182 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.24169241 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.217090813 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.241422019 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.201612723 seconds)
  done (took 6.591919565 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.114309833 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.147028273 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.124240454 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.203045527 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.166443596 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.107131316 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.144791473 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.151162988 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.124845651 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.125445238 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.114697226 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.165943085 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.144975912 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.110117851 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.131524269 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.118277802 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.155226605 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.100713685 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.135657973 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.117992882 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.147937 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.146427958 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.113127619 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.14005186 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.097828356 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.13625994 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.102666623 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.141362748 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.136945006 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.112566976 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.134722338 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.103827052 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.132092402 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.108168592 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.134332674 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.137821379 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.127114658 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.138825148 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.109400905 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.158852133 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.107780336 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.134172278 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.152351617 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.152837826 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.128944781 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.110672883 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.14044761 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.139913155 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.099727869 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.147532508 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.115547192 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.128557293 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.118186835 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.127516895 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.099701934 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138363584 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.127850776 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.102533265 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.141259436 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.10348019 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.15499196 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.104592501 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137578753 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.099883106 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.134766112 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.098819589 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.128072077 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.130756572 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.125748402 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.135660893 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.13329949 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.129169789 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.109173618 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.138497811 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.105773492 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.137713393 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.126591788 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106564834 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.13659013 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.10512639 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.140840747 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.102296302 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.132260044 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.117679448 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.148150193 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.138762573 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.109970272 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.139449139 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.102531542 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.129836049 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.141586337 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.101812696 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.13345622 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.112680969 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.12855023 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.102092094 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.139996235 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.10891596 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.128160991 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.119966039 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.136121238 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.098647898 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.148012642 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.127884694 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.104674075 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.138136535 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.112535214 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.12788401 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.10866007 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.141716471 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.097977993 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.133572554 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.103386128 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.127127258 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.144752391 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.110724126 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.133768039 seconds)
  done (took 15.899520739 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.315148564 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.317013515 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.209375282 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.376880704 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.156232406 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.208271117 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.314459556 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.331635831 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.105710629 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.176757528 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.189586978 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.284281843 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.10003726 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.163217721 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.314604061 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.382467331 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.131242785 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.178532607 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.173036662 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.156288997 seconds)
  done (took 5.656622055 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.126841139 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.175294927 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.161386873 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.163357454 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.106873457 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.14296188 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.099188726 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.154598273 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.136446595 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.10854019 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.127492472 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.114185813 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.137672653 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.10940292 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.148405046 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.177808213 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.104748879 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.137184857 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.154743113 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.108138786 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.139753279 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.160441641 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.110510441 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.159023632 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.143670433 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.115063537 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.12844233 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.107008208 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.132308123 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.104357871 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.136548787 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.151197924 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.106677085 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.135959958 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.109079821 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.142170952 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.102538704 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.132342761 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.101110883 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.134758178 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.115916568 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.140173559 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.134039512 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.097307181 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.114714349 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.132479208 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.112459478 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.141145 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.141881167 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.114121624 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.141831487 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.111608922 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.136511273 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.149805081 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.103146137 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.147088505 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.114272517 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.143360827 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.136484823 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.098471436 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.12586035 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.105516432 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.133200186 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.113257923 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.139129347 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.152320308 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.11592529 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.129883375 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.107408227 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.134414049 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.103854938 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.14800981 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.155456955 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.104439811 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.13305345 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.117477353 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.134758389 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.0912659 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.139885263 seconds)
  done (took 11.245508555 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.132178732 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.134596757 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.120882242 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.169169806 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.142338382 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.105927143 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.13368878 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.121312102 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.14229122 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.112564952 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.143107786 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.142445278 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.125610994 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.143114481 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.103527563 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.145240738 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.109423451 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.175064582 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.150688173 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.163906263 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.112341822 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.135546675 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.114014404 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.144060989 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.166307321 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.113339428 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.164838377 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.140052141 seconds)
  done (took 4.894867918 seconds)
done (took 51.022469057 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.208228859 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.376526086 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.155561897 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.153193577 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.180062312 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.157124645 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.152939001 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.368003728 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.855814938 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.152089388 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.153937687 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.148682474 seconds)
done (took 27.138008829 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.439881134 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.641724233 seconds)
    (2/2) benchmarking "String"...
    done (took 1.459488087 seconds)
  done (took 4.174758664 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.145680833 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.146875345 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.393773594 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.146236641 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.166832396 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.16858791 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.147423046 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.169641793 seconds)
  done (took 15.411394143 seconds)
done (took 25.245140259 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.190840135 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.333610701 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.400062722 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.174660288 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.158181921 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.148005089 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.165762978 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.174802198 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.162743985 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.160832524 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.561000999 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.406323244 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.167854387 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.526927435 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.161566224 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.183167782 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.148563066 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.372791594 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.154808896 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.191823999 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.139071606 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.139595997 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.176489652 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.165206433 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.153564455 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.163042692 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.180665903 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.16192773 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.319744022 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.185875611 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.197304858 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.152623325 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.184836641 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.155054304 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.158691734 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.157035256 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.332211127 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.159178793 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.144612701 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.152578798 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.32500398 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.173412816 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.152690179 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.150843723 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.161478536 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.1922639 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.150689934 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.259819545 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.173574681 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.150714006 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.224611969 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.523001167 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.154258417 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.157460882 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.179303952 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.358700864 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.165342117 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.208613759 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.176718923 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.157540017 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.169538162 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.163916951 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.162767871 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.157628058 seconds)
  done (took 140.451247781 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.149648894 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.155927248 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.152918267 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.172812943 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.157917538 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.153766685 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.151541824 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.150992438 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.155363401 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.184696856 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.154908259 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.151921199 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.154866812 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.167343439 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.149583728 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.172033623 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.156514328 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.147867347 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.170854863 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.149340435 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.157568811 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.156449248 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.150304788 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.148212495 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.195037658 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.242525644 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.18580712 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.148854753 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.160198154 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.148423038 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.187984273 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.16898429 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.749715399 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.02088545 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.159446164 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.173210696 seconds)
  done (took 78.392582312 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.153426081 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.150103588 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.148936648 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.182235304 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.150445821 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.718107915 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.725159985 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.864875485 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.160579905 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.469899686 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.430625991 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.156421925 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.245201923 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.164772659 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.150337415 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.167044578 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.198152843 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.157540316 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.151101209 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.712001622 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.168218961 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.28591218 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.321804086 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.166067065 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.180697931 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.550299012 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.14914486 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.179773212 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.480607179 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.197494139 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.150310934 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.502579489 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.605513676 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.267362798 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.150960188 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.180568897 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.150912486 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.429961136 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.151058701 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.152011059 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.152922107 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.804958393 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.153663546 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.708142363 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.154889378 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.076566052 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.155417445 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.150058343 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.915240636 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.781710047 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.171742661 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.150476792 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.153783179 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.150057306 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.151497981 seconds)
    (56/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.148963373 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.18216279 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.885347902 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.242740639 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.169976606 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.154362334 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.183149135 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.152368442 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.159567828 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.152765501 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.19972303 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.228776673 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.296727848 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.707442095 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.155860578 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.245748225 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.269534512 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.152008459 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.151544086 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.151527339 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.152055068 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.262391047 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.152673427 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.551957198 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.323193958 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.168742589 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.149355782 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.448002972 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.156646038 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.245517983 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.153060156 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.525090777 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.156720622 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.152198657 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.91255669 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.157012602 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.247084836 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.15369351 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.153291724 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.152953602 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.553884924 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.707631533 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.371609658 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.156809271 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.281292098 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.155294357 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.562212657 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.684324163 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.837115535 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.158417519 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.264518155 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.324344957 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.169657234 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.149249766 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.424851454 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.155863274 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.206110496 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.155686056 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.549229157 seconds)
  done (took 359.829909002 seconds)
done (took 579.744655787 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.898648152 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.857909237 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.98825844 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.880544175 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.839889454 seconds)
  done (took 10.542588199 seconds)
done (took 11.61856799 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.337706796 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.340360685 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.209608089 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.341683382 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.186642066 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.353933953 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.320150495 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.172393542 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.255836044 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.229497177 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.258112072 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.202326344 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.185842163 seconds)
  done (took 17.471927636 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.42883178 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.161623045 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.224535724 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.398661581 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.201125254 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.42966832 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.457247368 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.163596439 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.298912444 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.170924619 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.17080861 seconds)
  done (took 17.181786662 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.423298306 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.164200874 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.246106316 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.401416052 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.201108993 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.430067081 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.458042052 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.163160325 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.301263312 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.169825271 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.169591297 seconds)
  done (took 17.2075383 seconds)
done (took 52.938010957 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.194963348 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.321250629 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.186878362 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.173857851 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.165314036 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.167684689 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.17265976 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.1667348 seconds)
  done (took 10.627746303 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.164773455 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.164093776 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.164463225 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.164898709 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.163139164 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.16398389 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.165238519 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.162791278 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.16368594 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.162640513 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.163831379 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.164374071 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.163017045 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.162592465 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.163593478 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.163497724 seconds)
  done (took 19.700631212 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.166625723 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.164670495 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.164653456 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.163843647 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.163425081 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.162944722 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.164768445 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.162184531 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.163438291 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.164297321 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.164181419 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.163799916 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.165150398 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.163040208 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.16290809 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.164265659 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.163705839 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.164680296 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.167817312 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.164102092 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.164620005 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.16413758 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.163116962 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.163260846 seconds)
  done (took 29.018560732 seconds)
done (took 60.425209502 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.154730476 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.171581718 seconds)
  done (took 5.405091925 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.223341922 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.223193758 seconds)
  done (took 3.526204722 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.163632429 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.163579996 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.164206976 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.164006204 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.164028741 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.163274378 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.164410693 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.163398485 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.16416194 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.164300794 seconds)
  done (took 12.71528267 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.164221484 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.164958015 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.163773652 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.165337159 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.166084079 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.164496052 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.165278263 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.164518199 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.165015414 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.165489517 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.165001739 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.16490884 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.164900772 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.164808157 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.164910432 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.165272242 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.164922386 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.164752056 seconds)
  done (took 22.04776277 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.179188818 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.185942188 seconds)
  done (took 3.444453076 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.306577548 seconds)
    (2/7) benchmarking "second"...
    done (took 1.206994559 seconds)
    (3/7) benchmarking "month"...
    done (took 1.281874792 seconds)
    (4/7) benchmarking "year"...
    done (took 1.270524018 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.206199721 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.186544059 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.207724512 seconds)
  done (took 9.745599974 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.166601081 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.357335365 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.467746002 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.70313993 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.165105909 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.191674301 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.991103035 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.190097008 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.187200563 seconds)
  done (took 13.500349624 seconds)
done (took 71.464969293 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.155371669 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.215527303 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.173216029 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.192382591 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.503800865 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.206838322 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.1588337 seconds)
done (took 15.685600492 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.145885611 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.157383786 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.165445265 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.176891182 seconds)
  done (took 9.724731737 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.136042886 seconds)
    (2/2) benchmarking "read"...
    done (took 1.461683973 seconds)
  done (took 4.674300451 seconds)
done (took 15.479694647 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.168793261 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.166054983 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.165643658 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.166277957 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.167587721 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.165758441 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.165980275 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.166592395 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.166454581 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.165343117 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.166868856 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.164892174 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.166657573 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.168533639 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.167169032 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.166963813 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.16750587 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.166777504 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.168120795 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.168128139 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.167005516 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.166777064 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.168063974 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.168678397 seconds)
  done (took 29.087568308 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.169475865 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.166530426 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.168827623 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.168876731 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.168163404 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.168484858 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.167311883 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.168248115 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.167797974 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.167910334 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.168057929 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.168784247 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.16858363 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.168706432 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.169013727 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.167438339 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.169378151 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.169018006 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.168113206 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.169837677 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.168632196 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.168932647 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.168950151 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.168287193 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.169941342 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.169866573 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.169675342 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.169103083 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.170380279 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.16872081 seconds)
  done (took 36.143702734 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.173875059 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.173163224 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.169844306 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.168702977 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.169152822 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.170773433 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.169630826 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.169351676 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.169521368 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.170281221 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.167789039 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.168779482 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.169550893 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.16985711 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.170560647 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.168784164 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.168888848 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.168892144 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.168637201 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.169220469 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.169543692 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.169004971 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.170943077 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.169784704 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.169410027 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.169690062 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.168379542 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.169186431 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.169224125 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.168320611 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.168207557 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.169146108 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.16933692 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.168530392 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.16940981 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.169183247 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.172975843 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.17444849 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.168640605 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.171440452 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.169479959 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.169875097 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.169536072 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.170606768 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.169646817 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.169023522 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.168230562 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.168705594 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.170152762 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.169307949 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.168653879 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.169060539 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.16874236 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.16947127 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.169466008 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.169750519 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.169386547 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.169260903 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.169527404 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.16839788 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.1690152 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.169273388 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.170303732 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.16943517 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.170627361 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.170613569 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.16927148 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.167744216 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.169810708 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.168841908 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.169997466 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.169420199 seconds)
  done (took 85.297254621 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.170340549 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.171121415 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.169486415 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.168826954 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.169820594 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.168878918 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.168965744 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.169279439 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.16867673 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.17050213 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.168855145 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.171485617 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.170621546 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.170063127 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.16993454 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.1695241 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.168999658 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.170885239 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.170505542 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.171139416 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.169605214 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.171203818 seconds)
  done (took 26.822724366 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.171921757 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.171921972 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.172431822 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.173194595 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.172691824 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.169806684 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.171916348 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.170354512 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.171383074 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.169148059 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.171299718 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.170766137 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.171766273 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.170326789 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.168994951 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.172167349 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.169209432 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.17289512 seconds)
  done (took 22.164953484 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.171845179 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.172023475 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.170353838 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.16977781 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.168516747 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.170900864 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.169450379 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.171095759 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.169686964 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.171270655 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.171534973 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.170557578 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.169378744 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.170013829 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.16911097 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.17060766 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.170076037 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.170905049 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.169749438 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.174117648 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.171200908 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.17076412 seconds)
  done (took 26.837179323 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.170085044 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.171884896 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.169815134 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.171015279 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.171840175 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.170298627 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.170616166 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.171217099 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.171653023 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.172511796 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.171753901 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.171152548 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.172403321 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.171251478 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.171096781 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.169400416 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.171520624 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.171063441 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.170292987 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.172316992 seconds)
  done (took 24.506983548 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.172166531 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.172576796 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.173096579 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.17346145 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.174527828 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.172823938 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.174038432 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.173588487 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.174067184 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.174990641 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.173530828 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.173407328 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.17278036 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.174833624 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.173917617 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.174499772 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.175942744 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.17541003 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.175281585 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.173656092 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.173254603 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.175197546 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.17461326 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.17438544 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.17473012 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.174555379 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.175586917 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.173526093 seconds)
  done (took 33.959582022 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.174440874 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.172033856 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.174978797 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.174967791 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.173815511 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.173393427 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.173827469 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.175077329 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.174266542 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.174988271 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.175592545 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.174206477 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.173643991 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.173474453 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.174594527 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.173822652 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.173837058 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.17407351 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.173743893 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.175288775 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.173830333 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.174322776 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.175519323 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.174056398 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.174962157 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.174402309 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.174351143 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.174837025 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.175259123 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.175440199 seconds)
  done (took 36.317280886 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.222223823 seconds)
    (2/2) benchmarking "in"...
    done (took 1.216923919 seconds)
  done (took 3.526576236 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.176115459 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.174699551 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.175962049 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.176008317 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.17610445 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.174831341 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.175104087 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.175522748 seconds)
  done (took 10.492269408 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.171707396 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.1767702 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.175219026 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.17552598 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.176296501 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.172423589 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.18262187 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.18308098 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.17407465 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.173644183 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.177035656 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.177237813 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.175061285 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.176047298 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.174735949 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.177158595 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.181100425 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.176358464 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.177979073 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.177694034 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.176031512 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.176881441 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.178978535 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.181638694 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.174604231 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.182371528 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.182134253 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.1807895 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.172767266 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.179299416 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.175680892 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.179875828 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.177473501 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.177775389 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.178291106 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.177716703 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.184820648 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.198549895 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.183130644 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.184050319 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.18036283 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.17790985 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.175422588 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.178292397 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.17759083 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.179816761 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.178637019 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.178162516 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.175790568 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.178107382 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.182866919 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.174001367 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.179789996 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.178039491 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.18031416 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.184739288 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.201545124 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.178760826 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.180116266 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.182844283 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.191149337 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.186173041 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.179989209 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.183529937 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.183735369 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.190088278 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.186481165 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.185930624 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.180362081 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.179914255 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.182994753 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.192213777 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.189847244 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.181755339 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.181414965 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.180457595 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.177389323 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.181957591 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.184670025 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.185894334 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.182640683 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.1818437 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.18524107 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.190199717 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.17751684 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.182858819 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.181380122 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.18178647 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.178311548 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.188192086 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.204898662 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.181645048 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.175185052 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.178461346 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.178711973 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.184302349 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.178034373 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.180755089 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.184545039 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.182869681 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.18140266 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.18085351 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.18353809 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.185454628 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.183175978 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.186414625 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.186915717 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.178653266 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.18648888 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.186658711 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.181999183 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.180698907 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.183824944 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.183279068 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.180022427 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.184270139 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.185210222 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.180421071 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.185338035 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.182159715 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.186691134 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.197344231 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.185255468 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.183875376 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.183368944 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.189233989 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.184648894 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.183344991 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.188222978 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.182478733 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.183234368 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.18184122 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.185902869 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.18036238 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.184491805 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.181857583 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.184718446 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.185780327 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.186149548 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.181070349 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.183637502 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.182541037 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.182317474 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.185234912 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.185621978 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.182808029 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.191427065 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.184761392 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.183107031 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.184464096 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.186336459 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.18618883 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.182463503 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.187192691 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.181391222 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.185584872 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.181705177 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.187163655 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.186724634 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.186013956 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.185890318 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.182068385 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.184720213 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.186957633 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.186493309 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.184465245 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.188264596 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.187858488 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.187108896 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.18184354 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.186980198 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.18311676 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.186000716 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.18919645 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.185907552 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.185600892 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.185381273 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.188455031 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.188102446 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.186051641 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.184857231 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.187347469 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.187642555 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.190731592 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.192254521 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.187073725 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.186887254 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.182009951 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.183488515 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.18643382 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.185451814 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.192427891 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.195402445 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.197818206 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.185640342 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.18980061 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.185039257 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.189492835 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.18938242 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.190892768 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.188571201 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.187933787 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.184080269 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.187992453 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.185865216 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.189366578 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.183370981 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.189506083 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.189448744 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.187315783 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.189914667 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.186284662 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.18629923 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.189402113 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.187453734 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.187355055 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.183819118 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.189536499 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.184508231 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.186402473 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.191002392 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.187705649 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.192042878 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.191257906 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.18702538 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.192298774 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.188935058 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.186464481 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.190154569 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.187655661 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.188888727 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.194737953 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.19232815 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.18775911 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.19637932 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.208878554 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.185498939 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.191224401 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.194288358 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.190265539 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.187245599 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.195304451 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.191607179 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.192021012 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.190468359 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.187550232 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.19440374 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.19464957 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.195920412 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.187399563 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.192934546 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.188313367 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.192909214 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.19027238 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.189782356 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.190003973 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.192540665 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.196000221 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.192979299 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.188107827 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.192297555 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.192709681 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.192282257 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.189313008 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.196006185 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.193814514 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.191560266 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.189960204 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.18983745 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.194172178 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.188839877 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.192273288 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.189171563 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.201063622 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.20428032 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.194921554 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.1952342 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.19453808 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.196760172 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.195028446 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.190458473 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.189519394 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.190194877 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.1900251 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.189228629 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.193905242 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.189584926 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.193692352 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.190988054 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.192039366 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.195759344 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.193708375 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.189853644 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.193759826 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.194207042 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.194172621 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.189167778 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.194479648 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.192127317 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.192948559 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.192447739 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.190363836 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.19900687 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.195570734 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.193435842 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.191821274 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.190822879 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.190478851 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.192243457 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.196129636 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.19352207 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.198551032 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.192866132 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.196301416 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.192425368 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.198762333 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.196417954 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.194297567 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.198993532 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.196002213 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.190121149 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.191001112 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.194959812 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.200952415 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.200827647 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.193125163 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.197601289 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.194595448 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.196290187 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.195879954 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.196187122 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.196204938 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.19541965 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.201857542 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.217156138 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.196039066 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.195356952 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.198911327 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.195844574 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.197943836 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.192669987 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.197922473 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.199915007 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.194784535 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.195517265 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.193429777 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.197835038 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.197176297 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.198129985 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.1977928 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.197439224 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.200832588 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.197929625 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.198880542 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.196794557 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.200034927 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.199404406 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.201438011 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.20220108 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.193236988 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.19203407 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.191136004 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.188470309 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.18702663 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.189105771 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.193182917 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.189237454 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.195833089 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.185063808 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.180563618 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.181972031 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.183552052 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.179380296 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.187873446 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.197006024 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.180122261 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.179546586 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.176014025 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.172503315 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.177091762 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.175455755 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.171564529 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.173559941 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.176672178 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.181246031 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.16555853 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.171086815 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.167346327 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.170459608 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.170002749 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.169326155 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.170484027 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.170736234 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.165001844 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.167454018 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.167282453 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.170143701 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.164237405 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.165735903 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.164062673 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.17365992 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.172826974 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.16155952 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.163805426 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.165937217 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.159424751 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.163433836 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.164593267 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.160408125 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.165854732 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.158784468 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.160970404 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.161451826 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.160717395 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.157389913 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.154507983 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.151338042 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.158073992 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.161428958 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.156613755 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.154920242 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.155411271 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.154167051 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.155632163 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.148698007 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.155622258 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.152544268 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.15593959 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.150425786 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.148610944 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.150143234 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.152873846 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.151506369 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.154325713 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.148442539 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.15033323 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.15867982 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.155724715 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.154668199 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.152861235 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.154895974 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.148792917 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.150625786 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.154455854 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.151401788 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.141089599 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.146623591 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.147023186 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.144963909 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.144696913 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.148224194 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.151119766 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.15289922 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.147694031 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.154892886 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.17260182 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.152900408 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.1486061 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.147909798 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.148297852 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.149938073 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.150229858 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.14654838 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.15479171 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.152966038 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.150770823 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.148581091 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.147772591 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.145858778 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.152355953 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.149349821 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.148061563 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.153072913 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.148358873 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.153577406 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.152074335 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.151057659 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.147768414 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.148113107 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.150706362 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.152432203 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.151734971 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.150293035 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.151837032 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.149495964 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.154490814 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.152456883 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.151554706 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.151516959 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.147312247 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.153235906 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.147186285 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.152282681 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.150025942 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.148663159 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.155772142 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.152023809 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.151066648 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.154125446 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.15704343 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.152454686 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.148905113 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.151426126 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.153556448 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.156823014 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.153032606 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.148784446 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.151044267 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.153701781 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.153489994 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.153472934 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.150508548 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.162844374 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.175250311 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.150680159 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.151212536 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.155005001 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.156923995 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.153381818 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.155447783 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.152183837 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.154588405 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.157976587 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.154273283 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.159246306 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.173254908 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.151639716 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.157637512 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.15162212 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.154405825 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.154245383 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.154982023 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.155002277 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.153489833 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.1631976 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.159419414 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.158061283 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.172218532 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.159171288 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.156242303 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.156325619 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.150983311 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.155538966 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.154134256 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.157962863 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.156704185 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.155176684 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.155978034 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.152390619 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.157806829 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.156091746 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.159720598 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.157766416 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.153035033 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.154078853 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.157176791 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.156535888 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.158139226 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.155886832 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.156756026 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.157732032 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.153382485 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.16501137 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.167398299 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.159801347 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.156903273 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.155830192 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.158383849 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.157533631 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.159219643 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.161041655 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.157072518 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.15598538 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.156097672 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.158774515 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.158746106 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.153642043 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.154487893 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.153599259 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.159096799 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.166005166 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.169996133 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.161361941 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.157784825 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.158096245 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.157895123 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.15526045 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.159179456 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.157024484 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.154893573 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.156512668 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.159550655 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.159177847 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.157418217 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.153799681 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.161923982 seconds)
  done (took 702.167965805 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.159914284 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.158318419 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.159000926 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.158985689 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.158454597 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.158922 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.160598589 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.159292076 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.156243356 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.160309236 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.160321077 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.158911728 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.156080145 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.153186236 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.152142761 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.152608759 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.154145324 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.154124678 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.155062079 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.151745178 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.154876996 seconds)
  done (took 25.367217959 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.146452179 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.146480051 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.146938769 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.153170269 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.14720554 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.15204143 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.150697298 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.150871275 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.154777386 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.157084178 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.155663738 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.159027441 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.150920087 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.156713985 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.158852729 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.157415017 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.14898427 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.145652158 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.150264751 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.150467462 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.146480625 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.147683194 seconds)
  done (took 26.403190351 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.147812945 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.151978929 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.147440495 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.147895154 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.143556361 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.141509907 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.141249917 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.143179489 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.142273679 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.147510314 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.146922653 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.141331613 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.142453303 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.148885961 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.143505262 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.144544105 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.144083522 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.145961671 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.146493743 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.143728179 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.148927518 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.152335091 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.147082616 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.142832906 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.143842263 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.147072009 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.145951019 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.147463713 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.144943911 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.147397513 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.150584836 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.144174863 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.145009978 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.14471436 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.14696221 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.154703972 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.152377323 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.146414513 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.147710189 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.149765464 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.158629982 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.151550739 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.15645079 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.154672685 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.147918064 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.142282589 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.14609116 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.143186585 seconds)
  done (took 56.12399416 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.142513571 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.142716239 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.142533028 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.142787327 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.143228419 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.145335188 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.140984789 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.145043756 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.141264839 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.145174234 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.144742477 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.142717407 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.141203866 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.142775079 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.143183199 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.140630204 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.145690078 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.142378974 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.142331681 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.143757008 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.14234475 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.145949883 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.146418405 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.142527061 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.144208274 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.14486095 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.150509624 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.147356364 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.146609532 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.150561711 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.14972611 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.148278561 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.147026724 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.148605415 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.145059822 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.144230323 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.14334493 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.145227697 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.144155472 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.146645296 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.144408805 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.144488363 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.148112737 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.144093683 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.145209723 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.145171267 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.146541137 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.145229826 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.143932518 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.144646606 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.144442115 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.145380316 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.148722571 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.144485197 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.147450904 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.14861737 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.151132873 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.144417487 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.147284478 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.14854146 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.145458256 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.14707597 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.144919724 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.146672424 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.14599274 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.14692601 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.14572353 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.144625877 seconds)
  done (took 78.930452271 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.146645552 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.145879264 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.144880301 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.147491928 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.147221279 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.149872834 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.14674415 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.146350625 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.148446999 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.147663729 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.147495271 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.146397416 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.150433045 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.147515282 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.146824858 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.146652047 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.149196345 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.147702089 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.148658056 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.146927748 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.146504906 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.153410786 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.146624773 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.147246356 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.146881314 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.149594725 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.146576194 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.148842639 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.14741766 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.150407914 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.151170276 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.150669197 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.148226796 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.152664716 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.147289347 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.148908909 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.151904081 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.15047656 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.147903608 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.148251267 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.147790255 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.148728059 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.148656711 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.150902907 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.148487025 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.149169688 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.149108048 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.149292856 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.149637811 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.148814732 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.151890585 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.150243138 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.148823411 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.15135523 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.149285732 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.148955221 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.148237167 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.153748271 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.151245591 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.154640737 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.150987576 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.150115342 seconds)
  done (took 72.288686201 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.148990743 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.153919916 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.152404061 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.149304001 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.152671491 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.149597228 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.150567363 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.149228903 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.150976529 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.150126008 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.152182891 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.151165712 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.152522539 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.153389789 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.150251441 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.151664593 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.149890451 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.150139086 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.151475114 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.151159783 seconds)
  done (took 24.080067317 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.153864468 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.150770566 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.15197665 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.153722765 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.151112353 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.151116892 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.156613467 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.150480544 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.150359778 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.151932956 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.150628601 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.15230245 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.153980542 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.155324018 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.154599444 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.155240095 seconds)
  done (took 19.502009622 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.154155898 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.154681598 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.150750516 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.153056471 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.156269047 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.151024469 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.152976148 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.154398938 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.154795778 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.156315247 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.156849587 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.156151915 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.153421102 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.152182144 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.155561685 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.15269003 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.153311738 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.156657824 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.152403527 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.154189184 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.156123942 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.152684933 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.153559413 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.153657286 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.155560631 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.153954166 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.155297257 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.156327737 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.154915922 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.155260184 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.153775451 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.15313645 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.157019518 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.155486893 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.154000655 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.154472829 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.156933794 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.154695602 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.15413499 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.154586424 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.154030218 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.155596057 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.153457556 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.157306243 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.156004693 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.154159774 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.1581691 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.157316555 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.154517309 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.155016822 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.160734116 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.155756671 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.1577455 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.15923995 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.155682096 seconds)
  done (took 64.589179339 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.157806965 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.160164621 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.157377681 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.156746411 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.156457179 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.156443653 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.159152256 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.156935809 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.156329291 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.154701712 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.155014621 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.157951248 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.155795923 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.156236419 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.159367667 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.156495546 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.159367707 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.157516787 seconds)
  done (took 21.894950623 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.157625752 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.157149108 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.158238837 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.157444079 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.160409612 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.160919599 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.157850934 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.160855366 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.159951995 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.156624535 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.156631806 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.157851474 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.15980033 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.157998416 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.159964843 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.160017677 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.15783792 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.161083351 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.15745213 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.15743405 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.158908114 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.160005969 seconds)
  done (took 26.561000024 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.156890589 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.153252521 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.1556867 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.167515394 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.168184589 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.15517719 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.157854928 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.156047664 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.174705487 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.200715757 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.193964327 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.167224531 seconds)
  done (took 15.072059636 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.159783622 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.159859813 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.162740059 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.161878109 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.162897482 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.15919964 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.157960084 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.159682483 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.158435532 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.162441434 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.163079381 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.159328095 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.163311985 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.16123001 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.160651018 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.16399887 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.159824682 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.166440537 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.161661016 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.161905368 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.162032761 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.165713963 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.161046041 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.162336518 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.161495906 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.161303588 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.160116231 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.160689362 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.166106844 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.162439313 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.163003073 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.161610976 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.160984518 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.167806466 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.16419625 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.161445187 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.160182643 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.165444476 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.165793517 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.163469347 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.160875068 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.166760729 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.161935654 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.159804467 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.164526654 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.164821618 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.161931859 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.161675557 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.165693296 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.164990195 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.165981539 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.166303298 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.166309733 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.160820747 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.162745989 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.161741373 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.166952926 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.162886073 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.163181417 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.164586085 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.161761951 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.163217446 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.167949854 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.16706634 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.16713674 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.162954667 seconds)
  done (took 77.817807692 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.165848136 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.163101214 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.170847061 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.166153572 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.164068231 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.164781678 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.164916371 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.168050225 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.162158091 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.161917385 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.162300253 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.162941556 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.164343792 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.16471172 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.164593549 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.163743493 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.162110049 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.163665505 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.163186383 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.164482232 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.1640958 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.166523657 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.165218396 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.163880329 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.1659718 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.164526915 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.164674932 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.167081011 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.165401418 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.163753008 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.167594668 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.165804279 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.172430214 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.165040157 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.165255257 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.164155336 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.168064768 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.16810664 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.166883504 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.165438488 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.166957364 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.166626318 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.16527646 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.164922746 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.164454569 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.164248644 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.164714204 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.168820578 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.165425824 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.165537371 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.164127058 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.167989963 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.166856911 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.167789353 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.164859531 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.167365648 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.165601562 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.165945554 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.165277946 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.169834894 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.167027663 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.167959116 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.17166 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.167004368 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.170416503 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.168942096 seconds)
  done (took 78.027674638 seconds)
done (took 1625.064030181 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.331887429 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.282042828 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.162761566 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.178268048 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.161162518 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.187835269 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.17631033 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.161426359 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.162090642 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.162826319 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.16403924 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.356232846 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.157483179 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.16244035 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.165649307 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.25967511 seconds)
  done (took 24.304673497 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.186756106 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.175841947 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.27577627 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.185664891 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.197343566 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.353058143 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.228744186 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.175465402 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.325923924 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.187550502 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.17172114 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.203004027 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.178843189 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.172622343 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.187512096 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.350731295 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.400571795 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.170660623 seconds)
  done (took 26.200487832 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.583985729 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.167370377 seconds)
  done (took 4.831944555 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.194244724 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.176861617 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.173325837 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.173075203 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.166111745 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.167602208 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.170855987 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.17519637 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.171215506 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.290425905 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.178055722 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.189435921 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.185106306 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.173671674 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.17822974 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.215758985 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.312431578 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.180374862 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.178274478 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.185917445 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.173042568 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.265773306 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.212964036 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.180989628 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.285875504 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.176951307 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.184132343 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.181037879 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.345616238 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.182783287 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.170947592 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.175531798 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.174999349 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.167622398 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.641759108 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.181945585 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.196473983 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.199069823 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.179186209 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.321363089 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.179974684 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.183240286 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.168969301 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.60429216 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.334641577 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.284619629 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.182549549 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.178319244 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.17811909 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.235383305 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.182169406 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.176269222 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.230411039 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.948878354 seconds)
  done (took 76.587334627 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.173756817 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.168169733 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.351014249 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.18748645 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.170165028 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.170263253 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.185511263 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.432191093 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.185710903 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.178916632 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.449684385 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.717576831 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.178875013 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.257697316 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.041930379 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.245001442 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.169996083 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.172124846 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.16909626 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.167497877 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.702673134 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.174097654 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.172656871 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.363357699 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.207051253 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.666395836 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.171245629 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.181404116 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.174860463 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.172461749 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.673912182 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.185326419 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.241655042 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.172154851 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.435936154 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.523654024 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.487710562 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.172385617 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.17429946 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.176570492 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.181356162 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.643901312 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.505766095 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.176962048 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.185455259 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.673980381 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.171896014 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.183934379 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.182448628 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.418987978 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.17560691 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.174397681 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.172279497 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.183118176 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.172602153 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.185828936 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.267389765 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.662334078 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.1715917 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.188236139 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.207040932 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.176932912 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.178453859 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.174225958 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.188332265 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.512563238 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.408473173 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.175445071 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.512121872 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.67046989 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.186806112 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.734586633 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.184749425 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.204431079 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.392872753 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.176315467 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.184098357 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.660935616 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.221254089 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.174246666 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.491566009 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.176633245 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.455371501 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.193921182 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.189457023 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.742517908 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.187209742 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.187181763 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.180529555 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.180304978 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.180207615 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.182172147 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.43803268 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.228617077 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.17821419 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.178657049 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.206597949 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.183326186 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.175902138 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.182535968 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.735977961 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.19290724 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.17423021 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.18060075 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.183725758 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.17617113 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.179044815 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.177402425 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.438549906 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.179987285 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.1820903 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.179361291 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.178606146 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.181344639 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.355695096 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.180779349 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.460948132 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.179129162 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.180342011 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.181618007 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.175717236 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.229865792 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.176661127 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.18037151 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.056403794 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.453316852 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.192837107 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.176504827 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.180637384 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.176306804 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.177620645 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.180712694 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.222631796 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.179649842 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.94502943 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.192578187 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.195260847 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.180740649 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.184950921 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.179780424 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.18096258 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.183585123 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.464564002 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.443396811 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.40583441 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.178035053 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.179972018 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.929218407 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.199166891 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.358164723 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.192790701 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.179873084 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.422495302 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.410251942 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.177129426 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.177294337 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.176837178 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.434158316 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.179534762 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.478189694 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.710753341 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.189925997 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.187404218 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.950171808 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.860823778 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.179145928 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.183470891 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.451140508 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.192543424 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.179411897 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.18183533 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.178016416 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.192120888 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.196839053 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.185679702 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.179670293 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.180287734 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.228634943 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.370076671 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.198004572 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.190690755 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.666680974 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.224302719 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.181047937 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.199346396 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.185144061 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.183303381 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.248355419 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.189972073 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.196597139 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.183195472 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.189953185 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.683643858 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.179601858 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.188137298 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.373099716 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.854947769 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.194755513 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.182292316 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.184183032 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.111848596 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.695180981 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.208468185 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.469537711 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.183377508 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.218433739 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.185292467 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.265543465 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.690957575 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.191022535 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.186631307 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.818940696 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.19458996 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.734603221 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.180937395 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.183839497 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.755301258 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.195296793 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.181771916 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.183582973 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.191346199 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.477210574 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.185306809 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.236961967 seconds)
  done (took 462.87678198 seconds)
done (took 595.875869993 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.18203259 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.185424362 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.181212089 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.189068256 seconds)
  done (took 9.83052695 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.199246909 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.192094038 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.199282451 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.187956631 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.198907536 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.189927395 seconds)
  done (took 8.277218428 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.187215944 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.191200026 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.192257256 seconds)
  done (took 7.670858004 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.378261713 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.205260488 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.503808137 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.209452537 seconds)
  done (took 8.400659209 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.202873009 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.194462108 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.194303295 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.197255641 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.2000921 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.201265881 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.199269491 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.195324394 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.201866827 seconds)
  done (took 11.894289617 seconds)
done (took 47.173241651 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.935820846 seconds)
    (2/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.335042693 seconds)
    (3/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.361028179 seconds)
    (4/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.248755239 seconds)
    (5/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.241518444 seconds)
    (6/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.222030119 seconds)
    (7/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.224664195 seconds)
    (8/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.964731589 seconds)
    (9/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.279744589 seconds)
    (10/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.225832946 seconds)
    (11/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.3775973 seconds)
    (12/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.354051958 seconds)
    (13/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.233834733 seconds)
    (14/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.245713506 seconds)
    (15/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.292433582 seconds)
    (16/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.327253398 seconds)
    (17/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.227538493 seconds)
    (18/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.244502018 seconds)
    (19/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.321337887 seconds)
    (20/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.195088796 seconds)
    (21/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.432943889 seconds)
    (22/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.230225127 seconds)
    (23/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.231262047 seconds)
    (24/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.223969583 seconds)
    (25/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.8970807 seconds)
    (26/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.24718655 seconds)
    (27/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.268549389 seconds)
    (28/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.20546335 seconds)
    (29/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.220284409 seconds)
    (30/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.012913462 seconds)
    (31/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.18100686 seconds)
    (32/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.287564445 seconds)
    (33/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.177689901 seconds)
    (34/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.187407727 seconds)
    (35/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.218410144 seconds)
    (36/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.878934641 seconds)
    (37/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.322352121 seconds)
    (38/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.219489661 seconds)
    (39/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.932759358 seconds)
    (40/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.23629711 seconds)
    (41/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.22163566 seconds)
    (42/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.336550621 seconds)
    (43/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.205065943 seconds)
    (44/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.275932522 seconds)
    (45/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.402009467 seconds)
    (46/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.937920018 seconds)
    (47/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.237280185 seconds)
    (48/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.058827871 seconds)
    (49/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.229054955 seconds)
    (50/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.291289523 seconds)
    (51/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.226572233 seconds)
    (52/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.086802383 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.315701027 seconds)
    (54/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.182606728 seconds)
    (55/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.874706409 seconds)
    (56/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.374518381 seconds)
    (57/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.192993974 seconds)
    (58/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.246294033 seconds)
    (59/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.342345942 seconds)
    (60/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.186850365 seconds)
    (61/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.191467463 seconds)
    (62/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.283703223 seconds)
    (63/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.31155193 seconds)
    (64/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.843501487 seconds)
    (65/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.935020908 seconds)
    (66/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.334840059 seconds)
    (67/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.282339489 seconds)
    (68/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.245864024 seconds)
    (69/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.206737391 seconds)
    (70/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.352774311 seconds)
    (71/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.348865955 seconds)
    (72/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.232452542 seconds)
    (73/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.266928019 seconds)
    (74/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.853162415 seconds)
    (75/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.322561564 seconds)
    (76/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.187716176 seconds)
    (77/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.182203708 seconds)
    (78/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.270631189 seconds)
    (79/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.32513584 seconds)
    (80/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.106202422 seconds)
    (81/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.348436402 seconds)
    (82/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.204149589 seconds)
    (83/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.238875824 seconds)
    (84/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.276931676 seconds)
    (85/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.189253291 seconds)
    (86/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.23972495 seconds)
    (87/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.289297207 seconds)
    (88/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.273395999 seconds)
    (89/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.184692028 seconds)
    (90/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.287431798 seconds)
    (91/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.371588021 seconds)
    (92/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.847940886 seconds)
    (93/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.339091665 seconds)
    (94/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.293248507 seconds)
    (95/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.33393734 seconds)
    (96/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.340321443 seconds)
    (97/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.238053554 seconds)
    (98/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.336113653 seconds)
    (99/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.309261673 seconds)
    (100/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.22767325 seconds)
    (101/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.191234935 seconds)
    (102/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.181868563 seconds)
    (103/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.235962302 seconds)
    (104/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.097617097 seconds)
    (105/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.233213582 seconds)
    (106/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.185468308 seconds)
    (107/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.33637581 seconds)
    (108/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.286067282 seconds)
    (109/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.330465018 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.288394476 seconds)
    (111/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.189822389 seconds)
    (112/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.974471603 seconds)
    (113/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.93799549 seconds)
    (114/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.363927755 seconds)
    (115/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.985926354 seconds)
    (116/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.201042992 seconds)
    (117/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.404745836 seconds)
    (118/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.264972078 seconds)
    (119/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.191513989 seconds)
    (120/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.228950267 seconds)
    (121/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.295982834 seconds)
    (122/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.226837084 seconds)
    (123/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.198720908 seconds)
    (124/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.186317396 seconds)
    (125/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.215410395 seconds)
    (126/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.330006702 seconds)
    (127/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.212301722 seconds)
    (128/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.012896003 seconds)
    (129/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.44795203 seconds)
    (130/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.283362893 seconds)
    (131/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.236020786 seconds)
    (132/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.202381565 seconds)
    (133/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.00174405 seconds)
    (134/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.894647005 seconds)
    (135/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.278517729 seconds)
    (136/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.325568135 seconds)
    (137/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.230735555 seconds)
    (138/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.242184275 seconds)
    (139/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.228328539 seconds)
    (140/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.877960606 seconds)
    (141/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.301883616 seconds)
    (142/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.254594365 seconds)
    (143/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.398280928 seconds)
    (144/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.213268854 seconds)
    (145/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.258600894 seconds)
    (146/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.191723295 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.403793064 seconds)
    (148/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.18726394 seconds)
    (149/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.309842832 seconds)
    (150/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.231850022 seconds)
    (151/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.230807861 seconds)
    (152/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.864780067 seconds)
    (153/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.191445433 seconds)
    (154/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.342426689 seconds)
    (155/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.374409352 seconds)
    (156/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.198957808 seconds)
    (157/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.400519333 seconds)
    (158/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.301941527 seconds)
    (159/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.907700027 seconds)
    (160/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.29723058 seconds)
    (161/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.190985901 seconds)
    (162/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.194736282 seconds)
    (163/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.348997966 seconds)
    (164/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.360965519 seconds)
    (165/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.265271769 seconds)
    (166/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.194332565 seconds)
    (167/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.260189743 seconds)
    (168/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.235820458 seconds)
    (169/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.978062632 seconds)
    (170/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.245127268 seconds)
    (171/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.188314171 seconds)
    (172/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.350642488 seconds)
    (173/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.310520336 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.285621284 seconds)
    (175/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.290786728 seconds)
    (176/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.195543864 seconds)
    (177/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.358428398 seconds)
    (178/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.194915952 seconds)
    (179/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.306184514 seconds)
    (180/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.194477273 seconds)
    (181/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.19529911 seconds)
    (182/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.198206535 seconds)
    (183/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.354492729 seconds)
    (184/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.231648512 seconds)
    (185/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.198555146 seconds)
    (186/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.215723374 seconds)
    (187/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.429426108 seconds)
    (188/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.277547677 seconds)
    (189/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.286427762 seconds)
    (190/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.190893034 seconds)
    (191/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.338736365 seconds)
    (192/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.301365145 seconds)
  done (took 310.130759271 seconds)
done (took 311.233706773 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.223989769 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.391896046 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.211122167 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.209157298 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.2081532 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.200428775 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.23538941 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.213377688 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.220609355 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.214782621 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.199922379 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.230683211 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.221894613 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.213820196 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.239659815 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.211130347 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.20850873 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.21369858 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.21795758 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.221062119 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.210155865 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.206365775 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.22461252 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.2048357 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.218064012 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.215095871 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.212451355 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.215351824 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.214647595 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.224040314 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.202945713 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.215482505 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.219116264 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.219161607 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.209797467 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.213012423 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.207533769 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.388237799 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.225760447 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.215953987 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.213464245 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.222270304 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.209625166 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.215293242 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.219548266 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.234413251 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.219203326 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.221979015 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.215841006 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.207346119 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.226386134 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.217060711 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.215162368 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.210300624 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.21044806 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.227120504 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.218153563 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.227951088 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.213034233 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.207998977 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.243730537 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.227112829 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.217712469 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.217255777 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.216600682 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.223215959 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.218229683 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.227267836 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.21466009 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.213715662 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.216491389 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.21873835 seconds)
done (took 97.105353509 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.331148134 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.207254895 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.349189732 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.212322725 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.371607605 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.351417904 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.217560488 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.214052764 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.216059531 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.028546809 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.219686867 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.218720917 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.213415175 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.220183453 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.340894819 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.218576384 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.222575869 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.92837668 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.219248559 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.350056231 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.210059148 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.214860507 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.219616082 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.042570156 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.215746632 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.208733955 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.351182144 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.214457977 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.938557252 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.211337085 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.207881621 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.937186619 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.354954661 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.236850869 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.224580328 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.22508242 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.374912741 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.232964853 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.335339853 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.332378874 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.347939464 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.256279365 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.209602507 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.218187753 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.214874425 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.221710638 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.214364326 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.248032854 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.210152979 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.216378503 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.931634558 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.224130823 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.222806381 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.221910524 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.215369962 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.243958044 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.215218078 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.219948196 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.355447825 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.22078969 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.333875426 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.049442427 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.033093497 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.221922174 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.211049605 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.218217957 seconds)
  done (took 100.551846224 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.278553162 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.292404543 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.32479782 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.222390336 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.265197673 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.326057807 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.224216112 seconds)
  done (took 10.050543939 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.220254135 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.215507546 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.260450273 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.263016396 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.217824692 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.371353338 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.218117318 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.226091754 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.219040837 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.265259615 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.217529289 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.216903256 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.22878427 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.212642283 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.2634043 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.229990669 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.331002121 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.219048917 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.22196875 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.370811905 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.221672757 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.22691148 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.265329635 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.227130504 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.21954878 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.22410981 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.990240308 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.222430306 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.221325392 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.217598639 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.224407456 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.27047307 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.223082684 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.220441847 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.219454173 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.335862958 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.222378087 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.222235273 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.220761056 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.221227514 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.220779295 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.223368675 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.223092947 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.223426429 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.223888893 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.242710441 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.22056898 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.221549373 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.223016437 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.222999411 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.267620455 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.224277373 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.218970371 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.222661152 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.273227598 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.230048741 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.224396668 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.223797869 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.222126 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.219745971 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.366731081 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.266619772 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.223439347 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.262060927 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.224287297 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.224219277 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.225169526 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.224284517 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.310356111 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.222598376 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.265299216 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.220076716 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.405529381 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.244280421 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.225619121 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.220418472 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.223821223 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.224769349 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.21729943 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.232166417 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.23095972 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.222889104 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.226998919 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.222419518 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.225401328 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.376422401 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.327349107 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.221545852 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.230066031 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.226190965 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.222149954 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.271052094 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.225046951 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.226373865 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.268657784 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.337638535 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.275009754 seconds)
  done (took 126.463235714 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.234090328 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.229599772 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.224874959 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.25030376 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.218840599 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.221030536 seconds)
  done (took 8.500803018 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.223248652 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.224983428 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.222897221 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.22372315 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.223134459 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.223679957 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.23206228 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.219484968 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.22857725 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.224553596 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.232473785 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.23139049 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.22578525 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.22710363 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.226065758 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.225468014 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.228114723 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.22850508 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.227460524 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.225134622 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.218348745 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.222824557 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.224463394 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.223400265 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.22972147 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.234208778 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.2431234 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.227282347 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.231368122 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.233378857 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.245407702 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.23006681 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.228125275 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.227291043 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.229632466 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.220832892 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.228162039 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.22673925 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.227851732 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.226411332 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.227287396 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.231527546 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.226173532 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.227591256 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.221845911 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.224119818 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.230101012 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.240903244 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.226889955 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.226834536 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.22966342 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.227221546 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.230924316 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.231772524 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.225516171 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.235083388 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.232327137 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.226764455 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.227770928 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.223234562 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.23071056 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.231403915 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.225657592 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.229845357 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.230297618 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.233849168 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.22717074 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.230735368 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.230174081 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.231532264 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.229806315 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.22884537 seconds)
  done (took 90.564447033 seconds)
done (took 337.244616474 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.008204075 seconds)
  done (took 4.136299223 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.219289586 seconds)
  done (took 3.35067102 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.779053329 seconds)
  done (took 21.911136388 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.240590044 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.332630321 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.230898519 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.228459601 seconds)
  done (took 10.171269994 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.472258674 seconds)
  done (took 3.606345338 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.235202126 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.228245826 seconds)
  done (took 5.60558464 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.381629556 seconds)
  done (took 3.512526215 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.379458089 seconds)
  done (took 3.514766988 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.230035531 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.244152593 seconds)
  done (took 5.615964834 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.223446667 seconds)
  done (took 3.355791891 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 29.822435388 seconds)
  done (took 30.962201206 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.232732013 seconds)
  done (took 3.371107107 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.24843867 seconds)
  done (took 3.380415553 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.708107918 seconds)
  done (took 5.844720254 seconds)
done (took 109.470473836 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.222094098 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.225265615 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.219347212 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.221793021 seconds)
  done (took 10.01564375 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.282646799 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.284461067 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.286046818 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.283143982 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.284394164 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.287260205 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.259177864 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.262818038 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.288673287 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.282590619 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.286097162 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.283858502 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.284536026 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.261025042 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.284004569 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.290787978 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.288594692 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.290826894 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.25884011 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.283491382 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.233496527 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.287036784 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.285121094 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.233416634 seconds)
  done (took 31.785787042 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.745767549 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.299595245 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.382983811 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.285427738 seconds)
  done (took 6.844970338 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.311729949 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.311161263 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.328119655 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.366160955 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.392962069 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.326214957 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.261312965 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.260634124 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.2426345 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.315824348 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.362800001 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.304608333 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.388389955 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.233545434 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.441061407 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.234765847 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.234845257 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.311529995 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.363337007 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.377669623 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.23959252 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.316219694 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.311104059 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.303377417 seconds)
  done (took 32.673210176 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.246295075 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.249657377 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.235682174 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.256207562 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.236832636 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.23778792 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.238330195 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.242684997 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.238558819 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.242626051 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.240198025 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.251455475 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.240393239 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.236553617 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.24659715 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.245157917 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.239284124 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.245530538 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.246808513 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.240748873 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.243432556 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.243900847 seconds)
  done (took 28.479184755 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.227541111 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.22627677 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.574489969 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.482099619 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.228877014 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.229872139 seconds)
  done (took 13.107789885 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.299185411 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.449690477 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.23901135 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.571245983 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.657699165 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.236576773 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.233510664 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.478837198 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.766237785 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.749643257 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.290526696 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.30330912 seconds)
  done (took 18.415785414 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.232838602 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.2302356 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.231903228 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.24616762 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.291483351 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.242764598 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.239290019 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.228086339 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.294354079 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.290299938 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.240871605 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.284963519 seconds)
  done (took 20.197794203 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.332099384 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.23223474 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.236821413 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.290507505 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.248365146 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.108457306 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.275458503 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.933321037 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.253110335 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.507087405 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.232898335 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.331119668 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.487641415 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.236615191 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.236595022 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.182311268 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.464399493 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.692013281 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.243560631 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.234151856 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.271301384 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.245002558 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.241957269 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.452911352 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.083435364 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.235689247 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.64206469 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.23893375 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.497107067 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.255705974 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.247088905 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.238486585 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.512983839 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.878234267 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.357225796 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440071586 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.23929191 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.241311164 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.225860122 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.239042372 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.252826545 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.246159379 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.248123391 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.235182613 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.239408296 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.246006739 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.962343867 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.261599973 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.238756634 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.237075338 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.478112232 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.347873188 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.246913785 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.240594611 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.264600374 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.244180903 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.246900548 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35773318 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.82635387 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.236955207 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.253035141 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.243242301 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.234941387 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.243615689 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.831181565 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.24869053 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.245790216 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.24928061 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.24138088 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.243277568 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.263637931 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.238600013 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.268370268 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.245193857 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923805944 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.247791956 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245410404 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.765640351 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.255909735 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.247532564 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.473798629 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.244960877 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.243461258 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.240764376 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.24196213 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903269711 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.255008617 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.224657301 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.285143763 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.977402127 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.457256302 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.266251168 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.271722076 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.466456468 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.227197648 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.244486095 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.242354923 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.263823409 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.262190312 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.962729778 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.260524826 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.251881754 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.499308063 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.452668344 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.259320381 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.203983108 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.712717369 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.271660134 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.267208636 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.244309608 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.464213719 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.805129919 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.264740837 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245100036 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.262670118 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.247728604 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952462633 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.262964859 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.255008788 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.246587735 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.51911936 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.994860766 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.250998149 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.311236587 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.253965757 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.245642867 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.244372845 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.25325274 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.248214462 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.436934103 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.282519255 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.256593097 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.24483696 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.248037121 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.252385436 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264658514 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.253650345 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.471029252 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.26681896 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.527061151 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.252707087 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246785916 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.248422052 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.467502035 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.256572573 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.264234678 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.510978339 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.247768042 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.267989911 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.282956988 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.271180772 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.34769255 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.268753593 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.250875305 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.508263582 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.25553544 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.255745043 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.250559682 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.255741313 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254392305 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.261061216 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256835926 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.807913862 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.235285547 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.257483272 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.1362795 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.263786724 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.324967303 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.265277686 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.452457303 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.257969389 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264813041 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.274880443 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.258590943 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.474758993 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.256350428 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.247137955 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.328150183 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.709299892 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.824111451 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.271290487 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.249595654 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.255260969 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.255256191 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.249371432 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.25449262 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.257519728 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.456301632 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.268527506 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.26921904 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.817097385 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254890286 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.253639743 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.263911207 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.259734595 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.258066157 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.251585778 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.251374973 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.26879356 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.254553025 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.263692075 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.3948116 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.267436495 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.256901567 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.773199225 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.258047074 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.251430008 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.252086931 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.29154608 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.248943211 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.040301279 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.519419343 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.266940376 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.501256587 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.258419848 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.271017389 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.25174451 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.255468615 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256570663 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.257265412 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.280730845 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.259784982 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.252812075 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.25777092 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.814386832 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.956330432 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.761070115 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.258188891 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.263539977 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.258201373 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.950496303 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.267284306 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.251374195 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.479269649 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.950931522 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.265549623 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.718159705 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.286020412 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.984467067 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.494324342 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.486822917 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.251832828 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.257521431 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.497637574 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.466363073 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.28563865 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.257131801 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.261277342 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.237434964 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.797372181 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.264912735 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.350834048 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.954600909 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.269888254 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.264795425 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.261492985 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.257083527 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.643073867 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.278983204 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.258169882 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.262978085 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.266213367 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.045251644 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.255956183 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.254561955 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.845267877 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.259217011 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.730679549 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.272808163 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.456378102 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.269838231 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.258290501 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.254215354 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.274321735 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.510922239 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.49606033 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.258571001 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.26953522 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.769814027 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.128722329 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.261909951 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.255666042 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950702304 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.260789521 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.526398011 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.268625958 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.260159632 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.26132261 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.255129016 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.254253205 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.258082667 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.260167516 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.234955591 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.719140146 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.26563897 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.27172832 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.265238835 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.265516588 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.5144439 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.273669195 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.81502936 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.490859666 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.256837511 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.284133055 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.261396673 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.261854412 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.249406761 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.258066243 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.25851394 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.314183975 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.482367638 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.262138766 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.249472667 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.280217695 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.470848438 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.258418309 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.267793114 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493974811 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.257085655 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.270884022 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.972825384 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.293185613 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.267617791 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.263987217 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.25916418 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.299140454 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.32847666 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.459522901 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.270720558 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.268173855 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.64470992 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.286507942 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.265170002 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.274747082 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.353697313 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.2679818 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.266548998 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.037477973 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.825257077 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.960533074 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.828038092 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.507104787 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.265393364 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.263092377 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.262304619 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.42101306 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.260387075 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.535516677 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.258894999 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.271771209 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.286286576 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268212376 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.278546015 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.473838964 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.536571266 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.259523584 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.272873103 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264317744 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.260327827 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.271155363 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.47116513 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.725855545 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.799304615 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.267704946 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.268895422 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.963772776 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.554783759 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.260156331 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.264369879 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.262154544 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.278468843 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.290071575 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.273196504 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.265068132 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.409562789 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.50481364 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911368253 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.287112562 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.29259074 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.781099689 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266606584 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.519717431 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.263016216 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.487497332 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.829446798 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.940413973 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.530972813 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.332864565 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.465833563 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.266527023 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425020604 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.264586763 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.269897862 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.264723661 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.263308072 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.264966757 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.273218574 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.832130311 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.532424511 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.269472353 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.263478066 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.296824339 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.275686763 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.486137642 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93949984 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.491979397 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.273097277 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.270135385 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.266114055 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.833627348 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.515459249 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.2713278 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.270169203 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493840469 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.266036164 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.291224093 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.784832496 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.269291797 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.793838166 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.247610784 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.287246897 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279335853 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.942099353 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.835997377 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.276921844 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.73687332 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.271478229 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.277573463 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.547001728 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.272191961 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.278507118 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.547155205 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.271340422 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.274003009 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.474214262 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.82907615 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.015135667 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.285101425 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.297551463 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.272768669 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266060681 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344353064 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.285105042 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.267662628 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.667260815 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.285834261 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.270090832 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.282909684 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.27219833 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.288294866 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.273028885 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268992791 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.278048184 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.270289463 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.268429377 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.290584964 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396931756 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.814019102 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.297372769 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.953549083 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.593440314 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.52518996 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.268608234 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.262473283 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.273597632 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274655212 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268417465 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268683401 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.278144237 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.802694185 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.272971302 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.294716596 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.276193254 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.273223524 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.481856096 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.267864492 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.479144977 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.286839987 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.28884509 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.25489195 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.27089012 seconds)
  done (took 916.77847744 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.304882436 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.269881731 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.282999193 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.275854238 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.270403262 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.377147532 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.336034409 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.269597886 seconds)
  done (took 19.557441381 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.277523645 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.278855581 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.277434611 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.276404266 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.275769705 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.728742929 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.29111838 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.276305572 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.285837751 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.278920838 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.281971155 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.919575586 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.29278267 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.269866852 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.270787045 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.280199166 seconds)
  done (took 30.73461437 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.186346961 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.390191449 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.036309014 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.283238212 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.304851182 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.275224265 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.466767279 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.283085202 seconds)
  done (took 25.401941237 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.279011309 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.278577854 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.278630536 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.280225392 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.280636936 seconds)
  done (took 7.574376938 seconds)
done (took 1162.705367777 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.278736833 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.278641988 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.276782601 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.277399482 seconds)
  done (took 6.281822243 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.259238227 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.26109853 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.268167375 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.276166289 seconds)
  done (took 9.23678356 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.940175585 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.888692798 seconds)
  done (took 5.004372027 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.730968228 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.736276053 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.732423312 seconds)
  done (took 6.38032126 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.552385261 seconds)
  done (took 2.731367124 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.145700891 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.273655363 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.916705372 seconds)
  done (took 7.519473627 seconds)
done (took 38.330127137 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.275348094 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.512858781 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.424986656 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.269910435 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.430613364 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.426830549 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.003088888 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.274939707 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.275326447 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.284189954 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.278064233 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.434674005 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.052158134 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.513908432 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.051564921 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.610418567 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.434898185 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.273570188 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.28162576 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.273180202 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.009642352 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.285676921 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.272229205 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.273336738 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.435990972 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.414305523 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.270781216 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.612328705 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.276038029 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.28072399 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.417698686 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.283212648 seconds)
  done (took 79.389384729 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.273626083 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.271789866 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.2799582 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.275314906 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.27602547 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.285108965 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.27181824 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.269220571 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.276188706 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.274674783 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.272647592 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.270548962 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.271382115 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.282897484 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.272532217 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.27224815 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.28717637 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.286193686 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.270423322 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.28538154 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.272340868 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.272571672 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.272562759 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.271793322 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.282602943 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.272206951 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.289591935 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.271528053 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.272923681 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.276697897 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.276737886 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.297412491 seconds)
  done (took 74.034565616 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.279498374 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.283181326 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.274383859 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.277824295 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.287585354 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.290525156 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.278520685 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.288717096 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.273578765 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.277358654 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.292460049 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.275609454 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.29174933 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.272350338 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.286469013 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.273937154 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.285188866 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.290532226 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.294646234 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.279133714 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.290300382 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.272988366 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.273861901 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.277703393 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.291250185 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.275840842 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.272713462 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.273587593 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.285932716 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.274470281 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.28032706 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.278844941 seconds)
  done (took 74.181299197 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.559806005 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.286489202 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.290214415 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.282365113 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.285990347 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.284150661 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.280886818 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.566304048 seconds)
  done (took 14.019552863 seconds)
done (took 242.804128387 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.279488857 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.772501654 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.325353676 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.282837137 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.30753574 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.308492386 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.498873443 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.323369512 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.503479831 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.301735424 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.304779016 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.281795781 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.069024163 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.431379073 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.128370076 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.24404609 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.138051964 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.280882422 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.831348611 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.557286024 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.309143683 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.290586316 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.118626901 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.165501944 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.271638131 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.365038685 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.380483059 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.501118007 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.439575135 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.363654624 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.780948945 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.28900714 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.286993635 seconds)
  done (took 60.911743144 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.284058082 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.383725668 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.288743056 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.288986379 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.386498146 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.289437319 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.284391338 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.287616081 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.289352669 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.289218023 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.288506186 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.294509084 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.289303582 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.314480838 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.390036981 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.282059017 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.284346042 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.379893042 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.289165429 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.283233609 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.3163351 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.289945978 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.295993607 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.315826079 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.291535327 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.290075311 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.383713234 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.292681117 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.291637145 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.385125771 seconds)
  done (took 40.515927319 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.291396526 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.856330006 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.015085339 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.296047753 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.288029405 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.291466044 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.56233535 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.297689231 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.289847265 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.289136203 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.771643306 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.295441294 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.319303503 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.037547251 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.29242425 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.294259554 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.292940245 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.287320881 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.870079462 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.299220404 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.574006815 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.293816836 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.560059173 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.298388073 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.303111864 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.289067279 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.289558107 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.119016127 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.310989824 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.766569789 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.034489766 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.557840855 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.051625512 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.042032479 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.037351606 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.296988339 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.291841699 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.774260322 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.294666179 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.289475157 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.562108016 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.292453372 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.029173887 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.976462981 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.312954156 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.298874837 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.125822276 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.797999624 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.526742062 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.299601868 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.048774036 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.295048107 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.293213261 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.290585127 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.523315398 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.294434603 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.288748367 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.13716594 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.315459777 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.566828384 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.30059048 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.294359637 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.87259988 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.294385679 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.86462145 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.294247736 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.30094712 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.30606727 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.031568911 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.295614637 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.994886571 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.310087423 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.293284314 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.771545807 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.862592246 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.19815832 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.295634906 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.868831976 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.087952206 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.58895772 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.298919915 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.092337546 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.587925237 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.295968667 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.295847895 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.299631769 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.299966315 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.376813252 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.566929053 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.922392686 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.99635367 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.156446157 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.58803287 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.304547936 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.293735946 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.136231495 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.317113058 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.297053221 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.021362662 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.000800105 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.312829305 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.300766497 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.994141332 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.313666568 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.569338271 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.303083921 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.033085072 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.30182252 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.380348032 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.300098912 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.302067362 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.31460672 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.567945231 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.302044897 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.300362168 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.981117305 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.805952692 seconds)
  done (took 182.836192828 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.288326521 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.310281759 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.308199252 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.285974308 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.288899967 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.300473335 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.287995495 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.292195854 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.296548947 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.28973137 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.293071331 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.300112969 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.295191087 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.290476912 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.287691985 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.292419716 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.290073946 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.294062846 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.288845544 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.28743351 seconds)
  done (took 43.060461186 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.29931617 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.842105394 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.800426146 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.303277485 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.30636133 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.294225119 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.34833983 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.303990973 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.310119618 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.592894741 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.461670954 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.303482915 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.301494082 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.298975205 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.802061747 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.29638661 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.586296748 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.835784187 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.302043053 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.835155614 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.287741879 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.303024859 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.295055673 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.834971047 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.596298863 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.56950664 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.357332934 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.841275367 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.304679222 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.304333209 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.844258085 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.309824169 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.306037889 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.844646075 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.322437378 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.318891795 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.309863337 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.357285646 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.359049804 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.59116329 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.852867161 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.58490837 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.322718355 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.469040452 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.310466705 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.298218609 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.853261492 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.329495257 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.296003422 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.310749767 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.312838165 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.817303329 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.325285187 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.817171979 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.317952708 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.311936076 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.851008181 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.816465294 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.827974022 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.464026171 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.306603682 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.57522931 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.306651168 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.852974333 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.322574375 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.305946897 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.305719528 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.472213093 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.867852786 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.581777573 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.597459199 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.595741336 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.314577934 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.365592554 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.326672686 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.602021046 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.36945475 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.696654078 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.603828389 seconds)
  done (took 118.7461607 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.57158964 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.417127795 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.701418904 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.908871483 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.31091495 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.439720181 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.415151432 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.559680182 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.316705777 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.385545405 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.921808623 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.418650981 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.053812696 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.396141171 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.401881622 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.441745002 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.682314553 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.269712778 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.985449031 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.904427046 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.30112416 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.421721475 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.847853995 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.515066537 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.311433102 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.855681834 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.255944547 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.95140248 seconds)
  done (took 51.175546576 seconds)
done (took 498.428671203 seconds)
SAVING RESULT...
DONE!
