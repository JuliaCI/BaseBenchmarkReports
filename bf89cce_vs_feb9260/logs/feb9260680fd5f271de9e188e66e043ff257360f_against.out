cset: moving following pidspec: 8192
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.943489398 seconds)
loading group "string"... done (took 0.55140123 seconds)
loading group "linalg"... done (took 8.975738348 seconds)
loading group "parallel"... done (took 0.1724558 seconds)
loading group "find"... done (took 1.454178544 seconds)
loading group "tuple"... done (took 2.123148532 seconds)
loading group "dates"... done (took 1.394976294 seconds)
loading group "micro"... done (took 0.221840747 seconds)
loading group "io"... done (took 0.634742671 seconds)
loading group "scalar"... done (took 44.528589292 seconds)
loading group "sparse"... done (took 13.82296146 seconds)
loading group "broadcast"... done (took 1.098694545 seconds)
loading group "union"... done (took 15.251227377 seconds)
loading group "simd"... done (took 5.117538516 seconds)
loading group "random"... done (took 10.340760929 seconds)
loading group "problem"... done (took 2.204994245 seconds)
loading group "array"... done (took 26.317059361 seconds)
loading group "misc"... done (took 1.107593614 seconds)
loading group "sort"... done (took 3.763397491 seconds)
loading group "collection"... done (took 22.400784854 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.637251701 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.119257883 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.168655016 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.19987961 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.197962163 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.162610936 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.166726216 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.567167204 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.007172393 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.21950568 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.147550942 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.56012568 seconds)
done (took 5.897846792 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.241139754 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.44134738 seconds)
    (2/2) benchmarking "String"...
    done (took 0.113395463 seconds)
  done (took 1.227462783 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.096106455 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.179049394 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094630473 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.111332058 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.114213281 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.112716426 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.09626498 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.113926956 seconds)
  done (took 1.497133004 seconds)
done (took 3.743022 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.487791216 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.845226121 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.505085756 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.130784746 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.160318451 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.155734216 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.333085051 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.161220261 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.122820839 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.098535939 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.189042524 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.354546317 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.491932637 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.955766624 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.097838505 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.13121178 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.083078576 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.718282577 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.083475478 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.143021649 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.541779485 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.127714359 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.120765756 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.141637335 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.192090806 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.132155963 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.178285622 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.112639381 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.673852558 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.105447856 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.188204492 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.101425377 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.165400059 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.2543641 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.098688806 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.095413997 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.68219223 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.192893541 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.116738913 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.104798333 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.682090521 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083926918 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.205336091 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.126446666 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.110264868 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.192342108 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.11574049 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.080867859 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.106553228 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.107612009 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.16081814 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.456852526 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.106683216 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.146356725 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.110008359 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.683601757 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.099937024 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.15973778 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.14346407 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.10668065 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.101135487 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.108883024 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.157595207 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.111393665 seconds)
  done (took 19.813622358 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.118071511 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.14172769 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.095421251 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.14123546 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.142168254 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.09765828 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085546993 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.097196051 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.129015479 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.191563395 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.122588195 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.14474545 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.092462072 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081545059 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.121492046 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.253445334 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.108230651 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.12547745 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.082711213 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.111083772 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.14414355 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.09643101 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.112367107 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.113024876 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.172700101 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.207713389 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111758567 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126624554 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097346926 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.102290762 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.145514182 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.163970242 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.075032635 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.095138884 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.186052963 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.12045749 seconds)
  done (took 5.243409305 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.200945445 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.117228654 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.194131856 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.180123063 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.148416971 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.167380284 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119670504 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.269717809 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.187328591 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.172866302 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.182216788 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114068581 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.112962042 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078383599 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.098096284 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.078266797 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.725907128 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.184377786 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.156740628 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.131847169 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106162116 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.085878265 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.383602251 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102268532 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.082239104 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103720021 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.073234886 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.177016855 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104394266 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.323509395 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.12086853 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089841567 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.139990645 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.213569387 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.132656906 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.12642967 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.107100466 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.082362829 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.245747759 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.113652316 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.081564701 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.128913935 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135833244 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.120695794 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.10422733 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.115261398 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.230254691 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.103081986 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.123847543 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.099650721 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.201871403 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.099877698 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.10112515 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.365077416 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.121892699 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.088618188 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.103900226 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.295468834 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.136479875 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.085603978 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079384408 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.107606666 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.09784465 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.410079469 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.093588421 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.934599573 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.099559007 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.162014211 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103112852 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.110192971 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088764539 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.105951664 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.105078652 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.101143301 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.081002285 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.100313058 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.080912057 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.104466365 seconds)
    (79/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.084685712 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.11982097 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104863709 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.082121494 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.164376795 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.103606814 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.121866135 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130217465 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.087731921 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.099662189 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114927236 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101161237 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.08482578 seconds)
    (92/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.101328551 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.150149124 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.0883491 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.10315143 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.117843983 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10322318 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.129752463 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.100648812 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.186225574 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.083198486 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126823869 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.103117903 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115765087 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.125353317 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101318731 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086533624 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.099243176 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081821943 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165901103 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.085221552 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081518809 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.104990535 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.11414246 seconds)
  done (took 24.123221462 seconds)
done (took 49.853542924 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.474065731 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.098997371 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.114842762 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.114347684 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.11323714 seconds)
  done (took 1.669573251 seconds)
done (took 2.397398066 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.338937506 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.197668209 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.102708582 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.197984799 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088105743 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.205062599 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.1670041 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.119833293 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.1984323 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.100980938 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.177108902 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.101230449 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088945705 seconds)
  done (took 2.835660171 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094022902 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118898796 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081362671 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113542258 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077595653 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112774372 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094095942 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.139301497 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.092298247 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.102409191 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076024876 seconds)
  done (took 1.825041351 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09056188 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115421652 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081667863 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109603419 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077972516 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.0913111 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.110396767 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119501219 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.092236563 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.10553828 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077200662 seconds)
  done (took 1.796559369 seconds)
done (took 7.171834824 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.075636129 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.611217715 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.120047253 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.170992322 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.343727301 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.217558096 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.540412742 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.136554475 seconds)
  done (took 12.129209726 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.13387578 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.101239712 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.085506453 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.104308182 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.085628281 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.101376712 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.083300092 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.101045236 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.082464211 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.101736726 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.085062306 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.100671835 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.083120801 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.10260241 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.081695095 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.099563125 seconds)
  done (took 2.317088797 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118996594 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.116905929 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.104220297 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.111555169 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086322743 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.105913552 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.089880745 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.105594565 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.085742372 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.104166978 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.110472416 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.092901074 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.107838465 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.08515802 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.106815656 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.111800485 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086732191 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.107330328 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.090402172 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.107268376 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.093373618 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.104652774 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.108411674 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.093414916 seconds)
  done (took 3.270437491 seconds)
done (took 18.443340256 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.171702036 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.086418019 seconds)
  done (took 0.984366104 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.101728689 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.123119375 seconds)
  done (took 0.95993966 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.107031261 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.099762337 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.141014961 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.118818593 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.085544435 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.099696013 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.116771935 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.103094083 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.083827026 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.102450907 seconds)
  done (took 1.794131678 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.085837503 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.103669927 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.0926729 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.123977676 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.11420343 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.08576456 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.106357466 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.088645377 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.107562575 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.081941618 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.10996168 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.120293835 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.091804853 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.123411999 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.088681779 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.107798435 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.11184866 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.088640577 seconds)
  done (took 2.5690328 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080823765 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.084333512 seconds)
  done (took 0.903195134 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.084078001 seconds)
    (2/7) benchmarking "second"...
    done (took 0.097842339 seconds)
    (3/7) benchmarking "month"...
    done (took 0.08535702 seconds)
    (4/7) benchmarking "year"...
    done (took 0.103570261 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.081882082 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.09907006 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.082301352 seconds)
  done (took 1.370879309 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.517957355 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.265868506 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.350592874 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.101177999 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.159158213 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.383128979 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.141342697 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.117609499 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.117767112 seconds)
  done (took 2.935994333 seconds)
done (took 12.252497342 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.092724871 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.193078896 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.685603117 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.119280417 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.081258252 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.163278986 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.272163756 seconds)
done (took 2.344915362 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.358735122 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.128893575 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.092339187 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.08189788 seconds)
  done (took 1.396818553 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081373317 seconds)
    (2/2) benchmarking "read"...
    done (took 0.103787288 seconds)
  done (took 0.928781516 seconds)
done (took 3.07321952 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079158395 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.079314062 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.096267399 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.081100375 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.096725452 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.078749557 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.098750537 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.081463949 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.080943981 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 0.098878369 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080604062 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096189208 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078749202 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097952596 seconds)
    (15/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.078583054 seconds)
    (16/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095851321 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.118296858 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.100128166 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078636047 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.098678099 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082188688 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.099032737 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.078690092 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.078838811 seconds)
  done (took 2.913596846 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100266618 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097870868 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.086554028 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.105513373 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.08656663 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.10528023 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.10536051 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.082447764 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.105869082 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.084648025 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104144268 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.085896534 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.101892225 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.086259112 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102439987 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.10436775 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088825557 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100635463 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084396732 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.104705905 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.087702736 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100348767 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.086143754 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105841541 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.104457548 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086461279 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.102565474 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.082306588 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105993078 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.086561741 seconds)
  done (took 3.618817892 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.08822364 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.076527143 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.097856062 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.091554659 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.09718263 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.083821869 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.096339908 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.079503293 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.098141156 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.078902863 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.099175694 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.079257706 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.096809265 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.081458874 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080708724 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.10594396 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.11683886 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.080362974 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.078318751 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.098541065 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.086731042 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.097369548 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.082103255 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.097735022 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.079229591 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.098103554 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.080442673 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.079051512 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.099004769 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.08001959 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.103441687 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.085955769 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096949856 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.093518755 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.104271943 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.079218436 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.106622803 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.079149294 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.098773067 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.079427619 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.097492534 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.079359464 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079359673 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.109893382 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.083698604 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.098574286 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.080433178 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.099422773 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080743546 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.10219667 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079964031 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.097496504 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.081739414 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.099336465 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.085811676 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.097421052 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.082608007 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.079239958 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.099554456 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079860765 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.0974545 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079787068 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.104504241 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080443711 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.122512448 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.091563151 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.097914975 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.08177806 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.10141852 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.08775173 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.099605332 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.099833702 seconds)
  done (took 7.301635064 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082412991 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106495187 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079970021 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098597533 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078117031 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.080103964 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.105474806 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098423206 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082551355 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117959572 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080784006 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.100503778 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082496233 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101952436 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081139184 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099682151 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.091111151 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096153906 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.080774863 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102390898 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081171818 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.105529042 seconds)
  done (took 2.787926345 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.227335186 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.108426646 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.14854129 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.118943523 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.101143918 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.117024388 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.105367617 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.089404037 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105857635 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09139166 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108967672 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087798863 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.11965487 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108289108 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10989402 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089673166 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105872223 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092413551 seconds)
  done (took 2.787332744 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.094481344 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098929816 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.109254342 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.101085629 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.083964933 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.103967436 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090490104 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.119157602 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.103758199 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.083636764 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.113044945 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085688603 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.104985467 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083753818 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103998425 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083045818 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.103994408 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084498447 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.112647474 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108259948 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.090311672 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112353431 seconds)
  done (took 2.931926185 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097958864 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10076054 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.113018344 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.105768704 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.07912004 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101615351 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.091210071 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.101932784 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.111219248 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.084732265 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101887132 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.081589596 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.109364108 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.083564842 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.108559523 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085118993 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104225992 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.084346017 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104568426 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080283962 seconds)
  done (took 2.685898944 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.125878887 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115635075 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098388787 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.129593987 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119159963 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.100764973 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.131076582 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.119042114 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100462712 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.131844244 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100394066 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.12078513 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.130881316 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108144169 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119309277 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130113252 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112521104 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.130725156 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.119037987 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101173124 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.133195266 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120144849 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112260937 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.12001279 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.1039109 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.119623611 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119022889 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108102892 seconds)
  done (took 4.039763096 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08067092 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.080918812 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.097721181 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.080796428 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.099432629 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.080456262 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.099315873 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.080820759 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082562449 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099827883 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.08312033 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.101791222 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083445878 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.101656052 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083580049 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.101747733 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083915327 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.080687516 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099497396 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080835723 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.100913574 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084538003 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.10183303 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.081299962 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099059189 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.083043356 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081673669 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099166098 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083545127 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099722891 seconds)
  done (took 3.459817756 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.089505058 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105281939 seconds)
  done (took 0.954570216 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079146878 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116758159 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080133101 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.106086438 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.090104085 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.102883827 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.093720769 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.108423777 seconds)
  done (took 1.535606638 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.106846932 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.121643874 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.090142692 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.115875253 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.104964285 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.123268723 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.17250898 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.091315083 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.110721821 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085077828 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.123384865 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083569219 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.11442771 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.109123752 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.093501535 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.118261145 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.083354164 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.113539827 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.092934752 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.105683969 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.090742292 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.12122528 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096860443 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.112569939 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.087828455 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.116801468 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.118428956 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.097792309 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109497362 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.097894474 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.110970124 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.07976901 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.109332119 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.090596143 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.10139435 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.105003051 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.122669099 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08993636 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.115062054 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109711463 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095648633 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.09870681 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.096197358 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.111521978 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.098118416 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.109394238 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.092041776 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.098934892 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.085799456 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.108058756 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.080578809 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.107482945 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.079804735 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.113636027 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.095502449 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.123680689 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.087712545 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.109401071 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.089960276 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.108244445 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.092585056 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.109175502 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114544215 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.089711914 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.114489308 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.095531245 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.11276434 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.080467218 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.098227569 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.083733072 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.11469187 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111656976 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.117719456 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.09176928 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111793967 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.083724019 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.11055613 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.091469993 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.11382623 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.116618126 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.090816692 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.113158919 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096381497 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.108599422 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.089962022 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.112083621 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.087493607 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.107302636 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.086427862 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.125437168 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.088771519 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.101884138 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.087625304 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.116248342 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.090635468 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.107854248 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.086882443 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.115302481 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.079094957 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.11047224 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092002398 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.112802868 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.117266409 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091625233 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111258844 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.095434726 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.116751541 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091161608 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.108452119 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.082104823 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.110778183 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.088007222 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.113789325 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.080244835 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110232153 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.090596353 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.110705282 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.097596632 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.106333282 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.091150597 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.115212076 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.098101744 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.107019463 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.082419351 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.109784625 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.090941101 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.113820646 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.097509625 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.108759218 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.080509344 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.101358909 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.095280011 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.110019955 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.092174255 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.1110949 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110399487 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.079805705 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.083979452 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.120798429 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.11623923 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.090040913 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.111885296 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.096375679 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.111988423 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.089603246 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.115569103 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.089580867 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.10579938 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.096136283 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.109172694 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.081922688 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.114856867 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.090023387 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.108230236 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.090741354 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.11475735 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.090923016 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.112054239 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087651288 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.111838225 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.092088848 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.106149512 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091415107 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.109038651 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.117686464 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.090410689 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.100283916 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.083626593 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.093046702 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.106187535 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.089743788 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.106675823 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.091718015 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.113453708 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.083908325 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.108861004 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.090296178 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.122914855 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.119639625 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092304201 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.113766867 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.09925324 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.109906507 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.093611441 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.109087663 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093248294 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.111449951 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.095948062 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.112331047 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092283172 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.109804713 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.083340495 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112312663 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097690576 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.105144385 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.084763244 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.105236474 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.091417547 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.117443468 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.091288895 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.11174135 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08875331 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.113040698 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.096193392 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.109623987 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.090897012 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.105664785 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.091160616 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.115537579 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.093202039 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.11228851 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.09825417 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112694724 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.081721729 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.115930151 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.106891692 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.095677558 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.081334386 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.106997661 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.087151421 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.113296252 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.089661371 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.10896475 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.080986684 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.116814387 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.097697436 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.110738524 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.085236967 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.111202103 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119463779 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.089355972 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114245478 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.091748502 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.113559437 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10559513 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.106820252 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.091945616 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.119602688 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.090597672 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.100654793 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.094539589 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.109755018 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.085357778 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.109280493 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.08898282 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112441204 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.094132081 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.112332407 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.080062684 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.110438369 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.089436934 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.106784803 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.083035713 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.116945097 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.092750643 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.110168213 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.119954629 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.09431119 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.111838501 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093816799 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.110184609 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.093517682 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.112176372 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096520871 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.112632597 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.090307432 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.106155552 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.0924015 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.105922972 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.085239528 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.109869669 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.093056799 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.112310254 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094653107 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.110137768 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098006029 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.112098668 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.093728207 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.130411612 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.108461418 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.088325798 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.112557412 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095795252 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.111507719 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.091710064 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.102744842 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098450594 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.111764251 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.098864442 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.111116273 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.083942985 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.111703693 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.092343741 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.113394591 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.093096803 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.113005574 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.091051531 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.111041836 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.091846366 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.121405437 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.088517861 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.118686587 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094618662 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.115402539 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.11063664 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.094145988 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.109744624 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.087420981 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.111011363 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.093979155 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.112855541 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.091888174 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.113972845 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.092990687 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.110560162 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090433604 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.1130978 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.093132227 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.11504066 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.082016044 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.106885261 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.089079716 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.111749078 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097498017 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.113530811 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.090776786 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.109998336 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.090745367 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.110217023 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.084100491 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.116142856 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.095870584 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.112595633 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.102592255 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.107634502 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.092494281 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.122303692 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.081609863 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.110275502 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.086065012 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.108312827 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.099178592 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.113270366 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.099223578 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.113640697 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.088115278 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.104006432 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.094051093 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.110717574 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.081988176 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.105477876 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096997181 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.109742338 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.090843187 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.112850937 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.096647025 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.114414855 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.097206315 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.111371469 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.093203806 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.113097416 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.085082368 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.108418846 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.088329933 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.11293815 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.094402378 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.108645075 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.08545654 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.112188102 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.093713392 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.112884214 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.092579341 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.111921575 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.099348097 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.112918751 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.094162861 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.118902506 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.08287328 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.113451962 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.09308525 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.112366748 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.088928921 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.113731167 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094841241 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.114830909 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.098404942 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.112867677 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095607464 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.112765151 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.086513968 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.112432361 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.093555588 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.11343031 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.089470964 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.114207761 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10035746 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.106010758 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.093377163 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.114032437 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.086349845 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.109354984 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.090645225 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.108250495 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.111244275 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.089164298 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.110905988 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.097722598 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.113197946 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095605801 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.114231767 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.092175781 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.118778474 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.088932998 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.120712569 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.095745176 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.114458208 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.092913293 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.109818339 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.092774853 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.112816657 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.091828331 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.11916786 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.094661148 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.109029454 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.091133364 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.106552171 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.093932363 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.118390471 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.099814303 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.114179811 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09523992 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.104196982 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.085700267 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.115378776 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.090535205 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.11288845 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.097141555 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.119168225 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.094220434 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.110852732 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.091963739 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.119079105 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.098213686 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.116555318 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.10958073 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.096566981 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.114621703 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.094185901 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.111108711 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.093552061 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.114633446 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.096324451 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.112492256 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.086111862 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120368228 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.096567837 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.112879257 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.092842268 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.116691862 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.092844457 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.10436193 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.095540282 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.114216697 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097353713 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.113520563 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087954672 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119462809 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.103826767 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.090790507 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.11609618 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.093980007 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.119567378 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.084753786 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.114397468 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.096505632 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.115086129 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.084710002 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.110321149 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.090977232 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.114438253 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.09013541 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.104501341 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.104960422 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.119312285 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.094750434 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.112906519 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.092660053 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.105383039 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.085402662 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.110338206 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.096948765 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.11371938 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.103059224 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.110332671 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.09006495 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.105335061 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.094737455 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.115479491 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.096699644 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.107279258 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.085487804 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.11030346 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.094823496 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.122223004 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.092128569 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.114429775 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096436783 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.1146516 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.088573034 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.119919236 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.086276947 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.11614995 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.106971649 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.11594332 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097270001 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.119952712 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.119916704 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.096402339 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.104547046 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.095912914 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.115576957 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.095886576 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.115885295 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.097130381 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.130882761 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096717965 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.110796177 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.092832956 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.113882488 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.090558927 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.123526382 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.095675717 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.117190677 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.116622084 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.094416835 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.11687452 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102583818 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115534014 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.094862678 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.115404906 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.094294619 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.114305304 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.093107748 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.114045152 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.097581307 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.116456092 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.094678478 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.118045166 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.091207935 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.125788795 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.10205247 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.11685261 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.087009191 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.111264152 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.091824449 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.106513083 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.09720066 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.109054526 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.093126572 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.112474885 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.093886119 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.116979417 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097734025 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.115382608 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.097718735 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.115005784 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.084680344 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.11867868 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.095927414 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.11688505 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.086166617 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.113891566 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.096732741 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.120553834 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.09980709 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.113144725 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.095363392 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.114395108 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.097791661 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.106494393 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.099322037 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.114054187 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.093771557 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.11064959 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.095359373 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.117797435 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097078916 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.116979917 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097200275 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.116129026 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.09986864 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.119485296 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.087637224 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.108697063 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.099434826 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.110222764 seconds)
  done (took 62.053844504 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.152880313 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087795823 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.100304216 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081437556 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.129362976 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086997695 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.106090014 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.088011588 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.107689507 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101036735 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.107975994 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083778871 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.129430019 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.13539458 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133804957 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.122311154 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086690729 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107369583 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085995365 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106826016 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108345602 seconds)
  done (took 3.059555416 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.106450391 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.11962636 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.118992001 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.109807804 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.120477923 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.122385429 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.103172656 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.127028041 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.129072831 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.118901317 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.109966346 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.124182756 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.119352008 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.099431855 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.119669331 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.122008893 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.108346898 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.118570788 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.126650615 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103093266 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.123213548 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.124208898 seconds)
  done (took 3.387845427 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.093887846 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.088530117 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.1163896 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.088064729 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.114929325 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.08797482 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.120521769 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.090880253 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.120412764 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.095845754 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.113566121 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.09557382 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.119795304 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.088438326 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.113544635 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.091376143 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.119532499 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.095218491 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.116757302 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.088366575 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.136886661 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.109029424 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.089545306 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.091411649 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.127041429 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.116295427 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.09485403 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.093864048 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.112878885 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.094823927 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.111418327 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.097631149 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.119621527 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.092296614 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.112701805 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.094814497 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.115853835 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.090367187 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.112122919 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.098888332 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.111053647 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.096879502 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.122711741 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.091455801 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.111779693 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.098166398 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.115545321 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.089155649 seconds)
  done (took 5.821833186 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.123726098 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.163418564 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.094211385 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.15815276 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.131431638 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.119931085 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.093529091 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.151634267 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.107369465 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.089551767 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.128360214 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.125530531 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.091078827 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.119016516 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.090120472 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.111002301 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.113964443 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.094940735 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.121291196 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.090302954 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.118908769 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.113463671 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.105202389 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.122122915 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.11377744 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.09058568 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.108784741 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.098883033 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.122298274 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.115601001 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.095200672 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.119723231 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.12972888 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.09448088 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.112536614 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.092017969 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.128092545 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.11037143 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092673056 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.10770387 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.093337035 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.13052956 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.115700093 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.113449847 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.119034159 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.118342771 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.098859654 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.126281794 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.107419671 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.11720856 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.119755003 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.124790571 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.096632051 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.110012887 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.096521358 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.132711217 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.110865227 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.090006201 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.113693032 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.101853469 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.110650537 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.123557432 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.108932611 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.115494629 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.118936649 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.104142305 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.113194315 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.113455384 seconds)
  done (took 8.619366351 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097140258 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.13391483 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128599381 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108160191 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.119991859 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.12221733 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101976885 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.116869233 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.096759942 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.125570866 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119491129 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.171195108 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.093937556 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.124514205 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.101074328 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.124393137 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.121868588 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100835587 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.118557403 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100824943 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.119443903 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.133415707 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.101387912 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.132160629 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.134382136 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.111285711 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.098299735 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115357999 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105502716 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.116339247 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.128008791 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.116202334 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.0969539 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.127164791 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.129573311 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.095319204 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.106496247 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09591731 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.11891602 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.121205029 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.09570174 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.134373461 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.122041152 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.09613454 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.122897861 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.102659906 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.13492121 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.136225902 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.128987042 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109966745 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.119731656 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.133866405 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102450365 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.122409159 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.133996547 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.142651435 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111671321 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.129677198 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121627325 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113236976 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.135822652 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.142354272 seconds)
  done (took 8.144318147 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086856884 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.085769465 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.105157287 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.085922248 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.110633151 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.088939115 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.112951811 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.092661574 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.091786722 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.11511587 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092049694 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.111211634 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090532044 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113399612 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091263504 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11052992 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091484679 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090285885 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113720873 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.090456978 seconds)
  done (took 2.795787399 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.095243574 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.127405787 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.087690635 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.117440056 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.095568475 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.123706207 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.115643134 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096600095 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.115274809 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096827399 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.127075836 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.106136553 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.116802204 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.121613548 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.106774858 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.122471212 seconds)
  done (took 2.600055456 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.108300189 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.121455124 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.134579322 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.092477969 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.106016694 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.095958631 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.107665641 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.08301297 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.10378808 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.096567279 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.114577372 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.098583929 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.108198708 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.085005792 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.10839559 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.093074292 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.104864563 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.093911775 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.107187311 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.112699002 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.11597747 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.111242993 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.091669793 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.111135721 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.094064173 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.118265731 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.100663207 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.111801726 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.091611734 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.115371267 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.09708043 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.123706511 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.090641178 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.122985176 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.092134438 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.112162045 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.092898274 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.116286795 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.09962186 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.115212489 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.091659502 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.119786492 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.092575832 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.116599203 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.089048164 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.117832477 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.08890919 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.124841913 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.116071116 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.097876601 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.115242403 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.102919916 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.1227397 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.10690913 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.125690234 seconds)
  done (took 6.658774838 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103414263 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.112900749 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.092386898 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104515856 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090706312 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.115732414 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.092865988 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.113680748 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095988147 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.112909513 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096416182 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.119612605 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096866043 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.119295428 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.096558409 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.1200773 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.088052999 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.116153247 seconds)
  done (took 2.720439278 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.093432336 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.107036533 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.095259943 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.107110683 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.086940656 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109391956 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08416908 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.084570216 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106482324 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08755436 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107621909 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.089798637 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105530964 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.089357543 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108045999 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087956427 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.10992865 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086361213 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.10805241 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083215061 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.110082411 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.086124379 seconds)
  done (took 2.965938346 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.106261389 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.14098437 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.101489876 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.151231575 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.112921232 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.091891505 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.122079125 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.091492468 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.132089991 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.111162965 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.092086585 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.110860501 seconds)
  done (took 2.198749248 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114840873 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146949523 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085465865 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111621428 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12088107 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093491492 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114011736 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093873217 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125856393 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126974409 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092657761 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127250056 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126559324 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124385574 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100753061 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122566651 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113670884 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092872027 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109068843 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136887735 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094158975 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12661856 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112615691 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093388127 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113298032 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125311095 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105183015 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12738969 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113415692 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105337443 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123457735 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113809722 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10471907 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128372233 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110870715 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125103237 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094418768 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135699947 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121275911 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104499758 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.111909574 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121760536 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105256915 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121878936 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125443359 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09371466 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121196112 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113875021 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093774323 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141598862 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122971007 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124844381 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102204076 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127140949 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126001603 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143144708 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12742675 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125261862 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101736859 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127881001 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125472719 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122744892 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10568386 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128020954 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122198776 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125702455 seconds)
  done (took 8.503186331 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130302728 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108987659 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09242585 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129589456 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127047817 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113767212 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093942232 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114286779 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092536987 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111277549 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.161699855 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114114711 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10519167 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126732302 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113181845 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094536344 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114173339 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126217444 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090194207 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.143892855 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118940581 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134837653 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113158359 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130895063 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135196496 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130119832 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100440899 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117378153 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097476213 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116695285 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121786914 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094178648 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126534519 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.106848467 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10507658 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113852102 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093403265 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122769732 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114139227 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102062407 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126822478 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136081785 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114492913 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093051416 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12817233 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114358646 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094035332 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110733758 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093681708 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111103131 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12850412 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1273336 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107621359 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127298106 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113710354 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094004829 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11588298 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114144978 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094959281 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12223602 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125793621 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094718223 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143019804 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113596561 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093457489 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1259418 seconds)
  done (took 8.404069204 seconds)
done (took 163.690762356 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.106522576 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.145514108 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.103579997 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.17273244 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.088378096 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.143792853 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.121400699 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.125962447 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.087269443 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.109406824 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.088384516 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.112607335 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.154594633 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.108857411 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.088799286 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.112243739 seconds)
  done (took 2.707041135 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.183409337 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.288151607 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107868209 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.114512098 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.094708004 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.113426601 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.091962476 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.11686104 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089818609 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.123041811 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.111475331 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.092262251 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.122173949 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.091929642 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110631683 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.091393924 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.123311835 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.091341212 seconds)
  done (took 3.000821176 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113872013 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.1547564 seconds)
  done (took 1.116536981 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.125026106 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.189184725 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.309621098 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.166844125 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.118316354 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.132795316 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.167784603 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130656052 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.19810508 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.132053407 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.110942807 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.11745579 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.141761218 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.101851906 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.120578293 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.095023317 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.144327514 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.117805564 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.097824185 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.117157947 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117544369 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.119180081 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.121258554 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.098427453 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.186963546 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.13334527 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.117675968 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.097212037 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.117336513 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.097646732 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.122271504 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.131866463 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.110600051 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.196120672 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.100645685 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.193384262 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.103134406 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.117682312 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.118058124 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.096138918 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.121286611 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.099647558 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.132699126 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.11677319 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.097226101 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.124279391 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.09682555 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.118442402 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.124215275 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.105363096 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.124715964 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.122446672 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.408175876 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.125604661 seconds)
  done (took 8.090865043 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.843372502 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.159673677 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.116194231 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.956092364 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.149677549 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.129700793 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.842368877 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115858193 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.270022437 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.846510607 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134140733 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.129116203 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.238741416 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.262412358 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.160566331 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.347126375 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.723982416 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.130272734 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.122020987 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.160057339 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122682372 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.145373356 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.113211335 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.443875776 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.117542261 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.114473488 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.100234624 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.128759218 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168526326 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.11466425 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.09706147 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.210965161 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.275804616 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.188388937 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115842669 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091179973 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114520273 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.17578552 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.284655331 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.230767466 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.190442169 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092656527 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.113795469 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.105811119 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.135709066 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.115063442 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.174588474 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.183244387 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.205776805 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097263733 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.128335603 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.103078915 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.127466621 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.170592453 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.113048725 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.348572397 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.355200224 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093957686 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124790303 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.111678613 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.273602056 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.116281488 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.235982107 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.121611775 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.225941977 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.121971617 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.77482185 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.198035092 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.095640028 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.125281399 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.100549945 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121526684 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.126948971 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.17350471 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.39103975 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109024544 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.119911573 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092812438 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.262106017 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.094219714 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.115133387 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.173850705 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116678246 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.102334725 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.132760853 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.129100792 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.18111478 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.25906188 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.129486761 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.123731411 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.098637833 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129397394 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.094247708 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.240940103 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.204946814 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.190487412 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.22277626 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.129803703 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.175998573 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.175159956 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129037268 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.180427337 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.123445467 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132294108 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107443523 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.229296853 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.153164251 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.117025594 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.099536877 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.12284116 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.15410099 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.096974105 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.123848435 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.178084891 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.495934411 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.176836074 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.090593884 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.120215804 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102482168 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.191558115 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101418777 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.272604233 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124656637 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.177164302 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.101556566 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.113692012 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123519594 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.174648205 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.129482343 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102752717 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128656515 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123130671 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.26029433 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.23047639 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.1094059 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.248045075 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.186490448 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.124753337 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.183897278 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102105684 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.20286049 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.103694327 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.128867714 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117241569 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.767335325 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.128515062 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.123571285 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099447432 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.204281181 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.115741326 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.095340649 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.116414324 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091611915 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.813791164 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.09694456 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.1130867 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.095850811 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.126060503 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.101526312 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122654141 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.120401361 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.172065213 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.246822891 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.1094337 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.124535029 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.115529083 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.171871991 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095757642 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.116602598 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.094003372 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.117085353 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.103317266 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.12084086 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.095242402 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.204463957 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.17036416 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.233139201 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.540852694 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.121816013 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.092770384 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.243157661 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120389954 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.316604777 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102492225 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.239173286 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.177815541 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.113281682 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.348392274 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.181072338 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.206942055 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.096299614 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.205746463 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091414846 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.12299323 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.171328439 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.115014348 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.101444431 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.16681224 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.133981642 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.130728858 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.166534039 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093900387 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.239331535 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.117102652 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.180263043 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118304672 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105914023 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.319562986 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.116875431 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.114775148 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.196264355 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098176416 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.117142072 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.686439908 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.117118976 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.104011658 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.126790239 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.235255412 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.180378935 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.126038328 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122163118 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.108334441 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.172028179 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.24695463 seconds)
  done (took 45.919312604 seconds)
done (took 61.676024582 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.315316109 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.276171555 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.315280851 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.204777751 seconds)
  done (took 2.06203812 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.186492911 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.161089903 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.13180233 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.114715033 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.162344092 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.091716175 seconds)
  done (took 1.723400201 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.508272396 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.398747323 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.365297474 seconds)
  done (took 2.148260926 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.271870871 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.292035294 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.370413949 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.423514224 seconds)
  done (took 2.342057369 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.21491649 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.133157296 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.106151516 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.145575558 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.181590772 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.184810529 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.15065251 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.159553704 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.136013366 seconds)
  done (took 2.334055313 seconds)
done (took 11.487862748 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.321125781 seconds)
    (2/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.254623337 seconds)
    (3/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.167399507 seconds)
    (4/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.105701219 seconds)
    (5/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.259876091 seconds)
    (6/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.120553513 seconds)
    (7/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.167260875 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.137548867 seconds)
    (9/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.112620344 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.128666096 seconds)
    (11/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.114749104 seconds)
    (12/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.119253764 seconds)
    (13/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.10501109 seconds)
    (14/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.135520963 seconds)
    (15/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.129573173 seconds)
    (16/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.111020376 seconds)
    (17/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.227099176 seconds)
    (18/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.149645035 seconds)
    (19/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.250084197 seconds)
    (20/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.274966081 seconds)
    (21/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.316507194 seconds)
    (22/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.290301958 seconds)
    (23/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.180869539 seconds)
    (24/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.245357633 seconds)
    (25/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.127241586 seconds)
    (26/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.163290157 seconds)
    (27/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.133610352 seconds)
    (28/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.214574257 seconds)
    (29/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.18357863 seconds)
    (30/286) benchmarking ("sort", Int64, true)...
    done (took 0.209536081 seconds)
    (31/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.080836965 seconds)
    (32/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.14222186 seconds)
    (33/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.150924409 seconds)
    (34/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.128866464 seconds)
    (35/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.267884042 seconds)
    (36/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.229871227 seconds)
    (37/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.132844392 seconds)
    (38/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.204118514 seconds)
    (39/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.172354452 seconds)
    (40/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.117695353 seconds)
    (41/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.104560827 seconds)
    (42/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.207926294 seconds)
    (43/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.170057319 seconds)
    (44/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.111086541 seconds)
    (45/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.186889815 seconds)
    (46/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.12590331 seconds)
    (47/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.148067716 seconds)
    (48/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.145515287 seconds)
    (49/286) benchmarking ("sort", Float32, false)...
    done (took 0.181953737 seconds)
    (50/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.150077021 seconds)
    (51/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.153756788 seconds)
    (52/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.096572316 seconds)
    (53/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.196103092 seconds)
    (54/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.198011925 seconds)
    (55/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.171604982 seconds)
    (56/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.18279654 seconds)
    (57/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.149842682 seconds)
    (58/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.130889008 seconds)
    (59/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.143728161 seconds)
    (60/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.143438818 seconds)
    (61/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.201418519 seconds)
    (62/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.210184726 seconds)
    (63/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.105055719 seconds)
    (64/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.132372418 seconds)
    (65/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.198300146 seconds)
    (66/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.099055131 seconds)
    (67/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.118723346 seconds)
    (68/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.080123072 seconds)
    (69/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.128992995 seconds)
    (70/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.105795098 seconds)
    (71/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.130512699 seconds)
    (72/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.083368967 seconds)
    (73/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.211840859 seconds)
    (74/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.122511991 seconds)
    (75/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.106227733 seconds)
    (76/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.12003444 seconds)
    (77/286) benchmarking ("sort", Float64, false)...
    done (took 0.179283975 seconds)
    (78/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.080815814 seconds)
    (79/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.161438831 seconds)
    (80/286) benchmarking ("sort", Int64, false)...
    done (took 0.092437128 seconds)
    (81/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.110717605 seconds)
    (82/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.112469205 seconds)
    (83/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.123111079 seconds)
    (84/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.096179199 seconds)
    (85/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.12047461 seconds)
    (86/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.087707587 seconds)
    (87/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.111633631 seconds)
    (88/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.174507115 seconds)
    (89/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.128816652 seconds)
    (90/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.194644305 seconds)
    (91/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.080719761 seconds)
    (92/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.123666232 seconds)
    (93/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.103640718 seconds)
    (94/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.205838223 seconds)
    (95/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.153397647 seconds)
    (96/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.080927468 seconds)
    (97/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.244682546 seconds)
    (98/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.12443654 seconds)
    (99/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.158042976 seconds)
    (100/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.137329597 seconds)
    (101/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.206155422 seconds)
    (102/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.122363547 seconds)
    (103/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.148495008 seconds)
    (104/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.115701312 seconds)
    (105/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.120337807 seconds)
    (106/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.114692498 seconds)
    (107/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.104704031 seconds)
    (108/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.081084174 seconds)
    (109/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.171297277 seconds)
    (110/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.205784913 seconds)
    (111/286) benchmarking ("sort", Bool, false)...
    done (took 0.195775406 seconds)
    (112/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.105894481 seconds)
    (113/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.202367168 seconds)
    (114/286) benchmarking ("sort", Int8, true)...
    done (took 0.210201648 seconds)
    (115/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.129877885 seconds)
    (116/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.099122038 seconds)
    (117/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.121499865 seconds)
    (118/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.14769812 seconds)
    (119/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.100310065 seconds)
    (120/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.152400671 seconds)
    (121/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.09686183 seconds)
    (122/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.198600267 seconds)
    (123/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.207814577 seconds)
    (124/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.125686665 seconds)
    (125/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.10275518 seconds)
    (126/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.129054816 seconds)
    (127/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.081361634 seconds)
    (128/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.123749514 seconds)
    (129/286) benchmarking ("sort", BigInt, true)...
    done (took 0.22388217 seconds)
    (130/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.218021394 seconds)
    (131/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.080445571 seconds)
    (132/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.135832224 seconds)
    (133/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.080043572 seconds)
    (134/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.104068907 seconds)
    (135/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.093679387 seconds)
    (136/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.119329669 seconds)
    (137/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.099824408 seconds)
    (138/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.119327464 seconds)
    (139/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.080875524 seconds)
    (140/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.160998203 seconds)
    (141/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.146447028 seconds)
    (142/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.22148854 seconds)
    (143/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.105437773 seconds)
    (144/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.096120989 seconds)
    (145/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.117511303 seconds)
    (146/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.081361563 seconds)
    (147/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.155131486 seconds)
    (148/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.129410489 seconds)
    (149/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.1104391 seconds)
    (150/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.122179323 seconds)
    (151/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.214311383 seconds)
    (152/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.108043885 seconds)
    (153/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.122838434 seconds)
    (154/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.080980581 seconds)
    (155/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.184824694 seconds)
    (156/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.131296729 seconds)
    (157/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.101270122 seconds)
    (158/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.11699637 seconds)
    (159/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.104636865 seconds)
    (160/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.103790218 seconds)
    (161/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.13651563 seconds)
    (162/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.104292176 seconds)
    (163/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.100310597 seconds)
    (164/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.120389359 seconds)
    (165/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.095762683 seconds)
    (166/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.131637397 seconds)
    (167/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.099064157 seconds)
    (168/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.104316813 seconds)
    (169/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.100229848 seconds)
    (170/286) benchmarking ("sort", Float32, true)...
    done (took 0.213423434 seconds)
    (171/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.120071837 seconds)
    (172/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.100676461 seconds)
    (173/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.111699719 seconds)
    (174/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.107324397 seconds)
    (175/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.130322348 seconds)
    (176/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.1005643 seconds)
    (177/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.134847886 seconds)
    (178/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.105881713 seconds)
    (179/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.208412535 seconds)
    (180/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.103389236 seconds)
    (181/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.108459387 seconds)
    (182/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.111129992 seconds)
    (183/286) benchmarking ("sort", Bool, true)...
    done (took 0.210336876 seconds)
    (184/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.100218826 seconds)
    (185/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.121235874 seconds)
    (186/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.103251916 seconds)
    (187/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.122320629 seconds)
    (188/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.092587162 seconds)
    (189/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.121861662 seconds)
    (190/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.093413697 seconds)
    (191/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.103949215 seconds)
    (192/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.081272875 seconds)
    (193/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.119437608 seconds)
    (194/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.090272183 seconds)
    (195/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.104777278 seconds)
    (196/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.08036244 seconds)
    (197/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.132537359 seconds)
    (198/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.107270102 seconds)
    (199/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.124280349 seconds)
    (200/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.082192545 seconds)
    (201/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.104302936 seconds)
    (202/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.089153824 seconds)
    (203/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.141323833 seconds)
    (204/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.098521903 seconds)
    (205/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.14296773 seconds)
    (206/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.108356864 seconds)
    (207/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.120680924 seconds)
    (208/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.092694846 seconds)
    (209/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.120984038 seconds)
    (210/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.198284128 seconds)
    (211/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.082202638 seconds)
    (212/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.123875851 seconds)
    (213/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.096566816 seconds)
    (214/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.113046916 seconds)
    (215/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.094242701 seconds)
    (216/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.123219649 seconds)
    (217/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.080916976 seconds)
    (218/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.123548315 seconds)
    (219/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.081812189 seconds)
    (220/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.155620803 seconds)
    (221/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.093567548 seconds)
    (222/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.125453081 seconds)
    (223/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.099066976 seconds)
    (224/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.117183615 seconds)
    (225/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.081777528 seconds)
    (226/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.104468117 seconds)
    (227/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.081099921 seconds)
    (228/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.137078435 seconds)
    (229/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.10186143 seconds)
    (230/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.1040077 seconds)
    (231/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.093901769 seconds)
    (232/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.131033428 seconds)
    (233/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.081527769 seconds)
    (234/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.122606365 seconds)
    (235/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.097458191 seconds)
    (236/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.119992145 seconds)
    (237/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.100777464 seconds)
    (238/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.131856569 seconds)
    (239/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.080648833 seconds)
    (240/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.104484214 seconds)
    (241/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.145852248 seconds)
    (242/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.128483027 seconds)
    (243/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.080916018 seconds)
    (244/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.13669235 seconds)
    (245/286) benchmarking ("sort", BigInt, false)...
    done (took 0.2371748 seconds)
    (246/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.081053158 seconds)
    (247/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.105773595 seconds)
    (248/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.099577588 seconds)
    (249/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.103943027 seconds)
    (250/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.118921067 seconds)
    (251/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.105012154 seconds)
    (252/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.099826579 seconds)
    (253/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.1050316 seconds)
    (254/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.213025807 seconds)
    (255/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.082107679 seconds)
    (256/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.144553173 seconds)
    (257/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.101948297 seconds)
    (258/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.134825883 seconds)
    (259/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.081027748 seconds)
    (260/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.122055074 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.101987672 seconds)
    (262/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.105193526 seconds)
    (263/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.093752992 seconds)
    (264/286) benchmarking ("sort", Float64, true)...
    done (took 0.215768367 seconds)
    (265/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.147994875 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.09479765 seconds)
    (267/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.105166008 seconds)
    (268/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.100946762 seconds)
    (269/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.119855804 seconds)
    (270/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.082479532 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.132347297 seconds)
    (272/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.082196893 seconds)
    (273/286) benchmarking ("sort", Int8, false)...
    done (took 0.203215056 seconds)
    (274/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.119964217 seconds)
    (275/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.101710193 seconds)
    (276/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.130021505 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.098036201 seconds)
    (278/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.106024441 seconds)
    (279/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.101532104 seconds)
    (280/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.105347632 seconds)
    (281/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.094277722 seconds)
    (282/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.104406582 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.097304266 seconds)
    (284/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.10547338 seconds)
    (285/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.097788644 seconds)
    (286/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.105108764 seconds)
  done (took 39.202701326 seconds)
done (took 40.08185464 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.106542567 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.160808389 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.105850835 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.148771032 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.131005837 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.11111537 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.128036115 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.105803062 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.13180437 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.132005674 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.108865737 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.112154463 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.1058412 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.128972539 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.107077062 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.149706075 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.108162462 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.125011445 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.096762228 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.122057388 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.121379137 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.098777748 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.123044295 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.089290225 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.128791569 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.104528969 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.124153957 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.104894435 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.121181833 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.095272392 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.119651994 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.101329417 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.118955217 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124789019 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.122568218 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.097393005 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.12959371 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.103758628 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.123847606 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.098017061 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.126263185 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.09728894 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.124283701 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.101852487 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.122528352 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.096171759 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.12217171 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.13164252 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.12685608 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.121598972 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.102521942 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.129110378 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.10681723 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.12659971 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.095736174 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.122180167 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.098961259 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.151559657 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.121221179 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.098755771 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.101813636 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.12697329 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.09620815 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.122125165 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.120940786 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.107968114 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.127576239 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.098186829 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.127288008 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.100854005 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.116388446 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.098005539 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.118939056 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.095519354 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.127039196 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.105163337 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.115993864 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.099201849 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.124868056 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.100033197 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.121316562 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096370312 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.12343646 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.099170064 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.119501703 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.089730409 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.120295185 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.100284144 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.121334473 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.098000208 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.123385062 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.101252001 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.123788193 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.10529752 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.121955407 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.098733107 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.123315701 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.097805864 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.124258658 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.095783744 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.118199192 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095906725 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.126844992 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.095799226 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.122443535 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.107772518 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.120113235 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.100355631 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.121953303 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.097239541 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.133552043 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.128559969 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.098883281 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.123079429 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.093990775 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.124863328 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.096619791 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.119371074 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.095957586 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.122878002 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.099795993 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.122388532 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096426692 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.126093647 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.108002923 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.117898147 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.097184103 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.119909405 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.098761099 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.125394471 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.09872038 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.119460113 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.09789404 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.116430926 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096647921 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.11937632 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.101976051 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.120047752 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.098372413 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.122788908 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.09843388 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.124243083 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.09983456 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.123281094 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.096086771 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.115328222 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.099585809 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.122546424 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.100693331 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.122824237 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.099502516 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.117053209 seconds)
done (took 18.132054552 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.10503804 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.194168641 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.155683299 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.160253979 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.156464569 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.115370951 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.132472827 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.154766745 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.106621527 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.151264093 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.152174719 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.143863149 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.136008994 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.131193737 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.140247151 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.105303616 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.129811977 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.138736448 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.140009495 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.150868027 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.155880571 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.132030721 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.127483741 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.150514783 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.127595348 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.126217979 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.132865271 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.128476622 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.108524489 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.146115204 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.121638957 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.133704611 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.131952674 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.117725756 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.137401447 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.102479764 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.141765856 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.124994811 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.105601419 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.129936828 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142101491 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.116664685 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.125857141 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.137159556 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.105770467 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.132695781 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.104302889 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.127929446 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.105764502 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.123041827 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.133786339 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.126217821 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.128623813 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.132040592 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.107370124 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.1291332 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.107571529 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.132875281 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.131919731 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.109457648 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.130345076 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.108284835 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.135664669 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.147409874 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.128594275 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.108281447 seconds)
  done (took 9.531238304 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.120640281 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.1606674 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.137519815 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.113354507 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.132631913 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.093697416 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.118308692 seconds)
  done (took 1.820563097 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.095746018 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.150835609 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.130294874 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.154635187 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.144251699 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.132648515 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.1419073 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.122746974 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.119341979 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.13079116 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.124929722 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.178781339 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.121779807 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.107434295 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.155516805 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.120025735 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.132787515 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.120895673 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.103299027 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.155103197 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.126286744 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.119232345 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.134554027 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.097341754 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.144175577 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.097475817 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.191842672 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.132367524 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.095620629 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.127949357 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.125755601 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.193207133 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.119304197 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.132235739 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094044847 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.150701825 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.143417666 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.102611876 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.147084475 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.101378068 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.14380716 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.127799848 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.104153763 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.127412235 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.10372699 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.137003478 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.108167941 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.130862071 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.10200159 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.150578904 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.132340217 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.119567254 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.122560648 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.100887569 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.131913491 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.102837095 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.136068928 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.126071269 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.126206613 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.128843626 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.123397626 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.150353965 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.143868716 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.124514736 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.139976394 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.144596771 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.11852477 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.126722323 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.104471077 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.128795282 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.124215034 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.125609548 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.131737131 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.112104252 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.130382915 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.124359971 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.15087166 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.100409534 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.134284977 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.125643897 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.099326235 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.12207347 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.113883248 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.125318887 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.099511255 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.139691435 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.108987259 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.128285308 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.100037567 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.145746604 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.125836485 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.108468159 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.13312002 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.100595059 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.136884806 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.150815454 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.132264825 seconds)
  done (took 13.262457276 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.098038012 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.097191811 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.129244361 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.122739103 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.098977742 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.098513752 seconds)
  done (took 1.593398021 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.129392068 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.12657376 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.113445168 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.130046233 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.166856536 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.121832028 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.148446813 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.131888438 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.118288456 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.137958785 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.121893987 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.149138547 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.153201762 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.104885464 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.147332909 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.104732145 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.14890126 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126686109 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.112781908 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12651375 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.114556104 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.130948484 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.101250004 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.145877732 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.13026342 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.105523865 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.12886108 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.113487784 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.137812174 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.107618076 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.131147723 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.130238211 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.105448944 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.132228246 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.122496069 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.130491651 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099060531 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.134263495 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.130910472 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.105298123 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.148956114 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.101430924 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.136583117 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.109014954 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.132458384 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.129567118 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.107535314 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.128065317 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.122389921 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.132690222 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.107275712 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.131126331 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.10426359 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.132457417 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.131225242 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.108046381 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.133354669 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.123202283 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.131843046 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.105216002 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.12865718 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.130449193 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.107698928 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.13072959 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105749215 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.132632815 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.105407882 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.127737508 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.102125594 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.130020835 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.106775803 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.128625514 seconds)
  done (took 9.908940517 seconds)
done (took 37.049838546 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.69577178 seconds)
  done (took 1.644758718 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.873826779 seconds)
  done (took 1.824640459 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.833264961 seconds)
  done (took 18.814986682 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.543513944 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.655088835 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.012528798 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.173536109 seconds)
  done (took 3.33489148 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.983269667 seconds)
  done (took 1.952668744 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.322715873 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.275477007 seconds)
  done (took 1.554681754 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.83869389 seconds)
  done (took 1.801151165 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.62937224 seconds)
  done (took 2.592058551 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.368034149 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.208568148 seconds)
  done (took 1.551237852 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.597341263 seconds)
  done (took 1.564697472 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.468291941 seconds)
  done (took 16.440315195 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.239376071 seconds)
  done (took 1.220500995 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.311608091 seconds)
  done (took 1.280161535 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.699064212 seconds)
  done (took 4.669610176 seconds)
done (took 61.2052147 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.108933077 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.136609751 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.111977377 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.133537081 seconds)
  done (took 1.455115368 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.112686628 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.129365451 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.109697364 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.131105546 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.114888791 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.131657404 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.104091963 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.13724685 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.103635714 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.13311933 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.130604859 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.105604487 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.131588159 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.103983264 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.129154714 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.106159569 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.134164782 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.105252181 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.130914414 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.105322556 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.131185304 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.131242084 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.107927175 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.130905902 seconds)
  done (took 3.862390307 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.108780926 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.10164135 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.129829505 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.100485479 seconds)
  done (took 1.415913788 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.113361308 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.14600968 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.119269154 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.137921149 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.145995279 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.118564507 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.127293765 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.101576511 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.129931576 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.112140882 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.129103506 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.14689985 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.119973212 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.121923183 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.114168328 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.120026116 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.098985625 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.145499098 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.112362708 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.140009511 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.100984546 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.13797316 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.109347448 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.141384981 seconds)
  done (took 3.970719241 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.177435241 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.141481551 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.151413879 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.176261408 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.127602314 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.126176493 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.127584486 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.135270756 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.130429325 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.101784066 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.12665842 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.158206275 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.13266356 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.128656656 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.101502423 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.132912395 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.108331377 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.131680484 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.103408783 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.141893096 seconds)
  done (took 3.642040339 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.109724185 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.126278212 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.098403081 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.126519208 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.109552532 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.129807695 seconds)
  done (took 1.682899856 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.098210297 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.095904952 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.12273401 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.096362377 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.127868886 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.096771753 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.120257906 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.097864967 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.096231884 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.123490144 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.096682634 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.122148537 seconds)
  done (took 2.272051012 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.508850056 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.126264426 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.12791906 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.104883054 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.132431055 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.100829537 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.142327747 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.099792795 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.184137251 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.128622643 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.116303518 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.182191992 seconds)
  done (took 2.935189159 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223177256 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107418407 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.288476189 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.389190904 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17164694 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178244399 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.285023255 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182784407 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.198006013 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14812619 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217725725 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16834113 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137555124 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216842538 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124517964 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.195395006 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187347015 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21097077 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16102422 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.251177235 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176348508 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177619448 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201084882 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135768022 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149054984 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170154507 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.128112429 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111203063 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184177464 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180166959 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211662042 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158871174 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121365139 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237338187 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227576129 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18822526 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.342081094 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118438819 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.203382766 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.202356198 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2903206 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15082081 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207368082 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16616977 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141410764 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191771277 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167783054 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.192362898 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.114345844 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153086829 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222083677 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186302296 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.193347113 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120774409 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.337791569 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162229218 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.130075365 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191909073 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22839847 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212338042 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179563861 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.105836809 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.223973662 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203891442 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192675888 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.155313283 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.179985355 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108132039 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188437556 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.242426237 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192726651 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180701353 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.197081934 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145224545 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17497647 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190585823 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165297437 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190276825 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171378771 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.104587067 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16098667 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147098424 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111819974 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.19807844 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132289489 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227018411 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145649973 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.301430639 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218855038 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16999593 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173023779 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177201961 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181911135 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158010006 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.102256698 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158904288 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.183403894 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169575617 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141791552 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14145859 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157335384 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.136986293 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162984268 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.106775844 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170483163 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.145614282 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179274608 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175007791 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.111643252 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176579796 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161629369 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.168286432 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183518718 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206610034 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143592679 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115596548 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214962438 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168353998 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.147525799 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196633682 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.205945289 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.183676831 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1484611 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180098377 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206512801 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154441522 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209345242 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153432147 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144635648 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.134219959 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170636484 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167303179 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.166433206 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138998294 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.134169856 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244498181 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.109426209 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147846442 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185749708 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137162649 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11161367 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155081648 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146295689 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.124773648 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.16158724 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.150412119 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16706145 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171047016 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16376784 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142024357 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154312261 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234236955 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116407098 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.171536428 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157861858 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.100871204 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.190066988 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233227872 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112337859 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197883666 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.180867479 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234715479 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174781343 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113327505 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192285938 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141916325 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.101727326 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205019093 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143466974 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173867722 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.230180004 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206747767 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.178353682 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.163284126 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159699682 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17940232 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.195666005 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167705378 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.127829161 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176487593 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178162 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.133668564 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.13299425 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.110899142 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150587031 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113621026 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144778205 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191563528 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175807305 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.227765897 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174510986 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122612996 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.203060856 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.137034943 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175556572 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.182669583 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149391974 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.205683187 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202528819 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178676181 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154171377 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183753077 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.102485633 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136388715 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142795758 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150201846 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143854412 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145322458 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153619606 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.203429605 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187546957 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160132487 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21652801 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178768012 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.2131949 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.133128311 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.174783843 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191329759 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168155693 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.17142343 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146816483 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.17170053 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198393474 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15357324 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206441368 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173385729 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179453386 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212043659 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.168002382 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140730039 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131912368 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179004055 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151197044 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18393669 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157986533 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145077176 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136823794 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.14756299 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136325867 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19243415 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154009364 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191642868 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.177597716 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185648628 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137346704 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153309118 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144331536 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156800199 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.127455906 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182337743 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207858099 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156038488 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171865732 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19662429 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112936375 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.354152469 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215006259 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196433707 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148403975 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153815303 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143589711 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179860085 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174463529 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195721532 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156643512 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193599897 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171123834 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.153440288 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117553179 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159795285 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163400087 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.16343652 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.142979636 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.135461727 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.154067525 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195061005 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157773265 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170870357 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175402886 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.12975969 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.166706234 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152649494 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223315043 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171396491 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189319882 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.168267897 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.187907399 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200870812 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135853926 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110032444 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.1378264 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194782667 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114149323 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169941465 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.223013492 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211083461 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171155458 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183074336 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147737079 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.107201425 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171477181 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159583029 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211608054 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152784422 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.148127228 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214011098 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.162360903 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11403618 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176975152 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.295985151 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160726431 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195914037 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.13253526 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.288883304 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11590116 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142213378 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181743548 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1837866 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.14257124 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.16855324 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179669323 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157786948 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181988078 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147919797 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.202185245 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222122569 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182752855 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188012862 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.156322501 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170893957 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175410753 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198684321 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154818269 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.155761274 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145755745 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205835655 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.234453245 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.115319336 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17519918 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173926298 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171624658 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186203382 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146730903 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200748862 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141774212 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17876162 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123007646 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137527758 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170229577 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.196501851 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144659663 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197624052 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169954246 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113745223 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138520554 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164155647 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169965663 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125551007 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.141326112 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19115547 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.139574858 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173904164 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192516152 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11347197 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166747216 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156220822 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113107176 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15452323 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156794195 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117220852 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.187182733 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206864873 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.143495874 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199429502 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184646575 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178040893 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172657026 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155606528 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.643132795 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.141499839 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202950514 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160465935 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201733141 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16128173 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177618634 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172444536 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132045348 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179518685 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162308001 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.232940618 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178049299 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.17132256 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142630116 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127139919 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157691192 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.142119665 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163125555 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14456935 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153636565 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.147351501 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.167942198 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128190634 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.156712133 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151073655 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206570919 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159629138 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197444181 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198059166 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150174326 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17703112 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188293749 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112163561 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.175257708 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185419833 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154906129 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163443402 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.141541592 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.118320863 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191736152 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.135749647 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172665364 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142176243 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174860528 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175157028 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.146432682 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17062017 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154235296 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143314704 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139730317 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.167075525 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169647457 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113248409 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.139707766 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166565142 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171663351 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.168272317 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109487813 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.184084656 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204663972 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.107179135 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145391004 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.298554906 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175369222 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206986824 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.166656772 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146635529 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126629151 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167494549 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.164718619 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172129601 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.111075053 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14465244 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.141713779 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.193171883 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.181070444 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141097335 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19719913 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173907574 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200357571 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.147972679 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.275445562 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120579294 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167462214 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.142377167 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.139335183 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123867273 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146801258 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156410443 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.203358862 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192512153 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.166340853 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.127624621 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139227208 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.134363002 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115613001 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183417435 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167534892 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17041962 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154959572 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.101090252 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156496558 seconds)
  done (took 82.863607559 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.157089717 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.15341036 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.158698267 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.20836828 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.179277794 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.267736222 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.217669912 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.239456853 seconds)
  done (took 2.650459079 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.111810369 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.147173123 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.152446456 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.136153813 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.134793903 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.360652807 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.120042778 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.136494816 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.195784446 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.147420304 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.133026199 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.639399443 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.107026717 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.139147436 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.123814263 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.133832662 seconds)
  done (took 3.981071514 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.39359795 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.550849255 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.101402728 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.244375928 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.253296371 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.167493149 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.760872212 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.175088094 seconds)
  done (took 12.711674108 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.136688078 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.151851349 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.153269511 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.179600668 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.163711014 seconds)
  done (took 1.862988932 seconds)
done (took 126.271237488 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.105946068 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.134986539 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.108088249 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.137500964 seconds)
  done (took 1.54721927 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.120462257 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.090633773 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.122389601 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.089593609 seconds)
  done (took 1.491006879 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.449611899 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.122088278 seconds)
  done (took 1.67956177 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.130859447 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.148968761 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.128789897 seconds)
  done (took 1.486851858 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.11504097 seconds)
  done (took 1.195001763 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.117675654 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.115176098 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.153592711 seconds)
  done (took 1.465538176 seconds)
done (took 9.936450399 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121786098 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.448322574 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.396722903 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.149874296 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.732894879 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.390377762 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.047322377 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.16588471 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.176011812 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.102296001 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.149806686 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.680347758 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.033547443 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.350643386 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.018972571 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.347798996 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.712752946 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.10331725 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.136588016 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.102163447 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.023183349 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.099943639 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.13195394 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.10298015 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.710349782 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.405345268 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.130793963 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.387949542 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.101932137 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.133898099 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.392112423 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.128269177 seconds)
  done (took 17.186704739 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.105225035 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.190729063 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.109168872 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.131824536 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.105383123 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.131759292 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.11151681 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.142926923 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.191228347 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.129532729 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.122423449 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.128562645 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.106710491 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.12972678 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.124835847 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.129260401 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.105481513 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.13123596 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.10923432 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.131518483 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.121540727 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.128505539 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.103487648 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.131381304 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.101624056 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.14324311 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.102742155 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.141695448 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.101588696 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.135786393 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.107374399 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.131195441 seconds)
  done (took 5.094117133 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.151474866 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.201132347 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.138963338 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137131783 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.181655214 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.132427023 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.218237807 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.137693084 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.194993208 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.130337953 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.120600876 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.130818408 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.167549443 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.102336856 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.152390551 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.101535606 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.132615478 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.103909852 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.137231135 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.104734242 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.150158086 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.101152853 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.132093956 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.103869186 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.130518295 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.11582107 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.131482881 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.141905968 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.105358492 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.134724724 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.109051025 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.130720804 seconds)
  done (took 5.443067943 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.108576477 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.137478107 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.120255195 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.148301322 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.104618509 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.136367097 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.110373021 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.132656853 seconds)
  done (took 2.078005255 seconds)
done (took 30.88522065 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.120599856 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.107593324 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.147983764 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.144479645 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.113309504 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.165717076 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.100890106 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.113375626 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.146016673 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.110467582 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.146736613 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.101360969 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.13244998 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.099846137 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.144763266 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.10675195 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.146499816 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.111559695 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.152179397 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.11803774 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.131933011 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.113791876 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.141667319 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.123251351 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.152820332 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.152482842 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.11881962 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.13708141 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.10232919 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.132034159 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.120119127 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.160389987 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.104627782 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.149397159 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.106216399 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.13617775 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.102578491 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.13366616 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.118167064 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.14276085 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.107918496 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.142937135 seconds)
  done (took 6.436549728 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.132243002 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.177885096 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.101826694 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.13044142 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.098878452 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.172989385 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.16929222 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.099748749 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.129448252 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.127749378 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.158871826 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.099724008 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.129947022 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.099733721 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.129400795 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.100354596 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.156739329 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.127001753 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.163405033 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.16231241 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.149876191 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.16550929 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.166632379 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.127249441 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.176855194 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.170671789 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.123927379 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.169650054 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.161228306 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.098734079 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.163629644 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.134047237 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.130416808 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.099279272 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.175814053 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.17000816 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.131605017 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.174601296 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.164617236 seconds)
  done (took 6.60922655 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.111045904 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.148588956 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.129249555 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.205492883 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.173858758 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.117957196 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.146102746 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.121223425 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.161480886 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.102114198 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.143468664 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.16444886 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.120391119 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.143525217 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.10909468 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.146979462 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.12384082 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.133547485 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.110272699 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.152145583 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.122316828 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.146189673 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.118057477 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.143160081 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.101815793 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.143021576 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.108926228 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.147679386 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.139440281 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.114065782 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.13594113 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.108623539 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.134674493 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.113640703 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.136273737 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.111417741 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.154847267 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.113052586 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.146628089 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.167270616 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.113470006 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.136490945 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.125262791 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.180984754 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.104754462 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.140492422 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.112899975 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.143320944 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.102026971 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.152374408 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.117931345 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.133491991 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.147822359 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.103109924 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.130466445 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.111415917 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.10370273 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.135426083 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.111369232 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.137972707 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.152486601 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.112661078 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.139567996 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.105657752 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.138666605 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.103812019 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.13063855 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.108409809 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.157630296 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.109380698 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.165664027 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.103299986 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.139346525 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.112529074 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.13977573 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.113153378 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.133347005 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.110985576 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.141793642 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.108594991 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.14249225 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.106344357 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.137865789 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.121269474 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.149287495 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.141146639 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.109411041 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.139576464 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.106212379 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.134577633 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.118963214 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.135126592 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.106438667 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.143233805 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.104505302 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.136209374 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.109711071 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.138371986 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.102237988 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.153741892 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.108158739 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.133197957 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.12176475 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.133683541 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.106934467 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.141892837 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.116292981 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.133442879 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.10816924 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.140018126 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.103584753 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.138991896 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.107783675 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.133451312 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.115975756 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.145673111 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.108686891 seconds)
  done (took 16.178920914 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.256248535 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.237805067 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.207953097 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.322552913 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.157040661 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.14077729 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.26275033 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.155552306 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.136242727 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.173852981 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.190987481 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.201570278 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.189991499 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.201572107 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.195437374 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.104487756 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.168546422 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.18940639 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.237845335 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.28852968 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.167434014 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.149827028 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.176515716 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.174808653 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.121802952 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.150964203 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.159795384 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.127098206 seconds)
  done (took 6.358089669 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.120907521 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.175163007 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.111995604 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.164893989 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.162380481 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.104180586 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.139362435 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.104090188 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.149450736 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.150113321 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.106036626 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.141132807 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.111825396 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.143503556 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.103866502 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.142870618 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.114146118 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.144820454 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.106644426 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.138065855 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.121892995 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.15280673 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.138808421 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.110882357 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.151863741 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.109506973 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.135788562 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.156656617 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.114247201 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.164354977 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.101039885 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.143492534 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.148168194 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.103908373 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.140995805 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.107059212 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.105120353 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.137189769 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.107197424 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.132489934 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.103284909 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.124776723 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.110625531 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.150233199 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.111577309 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.137272953 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.139842624 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.109488753 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.104241945 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.131765668 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.106502181 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.137439381 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.107802049 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.151519633 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.106952685 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.135479222 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.107841965 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.135012994 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.115583027 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.137226669 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.101514777 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.139775214 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.110910405 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.140755915 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.113386534 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.141689421 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.109179665 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.136381369 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.109285743 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.142141846 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.106967528 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.147482523 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.101235296 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.138409921 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.115377344 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.147864208 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.107797071 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.140078467 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.141561077 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.103864703 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.094208544 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.133080662 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.090380228 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.139546149 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.103461399 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.141235133 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.107312344 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.140285321 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.120484676 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.145202586 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.142495997 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.105975279 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.140515659 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.109478302 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.131194289 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.108894735 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.152606236 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.125274161 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.133586195 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.10128438 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.156553988 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.105123514 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.132871925 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.093191266 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.143539986 seconds)
  done (took 14.396900134 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.132399575 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.173213006 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.104920628 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.154137428 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.170270648 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.134290951 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.150613026 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.114103835 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.136006325 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.125775548 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.142444994 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.113163726 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.142934614 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.119313969 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.166961725 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.148293301 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.106659693 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.150001249 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.11044428 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.176755594 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.12409061 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.162285166 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.167021572 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.116386251 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.141705957 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.128676536 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.168196275 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.148388375 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.11843746 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.169120844 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.118376319 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.167477453 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.169632007 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.110396398 seconds)
  done (took 5.901023803 seconds)
done (took 56.960547274 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.21436275 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.430010518 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.187137194 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.184310569 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.248271654 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.213054822 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.19122833 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.379782474 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.919676705 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.177803609 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.185042552 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.186816968 seconds)
done (took 27.626009508 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.261512142 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.776744705 seconds)
    (2/2) benchmarking "String"...
    done (took 1.514279138 seconds)
  done (took 4.401874378 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.184676228 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.186428909 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.458267504 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.186465791 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.205088303 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.188438394 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.19671398 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.199888834 seconds)
  done (took 15.731149553 seconds)
done (took 25.68959344 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.194736629 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.411184428 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.444326518 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.218297828 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.187446535 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.197175592 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.187425704 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.232776881 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.189717516 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.193262999 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.187044253 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.466615718 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.22307133 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.568734315 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.189069976 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.203369024 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.206132522 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.466340227 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.204375674 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.233842761 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.193149973 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.17613665 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.208919082 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.234704574 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.205833506 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.192909795 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.198853254 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.198134259 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.374682287 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.201499378 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.237889647 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.186908954 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.198759162 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.200732256 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.301544926 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.219799485 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.371449784 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.196683367 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.17922097 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.201453846 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.381320393 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.598145812 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.19025681 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.195585601 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.201304858 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.248874532 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.182610939 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.932314737 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.199897352 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.189668346 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.194893073 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.557277332 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.197632312 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.198518681 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.201561972 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.421884878 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.193744452 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.237863424 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.222336489 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.19441733 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.191562254 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.191947014 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.198715188 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.191866594 seconds)
  done (took 142.710188336 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.190681669 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.191041291 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.19086746 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.198021774 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.192826307 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.190750323 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.191308915 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.191366131 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.191794317 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.192865411 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.19217154 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.192463594 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.195397136 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.18979166 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.192387079 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.213174474 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.196953865 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.208988987 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.210041688 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.19289195 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.212970697 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.193107673 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.21098095 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.19217956 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.231120958 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.287171444 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.239192137 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.221388523 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.191667659 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.19227661 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.239112409 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.211610575 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.823040404 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.057561952 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.210927894 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.214237866 seconds)
  done (took 79.948250624 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.194306297 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.191936633 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.194555006 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.22658567 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.192727128 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.784404656 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.7888914 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.921406906 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.481930252 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.198556055 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.589730487 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.509060516 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.198101485 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.28984218 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.207704126 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.195391335 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.210214425 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.220119799 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.1971759 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.195110827 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.769077468 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.206804355 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.226699869 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.389032826 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.212259238 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.226988596 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.593347603 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.194445511 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.227533468 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.532392798 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.246794292 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.195083822 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.596425147 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.275284851 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.310129822 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.196583491 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.227861545 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.196319312 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.478570222 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.195667863 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.197464491 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.200150647 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.882607407 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.197674888 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.78796657 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.200199346 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.155729354 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.197865232 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.196323116 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.256415577 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.879802168 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.213335267 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.195239902 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.198279139 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.197041785 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.19627388 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.230002029 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.222886494 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.312766145 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.19722327 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.199962771 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.230281941 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.197223622 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.214616405 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.218376326 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.708376504 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.277131497 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.337275367 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.77271883 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.196996796 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.29715375 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.318472513 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.197361569 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.197192133 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.198291724 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.19704756 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.309140611 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.197432832 seconds)
    (79/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.197725842 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.619465457 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.377027553 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.21750951 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.571569807 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.295535783 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.198336429 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.607187227 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.202167517 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.197871107 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.947261308 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.296656971 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.199845406 seconds)
    (92/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.2000775 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.198378935 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.197860851 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.198530797 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.62242625 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.795701005 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.451944293 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.204923333 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.504485397 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.20275517 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.635020865 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.768357546 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.895814133 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.205834562 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.31377685 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.378251451 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.218305975 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.200076293 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.576947409 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.201984804 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.260900247 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.201870948 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.602301206 seconds)
  done (took 364.952090707 seconds)
done (took 588.720146636 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.931052307 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.883804061 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.017757212 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.909747211 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.87882523 seconds)
  done (took 10.743299365 seconds)
done (took 11.862163477 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.395518752 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.394088165 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.262012259 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.395547295 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.234955474 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.414863261 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.377597028 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.222296715 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.309225176 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.285219822 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.309580935 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.256524744 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.237072347 seconds)
  done (took 18.216659627 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.486439997 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.203729903 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.28620935 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.456194707 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.24355769 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.476140284 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.541333855 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.205034159 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.351230572 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.221417701 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.21563698 seconds)
  done (took 17.811009722 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.473215336 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.204474952 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.269705974 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.452526772 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.244290379 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.475992042 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.496427653 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.204155789 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.345740295 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.215494421 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.215419808 seconds)
  done (took 17.720827501 seconds)
done (took 54.869728406 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.244411089 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.374274556 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.231909238 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.217267291 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.211748857 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.21183148 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.218139899 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.213719591 seconds)
  done (took 11.04865789 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.211521548 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.207892292 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.212109492 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.211053434 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.211237606 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.209813347 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.209407524 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.208544233 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.209173808 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.211656571 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.212785698 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.211776391 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.208246574 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.212618581 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.209034949 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.21071392 seconds)
  done (took 20.492498725 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.212145924 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.208913777 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.209714347 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.210942306 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.209081724 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.212006028 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.212302601 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.208208527 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.209221227 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.210170914 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.210946243 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.21183782 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.210772357 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.210271584 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.209915976 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.211221685 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.211280917 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.210765945 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.214687161 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.210405464 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.211771503 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.212341286 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.21126015 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.210557436 seconds)
  done (took 30.18948092 seconds)
done (took 62.851704597 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.222628707 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.228011897 seconds)
  done (took 5.578575965 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.274127674 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.277222929 seconds)
  done (took 3.681374529 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.214597137 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.213868608 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.214087727 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.214830183 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.213662473 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.2144577 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.212933588 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.214049139 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.214092983 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.214429969 seconds)
  done (took 13.268317244 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.214955981 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.213690818 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.212312342 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.215446765 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.215122895 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.212420951 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.215419256 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.214921549 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.215824637 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.211759259 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.217376748 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.212589106 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.21586136 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.213088604 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.215239637 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.212760605 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.213180927 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.211438628 seconds)
  done (took 22.981580643 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.229394745 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.236564619 seconds)
  done (took 3.594960317 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.352957082 seconds)
    (2/7) benchmarking "second"...
    done (took 1.255487859 seconds)
    (3/7) benchmarking "month"...
    done (took 1.330148915 seconds)
    (4/7) benchmarking "year"...
    done (took 1.319344639 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.254293349 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.233677905 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.254963855 seconds)
  done (took 10.129522916 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.21691448 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.409947817 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.521524972 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.805383224 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.21858766 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.220834689 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.096373886 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.220772082 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.222540801 seconds)
  done (took 14.062826618 seconds)
done (took 74.421562851 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.206759803 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.28518649 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.223782749 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.225879379 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.533316245 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.236028998 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.212366261 seconds)
done (took 16.049539232 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.205143066 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.200794316 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.2173378 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.224564679 seconds)
  done (took 9.977432475 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.210937644 seconds)
    (2/2) benchmarking "read"...
    done (took 1.563995653 seconds)
  done (took 4.906050947 seconds)
done (took 16.012366598 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.21795274 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.217582744 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.216997454 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.218329207 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.215510472 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.21555464 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.218698691 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.217712995 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.217240481 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 1.218579023 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217609042 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.214522912 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216721386 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.21706244 seconds)
    (15/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.215976328 seconds)
    (16/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216553275 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.219893 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.218903751 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.217494261 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.215994462 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.219318407 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.217477678 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.217407168 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.216171566 seconds)
  done (took 30.345691216 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.219434498 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.217148676 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.219991191 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.219994329 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.217610171 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.21891902 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.220087585 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.216717906 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.22029684 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.219334033 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.216709362 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.216733976 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.219675974 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.218587325 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220277643 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.219268665 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.220490287 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216768691 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220202064 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.218216874 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.219277473 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218715693 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.218450445 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.220718161 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.218715354 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.217578841 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.220653176 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.218093146 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.221288492 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.218309323 seconds)
  done (took 37.702739051 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.226905611 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.22815835 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.2213043 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.220810812 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.221290172 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.222393167 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.223124063 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.22132167 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.221750418 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.223248655 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.221272447 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.221708993 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.221915226 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.221744862 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.22217096 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.222496599 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.222284654 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.221991147 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.221901613 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.222344057 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.222061255 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.222921438 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.22344722 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.221849392 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.223066567 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.221891673 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.223020834 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.223494178 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.22200472 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.223929842 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.223992123 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.223050263 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.221773494 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.223889159 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.224425212 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.22226548 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.228324944 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.231609111 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.224198077 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.223341417 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.223365974 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.223531522 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.225146401 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.22338049 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.224138189 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.223285878 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.225112802 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.223144228 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.224074237 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.223451587 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.224297735 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.224337114 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.22323288 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.224784579 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.225177943 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.224933052 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.225388801 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.224514009 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.223325665 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.223890295 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.224084231 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.22517402 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.224054736 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.225292484 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.225530499 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.224176605 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.225125765 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.224758935 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.225138971 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.226150904 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.226703039 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.226248661 seconds)
  done (took 89.246730557 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.225952123 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.223051022 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.224798562 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.22407502 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.22305726 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.2262672 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.222823978 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224443015 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221549983 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.22525118 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22607159 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.223610979 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223474081 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.226436771 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.22669349 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.224426942 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.227010505 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.224479651 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.226319985 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.227308496 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.22824989 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.225005052 seconds)
  done (took 28.08846417 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.227700633 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.230979795 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.227072589 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.230192134 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.225023371 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.229337128 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.229237086 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.229207537 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227015546 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.224983416 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224429146 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227938974 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.22721336 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225045502 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.224812933 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.227115642 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.228165177 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.226853556 seconds)
  done (took 23.231695863 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.226645667 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.225388948 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.228613851 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.225944889 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.227168254 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.228521772 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.227035873 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.228543696 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.228135528 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.226186995 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.229497661 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228160193 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.228543349 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.226545294 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228828385 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.226272186 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.229744129 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225406928 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.228777371 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.226056199 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.225729287 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.228542829 seconds)
  done (took 28.145911013 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.230043899 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.228759239 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.227381683 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.22783099 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.227953143 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.229767424 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.230620777 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.22825946 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.231979791 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.726369407 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.22728669 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.230011345 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.228662741 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.227005682 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.227943767 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.226714342 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.230593572 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.227661755 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.231649272 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.22743607 seconds)
  done (took 26.217504388 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.230226544 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.229882902 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.233179731 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.230845344 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.230494573 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.23242401 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.232878593 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.231341278 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.231999896 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.232496439 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.232662085 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.232909255 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.231630103 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.231186463 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.233035537 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.234075012 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.232395311 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.233410252 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.232056587 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.233088057 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.233052168 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.232441655 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.231925317 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.234377524 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.232439839 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.232969638 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.232819713 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.233158564 seconds)
  done (took 35.649119985 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.233331087 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.233205592 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.230080348 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.229832096 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.231422286 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.230899687 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.232217309 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.23188821 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.234150375 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.231526238 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.233519556 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.233523203 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.234758739 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.234141469 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.234776897 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.234001244 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.23403502 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.230873413 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.230105022 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231763344 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.23535759 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.234814819 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.234700301 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.230961418 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232273299 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.235108149 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.232063935 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.233194139 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.234845692 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.233019139 seconds)
  done (took 38.132325046 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.279032763 seconds)
    (2/2) benchmarking "in"...
    done (took 1.272938686 seconds)
  done (took 3.69853818 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.23254386 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.23517887 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.235349357 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.233117057 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.232855167 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.235858148 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.235398232 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.233786272 seconds)
  done (took 11.021650211 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.236615291 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.235501642 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.23560324 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.236323542 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.235868421 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.236614025 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.243252769 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.256898085 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.237234781 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.239302626 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.245141303 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.24326047 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.239977653 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.235947827 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.236625652 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.2388304 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.236996175 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.236155184 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.236401349 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.235975471 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.23685974 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.239691544 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.239407073 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.236367992 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.24053516 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.249483524 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.242751886 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.23915919 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.238216682 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.242649393 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.239808199 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.2361611 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.236257673 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.23741745 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.238040929 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.237755415 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.248000476 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.260915076 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.245827894 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.237979899 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.240451412 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.23581738 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.240072078 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.241910552 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.240159296 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.238543136 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.238633206 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.235760739 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.237992181 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.242382317 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.243928339 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.239610297 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.238604177 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.243246682 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.240188519 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.247071256 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.259507421 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.245513876 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.250239602 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.251317169 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.254632157 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.266513537 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.242637238 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.239942704 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.251275942 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.263915337 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.248444307 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.258373722 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.237423629 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.240971692 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.24867863 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.253775252 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.268153836 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.238368029 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.241497567 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.240969826 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.242707131 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.242289634 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.248081447 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.264491816 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.239837984 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.240713257 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.253368014 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.264888136 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.241942085 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.241328652 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.242117288 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.241666662 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.243609531 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.253901916 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.261565489 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.242308016 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.243152101 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.244007174 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.244099462 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.243447437 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.242978875 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.243547552 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.240954441 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.243553891 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.242618949 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.247790302 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.252570449 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.243073558 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.242420915 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.251891426 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.24371385 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.244644594 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.249731172 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.243405655 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.243643392 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.246206134 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.249767054 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.240707061 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.24793654 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.253006464 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.243953034 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.246360509 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.243360855 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.24509341 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.254511567 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.270121484 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.245163426 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.244690977 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.251839492 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.256879945 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.24628879 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.249567243 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.246343953 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.241589411 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.243670802 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.247254712 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.245668608 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.246136589 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.245796582 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.246228667 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.243037171 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.246540318 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.244820029 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.247942251 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.247785978 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.245935812 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.246529092 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.247076184 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.245547557 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.248549799 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.253005777 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.246497804 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.247270034 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.247676882 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.242999182 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.247529745 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.247834572 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.246556755 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.246488791 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.246893237 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.246659007 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.244746638 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.248557379 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.246848689 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.246889525 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.248545897 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.250916364 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.246408927 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.250845353 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.247256438 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.246149504 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.248129107 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.247949673 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.24662871 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.247571936 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.247898081 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.252585092 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.255051744 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.248318686 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.24734169 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.251613528 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.247882236 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.246702429 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.247110362 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.252596034 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.257693356 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.248255588 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.255872328 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.247145273 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.247667188 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.249680095 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.249747328 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.248988323 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.249011855 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.255236677 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.258082115 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.263066434 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.275155735 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.251119915 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.25319555 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.251363104 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.252942106 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.253341979 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.248575464 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.250596905 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.249475147 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.250012081 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.249537247 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.25196295 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.250318079 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.250657978 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.252456855 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.250745553 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.249783915 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.252064822 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.251161699 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.251904656 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.248037696 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.250872537 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.249992781 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.251147043 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.247643381 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.25063265 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.250645648 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.251399392 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.250346033 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.259211472 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.248758036 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.252844297 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.252282307 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.252353986 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.251498824 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.252368518 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.254004966 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.252857526 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.258981141 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.27308981 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.2528338 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.257819978 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.273298687 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.251044805 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.253525023 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.253893994 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.250764825 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.255398938 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.261273038 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.253381434 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.251026989 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.253127938 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.253890307 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.2538781 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.259524848 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.251046469 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.253600656 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.253827313 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.254834889 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.25193562 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.253556226 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.254860636 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.254760641 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.255750626 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.25541095 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.254314199 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.255352831 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.254283375 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.253546648 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.253311565 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.257670651 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.261017606 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.26144209 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.254883077 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.258370248 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.256552293 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.259491156 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.255700049 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.255021671 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.256243214 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.269443452 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.280804975 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.262707328 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.27669751 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.255953974 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.26064531 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.276179611 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.259886813 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.256382877 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.255367853 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.254625593 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.255674556 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.253977469 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.255562826 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.255429516 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.256791084 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.258302062 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.259921477 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.256592108 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.25732722 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.256063023 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.255933645 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.256595833 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.256264016 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.255651967 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.256244984 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.257488649 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.254070328 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.256711867 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.263693639 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.278204883 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.256449771 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.256847071 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.257564719 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.25677682 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.258833251 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.255202881 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.261512441 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.26454771 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.260486954 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.265532317 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.259935781 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.267902002 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.256245258 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.261589984 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.264906891 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.254409236 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.257377072 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.258978509 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.258336739 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.26566021 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.277731608 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.260659716 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.263524537 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.258753481 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.259108594 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.258845878 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.258764799 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.261309009 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.258060883 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.267418635 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.283498781 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.262821103 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.260460551 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.256187565 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.257996517 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.258981893 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.259224691 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.261185201 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.25831327 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.260198495 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.259641803 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.259840443 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.259970474 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.258726859 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.260295593 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.257785806 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.260172774 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.266631318 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.281841903 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.263020582 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.259537318 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.266478001 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.25907325 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.268483744 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.281987752 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.261178705 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.259476238 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.260826 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.263038426 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.26017346 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.260350314 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.261252956 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.261377232 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.266294481 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.259413938 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.262903545 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.262594182 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.260402831 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.259495225 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.271143765 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.283781071 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.263069191 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.265920021 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.257455633 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.262238497 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.264243872 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.261891068 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.260298785 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.263858334 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.272736914 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.270803615 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.262506801 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.260458021 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.262147301 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.26055205 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.263085929 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.2629901 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.262475368 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.262097911 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.262815537 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.262168756 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.266805865 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.26284999 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.2650633 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.264346977 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.266007365 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.273502047 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.263430071 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.263317389 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.262954967 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.264746283 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.263493515 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.262428406 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.261816735 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.264080518 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.264148376 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.264121707 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.271219164 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.272675609 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.266464254 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.264074185 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.264414725 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.263648696 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.266051112 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.264057092 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.263515633 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.264053444 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.265114152 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.263861228 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.265331243 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.263789271 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.26586081 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.265456457 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.265919008 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.268536718 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.273749522 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.265471305 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.26229078 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.26532389 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.266542624 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.265265951 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.265631517 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.272071177 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.270246433 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.276633852 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.274648723 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.269787859 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.266894927 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.268859932 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.273378313 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.265879864 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.266284153 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.265946257 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.26881434 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.268322151 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.2701528 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.265308534 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.274585203 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.266468313 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.267222133 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.274636991 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.2908181 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.266006463 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.268513825 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.272649875 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.267122209 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.264957555 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.266639508 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.266242109 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.274401267 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.291116309 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.267094348 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.268524217 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.268147217 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.268274366 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.271368196 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.269189101 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.267860181 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.264918164 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.269627805 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.26794544 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.268949788 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.266349673 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.269155369 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.269319374 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.273551702 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.276856503 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.269072685 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.271047641 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.27098554 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.270733817 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.2683637 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.26954841 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.265791702 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.266552612 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.26863692 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.268779958 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.269092405 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.272864143 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.269573834 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.269721379 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.270992598 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.268752534 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.273463469 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.280151233 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.278075835 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.268040552 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.269016955 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.269399247 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.272921459 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.270398484 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.269516513 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.270671327 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.270514284 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.271345954 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.269619203 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.271413516 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.274946355 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.288345294 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.294358929 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.270266207 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.271064373 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.272755196 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.271002656 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.268976326 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.271678435 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.273162919 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.275058907 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.278736419 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.271158592 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.278844576 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.293797453 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.274400934 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.277735278 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.276091887 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.281215979 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.276246983 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.27223988 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.272220999 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.27872128 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.288623245 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.27239444 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.284802539 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.302035111 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.295292945 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.275248843 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.272847774 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.272772157 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.273887108 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.275245615 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.271988415 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.27523207 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.274276053 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.274155326 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.274225276 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.279160763 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.27558301 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.277142684 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.274089479 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.272741456 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.27541148 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.273665333 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.273649351 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.274834903 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.274484021 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.274166567 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.274539083 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.274578914 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.287337942 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.302321677 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.276344328 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.274395234 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.272319857 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.280390336 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.280052686 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.287051778 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.282387097 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.274334975 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.274340913 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.27665514 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.274671174 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.275435164 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.275817122 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.275606184 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.275913815 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.273494855 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.28895267 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.302392184 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.281489704 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.277544332 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.275176058 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.278460341 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.278248575 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.276875511 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.278120255 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.278053685 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.27947212 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.280710581 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.277973582 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.277793474 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.281337682 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.285168071 seconds)
  done (took 751.680694673 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.276373414 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.274911645 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.275523329 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.275582053 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.277095335 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.27645657 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.275699046 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.275719808 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.276047902 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.275946099 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.27622203 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.276541586 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.274591018 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.276670824 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.275498137 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.275756526 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.275159502 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.275549405 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.275618074 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.275226252 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.276119181 seconds)
  done (took 27.979329361 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.2776917 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.277420353 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.276357975 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.279348605 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.276014844 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.279261639 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.276925621 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.278424259 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.280346765 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.276586054 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.279622583 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.281120476 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.277323292 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.277259745 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.2773983 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.279395739 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.280141559 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.27707336 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.27952663 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.278858129 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.279419705 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.278090633 seconds)
  done (took 29.310831585 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.278883598 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.278519136 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.278845037 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.275902657 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.281017462 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.277841874 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.279812183 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.2805383 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.279832547 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.281733573 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.280957084 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.282189427 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.288113672 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.286293246 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.280969701 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.281811421 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.281117053 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.281062813 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.280658683 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.27870796 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.290064796 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.301576254 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.279382313 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.281337554 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.281584744 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.282911375 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.280714682 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.281556918 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.284520367 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.286828371 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.283381837 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.283027546 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.284534188 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.283177923 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.284420353 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.288896736 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.283749739 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.28050692 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.282627426 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.293854855 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.304308151 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.284026908 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.290981547 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.305600168 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.284753088 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.287874237 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.291373331 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.282226681 seconds)
  done (took 62.8330542 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.910291241 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.913741724 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.912127292 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.925379668 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.925777522 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.903805048 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.910000912 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.906561788 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.897808218 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.897281529 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.902909362 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.895503345 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.908415709 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.907535407 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.921894204 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.90557827 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.905320466 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.903430743 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.909840996 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.910675301 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.906108597 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.906537897 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.956139191 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.906694948 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.908392982 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.904243902 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.903951831 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.904604958 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.908325219 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.902630022 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.908272976 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.928176785 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.925372796 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.904520854 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.90357075 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.907561302 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.906985676 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.904921465 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.905856564 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.90275173 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.910538599 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.904394791 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.905668678 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.913724197 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.920195004 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.905519821 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.90662913 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.90730493 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.90564633 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.905201106 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.910450691 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.903483109 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.908031502 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.903245946 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.905252269 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.906818201 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.92756502 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.914992819 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.909479785 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.910984258 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.908523015 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.907523888 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.907105516 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.909370619 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.910086665 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.903223649 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.908616736 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.907061755 seconds)
  done (took 131.019070949 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.289661653 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.288915462 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.289395918 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.289860275 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.289388285 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.288487109 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.289539574 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.289463983 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.290826367 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.289062721 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.289669739 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.291765814 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.290411127 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.291997101 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.291012155 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.289592587 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.289440091 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.289407938 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.29006551 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.29095456 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.28964433 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.291152354 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.289460476 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.290266064 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.29103836 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.290320075 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.291482978 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.289732389 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.290037824 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.292109386 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.291270328 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.291699791 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.290155534 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.291308663 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.29232601 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.29020229 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.292244957 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.290680046 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.290777142 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.291749724 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.29271802 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.291317766 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.292075028 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.292225785 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.291505367 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.293442707 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.292320249 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.291701373 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.294865194 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.291250276 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.292341573 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.292091751 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.291407551 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.292039411 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.292232302 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.294597058 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.292254419 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.292203211 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.291276607 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.292288455 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.291830233 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.294393228 seconds)
  done (took 81.249930692 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.293330493 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.293426373 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.29218271 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.291017095 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.293712231 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.290819661 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.293928702 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.295736439 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.293880125 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.292974733 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294731059 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.293387218 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292460768 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.295846384 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.293019813 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.292960526 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.291734796 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.293019204 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.296339603 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.293501772 seconds)
  done (took 27.06937557 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.29215622 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.294325462 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.29296246 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.292592593 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.29572889 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.294122056 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.295334153 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.295840444 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.293744886 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.295793766 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.296837683 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.295870769 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.293879434 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.293816607 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.296199482 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.295339373 seconds)
  done (took 21.916073798 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.294299119 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.296664199 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.296167883 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.294536557 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.294138595 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.293451144 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.296259894 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.294663254 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.295563433 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.297671726 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.2980203 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.297049119 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.297601756 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.297526454 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.295103899 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.297321567 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.294401967 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.295842927 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.297167907 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.29809941 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.295666118 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.293969509 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.29700068 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.295839495 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.294367048 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.294723118 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.29561917 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.295072472 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.294792536 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.299157972 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.29462532 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.295635529 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.293522204 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.295292337 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.297719207 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.296025768 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.298970853 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.296977679 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.298393481 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.296802723 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.298462446 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.295484956 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.296664862 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.298399678 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.296530439 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.298037428 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.296251495 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.298264475 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.29601844 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.296207588 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.298674618 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.298865301 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.30056715 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.301042183 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.299081586 seconds)
  done (took 72.515430258 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.299373233 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.300063285 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.29762213 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.298071523 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.299186187 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.298794273 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.299419102 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.299850273 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.296916855 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.299679538 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.300042469 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.300968905 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.298668153 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.301736299 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.298176342 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.301932805 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.298985067 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.297238178 seconds)
  done (took 24.592017551 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.2983239 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.298272282 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.301961083 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.300114704 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.297947758 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.303138141 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.300343036 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.300968982 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.301626417 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.300507599 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.299267151 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.302034407 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.302027824 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.30141325 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.301607886 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.299248544 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.302792628 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.302053562 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.300486698 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.300149996 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.303472456 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.302534889 seconds)
  done (took 29.82822913 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.302190769 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.300537351 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.3006616 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.319264191 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.322199101 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.302453473 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.302154642 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.302327711 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.324895483 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.358823022 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.352279711 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.324166978 seconds)
  done (took 17.018634894 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300176535 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302540509 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.298842249 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304224114 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303890737 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299991678 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300239143 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301043836 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304518308 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303998414 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302294348 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303080659 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304068976 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302253382 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305602597 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304124386 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30030705 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30312499 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301381707 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304872189 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301892814 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304865871 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302460966 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302796646 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303336744 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303599467 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304606704 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301559785 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301251383 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30572605 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306116581 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302567494 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305489 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303473165 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305173424 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307003694 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303832569 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304716676 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305765762 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303220953 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.304661381 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304604771 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305332878 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303709585 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306768836 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303245749 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303397032 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303723528 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303410753 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305584124 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305233438 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303890207 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307002257 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305924378 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306227952 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306685005 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304231578 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304570942 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308087853 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304552502 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305559432 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306928179 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30539571 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304665845 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307487062 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306008324 seconds)
  done (took 87.277480195 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306481945 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.306021648 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306568021 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305916241 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305759611 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305662091 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307024294 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305559841 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305634996 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304389715 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308280396 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306821812 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30626123 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306346254 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308271319 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306033651 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305973273 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305937576 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305857124 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309833739 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305439728 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305658745 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307144539 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306482787 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305676542 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308929597 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30793484 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307885773 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30773165 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306781142 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308049755 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307500979 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307416416 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.307856366 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307172927 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30666216 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307248663 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.3069359 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308010029 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311746733 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308783254 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311112564 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30732715 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307843741 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30990538 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308543707 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308991962 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308989157 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307626289 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309687234 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310716602 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308521488 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309178589 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309978348 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309865106 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309825836 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309791203 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308338224 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310259005 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313186712 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309248031 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31064858 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313293558 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311424451 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30990028 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310883212 seconds)
  done (took 87.546384369 seconds)
done (took 1804.445444346 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.479307523 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.42878492 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.312771198 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.32551643 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.311248704 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.334774658 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.322179973 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.311748055 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.31147031 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.314255475 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.312305915 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.50221004 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.368425518 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.31269952 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.313043713 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.40890973 seconds)
  done (took 26.891117583 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.342776561 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.318979477 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.443409766 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.34260274 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.340782976 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.518908347 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.381429567 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.323076476 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.507373717 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.368106329 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.327003959 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.340941452 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.32033131 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.311308755 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.336605695 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.518110931 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.599883153 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.329277021 seconds)
  done (took 29.188496948 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.821765445 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.33786147 seconds)
  done (took 5.376445006 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.336883489 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.316125026 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.317937716 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.315769337 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.307235022 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.30725495 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.313458506 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.311838682 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.314029553 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.453253062 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.324733538 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.327376397 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.339146954 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.316868488 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.313609604 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.360125372 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.461621428 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.314731925 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.312497498 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.321518024 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.316098949 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.4439522 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.363806406 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.314689609 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.454107295 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.319497048 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.318709893 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.324370891 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.45397148 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.321190983 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.316845741 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.31598376 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.31792975 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.295247325 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.841950042 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.314553678 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.365299914 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.32951128 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.315891146 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.520674175 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.321086106 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.323704619 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.325531536 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.816311618 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.486934707 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.446713527 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.330607723 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.324175288 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.320196704 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.38835312 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.319348741 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.322043751 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.367355233 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.186796966 seconds)
  done (took 84.758227914 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.317710927 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.311046399 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.49540196 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.339527705 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.312511891 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.319276134 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.317881165 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.637410362 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.357354835 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.31137289 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.670734033 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.93250025 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.34429641 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.357441128 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.166087671 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.376941118 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.311561074 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.32998001 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.319946269 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.316695389 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.888514494 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.319709857 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.336035843 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.487012494 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.354287235 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.867803317 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.319414779 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.319828164 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.342626122 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.312838061 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.876242083 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.337899339 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.383118709 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.316053289 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.600386465 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.747654911 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.711917738 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.323935444 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.333604119 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.317004272 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.326223901 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.867205174 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.730024603 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.321597044 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.316131972 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.883272931 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.320840816 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.32049729 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.317780352 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.569445651 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.31659275 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.316871571 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.338670427 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.314775773 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.315306515 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.388832109 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.390169741 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.884206159 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.321490611 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.316455802 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.359328045 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.314920934 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.327022978 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.319769283 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.317889776 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.72935437 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.475450077 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.318685414 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.727537119 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.881085625 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.342641711 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.936439877 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.341172118 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.339919589 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.531046993 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.31926666 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.318946459 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.900297057 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.375937476 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.316736072 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.708170144 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.322995632 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.671704639 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.354926519 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.320142681 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.894811508 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.326454635 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.33059358 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.321847146 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.321122443 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.317320371 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.321614159 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.617782269 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.362201848 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.319782748 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.318195651 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.367979534 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.321736034 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.320072896 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.325080428 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.940626722 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.354084633 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.319390254 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.321435929 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.335651118 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.324965558 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.320842751 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.321578382 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.593404809 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.331748741 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.329755825 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.326454834 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.320642563 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.335223272 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.503871328 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.32422885 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.682530051 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.331771559 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.326898674 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.346254919 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.319518198 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.35032852 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.323124371 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.32129833 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.23603573 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.622070306 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.340425038 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.324272672 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.323682214 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.324829832 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.34252595 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.330795059 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.361452634 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.326941465 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.137328001 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.347429775 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.329782013 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.321535075 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.326317056 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.326397689 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.333820937 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.324681065 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.627683237 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.62041366 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.480142959 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.326234228 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.322626382 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.150774992 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.379020179 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.507171372 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.348872985 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.32379022 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.578058192 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.54855561 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.324800262 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.321950721 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.325198085 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.590888903 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.32490153 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.641223652 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.917964208 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.347572091 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.328260529 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.144640145 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.047235919 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.325029321 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.324551321 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.681051833 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.347897479 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.322861882 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.320948627 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.323179943 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.323575722 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.322656654 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.327774972 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.321818687 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.322040274 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.369084475 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.515961834 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.342390719 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.3314873 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.867290756 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.332707677 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.332902486 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.32295398 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.325332412 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.322269287 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.38194511 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.323717862 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.354165658 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.323654808 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.331302997 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.918956479 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.322802352 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.323274081 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.51754837 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.0612796 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.346800918 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.323019684 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.341489656 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.222407888 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.901886333 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.387026057 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.677488545 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.339807196 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.366343566 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.323869634 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.361416726 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.892758504 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.330521847 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.345538058 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.022561174 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.345410762 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.813085874 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.325486086 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.324658473 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.969575252 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.343421896 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.326313162 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.322746862 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.342002544 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.632539136 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.326307217 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.339064813 seconds)
  done (took 497.699976792 seconds)
done (took 645.128861679 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.323415445 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.330275515 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.31537938 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.328523222 seconds)
  done (took 10.530196071 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.338877092 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.332023718 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.33236955 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.332109201 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.333433369 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.332598694 seconds)
  done (took 9.237553845 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.327615187 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.330992467 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.331243518 seconds)
  done (took 8.224745706 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.557843645 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.358782459 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.696181358 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.361697275 seconds)
  done (took 9.209888627 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.333587611 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.333707733 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.332934283 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.335030343 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.336749882 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.336412301 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.337030644 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.335480353 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.33560678 seconds)
  done (took 13.24836487 seconds)
done (took 51.680070835 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.413381055 seconds)
    (2/286) benchmarking ("map", identity, BigInt, false)...
    done (took 1.417381382 seconds)
    (3/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.403988769 seconds)
    (4/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.346525793 seconds)
    (5/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.324341534 seconds)
    (6/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.349028927 seconds)
    (7/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.337639058 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.371693445 seconds)
    (9/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.343879128 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.342593233 seconds)
    (11/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.484577888 seconds)
    (12/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.344569111 seconds)
    (13/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.386648406 seconds)
    (14/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.344164351 seconds)
    (15/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.350995726 seconds)
    (16/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.342249273 seconds)
    (17/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.604694204 seconds)
    (18/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.337200246 seconds)
    (19/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.563798799 seconds)
    (20/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.313452126 seconds)
    (21/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.494389718 seconds)
    (22/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.521863923 seconds)
    (23/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.561599939 seconds)
    (24/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.094069214 seconds)
    (25/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.372063775 seconds)
    (26/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.434569719 seconds)
    (27/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.347454219 seconds)
    (28/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.40034274 seconds)
    (29/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.223790055 seconds)
    (30/286) benchmarking ("sort", Int64, true)...
    done (took 2.030072267 seconds)
    (31/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.470171373 seconds)
    (32/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.316388556 seconds)
    (33/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.393774743 seconds)
    (34/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.341907373 seconds)
    (35/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.412255199 seconds)
    (36/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.323709535 seconds)
    (37/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.350059857 seconds)
    (38/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.693971985 seconds)
    (39/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.405585471 seconds)
    (40/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.359830071 seconds)
    (41/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.3423261 seconds)
    (42/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.104336167 seconds)
    (43/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.454474996 seconds)
    (44/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.331434585 seconds)
    (45/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.463458514 seconds)
    (46/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.351894761 seconds)
    (47/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.357162964 seconds)
    (48/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.329676595 seconds)
    (49/286) benchmarking ("sort", Float32, false)...
    done (took 1.508220344 seconds)
    (50/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.352150707 seconds)
    (51/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.356976308 seconds)
    (52/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.343033123 seconds)
    (53/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.468776585 seconds)
    (54/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.408503416 seconds)
    (55/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.372720873 seconds)
    (56/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.317428027 seconds)
    (57/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.472017073 seconds)
    (58/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.341536113 seconds)
    (59/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.49254351 seconds)
    (60/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.355957958 seconds)
    (61/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.329469633 seconds)
    (62/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.010537989 seconds)
    (63/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.332200435 seconds)
    (64/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.392858464 seconds)
    (65/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.163862773 seconds)
    (66/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.438368758 seconds)
    (67/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.344574716 seconds)
    (68/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.482765386 seconds)
    (69/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.430105761 seconds)
    (70/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.341418771 seconds)
    (71/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.339656892 seconds)
    (72/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.248949339 seconds)
    (73/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.068098922 seconds)
    (74/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.392394688 seconds)
    (75/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.346312902 seconds)
    (76/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.34629948 seconds)
    (77/286) benchmarking ("sort", Float64, false)...
    done (took 1.548561383 seconds)
    (78/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.417685708 seconds)
    (79/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.35338948 seconds)
    (80/286) benchmarking ("sort", Int64, false)...
    done (took 1.539089971 seconds)
    (81/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.443218132 seconds)
    (82/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.551730706 seconds)
    (83/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.354120379 seconds)
    (84/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.343231266 seconds)
    (85/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.343574391 seconds)
    (86/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.389483779 seconds)
    (87/286) benchmarking ("map", identity, BigInt, true)...
    done (took 1.506168989 seconds)
    (88/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.17467219 seconds)
    (89/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.349260675 seconds)
    (90/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.415388249 seconds)
    (91/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.243636517 seconds)
    (92/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.440721069 seconds)
    (93/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.437929901 seconds)
    (94/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.337395761 seconds)
    (95/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.366043464 seconds)
    (96/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.32023471 seconds)
    (97/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.032916452 seconds)
    (98/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.4045135 seconds)
    (99/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.339045883 seconds)
    (100/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.363459131 seconds)
    (101/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.103739832 seconds)
    (102/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.4512019 seconds)
    (103/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.357555524 seconds)
    (104/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.665591555 seconds)
    (105/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.350311101 seconds)
    (106/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.479729815 seconds)
    (107/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.373003718 seconds)
    (108/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.326407366 seconds)
    (109/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.389282466 seconds)
    (110/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.458186227 seconds)
    (111/286) benchmarking ("sort", Bool, false)...
    done (took 1.39529136 seconds)
    (112/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.344944394 seconds)
    (113/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.218533389 seconds)
    (114/286) benchmarking ("sort", Int8, true)...
    done (took 1.865467083 seconds)
    (115/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.366855326 seconds)
    (116/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.431160751 seconds)
    (117/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.398112818 seconds)
    (118/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.363412223 seconds)
    (119/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.352106729 seconds)
    (120/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.511489993 seconds)
    (121/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.350594959 seconds)
    (122/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.468409441 seconds)
    (123/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.088818805 seconds)
    (124/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.359817943 seconds)
    (125/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.337840176 seconds)
    (126/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.355688679 seconds)
    (127/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.698640361 seconds)
    (128/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.44221279 seconds)
    (129/286) benchmarking ("sort", BigInt, true)...
    done (took 2.356368624 seconds)
    (130/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.527991623 seconds)
    (131/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.494104481 seconds)
    (132/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.351210394 seconds)
    (133/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.102512067 seconds)
    (134/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.017322026 seconds)
    (135/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.439526856 seconds)
    (136/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.351211297 seconds)
    (137/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.452169927 seconds)
    (138/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.349645052 seconds)
    (139/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.47031341 seconds)
    (140/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.43204293 seconds)
    (141/286) benchmarking ("map", identity, Float64, true)...
    done (took 1.498505276 seconds)
    (142/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.357779413 seconds)
    (143/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.340581511 seconds)
    (144/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.351844454 seconds)
    (145/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.418316381 seconds)
    (146/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.330921207 seconds)
    (147/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.349104941 seconds)
    (148/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.349334394 seconds)
    (149/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.351654366 seconds)
    (150/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.338549349 seconds)
    (151/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.030354681 seconds)
    (152/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.556630669 seconds)
    (153/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.358001946 seconds)
    (154/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.531261254 seconds)
    (155/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.554909987 seconds)
    (156/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.376212253 seconds)
    (157/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.342522703 seconds)
    (158/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.410373233 seconds)
    (159/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.365457533 seconds)
    (160/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.350635109 seconds)
    (161/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.378532254 seconds)
    (162/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.342367614 seconds)
    (163/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.358629125 seconds)
    (164/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.35255704 seconds)
    (165/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.359230891 seconds)
    (166/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.354808157 seconds)
    (167/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.383694898 seconds)
    (168/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.44109066 seconds)
    (169/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.469540216 seconds)
    (170/286) benchmarking ("sort", Float32, true)...
    done (took 2.091955282 seconds)
    (171/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.353919224 seconds)
    (172/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.520561394 seconds)
    (173/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.388708737 seconds)
    (174/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.349434258 seconds)
    (175/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.368081746 seconds)
    (176/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.3960168 seconds)
    (177/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.350649933 seconds)
    (178/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.424147391 seconds)
    (179/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.490152852 seconds)
    (180/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.497563365 seconds)
    (181/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.402279134 seconds)
    (182/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.389672297 seconds)
    (183/286) benchmarking ("sort", Bool, true)...
    done (took 1.712855729 seconds)
    (184/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.35787142 seconds)
    (185/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.352725842 seconds)
    (186/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.469026139 seconds)
    (187/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.433438344 seconds)
    (188/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.434538835 seconds)
    (189/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.394611912 seconds)
    (190/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.380803501 seconds)
    (191/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.108638719 seconds)
    (192/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.137602806 seconds)
    (193/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.374750436 seconds)
    (194/286) benchmarking ("map", abs, Float64, true)...
    done (took 1.504293199 seconds)
    (195/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.995762016 seconds)
    (196/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.467569239 seconds)
    (197/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.458410898 seconds)
    (198/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.364559598 seconds)
    (199/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.354786284 seconds)
    (200/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.355269384 seconds)
    (201/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.536833374 seconds)
    (202/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.418072673 seconds)
    (203/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.413649211 seconds)
    (204/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.360580786 seconds)
    (205/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.57068907 seconds)
    (206/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.413903827 seconds)
    (207/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.351270196 seconds)
    (208/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.498759463 seconds)
    (209/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.352953194 seconds)
    (210/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.466754103 seconds)
    (211/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.054865059 seconds)
    (212/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.39277508 seconds)
    (213/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.356072294 seconds)
    (214/286) benchmarking ("map", abs, Int64, true)...
    done (took 1.506525101 seconds)
    (215/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.366826932 seconds)
    (216/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.444555038 seconds)
    (217/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.459365813 seconds)
    (218/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.356028717 seconds)
    (219/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.32642766 seconds)
    (220/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.419169189 seconds)
    (221/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.440858395 seconds)
    (222/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.425864808 seconds)
    (223/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.350742163 seconds)
    (224/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.36182472 seconds)
    (225/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.019088309 seconds)
    (226/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.383474461 seconds)
    (227/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.494677141 seconds)
    (228/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.575496438 seconds)
    (229/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.351307945 seconds)
    (230/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.551362878 seconds)
    (231/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.382486393 seconds)
    (232/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.452568205 seconds)
    (233/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.011141156 seconds)
    (234/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.352367427 seconds)
    (235/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.355485112 seconds)
    (236/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.354679971 seconds)
    (237/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.45778917 seconds)
    (238/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.38131677 seconds)
    (239/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.118008779 seconds)
    (240/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.413750878 seconds)
    (241/286) benchmarking ("map", identity, Int64, true)...
    done (took 1.506857587 seconds)
    (242/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.565363221 seconds)
    (243/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.416754432 seconds)
    (244/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.468971383 seconds)
    (245/286) benchmarking ("sort", BigInt, false)...
    done (took 2.344801182 seconds)
    (246/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.544620531 seconds)
    (247/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.445229603 seconds)
    (248/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.35911216 seconds)
    (249/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.415579626 seconds)
    (250/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.750097909 seconds)
    (251/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.494855989 seconds)
    (252/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.375742915 seconds)
    (253/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.433263656 seconds)
    (254/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.430836201 seconds)
    (255/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.054118093 seconds)
    (256/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.365500434 seconds)
    (257/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.339680174 seconds)
    (258/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.580788707 seconds)
    (259/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.401478266 seconds)
    (260/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.358021651 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.366633003 seconds)
    (262/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.426422645 seconds)
    (263/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.361073068 seconds)
    (264/286) benchmarking ("sort", Float64, true)...
    done (took 2.110123413 seconds)
    (265/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.341702041 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.391711633 seconds)
    (267/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.005408263 seconds)
    (268/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.402936456 seconds)
    (269/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.35309378 seconds)
    (270/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.111204885 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.53926768 seconds)
    (272/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.327823778 seconds)
    (273/286) benchmarking ("sort", Int8, false)...
    done (took 1.510959365 seconds)
    (274/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.365311504 seconds)
    (275/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.399614976 seconds)
    (276/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.542733149 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.357528831 seconds)
    (278/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.49595686 seconds)
    (279/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.535591373 seconds)
    (280/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.443206183 seconds)
    (281/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.423342417 seconds)
    (282/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.426503878 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.371793518 seconds)
    (284/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.394788888 seconds)
    (285/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.35505786 seconds)
    (286/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.55516863 seconds)
  done (took 475.281389989 seconds)
done (took 476.513849363 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.383411978 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.39677786 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.350860091 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.384993342 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.463469355 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.527137964 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.361756301 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.390144634 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.40003986 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.40130864 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.362230315 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.524490116 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.353969926 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.352358297 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.350761394 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.393297069 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.344556548 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.353312553 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.366695597 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.390647642 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.367799173 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.356386265 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.401007355 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.528082703 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.356685204 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.353814063 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.354474116 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.371225421 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.464485731 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.355486508 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.355232562 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.361886565 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.341858205 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.355796084 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.346661936 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.370992245 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.363542978 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.360908804 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.386261714 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.463899405 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.340841757 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.360739904 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.35433829 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.354710231 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.352712046 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.39236915 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.35437659 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.410286454 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.39522755 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.395186024 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.353393387 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.368131533 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.359999334 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.353791495 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.365635522 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.352712533 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.410091494 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.399268105 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.374934433 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.398504832 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.355315162 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.358792789 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.392927959 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.36947774 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.361672798 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.356402095 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.35191807 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.391984261 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.34174856 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.357857696 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.356530726 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.362403196 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.356540683 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.367434595 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.386212333 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.346631218 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.348890682 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.354786279 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.361761487 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.35212187 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.402114187 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.398024984 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.405715111 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.35579049 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.398540052 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.530322069 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.367156698 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.357392787 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.393970259 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.374429706 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.363602707 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.368157364 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.389899517 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.358218218 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.402350112 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.414939276 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.364719727 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.364461176 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.40650598 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.366841931 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.347156638 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.400971999 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.353316159 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.35384138 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.355881549 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.479366866 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.347881065 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.35625223 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.391186523 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.404394665 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.417198676 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.346208802 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.365646162 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.402531742 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.366050791 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.416618592 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.35655991 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.347308962 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.361626928 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.477848915 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.358805444 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.364383661 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.403526834 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.41793653 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.358422049 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.354479692 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.359562746 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.400111278 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.479490862 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.368521216 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.46994736 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.355961567 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.360381256 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.391927441 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.404530736 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.38849719 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.417453614 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.40406561 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.373752663 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.359041615 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.368030114 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.369173821 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.360355828 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.417720462 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.357815811 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.391952592 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.401024473 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.403198099 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.391276048 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.480181191 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.364454821 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.348449463 seconds)
done (took 227.27387951 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.423051843 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.355808598 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.466385482 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.359579217 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.464117421 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.462523721 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.356029615 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.35477133 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.355083054 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.734015711 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.358292941 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.355421617 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.358914134 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.35473686 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.442688603 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.359665941 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.355582852 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.709663522 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.358412794 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.429786741 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.358876492 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.354706436 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.359108581 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.779911558 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.358199929 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.352917699 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.432068499 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.359543082 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.709612421 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.353574778 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.354526483 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.713823116 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.448297774 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.375041944 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.373049991 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.364686775 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.462423764 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.37924974 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.441609978 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.442828885 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.467916259 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.397602164 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.352220943 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.356256287 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.360428674 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.35917975 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.356365752 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.385214062 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.357636968 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.357377426 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.69980751 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.369377967 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.367122174 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.357840032 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.357560674 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.379615503 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.35726294 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.360315931 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.452578581 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.360206384 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.425899557 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.744608257 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.747664628 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.362615577 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.357401833 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.360610678 seconds)
  done (took 106.256759612 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.425786021 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.437123968 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.47907177 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.378976591 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.412765871 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.483852539 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.378901855 seconds)
  done (took 11.254719192 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.367241022 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.36313173 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.411024405 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.411129682 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.35884329 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.575800181 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.363217352 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.374294612 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.360525185 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.440931621 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.36304697 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.364653945 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.369268633 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.358120945 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.410976922 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.374429751 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.477590386 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.362738578 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.361568124 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.517286194 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.361120348 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.369391572 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.436847188 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.374831657 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.363069926 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.370140331 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.335481713 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.361498107 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.358706886 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.361800183 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.359641417 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.473858649 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.365199853 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.358559504 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.360731191 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.521806033 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.362744388 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.36250052 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.363252292 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.366045501 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.362507269 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.364572573 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.363800467 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.361341283 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.363328862 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.388086328 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.363729991 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.364789724 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.366623326 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.365716498 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.441551623 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.364685183 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.360695006 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.362261641 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.442020514 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.372706344 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.365055846 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.36217096 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.365066952 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.364753857 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.52069897 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.416287528 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.367518962 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.414180775 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.366990295 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.366326936 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.367251195 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.36504427 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.458001222 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.365566623 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.414186218 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.364658543 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.591786947 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.38967909 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.369288336 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.3688106 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.370362457 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.365797311 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.361647839 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.371101128 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.363481916 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.36787148 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.374394842 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.364057906 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.363716379 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.552469658 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.525695027 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.365088155 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.379213414 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.375010125 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.365535692 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.442632898 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.367697034 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.363459983 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.4196249 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.484279095 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.443846934 seconds)
  done (took 141.193352643 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.372698241 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.377639702 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.37246418 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.392040249 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.370006069 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.368703506 seconds)
  done (took 9.517453964 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.371218413 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.368628098 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.368996833 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.367961056 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.365990129 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.369991325 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.367548824 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.370714748 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.372457377 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.36900948 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.370315501 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.369725908 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.371561775 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.369119867 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.369561939 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.371510184 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.369752476 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.367880314 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.369584831 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.369101783 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.368889211 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.371623077 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.368594471 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.372029506 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.375095451 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.369949167 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.378507438 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.369547695 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.371159996 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.379419816 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.391343116 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.371561628 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.37284498 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.377531365 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.37389103 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.373152214 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.373623214 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.371381398 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.368229593 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.371659061 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.373827242 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.372080139 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.372661769 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.372137088 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.373799374 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.377997101 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.376289482 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.379133404 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.370684407 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.37286184 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.373069956 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.372875798 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.372199471 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.373866834 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.372922511 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.395805205 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.377636496 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.372860752 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.371886076 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.372717518 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.373758311 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.372892671 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.376246693 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.377214367 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.369430359 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.374435959 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.376558688 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.376948723 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.37400014 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.37459315 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.375038075 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.37150092 seconds)
  done (took 101.116991459 seconds)
done (took 370.591701515 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.390486389 seconds)
  done (took 3.660204953 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.488778403 seconds)
  done (took 3.760240467 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.950674577 seconds)
  done (took 24.228624771 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.474080619 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.370776389 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.380952197 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.368763833 seconds)
  done (took 10.865630621 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.700430414 seconds)
  done (took 3.969050188 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.367018934 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.382129388 seconds)
  done (took 6.021009131 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.715288144 seconds)
  done (took 3.98566963 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.818778466 seconds)
  done (took 4.097724551 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.390177657 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.380170335 seconds)
  done (took 6.049759782 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.360505305 seconds)
  done (took 3.632003327 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.567589152 seconds)
  done (took 17.838776608 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.371073176 seconds)
  done (took 3.644721713 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.404532639 seconds)
  done (took 3.675430757 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.256236219 seconds)
  done (took 6.526141773 seconds)
done (took 103.223092039 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.369004005 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.374395543 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.374541084 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.373590844 seconds)
  done (took 10.760240882 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.428442601 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.426914336 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.429799852 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.427382101 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.427863394 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.427718328 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.400114334 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.399708365 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.429286417 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.428066091 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.429551811 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.429427979 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.427964157 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.40151516 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.426768994 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.430089941 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.428113283 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.42963829 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.402018625 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.429533561 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.379089908 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.428558216 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.428451243 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.376994952 seconds)
  done (took 35.345747554 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.896403426 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.44730093 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.531040737 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.431216135 seconds)
  done (took 7.57909885 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.453173802 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.454284258 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.470673335 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.507923466 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.518939551 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.470876414 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.404829709 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.399570337 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.385192611 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.45541552 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.505655294 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.446811333 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.537791071 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.377411594 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.58611692 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.379244703 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.378041202 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.457848739 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.508455317 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.522535287 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.377629357 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.456648577 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.456282288 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.44793293 seconds)
  done (took 36.232385677 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.386555461 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.390115628 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.378188801 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.394305891 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.377463548 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.377361162 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.378378265 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.385265131 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.377462436 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.378567685 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.377982682 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.394109922 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.381568628 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.376481979 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.385064747 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.38031326 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.384151206 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.383210782 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.377800108 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.385660619 seconds)
  done (took 28.925593695 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.372356832 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.373611013 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.727657209 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.629819567 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.372659246 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.373067297 seconds)
  done (took 14.123491631 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.459775982 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.63031535 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.381613543 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.781077811 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.859710527 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.382590555 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.381634184 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.650481973 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.001777131 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.991522256 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.444675682 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.457887136 seconds)
  done (took 20.698757049 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.388726604 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.37632223 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.386910948 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.392438367 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.44281489 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.402797382 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.389524086 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.375803174 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.449120961 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.466335188 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.404186227 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.445726558 seconds)
  done (took 22.19960179 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47274201 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.376411755 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.376492128 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.434174018 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382609501 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.226314685 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.457451286 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.171698207 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.407855369 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.649566377 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376677048 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479871268 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.634463366 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389788288 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.381671803 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.366952269 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.615328806 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919022419 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381672552 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377568573 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41136779 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.3845582 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.384002445 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.615710079 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.385979327 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37671968 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.638310023 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.37662573 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.697272859 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.401689871 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388023155 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376204495 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.653009707 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.086052968 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.503865073 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.617211064 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395582177 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.380867376 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.383616113 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.387766279 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391687005 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.381097314 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389712215 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379415057 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.378473605 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381691018 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.19500859 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.41285251 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.37874181 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.38033619 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.673661489 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484929856 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.382710777 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.379794802 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.457111017 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387195139 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.384792635 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.479286074 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960205909 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387422186 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382985197 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.386430123 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.383684431 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412327933 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064107267 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.393258798 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.38554917 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.384037366 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380050567 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.384577873 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.399710868 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381319316 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.403716273 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381737721 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.195158145 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.38820562 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382026688 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989069884 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396560638 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.386034102 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.616539759 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381442733 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382205168 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.380602398 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.381897527 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.175377802 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396307427 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.366869351 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4098798 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.16943659 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.648973941 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407746159 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413847094 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.60586556 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.366613221 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381691406 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.391301301 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38277995 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407052688 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.187115816 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408302235 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.387735004 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.642917876 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.593918633 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38184417 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.383504721 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.927626057 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418762971 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.403384732 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.382411247 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.629468229 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.041175332 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.407141668 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382290415 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404961966 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.38437246 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.2219611 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398891406 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.490530093 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.384977032 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.686533245 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.27184631 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391763588 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.45179498 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386100911 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.382590836 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392096174 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386027403 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.384097916 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.613171851 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.411490723 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.402491772 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.385669008 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38518384 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.387983445 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392658932 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.3859812 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.611534897 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397781651 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.667120355 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38532338 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385989468 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385898155 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.609879112 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.399819922 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.728535706 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.650415371 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387067333 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.392181725 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.404085801 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405808019 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.49043795 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408673672 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.386156097 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.650363702 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.390461721 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.390593514 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385369359 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.392448371 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390010115 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.392724488 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39181433 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.043801326 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368432159 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.393571302 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.28186035 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.402843121 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.456150289 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.393803136 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.629025401 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.391876856 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410271771 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.403110094 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.395204964 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.615453772 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.400615856 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.394992118 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.465384989 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.928282547 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.068992972 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.40995305 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.388480845 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.386675867 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.386921512 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390154646 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389933565 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.390955649 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.631069151 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.411457639 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.390263602 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.054953372 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399158819 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.390528481 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.40224954 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.402914451 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.395794977 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389522082 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.400930054 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391596274 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395720724 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.410731129 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.536625353 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.403846918 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.392054897 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.908835748 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.396958823 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.392009585 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.389997493 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426672842 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.39576568 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337139164 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.663128444 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405718899 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.69417685 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.40426733 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.414458394 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.389652669 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396139348 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399608619 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.430626761 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405861916 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.40451214 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.397726137 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400320355 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967814639 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.20895491 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001318088 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401356962 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.396819358 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.418503966 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.204526037 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418110304 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392540083 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.649854692 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.212859466 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421442731 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.936666439 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.418274017 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.254464313 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.692307949 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.635597654 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393881995 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.40029761 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.699244728 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.612372569 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428818476 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.392424739 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400965778 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.37959323 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.022816209 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.420392192 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.483608096 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.19752591 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428112882 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.402374807 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.41939966 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.402302339 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856880058 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.422743232 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394989205 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.397677796 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.411639822 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.299866341 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.406808197 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396046467 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.063620308 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.409215039 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.940381506 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423331096 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.638932504 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.415264943 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.400772612 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.398879786 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.397233955 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.654298115 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.696570907 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403573371 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.409333874 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.018527012 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.273726099 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.401698126 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398218181 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.236646467 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419984449 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.730119201 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.406444698 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.402106473 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398723022 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.398322595 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398009086 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.396153835 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.403750951 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368851996 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959192964 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.427884809 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424871276 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40800376 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425060984 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.65710503 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.412510339 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.055928593 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.63654691 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404860373 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429413719 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.401780156 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413757598 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.392564588 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.399502041 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.397624777 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411683003 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.630327334 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.41375573 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.3900276 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.458715751 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.618638654 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.400119807 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.412007031 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.677214696 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.404653012 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.421464699 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.197196608 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434273594 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.410638705 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407856243 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.408296569 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428043946 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470821578 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.642261788 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.418680669 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.412735644 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856471652 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.44113552 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408388958 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.41475296 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.498844596 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400202833 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.435621839 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.180812025 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.050091972 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.19477559 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.051830482 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.701219668 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.409140982 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408516306 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401336266 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.566030186 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401317196 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676888281 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402065704 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.405115683 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444573264 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416888673 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404952667 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.621689517 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677889885 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401930232 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420547598 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407811688 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.40240386 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.413305342 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.616594821 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948189396 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009167571 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406443556 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.402511988 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.224348828 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.704951178 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402621384 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403154138 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404012116 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.42679599 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.409381316 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.413800496 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403251806 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.547426224 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.703598262 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.136049458 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.441124269 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.430149479 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.179105135 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419426462 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.661767727 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402135602 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.650355163 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.059550651 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.19223184 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.676764053 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473744011 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.648043894 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.41103714 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.567301311 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.413459116 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.404450506 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404866504 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406085029 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.403383481 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.413866476 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.057709083 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.674238188 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.409272904 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.414499918 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437477494 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.41587345 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.63290634 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.192855112 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.631890507 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.416742677 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.410632393 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.406369453 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.058600631 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.711674574 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414419048 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.411349978 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.678714182 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.412994075 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.429656999 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.923550242 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.404067528 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01968171 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.385123004 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432772407 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422585289 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.197241716 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.06501773 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.423275951 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.972315323 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.411769599 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42078869 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.68964277 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.414683988 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.408722291 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.715775112 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.411291349 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.412991821 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.659933488 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.060755282 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.254268096 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.434142468 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417825732 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.430649737 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409145856 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414144178 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417997176 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.419142766 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.87984566 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.440352021 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409033955 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.422503692 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.405926782 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415704193 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.414440548 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410877932 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.417080088 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.41716266 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.411685525 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.412444013 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.535146531 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.049033113 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.436929753 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.082193056 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.737897477 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.669455278 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.41151275 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.402117778 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.41513621 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411833491 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412504885 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412744905 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.422087215 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015049181 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.418003531 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.428513717 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.415842408 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.412831488 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.624769829 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.428087648 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.66012013 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424825567 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.434927173 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.398301836 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412289395 seconds)
  done (took 992.330074454 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.45982354 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.446106458 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.429447588 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.437373626 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.481239425 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.537852037 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.499631461 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.446518195 seconds)
  done (took 21.049244098 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.421068659 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.422505276 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.41694256 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.423644075 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.417313819 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.933084296 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.434295865 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.424054559 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.43080038 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.418380711 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.416114853 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.398878783 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.424305133 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.430031564 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.405418892 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.425470134 seconds)
  done (took 33.560604425 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.596707736 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.647705235 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.740259721 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.463517849 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.441281971 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.419946945 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.75799081 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.438973521 seconds)
  done (took 27.820398859 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.427831345 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.428010374 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.425965939 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.427106952 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.427062257 seconds)
  done (took 8.448744905 seconds)
done (took 1260.342218342 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.419756899 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.421229282 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.420804996 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.422821169 seconds)
  done (took 6.997181367 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.400230689 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.401399714 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.403377434 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.421131162 seconds)
  done (took 9.938919119 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.2098588 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.140780833 seconds)
  done (took 5.662805437 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.930228657 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.923855185 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.92749629 seconds)
  done (took 7.098755425 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.723877765 seconds)
  done (took 3.040908028 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.348417403 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.324704807 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.122367384 seconds)
  done (took 8.113952842 seconds)
done (took 42.16263766 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.430015795 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.671166071 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.576942853 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.435155828 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.589940716 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.5768643 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.173434243 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.427988816 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.432790659 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.428082978 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.435349958 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.581936489 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.159421143 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.676175539 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.158824403 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.677172502 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.580699375 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.420512365 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.419505925 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.447325768 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.176114092 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.42076867 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.421320203 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.422431292 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.582888059 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.564187719 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.430817321 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.67768142 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.420438422 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.436066513 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.563179988 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.434564917 seconds)
  done (took 84.16773941 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.420508949 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.438338916 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.422956169 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.442089617 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.429652318 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.424205423 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.445928825 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.422265232 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.432179669 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.423692662 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.421321122 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.428444721 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.429443863 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.430939177 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.433394223 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.433547945 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.420599693 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.422611137 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.435703383 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.424051397 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.449027854 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.421812535 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.423691643 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.423417797 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.423148964 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.443373436 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.444982268 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.423361271 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.422036161 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.447538062 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.423383909 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.442576052 seconds)
  done (took 79.088818533 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.4230825 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.423255828 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.430403233 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.422874817 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.435458156 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.433651825 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.425329001 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.440067739 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.428377242 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.437147557 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.423503272 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.423714476 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.424861802 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.423594146 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.425889022 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.425542303 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.424397684 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.458166973 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.435293094 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.423898074 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.444642098 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.426381776 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.427003875 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.461257878 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.431865358 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.428022589 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.426435478 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.425236642 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.425859491 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.426060627 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.433562981 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.428815496 seconds)
  done (took 79.095327291 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.707810047 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.433487249 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.433874943 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.427663343 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.434121079 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.431612637 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.426946536 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.711570164 seconds)
  done (took 15.329114277 seconds)
done (took 258.996729887 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.425108946 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.446129414 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.66277018 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.456568694 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.426561665 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.45720103 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.455226918 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.670676602 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.445705399 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.690566997 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.445110755 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.454285931 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.426901736 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.472152792 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.724713963 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.59179962 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.409121246 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.427993083 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.821535535 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.453791289 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.720112083 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.435458058 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.746961131 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.421244969 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.449464638 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.430596797 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.449482188 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.414573765 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.474864355 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.804556918 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.443908592 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.419097701 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.527652906 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.54477165 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.665473586 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.606055456 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.427833125 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.521773669 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.666838674 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.443470017 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.434286497 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.233721221 seconds)
  done (took 85.97045521 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.435352569 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.551776613 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.434938158 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.436755126 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.436185269 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.555531303 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.53183704 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.43811601 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.436432041 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.435180882 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.437634516 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.435946279 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.438469304 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.438082318 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.43721688 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.437541745 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.43747774 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.439205842 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.438920588 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.481386995 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.556764935 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.461427179 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.431432219 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.43680897 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.537975048 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.573199333 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.437649835 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.430066496 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.479530185 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.4381403 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.438986841 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.48267229 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.437387535 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.439442123 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.553820944 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.536967151 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.461202469 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.437837499 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.549686524 seconds)
  done (took 58.563406667 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.438071677 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.699607206 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.899788668 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.447010317 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.438878334 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.442924299 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.526694686 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.440260477 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.44291883 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.444076938 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.62247266 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.443171312 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.4752967 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.927108759 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.444722462 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.439852494 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.440583141 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.441100661 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.711342736 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.449727267 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.550839888 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.443793674 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.528044147 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.451225467 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.466710939 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.441030617 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.448039117 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.041874185 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.478534951 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.619751749 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.335792363 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.534603093 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.980472945 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.91088489 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.340768558 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.450202536 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.441508486 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.623998413 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.44485045 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.442233921 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.529188692 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.444539219 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.90952383 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.114488893 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.463274979 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.44279768 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.060959728 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.623962239 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.715649369 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.452276575 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.938467458 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.446206729 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.4443894 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.444172804 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.717728972 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.44691962 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.444126399 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.073894356 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.46774142 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.532231391 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.448112404 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.444775388 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.71731687 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.444036371 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.707057176 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.447103908 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.453461086 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.468274193 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.912500481 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.448348757 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.128393528 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.464487473 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.44435066 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.625704319 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.707917385 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.097429204 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.469195539 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.71703464 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.992670245 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.531524501 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.450045255 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.035917766 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.53438753 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.451900857 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.448509794 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.448085126 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.44596073 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.491565892 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.531489735 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.083022487 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.126421409 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.098276697 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.553928457 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.454181919 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.449424311 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.079603949 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.464921027 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.447729898 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.908104727 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.130726553 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.467596042 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.455864639 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.146078817 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.470509494 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.536544786 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.453236095 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.92203232 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.446926268 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.49153573 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.446736114 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.454107528 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.474397794 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.533604475 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.452177984 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.447746019 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.118722663 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.651092567 seconds)
  done (took 190.908964952 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.442576471 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.460842122 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.441548965 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.463389066 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.44141228 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.462998876 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.443070268 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.443569555 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.448405044 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.441833531 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.441346991 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.445184465 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.444474398 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.444781683 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.476403449 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.451266709 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.440460553 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.443174849 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.443977103 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.462153167 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.443083371 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.446486357 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.44401355 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.462389642 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.44428717 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.443862674 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.475193739 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.44519394 seconds)
  done (took 65.923622014 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.450018513 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.102758434 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.456385274 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.596986012 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.473714638 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.447847823 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.593727293 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.515254934 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.453551532 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.448499403 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.448228816 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.786318015 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.452957738 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.019374253 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.670480099 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.602329263 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.017736492 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.471461072 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.448607956 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.44840679 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.601327174 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.465888912 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.785725757 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.073034827 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.453470046 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.094316563 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.446319983 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.451721582 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.451413538 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.075841191 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.450441798 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.789123324 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.537424327 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.518649721 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.080222411 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.021080703 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.039990522 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.618316574 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.454837619 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.448632712 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.449889528 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.442026149 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.078465244 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.454652761 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.451994942 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.075626547 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.472123324 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.453427699 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.45770768 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.451131835 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.519124949 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.522279623 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.793159405 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.161919371 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.540113905 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.469466399 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.600299407 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.832428588 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.456449849 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.021045624 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.460337771 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.085161064 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.476981725 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.444864453 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.452668949 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.460814504 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.624893806 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.609892947 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.027934009 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.474439982 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.022681814 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.645142199 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.457183228 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.454274866 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.455712344 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.082048425 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.026004054 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.644890429 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.61368715 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.681340433 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.447662523 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.455763595 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.444742216 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.543797263 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.457923556 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.086638011 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.046190597 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.476937009 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.456739135 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.45855907 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.456388795 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.656185046 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.108549914 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.542628981 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.025411112 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.8136452 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.795942232 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.455592327 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.522161728 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.481191484 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.860721531 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.457018726 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.522196428 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.91610081 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.798941293 seconds)
  done (took 174.296896093 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.720567823 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.485552338 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.562294554 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.624194263 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.104971734 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.078638896 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.456528989 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.593811373 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.578956571 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.741810611 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.462487212 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.543654651 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.694518638 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.544016807 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.213518879 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.53575219 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.562453371 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.62406208 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.613319664 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.456295852 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.148677295 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.777412936 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.664233936 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.47628561 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.56464693 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.276335748 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.080835424 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.044471329 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.648670028 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.456108178 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.003705816 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.457816783 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.45472633 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.171798865 seconds)
  done (took 67.768415364 seconds)
done (took 644.753767212 seconds)
SAVING RESULT...
DONE!
