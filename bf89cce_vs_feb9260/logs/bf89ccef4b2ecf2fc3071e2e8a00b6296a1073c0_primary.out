cset: moving following pidspec: 4544
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.917697641 seconds)
loading group "string"... done (took 0.545013753 seconds)
loading group "linalg"... done (took 8.924744893 seconds)
loading group "parallel"... done (took 0.1720871 seconds)
loading group "find"... done (took 1.460936031 seconds)
loading group "tuple"... done (took 2.0994035 seconds)
loading group "dates"... done (took 1.390643855 seconds)
loading group "micro"... done (took 0.220891759 seconds)
loading group "io"... done (took 0.637161453 seconds)
loading group "scalar"... done (took 44.256037734 seconds)
loading group "sparse"... done (took 13.802585172 seconds)
loading group "broadcast"... done (took 1.090028771 seconds)
loading group "union"... done (took 15.280598498 seconds)
loading group "simd"... done (took 5.114812727 seconds)
loading group "random"... done (took 10.288212928 seconds)
loading group "problem"... done (took 2.227823074 seconds)
loading group "array"... done (took 26.077325338 seconds)
loading group "misc"... done (took 1.104536234 seconds)
loading group "sort"... done (took 3.768092419 seconds)
loading group "collection"... done (took 22.305361397 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.626467259 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.119266348 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.167910215 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.19852967 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.199927705 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.163420701 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.164054769 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.560488248 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.00227252 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.213726474 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.143940915 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.558909504 seconds)
done (took 5.86306808 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.241437816 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.437285449 seconds)
    (2/2) benchmarking "String"...
    done (took 0.112324025 seconds)
  done (took 1.225385364 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.093764663 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.177659738 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095348761 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.111958554 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.112495954 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.110757089 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094310572 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.111401218 seconds)
  done (took 1.492527051 seconds)
done (took 3.735704994 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.493546396 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.872874074 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.508653564 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.131165261 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.16127206 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.149756886 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.328565712 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.16105596 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.12779553 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.118981071 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.176584866 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.35132258 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.494145375 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.947854567 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.097823048 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.130004716 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.083475143 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.707547764 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.083189966 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.150547735 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.532044059 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.128950998 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.122152219 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.144353811 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.193544507 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.135468549 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.185812565 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.111591063 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.683381572 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.10328958 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.188219537 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.102314452 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.167557699 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.253756956 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.099281591 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.0953973 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.688531101 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.190277812 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.113566325 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.104497561 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.698173707 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083267628 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.207904009 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.128293292 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.112436036 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.19523588 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.115627907 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.080370757 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.10674244 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.110190819 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.167851751 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.476717265 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.107632572 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.149421711 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.110726467 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.696455738 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.097687469 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.15697181 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.141591293 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.107126294 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.104223883 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.107380041 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.164923273 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.112084987 seconds)
  done (took 19.937286957 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.118851882 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.141880568 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.095643134 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139537544 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.140624302 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.097280534 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085319484 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.097911757 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.129387747 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.188584907 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.122859382 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.144618729 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.092736887 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081393335 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.121583299 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.254068074 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.107420153 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.125528943 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.083072713 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.110980493 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.143737679 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.095828332 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110291124 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.110758236 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170480896 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.206061371 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111734905 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.127275534 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097183477 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.101378736 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.145683083 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.164850148 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.075185637 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.095395573 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.18751363 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.12031052 seconds)
  done (took 5.23638272 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.201378759 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.11715683 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.192685728 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.179751715 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.147644894 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.166892627 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119351078 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.268299787 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.207209611 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.179724612 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113145248 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.113531607 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077625648 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.097364866 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.077253084 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.694992502 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.180814765 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.150800413 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.126865051 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104215892 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.081764987 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.403199706 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103201464 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.09834214 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086576681 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.091191937 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.18194516 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.0865471 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.32888341 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.098866568 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.110092193 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134080673 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.20334388 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.131540036 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122947378 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103513406 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.080435511 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.234656339 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.108674563 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.078354615 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.126412904 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132820064 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.115263947 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.100535229 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.112443324 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.224703564 seconds)
    (47/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.147597035 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.101435753 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.122211599 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.078683526 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.202105301 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.096134604 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.098496259 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.352572623 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.118527897 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.08601646 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.100041254 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.28592917 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134753398 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.084575085 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.096848665 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088693384 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.096964741 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.404714387 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.090412097 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.005928992 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.098902029 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.16132165 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10199631 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.108353979 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087561244 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.105033867 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.104436316 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.099953934 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.080648745 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.099471044 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.080532686 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.104354903 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.116902277 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084560375 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.096240697 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.148233525 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.117857279 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.118008009 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109949811 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.103551847 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.080347598 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133346447 seconds)
    (89/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.099650553 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080389678 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.100832695 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.148331589 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086923439 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.116401109 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100951761 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142221448 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.080885824 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.214054677 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082012017 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125955468 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.083507462 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.099296995 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101385009 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11591566 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.123481228 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100176839 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085765862 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.098541586 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081767266 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165630135 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.081838983 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080011317 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.104870452 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.113253616 seconds)
  done (took 23.98503605 seconds)
done (took 49.835079168 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.46595831 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.097677163 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.113553483 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.113988601 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.112212121 seconds)
  done (took 1.655177728 seconds)
done (took 2.382434059 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.336065016 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.197208014 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.101920828 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.197982793 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087216901 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.203350125 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.166912648 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.11824997 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.197847013 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.101004342 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.176718908 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.100049974 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088948268 seconds)
  done (took 2.826389588 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094080879 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.121834234 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082674585 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113391316 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076889802 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112246615 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093509149 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.14236081 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.091504779 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.105221398 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077049494 seconds)
  done (took 1.834772193 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090537489 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116460226 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082628341 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109556955 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077201409 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090480963 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.110173567 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118317416 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.092504444 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.106398882 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077230439 seconds)
  done (took 1.798352015 seconds)
done (took 7.17625642 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.058213288 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.44332102 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.120520047 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.1657631 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.358936393 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.197098942 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.522612939 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.132174479 seconds)
  done (took 11.907828809 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.116133694 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.099899366 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.081196136 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.119766063 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.083812481 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.10471125 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.085116808 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.101676588 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.082609685 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.098923371 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.081950129 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.098883183 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.084149357 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.101882769 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.081280637 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.10247946 seconds)
  done (took 2.310077755 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.120628377 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.119864247 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.107754597 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.112537118 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086745428 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.105635822 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.088789923 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.105805943 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.084754147 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.104084261 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.109683641 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.091524893 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.107806007 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.083899902 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.106589677 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.110944684 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085412688 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.105935451 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.08938476 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.106062575 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.093268241 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.104197302 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.108833231 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.092249125 seconds)
  done (took 3.273818477 seconds)
done (took 18.2185431 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.170203061 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084372166 seconds)
  done (took 0.985177672 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.101771839 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.120372203 seconds)
  done (took 0.959664966 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.107286682 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.09704921 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.137969145 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.118651512 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.08402765 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.100123494 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.133249666 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.084321223 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.083924266 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.102601406 seconds)
  done (took 1.786947803 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.08490801 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.102010615 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.090607745 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.122945074 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.112317825 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.085703869 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.106160826 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.087536094 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.107222913 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.082132007 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.108796039 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.120243475 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.090243432 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.121550571 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.088972386 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.106747269 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.111240411 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.087360362 seconds)
  done (took 2.555997219 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081313079 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.083107972 seconds)
  done (took 0.905027332 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.083602096 seconds)
    (2/7) benchmarking "second"...
    done (took 0.098149854 seconds)
    (3/7) benchmarking "month"...
    done (took 0.085313625 seconds)
    (4/7) benchmarking "year"...
    done (took 0.102884908 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.081851583 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.098886715 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.08130023 seconds)
  done (took 1.371761243 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.687685128 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.240997685 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.339352312 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.116231614 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.136381076 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.369893352 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.154953809 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.095224226 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.114218562 seconds)
  done (took 3.038436764 seconds)
done (took 12.341327817 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091276538 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.311091475 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.549715511 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.118640793 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.080859507 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.163306584 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.268905468 seconds)
done (took 2.326096642 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.354871313 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.125175647 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.092365178 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.081556212 seconds)
  done (took 1.390771654 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079861194 seconds)
    (2/2) benchmarking "read"...
    done (took 0.103925173 seconds)
  done (took 0.929612467 seconds)
done (took 3.067625892 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0784888 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.078909839 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.095446318 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.137036391 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.080975751 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.098538695 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.078297487 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.080252869 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.098472056 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.081267568 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.101028794 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.0806708 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.098379801 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081275643 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096375845 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078264044 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08064185 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.096227037 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07947924 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.096672494 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078858142 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098849518 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.078640175 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.079034625 seconds)
  done (took 2.914033733 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099689295 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097729909 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.087728085 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.105871081 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.104290131 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087661877 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.106259995 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.081652083 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.106366491 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.083628536 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103464325 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.086125648 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.101369958 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.086098702 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101857904 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.104036008 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088235625 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100556347 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084171438 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.103870816 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.087267154 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100200366 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.085955559 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104894784 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.105063339 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086258 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.10208555 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.082128994 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106218949 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085677547 seconds)
  done (took 3.616098591 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.087619114 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.076203465 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.095746182 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.089185218 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.0941461 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.081125216 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.096754341 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.079674848 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.098773901 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.079138879 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.099547533 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.078904659 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.097837563 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.081046858 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080924363 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.105640381 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.116968078 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079887417 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.078810285 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.099453741 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.085723228 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.098680446 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.082115433 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.097897733 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.078809882 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.097545945 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.079569712 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.096782804 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.080544577 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078934631 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.10312343 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.086821753 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.097121471 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.093281905 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.103771378 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.079005673 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.107129 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078966502 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.099603572 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.078093201 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.097146948 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.078837384 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078810015 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.110384294 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.082341661 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.099053381 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.08041881 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.099203861 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080879835 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.101392397 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078699983 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.097699951 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.082482312 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.099775749 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.086432788 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.097680508 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.080750016 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.079134911 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.099875803 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.080206574 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.097236899 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079082856 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.104966141 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080772334 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.122890727 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.092271109 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.098753419 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.082264158 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.101708068 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.088001669 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.100336068 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.09871041 seconds)
  done (took 7.291765327 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.08302299 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106902542 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079855328 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098521218 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076783727 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.099976803 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.087359048 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098690287 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082026583 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117827394 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080356214 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.099137631 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081871973 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102358939 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080540321 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.100002949 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.091017088 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096249692 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.080212181 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102278293 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080631159 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.106033526 seconds)
  done (took 2.785893009 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.225430882 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104645001 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.144555698 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.116061684 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09881714 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.113213069 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102867385 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086806003 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103574191 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087758409 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105397596 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085051164 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.116360089 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105713816 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.105779028 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088853838 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102525481 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.089087575 seconds)
  done (took 2.735734087 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093603446 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.101160399 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.105246756 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099120208 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.081201243 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.101576064 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089463752 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.118548939 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.103577749 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.082768405 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.113018455 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085685014 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.104013875 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083594269 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103979091 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082920288 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.104133639 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084030744 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.112082009 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108896556 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089882628 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112944439 seconds)
  done (took 2.916561621 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096997923 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100522571 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.111728902 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.102729387 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.076857514 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.097037493 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106828135 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080811468 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.107128952 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.08281432 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098775308 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.07891022 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.106372647 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.080844451 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.105036192 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082062721 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101658667 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081621192 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10134553 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077616118 seconds)
  done (took 2.634687256 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.12383324 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115229512 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.096798096 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127349689 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115598238 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.097518974 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.126451365 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.115672299 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.097337209 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128379399 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097631426 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.115204887 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127440476 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.104000018 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11443456 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126570749 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107872956 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126336513 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.115374068 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097837157 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.129611148 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.115340647 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109018489 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.115899515 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.117738908 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.098797093 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115286747 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.103718357 seconds)
  done (took 3.941165549 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079923424 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.08027035 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.096222325 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.078540995 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.096626458 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.078098787 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.096136773 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.078171744 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079817385 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095960178 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.079861148 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098875224 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081440241 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.100388 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081928477 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.102037883 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080667487 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.078002273 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100331254 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079924282 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.101698205 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083555309 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.102211357 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.080371643 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098926386 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.082943683 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08074289 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099280589 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083824593 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100023945 seconds)
  done (took 3.417960144 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.089465571 seconds)
    (2/2) benchmarking "in"...
    done (took 0.104889093 seconds)
  done (took 0.955946858 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078467909 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116235996 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078047654 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.103115355 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086728222 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.10032061 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.091465491 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105029502 seconds)
  done (took 1.520225411 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.106574948 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.119673939 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.087009388 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.110660351 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.100742135 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.11915978 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.166896139 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.087675878 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.107104653 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082061134 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.120612264 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.099526654 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091517062 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105452755 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.091093301 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.114782378 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.079803339 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.109978303 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.088705207 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.102099263 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08762725 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11618876 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092524478 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.107962734 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084481461 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.111761825 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.113554173 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.093910678 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105682742 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.094203445 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.107394751 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.076016575 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.104901569 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.087265755 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.098021113 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.100508654 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116930677 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105816551 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.091055355 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10606021 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.091424572 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.095066737 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.092344636 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.107075113 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09481323 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.105078936 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.087465145 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.095507006 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.083052777 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.107804548 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.081274217 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.107815213 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.079067396 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.113563231 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.094889857 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.123168198 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.087485257 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.110293413 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.108540315 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088487904 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.111472565 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.088928732 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114892783 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.088210753 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.114258705 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.095279154 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.114192697 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.081366019 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.097489218 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.083550709 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.114425144 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111224502 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.114500627 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.107392896 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088330384 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.098198557 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089267684 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.109392926 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091409756 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.114650295 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.089764511 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110981011 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093797078 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105125145 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.088572901 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.111385345 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.087207185 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.107290352 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.086633473 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.125611855 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.087604798 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.102809046 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.086049642 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.115531856 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.08926809 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.108396916 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.086678472 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.11534133 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.078962066 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.109771796 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091112104 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.11112964 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.116462748 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090638509 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111371862 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.095594251 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.115670669 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090847146 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.108801574 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.081751741 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.11074075 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.088167574 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.112896049 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.079256644 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109947111 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.08980536 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.110040897 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.096543979 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.10634078 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.090494394 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.115109656 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.116154547 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.088346312 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.080594066 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.109383967 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.090196245 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.114451319 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.11705582 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.087841977 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.099328916 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.080490973 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.114000802 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.090190196 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.112695768 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091263055 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110353743 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.078971203 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.11183835 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.090092092 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.114210071 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.087067386 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.10901848 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.092393826 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.107803354 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.085829918 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.110836945 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085309336 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.101049901 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.110332394 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.086970222 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.096170401 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.09184851 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.106051364 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.085484435 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.105396643 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091644865 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.105670563 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.087483855 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.1031314 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.087739772 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106267089 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083383128 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.106459179 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.085359734 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.114018985 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.086879597 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.096122964 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.079990644 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.107838229 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.083243086 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.104935731 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.082479383 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.106106826 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.089064482 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.099272369 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.085928761 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.104796096 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100064244 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.113846786 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088159257 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.108751474 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094614701 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.10478857 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.088634097 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.104200492 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088981732 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.106911799 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091549315 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.108209036 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10627332 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.086376673 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.078915623 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108618361 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11119727 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.082261936 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.080267287 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.100796776 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.086333504 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.11277439 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.104986762 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.088652137 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102744989 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089490531 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110358657 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087099164 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.105564359 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.083369603 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.105778157 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.091609564 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.107647013 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089212841 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.113007481 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088829245 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.097006608 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.091885483 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103494374 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.092241584 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.097623227 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.084069337 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.102093788 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.089919908 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.104608646 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.086218675 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094977034 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093680506 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.112401943 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.087838678 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.101843486 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.087551544 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114878888 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.086234901 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109289132 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.087198365 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.109285694 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120341074 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.083112575 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.106185805 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096165317 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.106328617 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.077082253 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.109962292 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.085142121 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100171612 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.085283445 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.103323389 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089068023 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108703057 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.08890807 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.095752957 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086482109 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.103867475 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.083435802 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.096885987 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.093233036 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.106951116 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.087286916 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116039545 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088894041 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.106660287 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08906903 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.105047913 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.088477503 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.109665772 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088873711 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.107251001 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.085814226 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.101795162 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.087382526 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.101141057 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.081439333 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.105059811 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.087413427 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.106524122 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089138009 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.105937505 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.11080529 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.088353241 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.107201206 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10570329 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.103513353 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.083151407 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107623378 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089267126 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.10595736 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.10535368 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.078142797 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110961129 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.086957465 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112794679 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.086679193 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.098551511 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088340822 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.105417523 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.08962363 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.107699171 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.088842371 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.104607033 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.087665219 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.106143699 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097952976 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.10332377 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.095029728 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10878392 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090313999 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.106975512 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.088140229 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.105310115 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.08400075 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.105998102 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.089106077 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.107494928 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.087443973 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.108546065 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.088392319 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.106228285 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085591352 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.108556814 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.107733319 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.089964402 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.077010755 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.103153927 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.08440009 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.10690551 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111115805 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.088984004 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.085754013 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.105731689 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089784576 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.106009926 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.080304671 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.111527504 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.090897107 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.108898095 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117029598 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.08340976 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.106263053 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098022213 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.096099209 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.086100286 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.100471792 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.084098936 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112586308 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.088992539 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.112992337 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.088570126 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.102683709 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.081090393 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.107927226 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.08648079 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.096805407 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.081768815 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.109490209 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.086435689 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10497458 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.089379622 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.109137085 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090462148 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110964014 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.087085314 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.107282115 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.088667598 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.09944824 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.084608822 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.102280997 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.088314321 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.10880876 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.085480155 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.099157091 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.08876312 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.107190572 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.089040412 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.106347045 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.087344117 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112934053 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088361621 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.107345816 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094204321 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.097614114 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.088922161 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.106492419 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.088094434 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.102889851 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.090578047 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108768278 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090657331 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.112767209 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.087937482 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109408618 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088148853 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.101271872 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.087728221 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.108012159 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.089382952 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.103200791 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.090182732 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114088882 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.083026725 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.107894713 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089714247 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.105011289 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.090358015 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.108452086 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.088906423 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.111278253 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.089244571 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.107835963 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.093010075 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.107514019 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090451595 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110033608 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.087178886 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113949819 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.102210529 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.096033026 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.108939022 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.089955212 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.106737262 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.08553739 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107371304 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.088245747 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106119288 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.094419965 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.108633253 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.084139221 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.103432428 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.082502383 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.107714928 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.094131824 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113413276 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.089926859 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108269047 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.080233044 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.100655765 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.091063892 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.104484248 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.087974063 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.109863203 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093329564 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.107942711 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.085957045 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.106078755 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.094162343 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112856853 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.111150451 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.085771388 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.110500526 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.090422362 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.107740988 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.086998888 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.106204974 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090629446 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.109575615 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.088227369 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.103624348 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098786125 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.112958205 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090879929 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.106601308 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.090575004 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.107283268 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.080239542 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.109053564 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.088916601 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110628637 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.088944778 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.108376482 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11917616 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.084654704 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.106976674 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.094139054 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10710425 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.094998076 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.099315368 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.089532193 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109840446 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090625407 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.099154474 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.085591314 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.104952243 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.090716111 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.103874304 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.080693315 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119529425 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094586668 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.108498473 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087429545 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.106584405 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.080714579 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.099358056 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.085275112 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109501783 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.088332762 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.116403607 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.084741408 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.104808571 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.080859859 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107828179 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090320739 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.110702552 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.08132803 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.099578331 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.085504857 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.108811101 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.095979366 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.106363125 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.089558586 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109495655 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.089532403 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.101432498 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.094234297 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.100245946 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.090042304 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120210636 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.089267836 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.11177943 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.111458659 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095535023 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.10904375 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.080925606 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.109615331 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.09003607 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.108865255 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.090694487 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.11037288 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10457357 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10973395 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.084955501 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.106696992 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.088853026 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.104929507 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.097915835 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.111337612 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.109791442 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.092152533 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.107391175 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.092107344 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.116208571 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091411026 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.110106061 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.090222914 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.107847646 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089006508 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.106850453 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.087941876 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.111494996 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.090699188 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.107937983 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.092425759 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.105338271 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100391412 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.115523184 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.090784909 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.101546156 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.085034689 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.105200837 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.081518576 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.110452518 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.083399538 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.106866028 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.087038498 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.106677267 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.091750916 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111516388 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.089352355 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.110535373 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.089067815 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.098059536 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.092706776 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.109007196 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.092061052 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.103623298 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.090012152 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.110059042 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.094050251 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.113999616 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.087110356 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.109333963 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.088171455 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112284969 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.080087915 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.111761144 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087733602 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.107553886 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.08598393 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.108463585 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.091399559 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11082065 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090919056 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.11167675 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.089259135 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.113996409 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.111902131 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.082529381 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.081564195 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.112902872 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.082910018 seconds)
  done (took 59.535804645 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.151975645 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087337588 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.100575482 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080592727 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128541655 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08224442 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099536979 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.081479964 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.101822702 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.094891862 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.101215919 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080376726 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.123639197 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129051202 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125791068 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.115148255 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080967619 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100990986 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.080538164 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100930793 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.102066983 seconds)
  done (took 2.961488748 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.105814827 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.118906145 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.118007261 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.103529556 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.112904399 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.119297136 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.097846216 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120076172 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.123632524 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112720515 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.102748348 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118188407 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.112541654 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.093312532 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113437103 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116209168 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.102904937 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.112245832 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.120186617 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.098345333 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.116844269 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.117622498 seconds)
  done (took 3.26991428 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.094012302 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.08826529 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.11426555 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.082071711 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.107888076 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.083211364 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.113312187 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.085535806 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.112709734 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.089361457 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.107415225 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.089778406 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.114389432 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.084056241 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.107359092 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.085422153 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.112869766 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.089468154 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.109922342 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.083072966 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.128844339 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.102881887 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.083793291 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.086039947 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.119077347 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.109295425 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.08913095 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.088815135 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.10675536 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.088622924 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.10538853 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.090936354 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.111566399 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.086126585 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.106879739 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.087833538 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.108497973 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.083518162 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.105445259 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.092224402 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.104178505 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.090109442 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.115595619 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.085065227 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.105226243 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.090966568 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.108075215 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.083666888 seconds)
  done (took 5.530583056 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.123568345 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.160741537 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.094151573 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.15807421 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.129950399 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.119825761 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.093472639 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.150696029 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.1076015 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.089384151 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.126656688 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.12453803 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.090581953 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.118863036 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.112861548 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.090624446 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.114045441 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.094723639 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.120122156 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.08922315 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.117815799 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.112414608 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.103725012 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.122068021 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.114187847 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.088909464 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.109073621 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.098495287 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.12273001 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.116195423 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.115513412 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.101005779 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.130777752 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.117760466 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.093269075 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.112227144 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.106356457 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.110855674 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.111860359 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.087823013 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.111754526 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.098651085 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.113725159 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.126287708 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.091612896 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.111126079 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.092868256 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.115082917 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.128023715 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.096545514 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.119127207 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.124393249 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.094533463 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.11055521 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.1155356 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.108303912 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.109765228 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.089082445 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.114053785 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.121646854 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.090017757 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.121297146 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.129552733 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.095834174 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.118808017 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.124784664 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.092938716 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.114285524 seconds)
  done (took 8.546991835 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097860718 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.133638212 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127580934 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105656272 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.116125732 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.115378976 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09583458 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.115070468 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.095570192 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.122754345 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114620221 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.165915966 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.088401693 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.12046831 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.095068789 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.11685488 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115191231 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.096401654 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.115246217 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.094653593 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.115800702 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.126019745 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.094748348 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.126947198 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129277216 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.108931148 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.095550999 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114406669 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125805867 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.095785512 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.128443498 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.114665401 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.09561891 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.126405664 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.128258172 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.095620269 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105623859 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094852865 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.116193412 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.114918241 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.088844906 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.12670703 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.116089511 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.089271484 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.115477298 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.094883663 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.125470952 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.128116787 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.120787719 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.102095622 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.115747485 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.126172765 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095226359 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.115503628 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.126564608 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.134364714 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.106513302 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126950182 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115099486 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.127105236 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107543805 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.137264984 seconds)
  done (took 7.865916106 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086585948 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.085338583 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.104540262 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.083844133 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106797872 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084078493 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.106154841 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.086288173 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08536335 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.106826061 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08602263 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103675309 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083728698 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106071855 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084256183 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103865154 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084501051 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083361488 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107567424 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083394216 seconds)
  done (took 2.687610093 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.094929394 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.127119012 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.087649826 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.114424339 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.089419528 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.115316605 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.10861958 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090475738 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10809685 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090483511 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.119328354 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099748796 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108974619 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.114968994 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.099056388 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11553611 seconds)
  done (took 2.512422445 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.108285168 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.12188059 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.133811159 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.092049437 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.105756717 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.095664251 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.107424397 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.082838418 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.103864104 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.095901281 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.113674087 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.098829094 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.107655441 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.085007246 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.10769235 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.093025556 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102883148 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.091045347 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.10658753 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.112310881 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.113127791 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.110344975 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.088401395 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.108403939 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.092503477 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.112853768 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.094167323 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.105583268 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084654341 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.107165082 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.090252124 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.116404339 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.083023361 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.11458451 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.085098403 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.105688432 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.086495396 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.110252461 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.11355249 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.087877534 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084613236 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.111221964 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.106755661 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.089199041 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.102530172 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.088098264 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.102375611 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.09416771 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.109242245 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.090595069 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.107005267 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.095573228 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.11505611 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.09906739 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.118114181 seconds)
  done (took 6.41834494 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102514805 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.111135354 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.092312473 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.105170698 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090653317 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.115603493 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.090559742 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.109451156 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089136389 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.104327562 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.089657516 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.11266958 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089347071 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.111209538 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089850691 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111801387 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.082112124 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108897295 seconds)
  done (took 2.63894487 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.093424156 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106983179 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.095751147 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106853601 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.087682683 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109001956 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08377736 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.084727703 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106733348 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087043723 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107576823 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088584482 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106413155 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.089622958 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10815124 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087375663 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.10978961 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085711261 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.107428087 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083210523 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.109867242 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.086130989 seconds)
  done (took 2.965533484 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.105291253 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.140635655 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.103464089 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.15246956 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.115340317 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.092034377 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.12255881 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.091516473 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.1306345 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.111722224 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.091983503 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.110493829 seconds)
  done (took 2.205616844 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113951594 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.147007882 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085240838 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111124742 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121833185 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09341561 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113300755 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092867118 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125671881 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127021024 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112801067 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10623482 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125299737 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124479087 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100282599 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122097427 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113513676 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09290203 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109467733 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135845384 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093619467 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126101231 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112618028 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093096659 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112809139 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124338915 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105049122 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127290133 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113349101 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125554221 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102176374 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113255412 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126344701 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106420627 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110668007 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125204506 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094317919 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136816498 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121153521 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125010825 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.090517346 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121169013 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104470585 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122223919 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126365483 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093006717 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121302095 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112837344 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093481948 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141500149 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121630513 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124025253 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12160895 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105656862 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125569124 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141805705 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127564032 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125389093 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100780962 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127398733 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125455204 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121801299 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104295927 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128256466 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120814657 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124656851 seconds)
  done (took 8.480992877 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128678854 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107896043 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092020793 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128678418 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125385389 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112590602 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09374364 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11412307 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092704401 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110884688 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.162425713 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113362012 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104550174 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125079431 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113623878 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09334927 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11397505 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124671504 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09009128 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141486877 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113589329 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125023495 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10444381 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125483989 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127362566 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121919792 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093173585 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114220064 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093250305 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114235615 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120987607 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093296736 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125994308 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.106612838 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1038984 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113658323 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113782667 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101050102 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114751261 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12217981 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104954475 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136299272 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115081846 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09348764 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128247177 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114329151 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092804461 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111311898 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093272611 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110889524 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128087852 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128579559 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128102239 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104617375 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114649637 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092672349 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116146678 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114270447 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093718229 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121854591 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125670916 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093610363 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142569174 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115199185 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092704353 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12726733 seconds)
  done (took 8.319666586 seconds)
done (took 159.410779955 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.106723536 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.146081736 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.103201241 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.172910238 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.08791063 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.143766376 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.121413519 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.125160077 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.087112145 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.109038401 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.088556305 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.112704574 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.153725343 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.109131256 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.088434407 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.112507383 seconds)
  done (took 2.706623114 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.182595662 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.288577375 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107939421 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.114362058 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.095173137 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.113028601 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.092190853 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.115973697 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.09009113 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.123286577 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.111643113 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.090976648 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.122568353 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.090567366 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110268818 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.090476016 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.122682099 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.090872419 seconds)
  done (took 2.998922902 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113893667 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.160816803 seconds)
  done (took 1.125164577 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.125036894 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.18982127 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.309753648 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.167544545 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.118593932 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.132552985 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.167292534 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.129350727 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.199392189 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.132988117 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.111301097 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.117946786 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.141624591 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.101413039 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.121630665 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.094626389 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.143805405 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.119017166 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.097199979 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.117585176 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117224802 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.118227455 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.121739927 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.097585021 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.186837135 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.131891051 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.117161877 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.096949797 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.117968593 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.096974497 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.1224878 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.131267897 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.130859124 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.173171147 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.100484266 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.190433058 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.124273911 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.096157783 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.117373935 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.09454453 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119996619 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.099664203 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.132392065 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.115657381 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.09710125 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.12417834 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.095856635 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.118637145 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.123636509 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.10486192 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.359962835 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.123000895 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.171071429 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.124866069 seconds)
  done (took 8.077735384 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.829878636 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.159234615 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.116449981 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.940630456 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.147022271 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.129627643 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.831990282 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116253844 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.268399016 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.828918271 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135010372 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.130219857 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.239443028 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.261741177 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.153322269 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.345702037 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.711779462 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.129691949 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.122615268 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.159905754 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123396234 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144558947 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.113141126 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.458347911 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.095641867 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.114472649 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.100069958 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.127727545 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168212778 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.115168661 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.097677035 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.209300823 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.273867942 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.187855786 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.117340753 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091555192 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.116383082 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.175735815 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.275594086 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.2254833 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180328223 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089885347 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.114237851 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.105094623 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.136169535 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111002783 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.173281641 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.181294609 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.202939564 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097261495 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.12773169 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.102251945 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.127457772 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.169362465 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.112755905 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.343492292 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.348895811 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093117807 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123842065 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.1319857 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.25184115 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.115249105 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.233315135 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.120897124 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.222384225 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.114645257 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.767236167 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.196591868 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.093369893 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.124569621 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.100626301 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121519521 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.126564386 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.174381044 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.391602597 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108766897 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.119724599 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092230376 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.253730868 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.092826148 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.115502188 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.172823401 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116717091 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.102112562 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.132607219 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.129720882 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.180917134 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.256102084 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.130480303 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.123552182 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.098958157 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128581834 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.094633251 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.245687578 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.227082619 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.168459797 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.220984899 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.128706271 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.175604787 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.174911575 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127618977 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.179625728 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.1241629 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.134210777 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106337983 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.223818241 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.150249206 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.116347654 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098945447 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.12344881 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.154110608 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.096777297 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.124654868 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.177334097 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.488084073 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.176761819 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.089665578 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.120568581 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122831652 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.17164922 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100905111 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270905972 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126025936 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.178164673 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.123977109 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.091513237 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.124783211 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.173956821 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.130311977 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102001504 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129181858 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124704295 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.259883773 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.2300185 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.10867491 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.247969936 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.186582482 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.125679809 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.184396302 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124296496 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.179774636 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125371203 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106368162 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117512024 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.783916356 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.108817286 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.123905028 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098661299 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.199455412 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.115081761 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.094948349 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.115562892 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.090257946 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.809607255 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.096086136 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.114395167 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.094572406 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.126099212 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.123616886 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.100294724 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.120907237 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.171099812 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242159061 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.128823122 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.101043385 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.116205592 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.170161355 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.117280965 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.094503496 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.114700429 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.095290733 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.125058552 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.099072814 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.117443688 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.183281334 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.167842674 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.229317312 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.556754659 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093768998 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.115611945 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.239161958 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094891992 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.315245042 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101288705 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.235383336 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.197437541 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.091679558 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.34660145 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.179843325 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.198925806 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.119196058 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.18325492 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090184597 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.12352761 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.169823065 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.116632452 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.10096434 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.190519388 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.111364074 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.130714509 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.161656723 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.092999331 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.260020494 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.090666325 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.17701374 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119407438 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.128548724 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.316598227 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093893275 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.136658814 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.17148416 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.119312034 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.095188266 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.73812418 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.099572565 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.126181479 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.103342181 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.232191007 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.197195999 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.102532143 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123602673 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.12888118 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.172171716 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.21971059 seconds)
  done (took 45.648147528 seconds)
done (took 61.401595629 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.314707394 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.27528029 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.315250388 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.204403304 seconds)
  done (took 2.060329669 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.186487296 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.160664328 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.130607718 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.114746094 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.162210234 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.091899713 seconds)
  done (took 1.722863538 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.499254758 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.38692328 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.354458041 seconds)
  done (took 2.119140164 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.271697902 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.290481201 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.368382307 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.421722394 seconds)
  done (took 2.336305971 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.213369351 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131435698 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.105585548 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.148179519 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.178787665 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.183664108 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.149248432 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.158638938 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.135553452 seconds)
  done (took 2.327760003 seconds)
done (took 11.444210461 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.191852028 seconds)
    (2/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.263054411 seconds)
    (3/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.296955135 seconds)
    (4/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.28131267 seconds)
    (5/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.185100916 seconds)
    (6/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.173717857 seconds)
    (7/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.21216757 seconds)
    (8/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.119181856 seconds)
    (9/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.094840118 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.129247962 seconds)
    (11/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.265926958 seconds)
    (12/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.097428549 seconds)
    (13/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.195978594 seconds)
    (14/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.132252834 seconds)
    (15/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.28147453 seconds)
    (16/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.099538941 seconds)
    (17/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.129429686 seconds)
    (18/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.25095573 seconds)
    (19/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.25925929 seconds)
    (20/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.160607351 seconds)
    (21/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.243307895 seconds)
    (22/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.205092201 seconds)
    (23/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.102903578 seconds)
    (24/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.131010048 seconds)
    (25/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.250442826 seconds)
    (26/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.108695808 seconds)
    (27/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.219775511 seconds)
    (28/286) benchmarking ("sort", Int64, true)...
    done (took 0.210321803 seconds)
    (29/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.200276143 seconds)
    (30/286) benchmarking ("sort", Float32, false)...
    done (took 0.182114522 seconds)
    (31/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.14603865 seconds)
    (32/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.1054087 seconds)
    (33/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.2123226 seconds)
    (34/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.198533381 seconds)
    (35/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.151408484 seconds)
    (36/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.103298157 seconds)
    (37/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.131343162 seconds)
    (38/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.132789733 seconds)
    (39/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.079624503 seconds)
    (40/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.098508875 seconds)
    (41/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.156722572 seconds)
    (42/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.152148037 seconds)
    (43/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.211847689 seconds)
    (44/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.098907242 seconds)
    (45/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.122718323 seconds)
    (46/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.103099457 seconds)
    (47/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.129468482 seconds)
    (48/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.244493665 seconds)
    (49/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.250382724 seconds)
    (50/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.147068557 seconds)
    (51/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.146187421 seconds)
    (52/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.104308402 seconds)
    (53/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.095182325 seconds)
    (54/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.166344899 seconds)
    (55/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.197785985 seconds)
    (56/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.243389404 seconds)
    (57/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.115202371 seconds)
    (58/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.18847168 seconds)
    (59/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.102913984 seconds)
    (60/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.149725721 seconds)
    (61/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.104126909 seconds)
    (62/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.126910632 seconds)
    (63/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.207549175 seconds)
    (64/286) benchmarking ("sort", Int8, false)...
    done (took 0.199377393 seconds)
    (65/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.138229522 seconds)
    (66/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.169715226 seconds)
    (67/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.114700157 seconds)
    (68/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.108503687 seconds)
    (69/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.17123193 seconds)
    (70/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.105211528 seconds)
    (71/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.119233693 seconds)
    (72/286) benchmarking ("sort", Int64, false)...
    done (took 0.092501141 seconds)
    (73/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.130022349 seconds)
    (74/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.13868769 seconds)
    (75/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.111374043 seconds)
    (76/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.121648167 seconds)
    (77/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.208655512 seconds)
    (78/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.091295376 seconds)
    (79/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.194256532 seconds)
    (80/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.107739965 seconds)
    (81/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.104278021 seconds)
    (82/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.09894601 seconds)
    (83/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.148352424 seconds)
    (84/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.120643342 seconds)
    (85/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.106429043 seconds)
    (86/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.225566804 seconds)
    (87/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.129262025 seconds)
    (88/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.134676566 seconds)
    (89/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.12283682 seconds)
    (90/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.079839709 seconds)
    (91/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.211393903 seconds)
    (92/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.122837775 seconds)
    (93/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.102879204 seconds)
    (94/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.196643082 seconds)
    (95/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.214309236 seconds)
    (96/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.205648823 seconds)
    (97/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.123412765 seconds)
    (98/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.148139492 seconds)
    (99/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.129244595 seconds)
    (100/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.098833954 seconds)
    (101/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.10308195 seconds)
    (102/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.096705372 seconds)
    (103/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.13236986 seconds)
    (104/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.213308322 seconds)
    (105/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.097788125 seconds)
    (106/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.102668601 seconds)
    (107/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.100282596 seconds)
    (108/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.123698154 seconds)
    (109/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.088945239 seconds)
    (110/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.1564787 seconds)
    (111/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.197200984 seconds)
    (112/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.081177675 seconds)
    (113/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.115949487 seconds)
    (114/286) benchmarking ("sort", Bool, false)...
    done (took 0.193854079 seconds)
    (115/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.106704373 seconds)
    (116/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.103431052 seconds)
    (117/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.092187745 seconds)
    (118/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.115642501 seconds)
    (119/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.123550141 seconds)
    (120/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.203903277 seconds)
    (121/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.104062926 seconds)
    (122/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.100277202 seconds)
    (123/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.147582457 seconds)
    (124/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.131818151 seconds)
    (125/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.109349086 seconds)
    (126/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.11701877 seconds)
    (127/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.081062609 seconds)
    (128/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.205890843 seconds)
    (129/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.109152775 seconds)
    (130/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.125833854 seconds)
    (131/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.128471915 seconds)
    (132/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.115013179 seconds)
    (133/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.193109601 seconds)
    (134/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.103084652 seconds)
    (135/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.100441716 seconds)
    (136/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.103491483 seconds)
    (137/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.181639127 seconds)
    (138/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.118268478 seconds)
    (139/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.096113494 seconds)
    (140/286) benchmarking ("sort", Int8, true)...
    done (took 0.209126817 seconds)
    (141/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.133127312 seconds)
    (142/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.141756365 seconds)
    (143/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.097388176 seconds)
    (144/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.117669938 seconds)
    (145/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.096946206 seconds)
    (146/286) benchmarking ("sort", Float64, true)...
    done (took 0.21304837 seconds)
    (147/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.133041444 seconds)
    (148/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.119976373 seconds)
    (149/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.107112835 seconds)
    (150/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.123986604 seconds)
    (151/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.098488742 seconds)
    (152/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.124312528 seconds)
    (153/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.196345826 seconds)
    (154/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.079968034 seconds)
    (155/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.154581092 seconds)
    (156/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.144801657 seconds)
    (157/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.129279244 seconds)
    (158/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.139114626 seconds)
    (159/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.124341805 seconds)
    (160/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.080480745 seconds)
    (161/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.104684178 seconds)
    (162/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.169404378 seconds)
    (163/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.098423461 seconds)
    (164/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.123483984 seconds)
    (165/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.114678933 seconds)
    (166/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.131078332 seconds)
    (167/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.101202361 seconds)
    (168/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.103477332 seconds)
    (169/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.096416533 seconds)
    (170/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.103452656 seconds)
    (171/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.081037595 seconds)
    (172/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.079546406 seconds)
    (173/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.103369466 seconds)
    (174/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.096717376 seconds)
    (175/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.122630202 seconds)
    (176/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.154986678 seconds)
    (177/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.110887547 seconds)
    (178/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.130455759 seconds)
    (179/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.080709224 seconds)
    (180/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.17006961 seconds)
    (181/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.100051397 seconds)
    (182/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.116666858 seconds)
    (183/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.221705071 seconds)
    (184/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.095741993 seconds)
    (185/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.131274758 seconds)
    (186/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.133330259 seconds)
    (187/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.137182046 seconds)
    (188/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.162694786 seconds)
    (189/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.133471466 seconds)
    (190/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.081147481 seconds)
    (191/286) benchmarking ("sort", Bool, true)...
    done (took 0.209153608 seconds)
    (192/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.121479373 seconds)
    (193/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.135505363 seconds)
    (194/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.117920093 seconds)
    (195/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.097843818 seconds)
    (196/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.132029436 seconds)
    (197/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.081866013 seconds)
    (198/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.104176027 seconds)
    (199/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.089140188 seconds)
    (200/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.089646677 seconds)
    (201/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.119594107 seconds)
    (202/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.122994121 seconds)
    (203/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.109621673 seconds)
    (204/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.130420279 seconds)
    (205/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.116002345 seconds)
    (206/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.10405482 seconds)
    (207/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.080619398 seconds)
    (208/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.126275797 seconds)
    (209/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.097012937 seconds)
    (210/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.122833716 seconds)
    (211/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.097116658 seconds)
    (212/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.116813974 seconds)
    (213/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.081836856 seconds)
    (214/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.103330326 seconds)
    (215/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.096457175 seconds)
    (216/286) benchmarking ("sort", BigInt, false)...
    done (took 0.236122313 seconds)
    (217/286) benchmarking ("sort", BigInt, true)...
    done (took 0.223321129 seconds)
    (218/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.106098289 seconds)
    (219/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.096584077 seconds)
    (220/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.121293421 seconds)
    (221/286) benchmarking ("sort", Float64, false)...
    done (took 0.181446847 seconds)
    (222/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.211920695 seconds)
    (223/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.096490283 seconds)
    (224/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.121839115 seconds)
    (225/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.080483989 seconds)
    (226/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.165098654 seconds)
    (227/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.081541356 seconds)
    (228/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.119191367 seconds)
    (229/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.080697408 seconds)
    (230/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.081448827 seconds)
    (231/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.113571229 seconds)
    (232/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.081039072 seconds)
    (233/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.12696429 seconds)
    (234/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.089422547 seconds)
    (235/286) benchmarking ("sort", Float32, true)...
    done (took 0.213561956 seconds)
    (236/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.117019644 seconds)
    (237/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.100871485 seconds)
    (238/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.120903925 seconds)
    (239/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.111029202 seconds)
    (240/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.124152237 seconds)
    (241/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.098957212 seconds)
    (242/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.136977306 seconds)
    (243/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.093711525 seconds)
    (244/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.112599434 seconds)
    (245/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.097395861 seconds)
    (246/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.141018431 seconds)
    (247/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.136631012 seconds)
    (248/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.104065592 seconds)
    (249/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.080906622 seconds)
    (250/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.132585595 seconds)
    (251/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.097088829 seconds)
    (252/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.11789751 seconds)
    (253/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.100798782 seconds)
    (254/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.11278998 seconds)
    (255/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.080968243 seconds)
    (256/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.103515314 seconds)
    (257/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.081522769 seconds)
    (258/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.079719784 seconds)
    (259/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.125168779 seconds)
    (260/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.08059283 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.125929169 seconds)
    (262/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.110162937 seconds)
    (263/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.11822305 seconds)
    (264/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.08168443 seconds)
    (265/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.104659689 seconds)
    (266/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.081159358 seconds)
    (267/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.120331799 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.094140283 seconds)
    (269/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.121503337 seconds)
    (270/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.081960022 seconds)
    (271/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.119451623 seconds)
    (272/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.108599457 seconds)
    (273/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.104648753 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.09844621 seconds)
    (275/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.123257141 seconds)
    (276/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.081255417 seconds)
    (277/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.123864731 seconds)
    (278/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.124052865 seconds)
    (279/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.113809152 seconds)
    (280/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.09654065 seconds)
    (281/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.11260418 seconds)
    (282/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.100444187 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.120163958 seconds)
    (284/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.100824053 seconds)
    (285/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.10522523 seconds)
    (286/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.10008598 seconds)
  done (took 39.180059468 seconds)
done (took 40.063251298 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.106851107 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.16013525 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.105675273 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.148479995 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.130808853 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.110785798 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.128166544 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.106149731 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.130595467 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.132701576 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.108661549 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.112652198 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.105913114 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.128689916 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.106318504 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.14948864 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.10810606 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.125483264 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.096612168 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.122706004 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.12034506 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.0976881 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.122743116 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.088716454 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.12819075 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.103842175 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.123996885 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.105538551 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.12225689 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.095619599 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.119496435 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.101361161 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.137129681 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.106769197 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.122723634 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.097329248 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.128782609 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.103447947 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.12423486 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.097710994 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.126478193 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.097200882 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.124721669 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.101883006 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.12235526 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.119441297 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.096890122 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.132001547 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.125603851 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.122132143 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.102288513 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.12861215 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.106104587 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.126155138 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.095578024 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.120323546 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.09907469 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.150444365 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.12130459 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09816578 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.12667319 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.10391625 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.121295471 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.09695533 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.120614378 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.104463171 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.127332762 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.096890915 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.128395298 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.100518248 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.116285984 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.097374191 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.120427379 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.095050142 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.127537635 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.104554153 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.115548771 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.098954686 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.124876698 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.10010094 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.120875948 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095630606 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.123870111 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.09837435 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.118446417 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.089017716 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.118766597 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.100324381 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.121521123 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.097321193 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.124183067 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.101327699 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.12388177 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.105161989 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.122097846 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.098656158 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.121608153 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.097963165 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.125607369 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.119367478 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.093197221 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095589515 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.127096724 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.095333792 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.122664157 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.106699875 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.120961527 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.099440108 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.122256086 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.121697581 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.110021595 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.127986629 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.098762917 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.122722403 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.094543782 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.126082849 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.095794508 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.11984416 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.096112205 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.122324401 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.098666602 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.122682281 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096622019 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.125439528 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.107125749 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.117340823 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.096152824 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.119452052 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.098340181 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.124975703 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.098438499 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.120371278 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.097806282 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.116642571 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096081073 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.119495681 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.10176159 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.120164686 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.097624979 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.122874782 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.09806539 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.123684302 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.099011622 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.125907492 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.095101726 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.116085545 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.098446038 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.119880283 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.099949593 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.122161154 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.098229286 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.116413173 seconds)
done (took 18.106752216 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.104959626 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.192849705 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.154787384 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.159276461 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.156104518 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.115869732 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.132317522 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.153780719 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.105911519 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.15256416 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.151802995 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.144202011 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.134673668 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.130503745 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.139726264 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.105455976 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.129313668 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.138325734 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.139696604 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.149472212 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.155926634 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.130626436 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.127167951 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.150859194 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.127976643 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.12633732 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.132090489 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.129180405 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.108349084 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.145735309 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.121036884 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.134057345 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.131070972 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.116905666 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.136189944 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.102260951 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.140561615 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.12543527 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.105555703 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.129879345 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141581976 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.116118754 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.12597247 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.136917342 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.105936318 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.133424134 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.10405408 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.127760319 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.104465149 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.12555903 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.133827808 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.124794963 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.127482987 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.13129191 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.106647017 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.12926593 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.106840979 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.134410242 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.131669173 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.109329493 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.131032811 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.133387251 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.111497801 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.149103557 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.128081351 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.106911532 seconds)
  done (took 9.515919557 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.119405278 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.160155197 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.136773345 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.11317513 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.133505164 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.09365096 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.118004523 seconds)
  done (took 1.821530928 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.095554133 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.150053081 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.13019349 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.153580928 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.142988906 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.132967443 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.138504186 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.095105313 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.146336451 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.130890472 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.125211556 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.177075684 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.12147337 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.107570656 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.156221034 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.119970834 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.132234346 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.119965687 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.104148092 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.153988659 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.126182791 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.118366678 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.134981339 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.096340396 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.14328181 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.097793387 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.190218191 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.132665539 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.095388481 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.127356354 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.100952534 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.218038697 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.119088019 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.131291142 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093727047 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.150366882 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.142575753 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.101489518 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.146334037 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.100794784 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.143153063 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.10268104 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.12983401 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.127179273 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.103838295 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.137199263 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.107997327 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.129764743 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.101647109 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.150502831 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.132465191 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.119436651 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.122460976 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.100498399 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.131755395 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.102991536 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.13542228 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.100970831 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.150066962 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.129119973 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.123391326 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.148577518 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.143215614 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.12418276 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.139266949 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.14341256 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.118979858 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.1263339 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.104238531 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.129182633 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.124467006 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.127050462 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.131465887 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.112516102 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.13076888 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.125049413 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.149464245 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.100310724 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.135258894 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.126430796 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.099269205 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.121228352 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112990132 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.1249804 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.099143067 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.139223609 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.108765116 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.127137192 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.100756894 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.145455227 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.125865416 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.108855884 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.133231642 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.124709254 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.112903637 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.150726129 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.13262161 seconds)
  done (took 13.239041049 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.098601166 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.09795631 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.12931668 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.123358908 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.098552148 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.097236518 seconds)
  done (took 1.59897357 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.128997478 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.126536329 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.113672368 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.129409467 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.166911983 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.121901288 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.147250171 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.13144579 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.118190954 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.137018934 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.121370704 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.148105175 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.154025942 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.105815951 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.146871464 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.105195556 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.148615805 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.12602346 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.112474162 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.126788093 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.113571682 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.130445891 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.101641725 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.146386619 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.129861094 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.105881825 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.129302734 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.112705681 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.137527214 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.107327664 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.130277199 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.129188742 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.104796228 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.132307169 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.121428378 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.130635923 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124874723 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.107223813 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.130373031 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.107880483 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.148020506 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.101659462 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.137015847 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.107426384 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.132222029 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.129265127 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.107168559 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.128713554 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.121922712 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.132849068 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.107293624 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.130595599 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.105341355 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.133033623 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.129928381 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.107416081 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.13178017 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.123048971 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.131149405 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.130274797 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.101952414 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.130859345 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.107611053 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.130883238 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104418438 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.132282597 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.104840675 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.127068631 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.101574724 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.129383163 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.132188067 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.101988439 seconds)
  done (took 9.892575072 seconds)
done (took 37.005440334 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.6929736 seconds)
  done (took 1.644141961 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.872536586 seconds)
  done (took 1.826582637 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.568618163 seconds)
  done (took 18.554465969 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.535065656 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.638300542 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.990351908 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.172470126 seconds)
  done (took 3.289635467 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.972008171 seconds)
  done (took 1.945397782 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.322817528 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.273887011 seconds)
  done (took 1.555347332 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.844167825 seconds)
  done (took 1.809854809 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.593808062 seconds)
  done (took 2.558047574 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.365705152 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.207950377 seconds)
  done (took 1.549550919 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.596946387 seconds)
  done (took 1.566112035 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.742206597 seconds)
  done (took 15.716675999 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.238657885 seconds)
  done (took 1.225979235 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.310809686 seconds)
  done (took 1.287378744 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.664831614 seconds)
  done (took 4.639779638 seconds)
done (took 60.13362806 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.107597509 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.135627613 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.110831634 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.133112393 seconds)
  done (took 1.455249323 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.112382265 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.129721742 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.109513273 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.131049633 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.11296681 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.131172165 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.103900111 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.13815603 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.103842455 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.132600783 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.130102712 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.104886591 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.13172294 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.103761203 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.12866865 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.106133391 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.133898577 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.104728086 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.131536205 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.105552874 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.130895807 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.131813673 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.108160463 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.131621218 seconds)
  done (took 3.864896175 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.108020746 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.101365734 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.129525499 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.100987327 seconds)
  done (took 1.419956606 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.113609434 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.145856763 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.118875081 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.138050869 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.145414854 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.118488535 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.127224269 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.101305495 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.129736677 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.112016574 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.128454144 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.12164406 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.145576547 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.121845662 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.114781811 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.12093261 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.098456204 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.145185301 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.112183971 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.139856683 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.100830549 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.13831586 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.110676528 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.141896948 seconds)
  done (took 3.975748571 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.176993579 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.141585835 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.151447808 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.175759593 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.127196435 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.125978748 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.127793388 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.151748629 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.131657039 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.100638545 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.128832728 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.184105431 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.121776266 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.128808789 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.101979441 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.13320173 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.147454458 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.123136478 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.130043203 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.117007231 seconds)
  done (took 3.713071421 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.108473687 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.126773072 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.09670383 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.126069041 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.107949314 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.12863548 seconds)
  done (took 1.690397561 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.097971611 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.095838322 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.122551467 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.096002774 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.12704665 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.096136897 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.120437768 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.09655511 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.096388742 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.122129436 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.096317401 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.121618542 seconds)
  done (took 2.272446538 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.510070402 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.127563856 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.129239689 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.102342093 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.132130112 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.100426702 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.142580409 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.100351269 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.184403811 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.128640468 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.116224422 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.181928618 seconds)
  done (took 2.941742092 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221231951 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106713918 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.287984183 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.448342493 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167903252 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178885464 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.339131383 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173890247 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.223613812 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121733521 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240770852 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141540809 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164567862 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18933741 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15125553 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.196573609 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186807227 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213145839 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160412545 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225707313 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175016067 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178301421 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.225965278 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135595351 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148423863 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169376265 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.100958869 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139187581 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183871979 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180258452 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183140645 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160059626 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148015442 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210701942 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251205903 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188599852 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.388692108 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117635599 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.22489362 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.205007069 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.28955039 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124886967 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233954935 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139789463 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141429484 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191813227 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167013867 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.190321605 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.141461786 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123968393 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223581841 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188190251 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.193189632 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148625945 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.355049705 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154927104 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.156102352 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196023825 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200853644 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237974358 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151213714 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.135131411 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.260613339 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203140593 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192003302 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.156622615 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.179901766 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1071479 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1879409 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.241970007 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191010379 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180178729 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.230363525 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11706659 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173319646 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190339741 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166138991 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1914499 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171396923 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.103938103 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16051053 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147635216 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110314283 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.196413489 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133325223 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225879038 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146973068 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.301341347 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221784965 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170011751 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172359919 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17605143 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179228432 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158584476 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.128823649 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130127921 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.182832741 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168487187 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142979758 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168247077 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129224016 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.137617758 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16347598 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.105701731 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169448377 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.145737488 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179480189 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175689963 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.138166748 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148557591 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160338052 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.168336479 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182063079 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206619335 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143795264 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141653255 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213485345 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167393393 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.118851866 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195775293 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.234322189 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.182706489 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119961323 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178501171 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234319781 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125320158 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206671457 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153567538 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144441273 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.162939118 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168457817 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167907323 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.138298867 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140057621 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.162787035 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214463013 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.138351352 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119329959 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185175324 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137075681 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137610721 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126687133 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146953168 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.151962885 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.132868561 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.150251191 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167274854 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17054505 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164879123 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170287659 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151970624 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204797701 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142519374 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.142220778 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158220593 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.128168438 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.192305361 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205371433 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139473409 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198984717 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.180341447 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.278028499 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146571151 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14270893 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192168532 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140336158 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.101816426 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17658268 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171378336 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173455841 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.204803983 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270791961 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.177758108 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.163209361 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160354677 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179056489 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.195563984 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168587664 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.155904818 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145020095 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206800249 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.105483315 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.134390041 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.109045172 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151478885 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140504172 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115376431 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191928176 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17451465 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.263379763 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170593311 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150687522 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204542336 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.108134964 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176060815 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.18270235 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151087353 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.204809794 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202132139 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177658651 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154402058 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180894197 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.130559807 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10705264 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.143822275 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17845195 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114622996 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145585307 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154694325 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204415677 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18545862 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161392739 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.278505618 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179804317 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.214515564 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.132247495 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.146154008 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190726072 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16878637 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.198663507 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143679262 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.143667512 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.228116737 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127695674 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231871699 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171010964 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150890156 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240310349 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.167904863 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112623865 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160673596 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179392209 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151858308 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.182841396 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156867878 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11743325 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164803712 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.147491838 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135633423 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193626685 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124473233 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219861834 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.176857864 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186843809 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108105475 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15488645 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171630889 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157575279 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.10006387 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18132731 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238408092 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155729117 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1692325 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195422401 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112354741 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.393284025 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210190742 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19626656 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149377134 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153558595 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171511465 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179010464 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146848103 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.222661301 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125182494 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19231136 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171020033 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.154263866 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14527576 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129778793 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162570187 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.162949816 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.143134359 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.162499178 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.125896685 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22338598 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127215001 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170860459 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174373469 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.157662984 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.137887216 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153337919 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221801454 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168838981 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18917579 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.167305307 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.186967056 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199650749 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13611936 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109852194 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.138428473 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195618577 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142167625 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140676277 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.271497859 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284720668 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170374529 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180907252 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120036472 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.134572775 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170710401 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159279469 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247744096 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151425781 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.147755556 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210701888 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.162593276 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113108643 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17708636 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.36560197 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155660726 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196507321 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.102224296 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.353257886 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110222662 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141317165 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180549712 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183054369 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.11387394 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.197276333 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174240641 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156300206 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181215067 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119650509 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.268030447 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221576809 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210072106 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187922512 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.125879761 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169205112 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17535324 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197422284 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15581713 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.157746792 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1744019 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203476881 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.206563353 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.143449042 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173786206 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173102825 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14101238 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21484441 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116375243 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199810448 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142633779 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176711687 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150407021 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105835824 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168661328 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.264195169 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116263005 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222856705 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140307656 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144470001 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136610391 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134293593 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169218062 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154377597 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.139518285 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191857839 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.108858366 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17359097 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192050553 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141608221 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165310274 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127713128 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142232577 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153978039 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154572826 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117826174 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.181967914 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204929744 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.140865207 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197756624 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185652512 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176794319 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171799931 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154705314 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.644464045 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.139086298 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202721685 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158464202 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200178374 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160075743 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147656587 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171158134 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160099302 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177918312 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160970473 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.229606449 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177324586 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.168695031 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112626942 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156664124 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157258296 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.141218676 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134480284 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172752293 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151682589 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.146777206 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.138294542 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158876862 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.156729689 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148816431 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205692705 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129482815 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225013499 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197005415 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120270369 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176063912 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216323719 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112116477 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.172488329 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183739576 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153792973 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161644719 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.111916621 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.146542279 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191161119 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.105174495 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171806989 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171089502 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172916575 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17330087 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.145155428 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170626179 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124514401 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171740072 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137148498 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.165349236 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16706388 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113232717 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.138120688 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165862796 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169764872 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.140316203 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137528351 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.15809272 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226528066 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.107150997 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14426498 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.337567452 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168658851 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205050635 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.164572434 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146802413 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126042717 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165963008 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.164282933 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16998216 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.139097471 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114715583 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.143168984 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.192506232 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.179360988 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166622057 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199191238 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171575049 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202116819 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.117546115 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.27597552 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149486972 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16318872 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.113160616 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.139188946 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122818648 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146746388 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155959729 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.26723124 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161983936 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.163009568 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.155861432 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137348352 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.106888446 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143731512 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181515008 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136315007 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169607007 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155234079 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.128578374 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125954246 seconds)
  done (took 83.559202507 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.162114573 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.153097691 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.158605836 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.207641746 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.178939458 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.266844377 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.21704379 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.238819901 seconds)
  done (took 2.658043138 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.110283794 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.14634155 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.150973141 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.135138304 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.135130776 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.355870742 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.146024757 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.10684737 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.208484179 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.1470117 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.131884923 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.631581076 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.131740626 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.106830781 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.124733311 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.134848417 seconds)
  done (took 3.967260246 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.358203532 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.548076163 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.049494938 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.242386098 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.252894495 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.165313952 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.759053487 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.174038553 seconds)
  done (took 12.627020637 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.135894426 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.151515451 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.152411246 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.17914079 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.162555357 seconds)
  done (took 1.86333589 seconds)
done (took 126.977925047 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.106243856 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.135272994 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.106201709 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.137340267 seconds)
  done (took 1.548416199 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.120043396 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.090571178 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.122184588 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.089643688 seconds)
  done (took 1.493727711 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.448049783 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.120300238 seconds)
  done (took 1.680818953 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.139430109 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.157076483 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.124797796 seconds)
  done (took 1.507691751 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.114889505 seconds)
  done (took 1.201390723 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.108715888 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.138010972 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.126736877 seconds)
  done (took 1.460278284 seconds)
done (took 9.967669233 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122055449 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.538147448 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.396705818 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.149483778 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.731426942 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.389956968 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.054338857 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.164430805 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.17538761 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.101435882 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.148444717 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.682231554 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.042278149 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.4497933 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.028763937 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.354279419 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.712021385 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.102771225 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.135834649 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.102534215 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.032185474 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.100462343 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.130954371 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.103096287 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.710983085 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.405473243 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.130043017 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.39455794 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.100824226 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.133296702 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.39136876 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.129066388 seconds)
  done (took 17.413007941 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104100411 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.190626934 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.10889143 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132300814 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.104839233 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.131225846 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.110740459 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.143286149 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.190137289 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.129028067 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.122091052 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.129006488 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.106859716 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.129592521 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.124012392 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.128480066 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.103919287 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.131278187 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.108173397 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.131235684 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.12120752 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.129222384 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.103696246 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.13125317 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.101272711 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.142313874 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.101186794 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.141899762 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.101033864 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.135360992 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.1062955 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.13067742 seconds)
  done (took 5.084062103 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.150503806 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.199896463 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.139674263 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13960412 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.181145237 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.131761499 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.217969288 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.137995858 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.195305722 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.131249894 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.148730469 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.101480733 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.16864952 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.102051147 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.15255655 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.101254262 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.133024138 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.104082819 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.136796867 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.103230592 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.151305302 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.100852805 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.132229451 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.103504486 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.130288468 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.115808262 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.130970191 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.141481732 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.102483719 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.134844315 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.108201305 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.129278871 seconds)
  done (took 5.442243219 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.108804548 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.137433455 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.118574435 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.147246645 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.104124454 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.136246447 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.109181585 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.132503311 seconds)
  done (took 2.078077289 seconds)
done (took 31.101294936 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.119580047 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.106993436 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.145979194 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.14360353 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.112291443 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.166963064 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.099905399 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.141735091 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.11541516 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.11046746 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.147995087 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.102485883 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.13325951 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.099607329 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.14460356 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.106494778 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.146758345 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.111540068 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.15307007 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.117473218 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.13337203 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.113860841 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.141202789 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.123038613 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.152647411 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.152573783 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.118569346 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.137281949 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.102225051 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.131774968 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.119806265 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.15790782 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.10454778 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.148955311 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.106215203 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.135948441 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.102121244 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.133424171 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.117194342 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.142270304 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.107836048 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.143339922 seconds)
  done (took 6.430297711 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.130602197 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.176355819 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.099509107 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.129471458 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.098935336 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.172627564 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.168977534 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.09948556 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.128438592 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.128038654 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.160697648 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.099425868 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.129505737 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.099511798 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.12864317 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.09972497 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.155855759 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.127153911 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.16476358 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.162604043 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.149227542 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.165418326 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.166761649 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.127908647 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.175685697 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.168893092 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.122495054 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.170970428 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.160426528 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.098956473 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.163526988 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.1633837 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.100859112 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.098943191 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.174520905 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.169522889 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.160343959 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.144499702 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.165244232 seconds)
  done (took 6.599306209 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.110454509 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.150886462 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.134493429 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.246495474 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.174128324 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.150301528 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.118200817 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.152038965 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.162035988 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.103412762 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.114464905 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.165002466 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.148953092 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.114952415 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.137152545 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.118186936 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.152185836 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.103831593 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.142373715 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121262882 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.151346949 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.115531113 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.151122284 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.141888456 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.104284133 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.141802129 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.111552084 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.147907258 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.112371191 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.144947755 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.106625724 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.136882635 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.104812235 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.144000093 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.106743776 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.141787448 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.154239705 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.115580956 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.148746627 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.137284578 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.14427371 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.136532668 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.126980046 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.184401514 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.105624413 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.13953918 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.113313402 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.144956329 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.103626544 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.153183467 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.148153129 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.105397271 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.148255241 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.102047414 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.13292927 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.112970657 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.135341155 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.10569001 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.14517437 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.107608223 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.153232271 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.113799708 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.143378329 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.106958749 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.141608617 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.102372391 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.132670842 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.136890673 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.129827288 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.140801846 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.140438487 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.135133478 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.108786909 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.144436748 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.111735895 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.146713998 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.101997844 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.144812104 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.14305269 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.113039068 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.145329628 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.107404441 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.136802362 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.122293661 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.148378937 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.110886755 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.138713458 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.109890027 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.136647565 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.106572952 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.152609062 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.135459121 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.108377384 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.146038006 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.106381778 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.135945931 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.110293366 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.137072442 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.102154654 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.15783083 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.107976421 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.132796475 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.12478583 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.135458162 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.106261613 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.142198819 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.117588832 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.133728785 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.106911655 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.139762952 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.102070498 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.141817274 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.106464225 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.135183869 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.114934494 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.149680446 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.139502765 seconds)
  done (took 16.424593412 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.255303935 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.234831825 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.206980252 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.322299456 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.156686943 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.130504422 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.232286368 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.188217708 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.134404147 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.17452418 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.191219269 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.201914909 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.190845298 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.202177201 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.19537211 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.104279223 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.170705817 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.189137213 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.236546635 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.286436955 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.171401881 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.148354541 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.176370004 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.175580534 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.120272635 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.151590582 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.156755178 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.125918812 seconds)
  done (took 6.339375986 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.120070567 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.174695333 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.110818436 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.162948411 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.16081283 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.103643683 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.138569137 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.104209838 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.148809733 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.15003871 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.105355199 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.140889184 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.109560397 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.142379005 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.103337157 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.142814987 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.112775622 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.143301928 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.10615361 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.137263228 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.12345425 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.151224806 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.139132053 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.109849935 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.150604557 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.109424267 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.134820942 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.156224956 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.113792161 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.163233501 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.130852306 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.114203834 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.148356439 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.103342308 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.140795344 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.10671389 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.104797695 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.135710784 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.106415675 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.131226466 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.102943203 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.123923828 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.109594291 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.148572756 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.140319986 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.105297303 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.138536015 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.108907536 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.103500568 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.130617137 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.104993221 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.136331762 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.107717778 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.151587205 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.105910729 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.134688599 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.107286793 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.134004859 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.112781282 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.137089744 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.099853808 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.139226809 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.110291262 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.139838394 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.112468934 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.141123077 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.108594074 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.135765085 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.108248371 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.141697279 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.105764849 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.147184965 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.099957524 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.136936771 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.115792074 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.148604174 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.136682238 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.109714529 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.141508906 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.103199824 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.093883556 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.133636086 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.090317504 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.138538746 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.103623714 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.139211587 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.107025319 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.139858924 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.151358273 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.114130679 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.141722994 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.103734801 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.140613861 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.107898208 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.130488267 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.108729706 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.154282304 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.125926023 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.134355131 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.100235593 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.156583591 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.104596395 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.132119369 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.091940846 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.1446965 seconds)
  done (took 14.33516088 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.132580969 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.173161885 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.104847357 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.153670179 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.169580009 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.133710136 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.149928555 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.113312811 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.136270639 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.125012731 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.14167575 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.112907175 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.141894283 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.118990331 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.163553518 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.147811519 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.105927704 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.149587578 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.11040906 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.176188699 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.123788252 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.161835722 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.166793275 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.115893074 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.141306556 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.128932548 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.16836729 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.147767567 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.117690111 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.168532502 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.118615075 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.166482037 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.168211822 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.109944529 seconds)
  done (took 5.888937862 seconds)
done (took 57.102617154 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.230499703 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.429239323 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.190848351 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.188998597 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.246318195 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.232304038 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.190053411 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.404137213 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.927624093 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.176929972 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.189086141 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.188527219 seconds)
done (took 27.707148572 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.196179604 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.783118434 seconds)
    (2/2) benchmarking "String"...
    done (took 1.504236369 seconds)
  done (took 4.399299817 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.188576246 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.191276175 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.43587195 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.188961452 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.20691058 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.207128036 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.203908989 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.195743944 seconds)
  done (took 15.741516419 seconds)
done (took 25.637779201 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.240414149 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.384650035 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.454217217 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.20715912 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.188734134 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.199289343 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.194119401 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.218198445 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.192453565 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.190865622 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.204204972 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.445675002 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.2143202 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.570394609 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.187705318 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.20115657 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.206342209 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.421438304 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.188188493 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.251661943 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.174815073 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.196006039 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.196211798 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.21209007 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.197467815 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.191596207 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.192938718 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.189569618 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.381244389 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.200635732 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.235015421 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.193016471 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.199245198 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.189041223 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.299908048 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.216104242 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.385280782 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.196401893 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.179626913 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.188621853 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.388652082 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.58928786 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.188393044 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.19445484 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.187938537 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.234954164 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.172986029 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.913944301 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.18979365 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.196848368 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.19459975 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.60416455 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.202962628 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.194647204 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.196018538 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.420887559 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.21797961 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.212763789 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.2282471 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.19472511 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.189763746 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.211998849 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.203317057 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.192042488 seconds)
  done (took 142.611043118 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.190549815 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.19526065 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.195200489 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.216918578 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.190709478 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.196619577 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.18949837 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.191886751 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.195735741 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.225278995 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.195608953 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.190449128 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.199596397 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.13892629 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.191351675 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.204245114 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.19042614 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.197302145 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.193894605 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.190358859 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.21140964 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.190549429 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.207532189 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.191223494 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.232033821 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.282500553 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.228995847 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.212046611 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.189215407 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.192378961 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.237057609 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.256180051 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.802695982 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.049047923 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.207650029 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.2177127 seconds)
  done (took 79.900525062 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.190186276 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.190607863 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.19191478 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.223598116 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.190796166 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.748730422 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.749837096 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.925298462 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.204868362 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.536201788 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.457328596 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.193612238 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.286644098 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.206707001 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.196929331 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.208398542 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.221251048 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.193938961 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.192317556 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.752678965 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.206458637 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.210702749 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.384356878 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.210925199 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.226069753 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.588518508 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.193519811 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.22514297 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.527009986 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.243775597 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.194554123 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.556591157 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.000324857 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.307103367 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.195339171 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.226763585 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.193874502 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.474770423 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.193864519 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.193917559 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.195992688 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.853466606 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.193465215 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.747893413 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.193940004 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.144256483 seconds)
    (47/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.194527885 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.192983051 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.191985562 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.675928318 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.828862778 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.207141157 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.193768691 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.195146563 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.192863981 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.190943071 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.223248363 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.65329213 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.305592065 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.192329058 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.1993717 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.222867781 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.192610645 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.404061453 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.192209283 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.814615986 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.266517721 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.293915971 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.737496749 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.195503738 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.286273812 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.308112495 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.192118861 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.190797428 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.190733015 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.189970648 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.299888552 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.19097364 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.591288975 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.362816487 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.208493437 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.467908801 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.290286219 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.189387715 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.560406852 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.194561815 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.190600271 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.903598493 seconds)
    (89/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.190036084 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.284207862 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.190036444 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.189077242 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.190341277 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.58520846 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.722141476 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.408442082 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.194279748 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.735531388 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.195320046 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.594555808 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.190220791 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.189473488 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.709507083 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.811786433 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.19020712 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.30146257 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.360111802 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.207496372 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.189540176 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.436733408 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.193873866 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.251291171 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.190680709 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.586441571 seconds)
  done (took 365.119545357 seconds)
done (took 588.740958523 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.9095439 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.859152637 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.98519402 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.883386134 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.854293618 seconds)
  done (took 10.601779738 seconds)
done (took 11.710916159 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.37307583 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.373322438 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.249865943 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.374892459 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.222586052 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.39331346 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.359012275 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.211929856 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.293181186 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.269811684 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.291848991 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.243995927 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.225709974 seconds)
  done (took 17.996216576 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.454897966 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.192654139 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.274382892 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.437420823 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.231854126 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.445260044 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.486225982 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.195589931 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.36593362 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.206589636 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.205333139 seconds)
  done (took 17.609414009 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.443646288 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.194014403 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.261719443 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.43945516 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.233932452 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.45872426 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.492554666 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.193799918 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.348853842 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.206499734 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.206658546 seconds)
  done (took 17.594457149 seconds)
done (took 54.311263282 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.23149523 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.357903052 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.218640071 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.206978454 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.202592654 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.20306029 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.208188479 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.202435444 seconds)
  done (took 10.945933043 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.197530971 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.198588312 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.197873345 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.200550305 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.199878984 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.201432549 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.201191719 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.201679069 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.197804572 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.198853259 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.19823323 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.20027745 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.20231676 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.201085014 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.197798174 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.201243022 seconds)
  done (took 20.311585807 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.200775792 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.198831762 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.198952002 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.199174087 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.198769901 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.199005215 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.200446035 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.20022701 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.199668016 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.19944214 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.199754453 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.199515523 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.200296743 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.199346854 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.199548314 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.199857607 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.199868787 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.200973181 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.202689646 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.19940592 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.199897975 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.20064169 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.200499221 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.201377203 seconds)
  done (took 29.916865486 seconds)
done (took 62.288240894 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.207791879 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.206613196 seconds)
  done (took 5.529775654 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.264162765 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.264819795 seconds)
  done (took 3.645829914 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.204971124 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.202620474 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.203131925 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.202164656 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.202903891 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.203210467 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.205011229 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.201575394 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.202505216 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.202670354 seconds)
  done (took 13.147747393 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.203342185 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.202394062 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.20087432 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.203919575 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.201833098 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.200684708 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.200902212 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.202453821 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.201765994 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.200254761 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.202239443 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.201293939 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.20204298 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.200327761 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.203307718 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.199347317 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.201255693 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.199866568 seconds)
  done (took 22.745431581 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.215554655 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.225590322 seconds)
  done (took 3.558493503 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.339821606 seconds)
    (2/7) benchmarking "second"...
    done (took 1.241172409 seconds)
    (3/7) benchmarking "month"...
    done (took 1.316814276 seconds)
    (4/7) benchmarking "year"...
    done (took 1.307140441 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.242178099 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.220623161 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.242300542 seconds)
  done (took 10.024375436 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.202693161 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.393347038 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.495513955 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.757111644 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.204063964 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.207063124 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.072245891 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.206647472 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.209431797 seconds)
  done (took 13.86454501 seconds)
done (took 73.629709528 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.192654061 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.212628079 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.197565457 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.228932866 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.493735299 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.23605256 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.198900556 seconds)
done (took 15.874498892 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.192381129 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.196462386 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.19184242 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.200003437 seconds)
  done (took 9.896033771 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.18014714 seconds)
    (2/2) benchmarking "read"...
    done (took 1.562149624 seconds)
  done (took 4.857501484 seconds)
done (took 15.866577931 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.20467008 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.202591553 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.201476122 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.202699439 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.202365281 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.200999431 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.198338121 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.201425214 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.198695899 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.201566877 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.200442699 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.200168727 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.201254548 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.202018928 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.201821079 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.198730534 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.203965958 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.200193754 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.199211768 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.198311016 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.199974087 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.20163141 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.198223846 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.200853159 seconds)
  done (took 29.937707762 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.201216791 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.200634496 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.201532202 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.201634005 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.200489696 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.201104478 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.202230196 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.200001895 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.201909494 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.204064762 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.199043843 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.198677262 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.201541185 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.198853085 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.20415348 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.199529921 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.201071413 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.200234881 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.201309692 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.199240474 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.202116448 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.199216782 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.197412346 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.201445377 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.200347281 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.19960416 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.203793265 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.199611163 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.201725313 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.199553695 seconds)
  done (took 37.141188423 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.205392633 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.207763973 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.201991554 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.202995345 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.201675161 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.20248428 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.201038627 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.202737636 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.202429522 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.202185616 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.201678286 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.203014809 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.202235024 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.202114899 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.20107976 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.202266704 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.201926379 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.202845829 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.20206272 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.202577191 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.202052056 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.202982609 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.202969215 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.202853497 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.202222489 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.202617095 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.203864168 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.202945464 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.203157502 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.203277081 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.202449889 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.203495402 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.203069226 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.202966131 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.204485183 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.203599069 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.207346601 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.210372584 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.204629664 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.204817275 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.203617954 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.204436254 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.204611048 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.203384181 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.205075199 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.204770782 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.204589545 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.204323246 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.20552514 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.205022942 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.204657235 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.205946994 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.204686929 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.206419534 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.206314259 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.204986615 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.206746163 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.206516657 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.205894441 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.205791037 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.206673381 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.20747761 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.204813949 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.205870323 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.206353836 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.205692016 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.2054665 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.20694972 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.206287142 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.208431199 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.20568577 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.207366823 seconds)
  done (took 87.826343615 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.207614245 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.205517442 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.203502448 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.204614281 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.203633754 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.207259298 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.204391457 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.204756305 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.20529639 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.206783057 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.206649854 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.204072667 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.204024661 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.206419157 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.207259301 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.204394916 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.206123114 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.204275553 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.207586708 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.207161982 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.207546816 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.205274677 seconds)
  done (took 27.64329116 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.206995523 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.207917642 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.203381921 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.210639652 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.206043326 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.208162865 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.207619323 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.20935181 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.207278495 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.205308505 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.205173644 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.206178832 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.206577338 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.205288333 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.205760696 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.206423208 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.208062084 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.207116963 seconds)
  done (took 22.84442506 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.205665027 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.20595204 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.209136615 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.205498578 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.206154938 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.208652383 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.206513257 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.207744638 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.208293775 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.20543498 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.209400853 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.208304522 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.209043491 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.205409021 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.209469634 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.206314893 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.209374021 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.205849051 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.20948501 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.206252395 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.206360712 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.659048908 seconds)
  done (took 28.135337967 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.210601181 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.208881683 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.20688904 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.207400746 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.206287275 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.209599012 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.209674132 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.208366494 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.212015191 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.2087393 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.207338269 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.209853229 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.208841865 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.208265934 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.20845957 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.207582776 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.211700228 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.209495451 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.210585535 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.208614304 seconds)
  done (took 25.303318573 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.211200916 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.213051328 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.210963158 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.2132351 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.211685875 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.212111386 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.212303712 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.212244885 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.212944893 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.213159602 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.212989333 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.210714293 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.213481424 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.213000972 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.212775567 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.212533825 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.212675089 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.213110925 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.214088076 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.213929171 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.213199127 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.214228132 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.212611933 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.214194677 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.213378923 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.213095886 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.215121263 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.214452008 seconds)
  done (took 35.086674053 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.213823209 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.213065218 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.20997419 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.211646021 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.211422966 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.210636356 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.211348159 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.212672947 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.213994494 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.211112714 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.21519062 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.212829477 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.214456733 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.213357514 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.214282701 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.214742297 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.213722272 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.212122532 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.211681463 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.211727426 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.214940672 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215180167 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.216185439 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.21205999 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213148224 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.21569068 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.212461442 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.21353341 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.214030356 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.213470719 seconds)
  done (took 37.521699532 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.261187329 seconds)
    (2/2) benchmarking "in"...
    done (took 1.259103849 seconds)
  done (took 3.647610425 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.212982004 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.215595531 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.21423436 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.213974461 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.214163907 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.215784946 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.216905409 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.213074672 seconds)
  done (took 10.844253876 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.215268381 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.214573872 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.21633777 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.215792142 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.2160678 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.216544885 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.224561809 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.234235224 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.217991124 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.216817446 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.221943025 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.222989635 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.219397103 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.216198496 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.21650576 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.218149307 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.216818929 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.216583483 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.217660294 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.217461804 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.217472163 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.220348425 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.220920856 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.214356918 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.217748976 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.226614694 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.222449741 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.218454333 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.218189739 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.222143829 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.218292598 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.21540099 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.216858169 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.218231327 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.217450257 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.217479933 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.228113084 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.238418293 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.224580817 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.219380165 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.218685157 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.215119036 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.219892906 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.219579932 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.219615196 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.21792896 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.219288282 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.216167691 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.218348105 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.222129605 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.220601463 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.219398161 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.217443573 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.221052206 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.220549173 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.226207244 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.239336817 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.222615577 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.227149189 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.229662712 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.231006891 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.241100221 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.222534503 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.222073104 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.230168119 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.239435183 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.229207807 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.236445035 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.218928136 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.218668848 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.227504445 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.23291185 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.244592043 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.220347089 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.221048363 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.220186428 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.220989006 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.221131437 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.228694718 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.242101792 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.219967019 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.222035952 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.230293346 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.240212347 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.222402112 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.224478902 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.224216254 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.223951678 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.225413738 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.234845294 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.241829085 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.222256266 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.223510492 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.224357528 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.225777261 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.224898296 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.223435756 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.224961254 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.220540682 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.223504885 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.226842799 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.228310221 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.231904859 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.223478906 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.225736932 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.232108986 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.224017674 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.2232692 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.228554684 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.223333961 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.222493644 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.224304348 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.228619736 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.223027413 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.226339199 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.231277023 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.223566234 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.225142278 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.223886479 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.223432964 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.232664596 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.246282607 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.223648927 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.224688227 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.228318187 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.233198431 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.226580775 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.227061279 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.224789736 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.221327016 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.220395034 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.226902078 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.224774102 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.226205076 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.22588911 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.224663095 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.222815779 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.22647467 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.22529727 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.225461049 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.227197551 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.226800505 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.226239295 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.22801483 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.225625647 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.226803742 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.231259688 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.225215008 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.227350588 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.228339958 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.222296017 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.226427342 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.227263834 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.227665708 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.2269578 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.225469024 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.227338091 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.227254835 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.226020955 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.226524633 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.225709254 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.22815282 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.230231795 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.227130256 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.231488292 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.227119562 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.222317137 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.225984148 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.225502011 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.226909812 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.227055109 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.226989182 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.230278172 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.233523302 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.227201413 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.227474914 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.230420436 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.22661958 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.227088817 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.228392954 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.231222262 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.234690379 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.225796602 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.235232766 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.22705173 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.227363956 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.228079558 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.229184772 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.228371299 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.227594295 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.23111376 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.234041501 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.23882653 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.249912505 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.228454632 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.231009903 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.229877799 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.232867448 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.233243043 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.228700905 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.227942314 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.228485453 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.229392633 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.229283725 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.229644506 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.229165434 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.228203377 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.22894683 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.22983737 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.229678936 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.230022619 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.230504908 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.23007648 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.22595526 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.229594231 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.22979146 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.230412952 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.227513324 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.23025086 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.230719853 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.230429332 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.230666738 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.236101212 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.227777272 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.232245866 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.23285796 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.229490145 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.229382749 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.230582961 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.232779094 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.231265467 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.238233061 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.250314154 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.231566992 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.239078839 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.248904277 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.231735753 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.234674954 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.231805568 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.228421188 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.235726404 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.237971386 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.230471891 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.232518457 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.232683812 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.233789532 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.232148727 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.239447233 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.230420977 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.232941249 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.231275924 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.234507239 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.229754298 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.233593217 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.23388699 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.233088233 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.234721065 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.233681911 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.232370534 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.234340328 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.231744535 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.232655397 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.233156424 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.23637198 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.239492788 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.239539229 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.233236212 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.23614997 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.233875474 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.237105984 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.234172771 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.235336903 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.235219253 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.244777581 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.254840031 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.240324491 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.251991337 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.234171701 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.24028523 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.252804619 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.237265695 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.235507737 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.234900933 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.234859177 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.235963194 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.230987329 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.235384233 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.234106469 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.23576763 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.236217537 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.238069665 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.234400397 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.235462822 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.235647055 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.234827736 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.235234054 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.236222048 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.235578546 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.236540547 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.236611885 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.236118908 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.23604874 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.242761344 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.254998181 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.238983744 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.236923904 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.2373451 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.23676516 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.237180575 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.242829013 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.247936645 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.242095787 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.23955337 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.245421892 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.239137265 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.245730736 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.236576786 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.241256447 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.243515225 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.234478448 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.236938812 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.237764963 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.236221622 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.243916545 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.253671506 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.239183306 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.241567029 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.237279796 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.237405936 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.237076851 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.2386939 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.2385966 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.236384163 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.246059641 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.25764743 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.241168003 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.240065719 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.236162279 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.238108668 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.23821007 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.237722682 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.241694876 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.237773836 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.24063007 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.237876122 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.237484019 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.237612365 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.239365122 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.239167222 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.237439291 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.23705556 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.247347888 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.259196704 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.243099746 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.240639989 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.24700299 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.240554242 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.248183815 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.257521686 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.239945049 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.240032959 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.239676516 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.241767584 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.240191249 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.241871668 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.240951008 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.240834336 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.242508397 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.240650139 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.243638954 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.241961536 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.240148986 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.241086606 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.250061976 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.260837329 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.243624898 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.244869607 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.23819051 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.242571642 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.244464398 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.241334718 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.240830244 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.245339726 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.251139291 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.247195147 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.243170486 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.241431375 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.242209929 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.242386503 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.240345021 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.242708074 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.241595449 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.24265518 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.243276267 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.242120292 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.244109413 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.242707749 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.243245103 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.243592208 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.244102021 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.251959136 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.241608173 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.245123036 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.242262752 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.244726204 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.243023765 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.244107717 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.243569575 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.244885153 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.24228885 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.244209646 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.249164792 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.249128927 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.24485727 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.242890772 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.242456908 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.242742227 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.24507512 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.24388969 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.243572792 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.242701319 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.244622795 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.243818714 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.243122354 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.24407502 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.24438598 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.245398935 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.244155361 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.2464832 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.251397695 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.245035769 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.240463982 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.244226618 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.24402373 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.244318992 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.244878285 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.253786765 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.246753317 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.253658024 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.252357248 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.248803611 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.246615508 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.248388128 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.252011519 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.244829625 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.246739976 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.246605499 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.246271834 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.245882327 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.249330573 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.246346528 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.25239008 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.245841467 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.245693832 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.253411354 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.267163513 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.24571939 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.24763636 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.249542998 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.246292844 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.244484829 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.246147226 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.246145043 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.255130552 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.26620148 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.246099565 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.249506463 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.248839432 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.247415026 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.249708656 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.246951185 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.247358325 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.244133072 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.249662295 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.245335652 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.241820368 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.237968987 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.241561365 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.241421401 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.243524471 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.247318071 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.238428179 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.242317348 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.24209442 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.24083213 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.242638767 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.240997822 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.238617951 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.239804776 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.242316163 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.242259333 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.243720925 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.244352131 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.242459684 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.243846831 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.241587953 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.242590307 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.244591168 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.251676628 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.24884496 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.240571398 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.242025298 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.24184442 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.244883194 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.242805606 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.243559046 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.245997044 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.244269219 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.241897283 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.243567418 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.244218657 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.248050222 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.258871471 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.264415074 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.245308198 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.245917464 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.246370742 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.243227794 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.241117523 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.243960463 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.246254894 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.246965641 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.251279901 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.244902308 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.251961057 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.262710565 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.246510466 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.248643165 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.247143227 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.251712706 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.247535532 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.244564958 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.244545042 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.249490086 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.258527219 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.245381302 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.254978289 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.272622592 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.264814478 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.246612766 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.246958855 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.247069163 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.246123373 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.249243488 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.244947261 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.246796904 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.247014226 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.246416203 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.2470682 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.251462968 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.247107764 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.247682565 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.244610777 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.245582374 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.24802006 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.24340415 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.245859999 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.245610852 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.246565154 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.24731955 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.247047649 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.247648353 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.259299861 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.270678338 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.247081526 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.247407129 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.243965128 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.251454615 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.248517032 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.256690146 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.253472858 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.248895408 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.246898954 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.250862512 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.247253389 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.24719011 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.247509697 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.248662156 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.247641751 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.245203623 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.259529597 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.271951963 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.253740077 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.247318137 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.24803685 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.248274702 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.250305201 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.249608134 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.247775468 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.250285374 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.251162988 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.253132447 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.248595224 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.249229975 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.251650936 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.25515928 seconds)
  done (took 738.361598962 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.246036272 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.245887462 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.245393948 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.24550987 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.246233728 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.247811439 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.246596898 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.246895419 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.246470419 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.24747009 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.245922448 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.246723063 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.247673211 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.248152857 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.247623416 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.247631012 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.248045671 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.247403145 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.2489541 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.24711165 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.247834742 seconds)
  done (took 27.34517713 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.251005756 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.249899912 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.250283289 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.250289737 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.248747416 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.251130909 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.24855981 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.250244622 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.251101334 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.248589587 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.251637703 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.251715589 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.247039097 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.248794139 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.248665201 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.251571338 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.252256839 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.250513249 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.25249956 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.249718798 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.252168485 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.248647619 seconds)
  done (took 28.66409045 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.252232091 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.253488754 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.252429294 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.249349241 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.252656639 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.249868386 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.2518916 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.251510158 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.251314614 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.253195113 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.252734661 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.252457738 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.25899294 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.25709715 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.254929785 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.252675098 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.253057724 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.255588432 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.253778086 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.250219529 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.25777184 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.26816393 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.250386194 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.252885013 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.252254422 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.253864848 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.252635166 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.254072468 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.25494366 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.257771111 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.254239907 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.254040679 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.256714453 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.254793269 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.254320771 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.258305735 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.254101756 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.250623986 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.253530363 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.263581278 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.270602075 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.255326067 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.260846779 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.273379857 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.255061642 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.257244208 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.260342243 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.252909671 seconds)
  done (took 61.415770632 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.83154466 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.848721848 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.840088674 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.848156428 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.853370443 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.847612535 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.840907932 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.84208359 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.845405007 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.841095294 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.847663829 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.849973351 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.839798766 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.845750728 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.845485141 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.838742013 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.844894089 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.852384985 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.836375126 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.838515729 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.840455617 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.844342085 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.846531284 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.84087854 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.842360717 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.839384319 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.844308091 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.847133552 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.841308436 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.854367275 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.848618401 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.840695764 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.841614467 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.840008744 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.844256395 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.84158447 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.847983551 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.844574407 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.85027703 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.842244243 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.848893368 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.846804558 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.858188955 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.850266041 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.844027377 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.844121522 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.844734111 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.842684168 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.840126162 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.841846788 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.846628249 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.845602599 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.848938341 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.844502604 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.859124642 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.849494893 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.847799442 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.843166959 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.845808878 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.848063189 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.844832911 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.844920852 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.846762743 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.850753617 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.846478981 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.845552255 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.848457468 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.859339645 seconds)
  done (took 126.654588121 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.259904591 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.260133644 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.259926698 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.260725381 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.260846872 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.260170064 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.259670086 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.26030198 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.260904022 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.260077337 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.261857936 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.260505834 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.260203687 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.261822374 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.260769266 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.26085751 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.260130141 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.261287454 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.259238967 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.260081256 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.259583223 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.259474297 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.25988688 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.260249493 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.260355425 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.260868574 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.260282684 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.260466284 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.261323056 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.259602393 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.259936706 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.260731259 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.261258103 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.260514094 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.261828846 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.26159612 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.260475366 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.262137541 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.259947724 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.261456464 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.259971792 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.260349222 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.260765255 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.260989896 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.260411745 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.260718856 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.261182852 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.262230846 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.260981306 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.260945005 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.262178415 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.260461115 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.261497649 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.261924836 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.262226572 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.261494152 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.261853098 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.262166808 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.262958385 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.265157111 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.261978269 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.261951863 seconds)
  done (took 79.344740174 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.263151084 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.262354742 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.259524997 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.258492344 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.263215005 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.260588012 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.26243106 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.262944626 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.26288947 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.263060158 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.264322339 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.260614764 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.262600979 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.265104303 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.261264096 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.262167921 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.26112591 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.260600848 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.264194134 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.260646122 seconds)
  done (took 26.411751882 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.26114067 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.264013741 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.260156531 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.260699585 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.262765141 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.261297445 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.263825426 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.26742377 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.261715421 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.263087704 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.265473703 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.264870213 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.261220571 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.262950741 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.264789932 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.262279456 seconds)
  done (took 21.377584411 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.260738906 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.263362914 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.264242931 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.264611686 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.26194906 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.261907711 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.266386487 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.261946343 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.262753292 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.26580669 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.265259345 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.264691096 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.265866439 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.265210563 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.264342394 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.266453338 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.262816461 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.263107712 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.266292274 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.265967518 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.263209274 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.263629803 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.265709192 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.264470805 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.262780523 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.26475712 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.261295477 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.261563877 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.263135042 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.265968183 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.264823502 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.264304496 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.261239657 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.262486906 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.26706147 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.26345816 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.265460177 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.266005999 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.266774311 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.266569281 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.265762094 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.264668428 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.266215081 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.267194231 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.263031662 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.266881319 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.263871602 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.264760569 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.263141286 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.265229731 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.267275228 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.267976986 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.266283412 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.267394427 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.26719688 seconds)
  done (took 70.727457947 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.266682033 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.268245717 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.265057062 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.267441447 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.26689835 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.265792567 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.267984517 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.266318095 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.264873191 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.268125492 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.265162971 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.268605948 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.265476645 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.269699003 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.265554943 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.268207086 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.266542305 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.265030674 seconds)
  done (took 23.976155453 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.266311191 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.266636021 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.269584994 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.266534391 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.265985216 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.271346635 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.266695504 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.267182192 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.269512044 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.2672596 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.266351526 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.269640504 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.268819562 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.269028732 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.267461691 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.266096093 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.268829134 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.270334479 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.266990605 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.265932598 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.269137104 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.269476543 seconds)
  done (took 29.068699132 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.269579678 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.269487199 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.269515739 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.285694939 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.289520913 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.270991692 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.269707877 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.271053839 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.292655912 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.319795563 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.314235822 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.288375595 seconds)
  done (took 16.585842216 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268236243 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270857839 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.268122376 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270356607 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.270525147 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268153112 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268264074 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.267886947 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27201032 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269303035 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.268288141 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272575819 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272138104 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.266184729 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271713361 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27077449 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269355327 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269044069 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269194823 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272269231 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.26944712 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273994005 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271076823 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268913042 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269917707 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27123816 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271420156 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.270679382 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269459152 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274897523 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272988079 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270117062 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273868919 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272271332 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274489015 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273824183 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270841891 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273618361 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273952151 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271090619 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.274981765 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274374655 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27341928 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271588406 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274044402 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273224007 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271639754 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273604491 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272133635 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274112519 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275082342 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272531091 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275032935 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274415166 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275787979 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274246207 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272859993 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270506466 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275091921 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272314394 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270893972 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274681865 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272699465 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27249424 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274482664 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272066609 seconds)
  done (took 85.121500135 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272872084 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.271202923 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273056324 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2716907 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272020673 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272182018 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272228769 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272018516 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272338422 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272636362 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274706515 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272432029 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272335697 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272474504 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273606647 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272458775 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272920581 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273226803 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272741471 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276422638 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272573894 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27448301 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272710119 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273082089 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274286325 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276156441 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274166107 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274817193 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274156289 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273278481 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272849167 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27343989 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273462448 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.27541124 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276471189 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277091191 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274630264 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273487857 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274743026 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277238842 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274361714 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277886872 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275199858 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274648667 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275521432 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275609196 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274637188 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274852484 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275808199 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275979104 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275188143 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275214225 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27609843 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276646941 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275334583 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275173969 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27677721 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277604315 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276773807 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279580008 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275300546 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273670884 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278860418 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275804134 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277675796 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276303463 seconds)
  done (took 85.303555129 seconds)
done (took 1767.403642607 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.443649838 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.400322816 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.278691102 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.291316256 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.279740711 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.274264762 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.288719057 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.279290905 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.280522686 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.279175147 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.279419073 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.468467313 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.275072142 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.28050371 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.279659044 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.375750701 seconds)
  done (took 26.240906532 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.30668041 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.287029849 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.39252929 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.305481801 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.306668981 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.462448256 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.336850995 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.286353205 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.444667152 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.326482337 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.284460939 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.306786241 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.285241524 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.284264855 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.302507166 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.459731765 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.522195446 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.285617244 seconds)
  done (took 28.372477668 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.70787354 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.299480486 seconds)
  done (took 5.193938044 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.30208593 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.285865317 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.289212708 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.281152646 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.272822832 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.272919332 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.2803501 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.276836876 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.283156287 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.395748506 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.284541612 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.292671892 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.302575996 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.282310303 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.278856437 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.321844673 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.420504781 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.278469964 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.278849171 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.287448737 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.281864339 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.368274852 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.322484023 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.279895184 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.400192953 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.284463057 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.284754367 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.290529134 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.416121046 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.280552583 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.282712218 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.282243093 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.285262709 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.182963827 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.762605795 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.285931806 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.307317044 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.29238489 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.279326555 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.444554598 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.285454898 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.290956873 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.275057918 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.741238434 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.436896665 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.397345641 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.29110591 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.285729223 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.285704056 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.348234917 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.285615488 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.286673174 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.327182634 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.092725841 seconds)
  done (took 82.409743627 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.27964994 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.277450502 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.456891413 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.302783082 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.276588649 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.276933589 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.278227106 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.546514674 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.291239109 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.279348144 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.597605183 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.828169976 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.30194141 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.366891502 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.120622772 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.338380291 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.279496938 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.292805206 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.278283844 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.281714913 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.819329831 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.289561765 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.277792903 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.409563034 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.315413911 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.777888282 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.277837861 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.279578677 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.282146969 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.278548926 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.785571424 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.306204311 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.332561553 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.280269743 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.54294349 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.642203912 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.602643335 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.286963046 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.295107937 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.280545881 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.287770918 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.76391759 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.62043608 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.280926729 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.279826461 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.774785692 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.279052204 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.283594304 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.290282645 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.527760205 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.279527852 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.28035073 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.297998929 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.28135938 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.279163349 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.348642175 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.351850374 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.780323503 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.279707225 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.282779314 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.341765872 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.280324696 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.287249941 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.283393455 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.282489904 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.627161029 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.419670451 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.28885722 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.625755984 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.782103925 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.29544285 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.865430277 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.296754349 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.292087665 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.497714608 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.283781846 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.293746916 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.774039407 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.301282098 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.282583553 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.608129908 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.282371531 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.599642911 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.299875176 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.282242932 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.830469614 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.283820187 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.359333819 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.282616747 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.298059672 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.282472593 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.284870513 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.552297199 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.307371324 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.28126031 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.284310616 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.301070337 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.283126419 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.284589171 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.28787343 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.850375751 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.308466799 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.284734969 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.286027858 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.284579225 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.299912903 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.286431388 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.282647059 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.547467122 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.283618733 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.306528103 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.286718177 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.283859132 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.305372798 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.418995107 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.292149196 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.575870365 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.284338569 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.288798769 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.291744997 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.284045733 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.336885824 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.28368454 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.291162899 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.167326867 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.58708961 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.304251373 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.301111397 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.285632794 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.285097903 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.285105274 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.286638405 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.320165833 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.285483879 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.0352325 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.307430883 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.31825602 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.285427075 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.290291427 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.284585462 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.291513672 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.287109981 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.582720144 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.555848427 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.424466861 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.292535087 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.286761585 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.035784241 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.324837737 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.465845154 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.305090169 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.288416573 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.536130136 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.513040444 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.28916334 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.286191429 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.286756419 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.546609179 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.287661985 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.611820537 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.818490811 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.303291037 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.288203221 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.03914483 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.979802661 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.28842615 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.289352555 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.608107936 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.309180199 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.287742276 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.287864982 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.289288539 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.30464703 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.293866465 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.296499999 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.28934339 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.289755207 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.33330983 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.478756671 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.305698371 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.297692457 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.783972037 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.300899211 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.288672056 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.296187146 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.292216158 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.289995874 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.35023272 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.29114823 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.300390759 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.29058185 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.291972364 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.840325714 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.289005588 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.292257163 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.480266637 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.965628078 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.305716686 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.293240399 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.305846394 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.185595571 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.808271698 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.32042853 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.58641101 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.298744376 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.328524301 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.291719105 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.395512831 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.810014237 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.295376522 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.308159402 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.93513989 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.310090283 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.832138582 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.296856382 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.291760967 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.892027284 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.307100644 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.293571872 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.291596242 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.291234026 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.590625043 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.292131352 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.315782724 seconds)
  done (took 487.206167938 seconds)
done (took 630.605670727 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.29189877 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.291402101 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.282671124 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.297420966 seconds)
  done (took 10.365111764 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.300468702 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.298974365 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.299049719 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.298263494 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.300195594 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.298600601 seconds)
  done (took 8.997042802 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.291910668 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.294366621 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.297314457 seconds)
  done (took 8.084417716 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.495283987 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.319204668 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.602153815 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.315469555 seconds)
  done (took 8.935543276 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.301642654 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.298985268 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.300159431 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.299869075 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.302729334 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.302612294 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.302571438 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.301344697 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.302757946 seconds)
  done (took 12.915063051 seconds)
done (took 50.495709835 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.293822916 seconds)
    (2/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.456477298 seconds)
    (3/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.463598116 seconds)
    (4/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.968421014 seconds)
    (5/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.41101256 seconds)
    (6/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.348568479 seconds)
    (7/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.034837513 seconds)
    (8/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.32439252 seconds)
    (9/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.305594747 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.307530432 seconds)
    (11/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.411445096 seconds)
    (12/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.310164907 seconds)
    (13/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.398323195 seconds)
    (14/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.343362575 seconds)
    (15/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.943022102 seconds)
    (16/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.449328041 seconds)
    (17/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.343664023 seconds)
    (18/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.389974767 seconds)
    (19/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.297840365 seconds)
    (20/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.362347698 seconds)
    (21/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.001749708 seconds)
    (22/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.04182929 seconds)
    (23/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.313548145 seconds)
    (24/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.306498861 seconds)
    (25/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.375701751 seconds)
    (26/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.311134025 seconds)
    (27/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.296742747 seconds)
    (28/286) benchmarking ("sort", Int64, true)...
    done (took 1.961805743 seconds)
    (29/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.101386832 seconds)
    (30/286) benchmarking ("sort", Float32, false)...
    done (took 1.450590368 seconds)
    (31/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.512697797 seconds)
    (32/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.309183439 seconds)
    (33/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.954145017 seconds)
    (34/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.282250486 seconds)
    (35/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.368874586 seconds)
    (36/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.306587229 seconds)
    (37/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.377175399 seconds)
    (38/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.306442167 seconds)
    (39/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.391529682 seconds)
    (40/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.44774812 seconds)
    (41/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.366345341 seconds)
    (42/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.355396703 seconds)
    (43/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.38849321 seconds)
    (44/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.33840351 seconds)
    (45/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.316691096 seconds)
    (46/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.316525557 seconds)
    (47/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.322527088 seconds)
    (48/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.037999793 seconds)
    (49/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.397623518 seconds)
    (50/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.312386651 seconds)
    (51/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.345523286 seconds)
    (52/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.470854104 seconds)
    (53/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.325463162 seconds)
    (54/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.439673931 seconds)
    (55/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.05135212 seconds)
    (56/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.637972016 seconds)
    (57/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.602861953 seconds)
    (58/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.162731585 seconds)
    (59/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.636752984 seconds)
    (60/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.408858858 seconds)
    (61/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.298345063 seconds)
    (62/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.379664976 seconds)
    (63/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.141745367 seconds)
    (64/286) benchmarking ("sort", Int8, false)...
    done (took 1.458323738 seconds)
    (65/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.402325625 seconds)
    (66/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.301395353 seconds)
    (67/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.349452019 seconds)
    (68/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.308561645 seconds)
    (69/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.350884996 seconds)
    (70/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.330092294 seconds)
    (71/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.468369962 seconds)
    (72/286) benchmarking ("sort", Int64, false)...
    done (took 1.489361263 seconds)
    (73/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.324182144 seconds)
    (74/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.316046494 seconds)
    (75/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.314553642 seconds)
    (76/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.353881166 seconds)
    (77/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.006602283 seconds)
    (78/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.29000905 seconds)
    (79/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.05577187 seconds)
    (80/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.330276419 seconds)
    (81/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.054477504 seconds)
    (82/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.420991236 seconds)
    (83/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.321856725 seconds)
    (84/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.352299718 seconds)
    (85/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.313467815 seconds)
    (86/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.442983012 seconds)
    (87/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.423296473 seconds)
    (88/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.29992185 seconds)
    (89/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.304928024 seconds)
    (90/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.512414702 seconds)
    (91/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.182991811 seconds)
    (92/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.33631839 seconds)
    (93/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.319251762 seconds)
    (94/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.421971958 seconds)
    (95/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.440270494 seconds)
    (96/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.403470539 seconds)
    (97/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.419073883 seconds)
    (98/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.346124403 seconds)
    (99/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.327214391 seconds)
    (100/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.307671772 seconds)
    (101/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.516310111 seconds)
    (102/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.1258871 seconds)
    (103/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.383492932 seconds)
    (104/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.319499069 seconds)
    (105/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.303246719 seconds)
    (106/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.441362435 seconds)
    (107/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.384612433 seconds)
    (108/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.385150606 seconds)
    (109/286) benchmarking ("map", identity, Int64, true)...
    done (took 1.439345456 seconds)
    (110/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.317655792 seconds)
    (111/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.005788196 seconds)
    (112/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.291954298 seconds)
    (113/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.439383551 seconds)
    (114/286) benchmarking ("sort", Bool, false)...
    done (took 1.344458257 seconds)
    (115/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.309221202 seconds)
    (116/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.955958387 seconds)
    (117/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.353786857 seconds)
    (118/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.341172537 seconds)
    (119/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.328508553 seconds)
    (120/286) benchmarking ("map", identity, BigInt, false)...
    done (took 1.381107115 seconds)
    (121/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.42712359 seconds)
    (122/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.387068916 seconds)
    (123/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.328554556 seconds)
    (124/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.398128299 seconds)
    (125/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.31896775 seconds)
    (126/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.302767013 seconds)
    (127/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.406392137 seconds)
    (128/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.288470296 seconds)
    (129/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.324421223 seconds)
    (130/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.302409346 seconds)
    (131/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.319936199 seconds)
    (132/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.313017583 seconds)
    (133/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.380132434 seconds)
    (134/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.047217224 seconds)
    (135/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.369709589 seconds)
    (136/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.00198968 seconds)
    (137/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.287096728 seconds)
    (138/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.410959714 seconds)
    (139/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.315659615 seconds)
    (140/286) benchmarking ("sort", Int8, true)...
    done (took 1.804792405 seconds)
    (141/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.314086974 seconds)
    (142/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.316878812 seconds)
    (143/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.315587672 seconds)
    (144/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.358641791 seconds)
    (145/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.315365757 seconds)
    (146/286) benchmarking ("sort", Float64, true)...
    done (took 2.042092477 seconds)
    (147/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.316541383 seconds)
    (148/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.394763479 seconds)
    (149/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.313665357 seconds)
    (150/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.32046989 seconds)
    (151/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.314655968 seconds)
    (152/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.32304577 seconds)
    (153/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.288899313 seconds)
    (154/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.449186575 seconds)
    (155/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.342288905 seconds)
    (156/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.349457833 seconds)
    (157/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.505762533 seconds)
    (158/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.369941284 seconds)
    (159/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.396701281 seconds)
    (160/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.171457803 seconds)
    (161/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.312314291 seconds)
    (162/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.344112187 seconds)
    (163/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.336088687 seconds)
    (164/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.463515891 seconds)
    (165/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.501422285 seconds)
    (166/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.32408115 seconds)
    (167/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.390418058 seconds)
    (168/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.290361359 seconds)
    (169/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.33939258 seconds)
    (170/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.293314051 seconds)
    (171/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.437746492 seconds)
    (172/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.370414069 seconds)
    (173/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.29313584 seconds)
    (174/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.323459912 seconds)
    (175/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.321435547 seconds)
    (176/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.328830153 seconds)
    (177/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.486695643 seconds)
    (178/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.314818881 seconds)
    (179/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.432879835 seconds)
    (180/286) benchmarking ("map", identity, Float64, true)...
    done (took 1.461015515 seconds)
    (181/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.396044468 seconds)
    (182/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.400448621 seconds)
    (183/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.320235647 seconds)
    (184/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.315803897 seconds)
    (185/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.30530161 seconds)
    (186/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.353533501 seconds)
    (187/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.373776656 seconds)
    (188/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.348742627 seconds)
    (189/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.329468772 seconds)
    (190/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.42152503 seconds)
    (191/286) benchmarking ("sort", Bool, true)...
    done (took 1.649585016 seconds)
    (192/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.317467668 seconds)
    (193/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.329244013 seconds)
    (194/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.304641862 seconds)
    (195/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.35093468 seconds)
    (196/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.358143366 seconds)
    (197/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.384411782 seconds)
    (198/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.504058958 seconds)
    (199/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.402782627 seconds)
    (200/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.28820213 seconds)
    (201/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.360306745 seconds)
    (202/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.353550089 seconds)
    (203/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.393365897 seconds)
    (204/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.326537716 seconds)
    (205/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.432855481 seconds)
    (206/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.968924432 seconds)
    (207/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.366197903 seconds)
    (208/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.433177646 seconds)
    (209/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.326689479 seconds)
    (210/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.313071399 seconds)
    (211/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.311339086 seconds)
    (212/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.3701162 seconds)
    (213/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.280057202 seconds)
    (214/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.412227093 seconds)
    (215/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.305043463 seconds)
    (216/286) benchmarking ("sort", BigInt, false)...
    done (took 2.291560193 seconds)
    (217/286) benchmarking ("sort", BigInt, true)...
    done (took 2.313625672 seconds)
    (218/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.941616305 seconds)
    (219/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.334108253 seconds)
    (220/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.301580661 seconds)
    (221/286) benchmarking ("sort", Float64, false)...
    done (took 1.481745608 seconds)
    (222/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.952810072 seconds)
    (223/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.316564437 seconds)
    (224/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.2910011 seconds)
    (225/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.523261595 seconds)
    (226/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.384452075 seconds)
    (227/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.466955203 seconds)
    (228/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.322869429 seconds)
    (229/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.312909731 seconds)
    (230/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.280400612 seconds)
    (231/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.513974672 seconds)
    (232/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.384510732 seconds)
    (233/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.47422523 seconds)
    (234/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.53338905 seconds)
    (235/286) benchmarking ("sort", Float32, true)...
    done (took 2.023500417 seconds)
    (236/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.316002765 seconds)
    (237/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.299404284 seconds)
    (238/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.307550725 seconds)
    (239/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.496789875 seconds)
    (240/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.310046939 seconds)
    (241/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.308650494 seconds)
    (242/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.491063929 seconds)
    (243/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.331816786 seconds)
    (244/286) benchmarking ("map", abs, Int64, true)...
    done (took 1.436300398 seconds)
    (245/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.326586952 seconds)
    (246/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.644599965 seconds)
    (247/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.315456222 seconds)
    (248/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.951474683 seconds)
    (249/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.481364434 seconds)
    (250/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.334345124 seconds)
    (251/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.308645083 seconds)
    (252/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.380483845 seconds)
    (253/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.30659511 seconds)
    (254/286) benchmarking ("map", identity, BigInt, true)...
    done (took 1.441341173 seconds)
    (255/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.37187793 seconds)
    (256/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.438874744 seconds)
    (257/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.302838699 seconds)
    (258/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.320237782 seconds)
    (259/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.306015873 seconds)
    (260/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.443784583 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.330484555 seconds)
    (262/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.499759854 seconds)
    (263/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.315899648 seconds)
    (264/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.375210613 seconds)
    (265/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.427752964 seconds)
    (266/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.045238951 seconds)
    (267/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.331387272 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.318358087 seconds)
    (269/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.301638154 seconds)
    (270/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.300639094 seconds)
    (271/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.310060175 seconds)
    (272/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.475837963 seconds)
    (273/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.385826968 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.304083221 seconds)
    (275/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.309415977 seconds)
    (276/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.315606713 seconds)
    (277/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.401948429 seconds)
    (278/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.320226885 seconds)
    (279/286) benchmarking ("map", abs, Float64, true)...
    done (took 1.437225249 seconds)
    (280/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.337178397 seconds)
    (281/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.342650032 seconds)
    (282/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.345568272 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.303901891 seconds)
    (284/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.394725306 seconds)
    (285/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.283568737 seconds)
    (286/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.313657273 seconds)
  done (took 461.906567065 seconds)
done (took 463.10694982 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.34045776 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.352102602 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.306919132 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.338066133 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.41849685 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.4842519 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.318362517 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.347156457 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.355206304 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.356025081 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.314272471 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.483409194 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.309719184 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.30866647 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.307783187 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.349435102 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.296807875 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.324265087 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.326367533 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.34398525 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.326088064 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.314927545 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.356927457 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.4824398 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.311071849 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.311692397 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.310558268 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.328422626 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.420456123 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.311784573 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.312733715 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.320049051 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.298192961 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.32933343 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.304371898 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.329196412 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.319136542 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.319010419 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.343935512 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.421220708 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.302334283 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.316079632 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.312041264 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.312402283 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.31035395 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.35041965 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.311236911 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.367825789 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.351949109 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.352917413 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.31121646 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.322524242 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.32030235 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.311899886 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.322216598 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.310573824 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.367250529 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.355199899 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.324992077 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.351833084 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.2993347 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.310553416 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.344907595 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.326336984 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.311794102 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.292081985 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.30063408 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.341776794 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.297362812 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.307196676 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.291224646 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.305078512 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.299348054 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.312209246 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.33153543 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.287632852 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.294595674 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.296132125 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.304499375 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.295615924 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.343922984 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.337820558 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.34560189 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.298918724 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.338313528 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.472961899 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.307199882 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.296373535 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.332227689 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.316506318 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.305126954 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.308523387 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.331429634 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.297635167 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.344996452 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.354130467 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.30666061 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.306446005 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.347893886 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.308623658 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.294170973 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.341917441 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.294278481 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.294416438 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.2980217 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.421149962 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.293005015 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.297248741 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.330669113 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.344501988 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.35680964 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.296726249 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.3072847 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.342411828 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.3090768 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.358091734 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.299350234 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.295986623 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.288587868 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.42151234 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.301650774 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.304371547 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.345952218 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.35961278 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.298270239 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.289216097 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.299458853 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.34054038 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.421135642 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.308999874 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.411372081 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.297258056 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.302233134 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.332009581 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.34440499 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.330905167 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.36047191 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.343985663 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.316958727 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.300651082 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.31133849 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.310167205 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.300768494 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.358035738 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.29754564 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.333258639 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.341143593 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.342115812 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.333299086 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.419397215 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.305454101 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.301799358 seconds)
done (took 219.352524286 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.359770903 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.295903398 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.402159656 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.298127184 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.397836173 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.40154164 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.296325696 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.296409939 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.296042202 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.675307123 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.295908211 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.295973528 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.296126439 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.29530248 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.381657275 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.300257184 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.297122316 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.64629546 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.299030011 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.369155034 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.299477415 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.295932573 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.299466947 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.68621689 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.296930642 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.293153276 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.369014806 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.298207324 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.643884834 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.292377037 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.295679071 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.651026708 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.388515695 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.316561909 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.310057879 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.306666778 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.398986626 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.320365023 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.380734822 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.380371103 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.403193959 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.337642281 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.295499346 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.298365581 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.303619404 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.300606267 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.297884353 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.32705119 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.298218645 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.300375375 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.639753975 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.311071521 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.308747531 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.299150477 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.299186501 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.321053991 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.298806984 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.301473855 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.389963166 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.302452016 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.364047137 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.680537786 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.688200139 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.30028335 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.297164185 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.299513295 seconds)
  done (took 102.184388774 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.367389712 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.375685001 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.412672477 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.318280887 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.353524291 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.418221092 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.320183659 seconds)
  done (took 10.767892903 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.308845497 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.302850195 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.351461999 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.351039162 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.302873146 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.518221171 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.305372207 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.315193525 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.303402852 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.378402467 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.304329553 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.303818622 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.310559268 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.299637935 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.349895175 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.314593777 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.417878139 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.30388797 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.30383815 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.457339275 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.298598358 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.309871067 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.380437891 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.315212573 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.306028648 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.309535152 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.26349569 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.305599062 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.302714557 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.304127149 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.301698209 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.412577792 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.305594738 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.300834989 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.303087212 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.464046782 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.305352581 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.301794738 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.306413946 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.305566855 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.30449737 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.305161653 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.306051552 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.302129053 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.305177859 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.331065202 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.304746997 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.30522773 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.306140585 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.306784805 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.380753942 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.307083487 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.30344323 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.302270587 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.383980998 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.312632287 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.305836658 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.303991894 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.307328731 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.303218715 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.46010237 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.355595446 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.305426694 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.35373622 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.307795222 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.309178826 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.307254657 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.306656574 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.398894096 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.307910104 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.355458215 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.304320092 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.5324577 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.332078811 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.31014778 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.310324446 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.311241434 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.307464616 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.30487559 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.315234385 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.305613763 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.309560682 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.314453847 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.30522037 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.305437479 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.495341007 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.46586111 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.307038405 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.322189356 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.315897786 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.307575602 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.384916369 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.310380492 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.306198216 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.362396305 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.424485437 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.385134241 seconds)
  done (took 135.424698234 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.314482196 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.31716741 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.314099188 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.331858635 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.311429981 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.309582778 seconds)
  done (took 9.108554467 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.31300483 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.310171532 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.309877216 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.308640043 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.30919584 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.309859869 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.310064567 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.312720634 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.312520179 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.311375421 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.31157127 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.31190078 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.312559058 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.311647859 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.31120155 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.311430712 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.311001773 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.308253824 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.311536102 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.31240843 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.30953302 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.312287965 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.312345138 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.314240353 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.316796254 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.313781458 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.321058829 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.312440641 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.312153981 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.320632071 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.332016315 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.314507923 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.316578704 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.319468283 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.317666639 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.312280204 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.315910928 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.312466185 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.30915551 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.311840088 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.314437513 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.314141464 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.313150104 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.314623761 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.315742326 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.317341262 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.317871318 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.320651096 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.313125717 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.31503765 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.315569334 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.313591995 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.314370918 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.315558232 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.316737961 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.332973124 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.319081489 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.314194136 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.314901416 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.315121413 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.313394046 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.314379503 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.317373212 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.317050962 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.311948951 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.315928783 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.315456361 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.316903815 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.314598739 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.315342188 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.317066923 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.312977729 seconds)
  done (took 96.85155299 seconds)
done (took 355.535134666 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.758297915 seconds)
  done (took 3.97332436 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.341452151 seconds)
  done (took 3.560112518 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.075226807 seconds)
  done (took 22.294083775 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.365519941 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.327275548 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.310085444 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.311260779 seconds)
  done (took 10.528976696 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.56739795 seconds)
  done (took 3.782949983 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.320169451 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.315792138 seconds)
  done (took 5.852469128 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.553765274 seconds)
  done (took 3.77125606 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.654185531 seconds)
  done (took 3.870312069 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.30982977 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.323654934 seconds)
  done (took 5.857484245 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.306982375 seconds)
  done (took 3.522638333 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.80887789 seconds)
  done (took 17.027863756 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.312648574 seconds)
  done (took 3.531946192 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.338105907 seconds)
  done (took 3.554536236 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.829187334 seconds)
  done (took 6.045694132 seconds)
done (took 98.390283968 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.309442555 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.310360101 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.310014865 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.311938563 seconds)
  done (took 10.458395377 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.370258749 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.369193631 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.369052814 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.36948899 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.368209174 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.369826908 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.343370997 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.343346864 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.368325496 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.368393806 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.370088797 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.368828106 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.369446213 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.343825302 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.368840313 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.37484927 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.369082294 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.370466561 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.349472703 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.370030281 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.318532122 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.369158631 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.370234287 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.318298497 seconds)
  done (took 33.888511286 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.834427607 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.388204831 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.472213982 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.370129963 seconds)
  done (took 7.281406496 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.397562274 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.39730401 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.410229661 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.448147872 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.461162166 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.408153017 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.343008399 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.341415713 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.327811666 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.396467966 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.449159032 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.389736629 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.475742211 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.319913205 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.526720212 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.32025585 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.321244044 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.400329369 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.44863937 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.462519436 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.321385839 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.398654092 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.398831592 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.389972691 seconds)
  done (took 34.772993808 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.327113853 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.332097255 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.320330171 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.334914293 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.320025717 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.319009103 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.320833151 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.955215022 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.324490612 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.320641355 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.32032355 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.333673455 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.954499983 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.325079318 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.326691881 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.321290545 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.948574096 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.952131665 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.326193306 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.326865962 seconds)
  done (took 30.231400825 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.315923603 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.313361506 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.667471825 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.570740478 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.313573375 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.320394149 seconds)
  done (took 13.722496531 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.390905186 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.548720919 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.322829955 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.670867817 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.763053202 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.327283719 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.3229523 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.565578857 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.880124674 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.863995081 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.38296073 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.401123221 seconds)
  done (took 19.662690935 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.320125103 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.32227214 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.324696583 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.339985164 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.378801341 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.347168386 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.330654588 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.318332749 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.381953505 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.400580455 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.346457224 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.377452676 seconds)
  done (took 21.412869752 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.413275262 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.317749988 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.317503393 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350562315 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321020935 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.162084978 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.365891967 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.021069472 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.339728377 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.591772977 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328416171 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415229454 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.572518301 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317015506 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.324795485 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.305344142 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.554340754 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.808048899 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321565128 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.317862079 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376199587 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.319350282 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.333220014 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.532499651 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.325248978 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.318191515 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.677596658 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.318201835 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.601001488 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.337596428 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.329357552 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.318307927 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.593255282 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968539441 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441361785 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.526866696 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364039664 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.325031325 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.329122883 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.334187252 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.326422918 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.338939526 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.331688295 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321146237 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.320314694 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.32107146 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.051723991 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.344424582 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.318274177 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.319725322 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.578705604 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.423388653 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.326696152 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.322156361 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413111032 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325783178 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.325266155 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.326198464 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911583048 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321091268 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34160226 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.326403445 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.355052532 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326275028 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956128466 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.331654288 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.325413538 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.324888882 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321398498 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.32191803 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.362484726 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321030303 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.346646805 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324314886 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.032467026 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.339817 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333219523 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.875681372 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328158425 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.328903832 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.554602499 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321195394 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323059942 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.321725689 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.322737256 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.028431099 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33127008 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.307428065 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.347002005 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.029677135 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.552308423 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349582773 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.354503632 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.547190079 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.308992772 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323887183 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.325695163 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331247055 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346202322 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.026244341 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343830566 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.329301565 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.583550725 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.536175215 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323228151 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.331621134 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.80866703 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348675273 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.362960317 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.336570865 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.5394619 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.909334187 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.347161253 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325495846 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349811821 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.32493162 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.06538637 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326941504 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.432981131 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.335334089 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.603409879 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.115244714 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325269487 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.392767002 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.329226777 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.326838846 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.325416156 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332566512 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.326375682 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.527590932 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.349510836 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.343016728 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.325368035 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325942228 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.323966934 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331833518 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.350368625 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.551454496 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326963196 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.608924109 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325923448 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326642798 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327159842 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.550926576 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.33987535 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.671645433 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.589540643 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327556056 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.333623853 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.362970807 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34629655 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431462847 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.350176238 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.328016064 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.589700695 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.333409409 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.332992867 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.328269576 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.334842565 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333533615 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.334555549 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381538766 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.913979099 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312311571 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.336473371 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.231387954 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.343438799 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.396642408 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.335044726 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.539640496 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.334546337 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333434335 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.339338297 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.326388993 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.561947876 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.339816238 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.328860328 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.411651536 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.795586805 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.926936647 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.349490158 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.329056395 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.327548143 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.328158669 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33022043 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331263345 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.330301378 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.539297155 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.351282711 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.358763898 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.920522891 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338463334 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.330628573 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.343663138 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.343511418 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.335987121 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330957535 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.334240983 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336094643 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.337701531 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.348187478 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474745904 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.344941087 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.331935657 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.848904281 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.337185911 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.331533922 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.33070971 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365809285 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.330434739 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.136111987 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.594381677 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.33177408 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.596850438 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.338931264 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.354038243 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.330999037 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339089272 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342511308 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.342717304 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368490577 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.345528635 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.331957811 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340298334 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.912205041 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.069247701 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876032053 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.340997283 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.361896814 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.339867124 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.041308541 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351995116 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.332959282 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.568703779 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.063607715 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350907886 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.805834046 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.349791871 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.112539344 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.599049271 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.572857574 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.334887914 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.36273941 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.601457603 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.552442655 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369873178 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.332140338 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341596166 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.321244955 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.885472442 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355502961 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.416448402 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.046609691 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363835259 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.340335329 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.415750815 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.349668325 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.735857671 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.358893073 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335433151 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.33585623 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.340740119 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.13764379 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.343799367 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.335345886 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954513791 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.348805166 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.810868633 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355448374 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.547847388 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.353986753 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.341728289 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.33458329 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.335402013 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.591706191 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.595828438 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343431731 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.348881293 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880995762 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.213384755 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.34285433 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337106322 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0837999 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339226788 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.628359596 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.343246293 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.346436034 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344038137 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.33705863 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33672646 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.33459065 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.342037455 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.314756172 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.832773946 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.390666115 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35509462 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367275486 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345065659 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.594669999 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.351816242 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.924127467 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.57433035 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.347565626 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367619415 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.342564421 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339542198 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.348103715 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.340524469 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.338883438 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41107923 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.568503111 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.357607516 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.326167114 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.403034329 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.557443854 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.340498193 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.33822256 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.586067334 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.341973783 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.345283667 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.08296955 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378423758 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.338752947 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34636276 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.378552057 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.3451704 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435544548 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.552955578 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.357871812 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.35243527 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.741115143 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365305113 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.347511273 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.353765919 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.436929987 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343198852 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.35246943 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.118119852 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.928944719 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.075799948 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.937219131 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.608243919 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.349781642 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35013119 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341356032 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.5063223 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.343798251 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.615152511 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343584893 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.376273883 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368908292 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342217907 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349037956 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.559188996 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.617115791 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.342590254 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343647704 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348921108 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.343652919 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.354589088 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.552733364 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837164142 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899047815 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345255019 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.344070787 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.07423662 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.637149712 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344702445 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.343668733 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343586671 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.351991923 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.369854497 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.349568339 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348685764 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492081511 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.603322871 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009043679 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.376830086 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.371962045 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.116202726 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344683237 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.604399037 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.341708287 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.558246002 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.940665695 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.054959493 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.615578406 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.414827211 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.558783873 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.349363735 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507011779 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.353592777 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.344402603 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346336089 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346921719 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.342363423 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.355065882 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.940650359 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.618636327 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.349376527 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.353426426 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377172089 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.355063833 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.570392359 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.06712476 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.570790336 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.35625142 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.355872821 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.347009881 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.939186719 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.616174468 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353640597 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.350398642 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.586036074 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.352342014 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.369413057 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.034817384 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.343100307 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.900499891 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.31916617 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368742975 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352996947 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.064231813 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.946788405 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.352629656 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867457193 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.349310389 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348584235 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.646397613 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.353524453 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.360142616 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627747721 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.350062775 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.360666667 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.565406141 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.941423495 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.124207167 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.355965983 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362917064 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.353189216 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348573122 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428898741 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352283134 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.349560102 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.763443021 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.372226551 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349330114 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.359539218 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.3451218 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348605327 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.351334067 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349327689 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.354711426 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.350679489 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.337300894 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.371493939 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.353871889 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.936852701 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378485882 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.018014111 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.675333569 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.60612361 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.34916588 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.341138146 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.35429027 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349943576 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349852802 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352572504 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.400124196 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.913370706 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.353578366 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.366213893 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.355196998 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.351939695 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.563460569 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.353775628 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.571652037 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357399258 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.372609644 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.337477402 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352310354 seconds)
  done (took 962.659095902 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.378280506 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.354805648 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.356550324 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.372277973 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.385697416 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.363443116 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.364880126 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.37856259 seconds)
  done (took 20.210773435 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.363559299 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.367559702 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.366923108 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.367197011 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.353624053 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.827727424 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.377419339 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.36431684 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.377818265 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.353141181 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.364902905 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.339644737 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.379886999 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.36049998 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.353334897 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.365859141 seconds)
  done (took 32.53875718 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.290214004 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.488496939 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.216750913 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.389996981 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.35189457 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.356711215 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.568765522 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.376697139 seconds)
  done (took 26.296334791 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.365185096 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.363049522 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.363009737 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.36594112 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.364358931 seconds)
  done (took 8.077729715 seconds)
done (took 1222.433796994 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.358714983 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.360290734 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.358504128 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.359962055 seconds)
  done (took 6.693658976 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.339121115 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.341733269 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.34154411 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.35749757 seconds)
  done (took 9.635573814 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.057850356 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.994699066 seconds)
  done (took 5.310545321 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.851090882 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.842871453 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.838355377 seconds)
  done (took 6.78776497 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.64020777 seconds)
  done (took 2.898948166 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.250846128 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.217884888 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.033131248 seconds)
  done (took 7.761895423 seconds)
done (took 40.345149667 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.366264007 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.697121975 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.515408669 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.366686532 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.520648565 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.51768057 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.094649239 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.356887897 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.360923238 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.358527114 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.355893305 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.518347708 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.079396414 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.694508655 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.082975338 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.603612487 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.516715876 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.359499242 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.359028672 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.374312648 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.111829052 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.369490422 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.356347822 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.356524939 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.518646147 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.503096711 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.356492737 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.624501234 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.358666544 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.359166005 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.504063228 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.35666985 seconds)
  done (took 82.135144915 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.370007924 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.362324066 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.370568374 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.369953766 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.357334393 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.369209608 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.358296192 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.360430933 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.371307921 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.367226036 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.375280711 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.357614495 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.360598032 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.359641563 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.374203858 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.357238355 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.37740824 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.363153577 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.375800595 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.360693359 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.363102299 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.361227376 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.379736506 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.362362095 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.379129518 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.362006581 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.379295678 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.361902784 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.360217272 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.361799022 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.359301756 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.390707651 seconds)
  done (took 77.000559452 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.367233064 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.36124536 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.363253149 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.3614508 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.360251228 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.363043124 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.363399324 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.371785545 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.367396265 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.36517445 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.36103388 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.358114732 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.362978757 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.360104034 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.362208857 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.373735283 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.360776686 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.369785456 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.366355561 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.362597142 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.377050065 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.361455382 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.372625679 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.363527408 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.361506138 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.362444292 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.362738636 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.375475507 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.363280629 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.383449763 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.363765356 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.362295012 seconds)
  done (took 76.955101048 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.641622114 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.3666198 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.368479605 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.362850693 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.370894246 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.370126407 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.362579953 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.641680464 seconds)
  done (took 14.748648348 seconds)
done (took 252.098224781 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.373746788 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.375713239 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.573658692 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.392094706 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.360711101 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.392882577 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.389555547 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.585786914 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.340703923 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.610378689 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.380969587 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.390054398 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.36359037 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.386655873 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.643183498 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.51601767 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.29519302 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.369230814 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.704003312 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.389314365 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.639677291 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.366779768 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.642836159 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.323767923 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.386074366 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.381193845 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.361548053 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.275268982 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.406241844 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.702631203 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.370699493 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.357340654 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.476442152 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.468230662 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.587594782 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.528300249 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.364954165 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.456056814 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.587693289 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.36521238 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.387614678 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.136952307 seconds)
  done (took 82.672603288 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.369004491 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.489722539 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.37408261 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.371149345 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.372687582 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.488693428 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.469197961 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.374178 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.373005409 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.372428233 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.373673951 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.371282679 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.373578442 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.373306527 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.373870541 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.372462925 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.374195797 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.374435998 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.372943197 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.419823699 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.495128949 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.394485382 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.366709749 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.371141621 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.474084023 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.509821117 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.37265369 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.365550028 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.415989579 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.373669101 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.37472283 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.418036222 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.374402329 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.375653544 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.489956595 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.47214428 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.396406705 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.37495937 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.490591656 seconds)
  done (took 56.007576752 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.376837939 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.620249264 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.802153669 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.371132238 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.37591184 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.380200837 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.453696719 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.375419123 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.37975913 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.381131859 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.53059737 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.378323254 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.40936821 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.829578107 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.380735623 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.377210261 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.376073898 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.376030147 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.633070723 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.385167663 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.472814902 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.378460774 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.454490028 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.385405744 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.397908649 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.375645397 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.384675423 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.96610149 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.382665161 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.528976371 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.173938938 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.457696026 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.926595773 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.84223332 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.176466571 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.385589638 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.376383554 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.53359194 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.379962375 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.377168081 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.455785153 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.379489039 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.812430921 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.032338705 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.399453202 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.37903157 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.983758795 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.535755345 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.622189348 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.387597775 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.838205696 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.382640098 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.380242092 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.380487658 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.626169261 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.38342394 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.381144119 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.985721694 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.404293333 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.456322357 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.380340067 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.379555097 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.631587768 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.379859106 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.632599737 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.383185393 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.388490479 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.399433752 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.816250895 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.382545307 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.055569319 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.400136415 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.381724139 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.533096325 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.630739832 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.019041799 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.400728115 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.638706659 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.939516403 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.47376015 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.385393017 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.957230087 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.461477537 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.385564763 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.383751909 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.382349443 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.382458825 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.430919648 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.457884757 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.984876633 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.050310124 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.004892916 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.477942223 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.390445057 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.383096016 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.989421511 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.400959812 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.383231065 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.815032755 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.056160932 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.399728426 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.391166386 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.06627451 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.404735647 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.461246009 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.389122312 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.824256028 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.384709244 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.429781318 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.383466163 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.390973445 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.408725782 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.46244306 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.391819134 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.384938864 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.04137158 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.559142811 seconds)
  done (took 182.213820388 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.379765343 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.395186555 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.377901319 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.395249438 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.377188619 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.38564061 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.37603878 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.378639795 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.384343753 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.376339112 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.377055643 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.378563883 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.380801293 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.387961221 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.391905595 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.384874673 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.379888792 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.380488208 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.382769019 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.38046303 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.38120813 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.37961678 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.379438764 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.380508136 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.382026233 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.380456129 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.38243777 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.383426793 seconds)
  done (took 63.978094471 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.387840069 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.951507279 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.391091364 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.517596461 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.410034734 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.383388051 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.517394026 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.443638374 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.388800567 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.383396336 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.384367426 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.68718369 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.393924802 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.89655926 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.578832721 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.514209674 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.89633401 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.403781623 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.385588977 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.384268497 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.519935898 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.398751147 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.686761309 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.944913445 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.388170039 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.952556285 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.380857408 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.387315082 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.389379824 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.952659927 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.387943608 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.687686753 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.466120806 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.445323367 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.951686782 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.90405375 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.923709818 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.539155559 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.388104781 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.385448704 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.387812867 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.378953712 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.950508736 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.389621035 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.391143653 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.945905528 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.409446644 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.391309681 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.396228173 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.387061706 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.45047043 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.448955274 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.691966866 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.023363749 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.466353432 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.40354755 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.517978772 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.724880494 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.393478418 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.900576361 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.395155141 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.954028286 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.407846076 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.380241729 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.390954235 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.397151309 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.537461483 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.521709331 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.902393693 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.408402144 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.902257653 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.553630491 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.386936785 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.390634701 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.394530003 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.956187908 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.903789472 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.554450321 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.524299139 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.58657393 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.383889308 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.391235678 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.381275215 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.46747305 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.3927932 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.956886158 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.920610008 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.408517104 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.393904853 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.392056625 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.391711247 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.568310801 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.973262407 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.46831992 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.899646 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.710916112 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.695768228 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.393534399 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.450407828 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.408569869 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.758500117 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.393243465 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.448638277 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.798267375 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.697872773 seconds)
  done (took 165.306890814 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.630211202 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.407469191 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.504824915 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.554255638 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.998028323 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.98904121 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.392896143 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.515610362 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.503115812 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.652807946 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.395571273 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.482048584 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.606353905 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.467303327 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.104020743 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.473156162 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.489346513 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.540204336 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.53468966 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.390407102 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.019762519 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.685475532 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.581655778 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.421610904 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.498874806 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.178822056 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.970900985 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.941904122 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.564251138 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.388063099 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.933719924 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.387990348 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.330564692 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.061902535 seconds)
  done (took 64.883144762 seconds)
done (took 616.325472801 seconds)
SAVING RESULT...
DONE!
