cset: moving following pidspec: 12229
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.697473703 seconds)
loading group "shootout"... done (took 1.24837217 seconds)
loading group "string"... done (took 0.426369356 seconds)
loading group "linalg"... done (took 7.911581253 seconds)
loading group "parallel"... done (took 0.158625687 seconds)
loading group "find"... done (took 1.411899576 seconds)
loading group "tuple"... done (took 1.975881603 seconds)
loading group "union"... done (took 12.763714749 seconds)
loading group "dates"... done (took 1.355103809 seconds)
loading group "micro"... done (took 0.202772157 seconds)
loading group "simd"... done (took 4.421908047 seconds)
loading group "io"... done (took 1.030680111 seconds)
loading group "random"... done (took 8.82402045 seconds)
loading group "problem"... done (took 1.595866733 seconds)
loading group "array"... done (took 19.647601085 seconds)
loading group "misc"... done (took 1.583337847 seconds)
loading group "scalar"... done (took 39.9567272 seconds)
loading group "sort"... done (took 3.068810459 seconds)
loading group "sparse"... done (took 11.943001579 seconds)
loading group "collection"... done (took 17.150029616 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.503720463 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.124477168 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.127976231 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.11802662 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.146691354 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.120877061 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.129139442 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085391029 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.917504891 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.141921955 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.114139154 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.435972571 seconds)
done (took 5.322440454 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.167025434 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08654143 seconds)
    (2/2) benchmarking "String"...
    done (took 0.077590931 seconds)
  done (took 1.306543431 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.063493705 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.133863348 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065099609 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.065340721 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065178426 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.064647374 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065726275 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066072254 seconds)
  done (took 1.669661577 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.070877982 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.066350399 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.064461868 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066379709 seconds)
  done (took 1.417357125 seconds)
done (took 5.782580822 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.238614819 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.101066008 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.285383123 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.39804302 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.456506857 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.089775607 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.072578976 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.068447387 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.126316776 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.313374948 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.106199829 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.186328164 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089749908 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.174327699 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.968783566 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.119159935 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083677891 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.121891604 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.091743362 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.129766587 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.41650508 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.078362684 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.074083888 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.07030005 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.067289241 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.642600641 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.65956228 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.132578509 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083674188 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.100401942 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.115273608 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.639998762 seconds)
  done (took 10.483161528 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.092491174 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.090332691 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.066757275 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.122534953 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.092027754 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.067829404 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.073042204 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066781598 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.091652666 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.125397036 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.091351077 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100414734 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066012751 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068504456 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.075268479 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.199286543 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080607485 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080824015 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.067249604 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.080281653 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.1071315 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078840684 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078905131 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.07885387 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.12898339 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.170306716 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097976814 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097971056 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.065947337 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.084265279 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114553044 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125682137 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064843348 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.063507014 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.11896175 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093288905 seconds)
  done (took 4.561631584 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.961209278 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.091510027 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.100787763 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.617225412 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065209919 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.154596955 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.244591333 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.072654851 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.423067662 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.146408385 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.14040216 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.145679856 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.117190602 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.068868791 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.230156689 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.113662344 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.406318121 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.066058501 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.064948103 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.063783291 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.067280226 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.0676112 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063208934 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.070208983 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.094752216 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.087863635 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.159819232 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.9396875 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.245266475 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.066985732 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.162822061 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.083613646 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.364659775 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.070539108 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.083601181 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.409051218 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.12208485 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066096812 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.169156869 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.115201487 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063370117 seconds)
    (41/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.115544406 seconds)
    (42/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.077916818 seconds)
    (43/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.067329698 seconds)
    (44/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.067147037 seconds)
    (45/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.066876373 seconds)
    (46/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.070011993 seconds)
    (47/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.0802886 seconds)
    (48/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.101757383 seconds)
    (49/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.068256166 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.064524596 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.166129183 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065188799 seconds)
    (53/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.066531107 seconds)
    (54/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.06731933 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.150230339 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064820583 seconds)
    (57/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.142913608 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064289747 seconds)
    (59/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.068625267 seconds)
    (60/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.101196276 seconds)
    (61/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.06881932 seconds)
    (62/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064338117 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.089787363 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.101746552 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.338601101 seconds)
    (66/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.086797198 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.031237119 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.066019934 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.014647821 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.0780712 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.066075382 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.070874143 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066360648 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.067711338 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.067181486 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.073967078 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.06998178 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069184009 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.108558753 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066946772 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.069667103 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.064892856 seconds)
    (83/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.069974686 seconds)
    (84/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.095895931 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.067519942 seconds)
    (86/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.475433378 seconds)
    (87/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.09544754 seconds)
    (88/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.064631872 seconds)
    (89/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.075149737 seconds)
    (90/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.105389837 seconds)
    (91/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.067665541 seconds)
    (92/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.072204092 seconds)
    (93/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.066923562 seconds)
    (94/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.066880402 seconds)
    (95/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065879275 seconds)
    (96/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.067052663 seconds)
    (97/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.069951638 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.174867775 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.095151725 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.063655514 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.069173022 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113063737 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.012992372 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.067120117 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.066533339 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.071675722 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069739778 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.069464038 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.067138979 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069395651 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.06772312 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064835007 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.112408707 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.067760739 seconds)
  done (took 21.632493828 seconds)
done (took 38.785437729 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.261362316 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.081248811 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.081521503 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.082070081 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.081590772 seconds)
  done (took 1.822726433 seconds)
done (took 3.046468444 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.109087069 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.063451196 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.100556859 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.099551007 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.065700467 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.063741143 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.097997738 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.063899966 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.098354871 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.099871907 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.102355841 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.101019956 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.063572129 seconds)
  done (took 2.358789027 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.068431025 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.081016024 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.082471294 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.061593407 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.071695211 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.081567704 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.061952743 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.080617836 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.086881501 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.081667733 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.083031907 seconds)
  done (took 2.057167572 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.06768422 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.080906582 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.083698655 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.061610602 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.073064977 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.081527894 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.061668269 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.080842252 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.084552388 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.081900757 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.081439815 seconds)
  done (took 2.046061396 seconds)
done (took 7.670820114 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.065858857 seconds)
  done (took 1.258737506 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.526838228 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.577273381 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.067683745 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.085973553 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.191006252 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.098376283 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.224309047 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.073364734 seconds)
  done (took 8.220068124 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.096317349 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073500407 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.06894296 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067735441 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067134053 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069136755 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068350882 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.068600905 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.067914874 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.070177092 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.069692965 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068660596 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070292889 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.068236961 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069447404 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.067753163 seconds)
  done (took 2.427410076 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.097240287 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.097867416 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072923107 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074234989 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071339128 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.070811306 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073221207 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072625943 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.069712745 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071751817 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.073258492 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.071958904 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.072016534 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06297336 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.072986277 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074213882 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070091652 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073037957 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073968934 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074779038 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.07389593 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063164446 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071614171 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073074501 seconds)
  done (took 3.092374532 seconds)
done (took 16.206531407 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.112965315 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.074339646 seconds)
  done (took 1.38928557 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.068189965 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.068967934 seconds)
  done (took 1.351157241 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.07521874 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.059696096 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.081533363 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.072763277 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.061828076 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.061186974 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.080800508 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.061680951 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.062797875 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.061941605 seconds)
  done (took 1.894154806 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.06302272 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.070978018 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.068767945 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.070329085 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.068531832 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063077916 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.065880408 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.063457832 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.070498243 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.061841687 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.067124569 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082485123 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.066363992 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084434941 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.06607498 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.06681136 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.06951642 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066264876 seconds)
  done (took 2.460001603 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.060072275 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.06149776 seconds)
  done (took 1.350848673 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.063963507 seconds)
    (2/7) benchmarking "second"...
    done (took 0.060801296 seconds)
    (3/7) benchmarking "month"...
    done (took 0.063920819 seconds)
    (4/7) benchmarking "year"...
    done (took 0.06382728 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062288579 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061802209 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062032322 seconds)
  done (took 1.657521052 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.419940547 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.122577589 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.348788321 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.068824448 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.079113819 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.254140844 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.063227464 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.067673065 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.068356767 seconds)
  done (took 2.757359799 seconds)
done (took 14.089675591 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079278868 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.083675255 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.090228887 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.4277125 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091914582 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.06684118 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.112484834 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.179289528 seconds)
done (took 2.371895935 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.214037277 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.391098039 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.934859687 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.064545401 seconds)
  done (took 3.618895326 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.336284652 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.084396123 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.077847246 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067683892 seconds)
  done (took 1.804269015 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.063592611 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070984978 seconds)
  done (took 1.368597868 seconds)
done (took 8.24764526 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.062607083 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06317129 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.091268879 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063171285 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.063502808 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.06345923 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.06348773 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063534037 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.063176039 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.063012904 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.063015825 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.063008381 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.062910945 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.063110978 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063246733 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063358297 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06332664 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063286016 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063361616 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063567442 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063198136 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06322617 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063558868 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063274425 seconds)
  done (took 2.810066689 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.078684117 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.064822768 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.066100061 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.067322618 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.067657842 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.0668843 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.066992794 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065378058 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.066886623 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.065456768 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067984062 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.067544859 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.065170443 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.0674481 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065668763 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.067623345 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.067169402 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065540362 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065232169 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.067389267 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.066977731 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065795609 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.067704224 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067097502 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.067313913 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067059643 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.065410303 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.06577747 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067403952 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.067680002 seconds)
  done (took 3.252808862 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.063017731 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.059013719 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.059492173 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069074696 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.059852689 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.06031466 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.060893093 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.059693699 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.060082897 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.061543399 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.060469408 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.059905195 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.060880496 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.060179978 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.05959372 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.060440452 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.064103233 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078290639 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.060337668 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.059759084 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.063931365 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.059707399 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.059818734 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.060313137 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.060623464 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.059732602 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.059565432 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.060292447 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.059784019 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.060663211 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.059761096 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.072163464 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.064592497 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.060148031 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069808269 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.064499966 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.0600627 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.062887866 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.060748229 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.059567369 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.059638823 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.059698068 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.059770202 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.05996235 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069207965 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.060346795 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.06111822 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.060403511 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.059961971 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.059857273 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.059870872 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.062426493 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.065117376 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.061491762 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.059410938 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.060962681 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.059543807 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.060700692 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.059758865 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.059466535 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.059456604 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.062952425 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.061867577 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.061011424 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078358353 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.061493124 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069232752 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.059756673 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063179227 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.063188875 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.060341011 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076729996 seconds)
  done (took 5.711938235 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.08441145 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08628246 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064141408 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064908043 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061516194 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.060718517 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068661452 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060522217 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064846376 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.080405213 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060713783 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064641002 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064900848 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.0644936 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060554993 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06489454 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069378977 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060858847 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.060675952 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.064387968 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.060745345 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068233881 seconds)
  done (took 2.716329571 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.139388387 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065344717 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104255756 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.077103545 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06928733 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076961977 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.066297132 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066402714 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066324116 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066837539 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067014219 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066185419 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06878579 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067008773 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06706911 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066539899 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066444013 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066665144 seconds)
  done (took 2.583237044 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.075936644 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.064854464 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.088562708 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065964166 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.06614668 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06548088 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070311035 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071152493 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.06562587 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065827843 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.071085739 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065440775 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.065271915 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065490867 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065297189 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065640025 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.06525249 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065449055 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070786205 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070289196 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.06987145 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07103087 seconds)
  done (took 2.762332604 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074110482 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.063416759 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.077778407 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066533994 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061106446 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060456925 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.066215448 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06477557 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.065784327 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.064204779 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06508501 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.060893663 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.066894902 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065157249 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.067055183 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065216517 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.064779935 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065389009 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064931916 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060577186 seconds)
  done (took 2.56173903 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08539502 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062607797 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063005625 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082483982 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063692458 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.063406217 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082146411 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.063219002 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.064002402 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.084994237 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063655303 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.063125181 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082398921 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.082218027 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06367204 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082332767 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081951707 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082032785 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.063266194 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063500208 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.084776681 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.063403384 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08226553 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063898472 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063392471 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.063641691 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063451638 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.082472689 seconds)
  done (took 3.262502626 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06245208 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.062158991 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062320626 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063192057 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063325257 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.06302007 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06332584 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063729086 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.062998635 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063275931 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.063224691 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.063248002 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063023598 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.062860568 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.063247576 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.063569351 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063050597 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063328018 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063305567 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063481911 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.063170151 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063391846 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.063555648 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06380735 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063427295 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.063390409 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063587717 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063281921 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063058122 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063537058 seconds)
  done (took 3.153705515 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.07339576 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072577644 seconds)
  done (took 1.403771468 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062073123 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077167158 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.060249342 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070452047 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069606664 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.063851052 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.070694064 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069243417 seconds)
  done (took 1.795422956 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.06689155 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.091259727 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.062660619 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.063786132 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.06642077 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.121592977 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.077192553 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.072854301 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.077451943 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064143834 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.062608477 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.074591327 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.061561572 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.073919743 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.063960692 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.07054026 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068150672 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073581481 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074189486 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.060898416 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073493163 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062748712 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.060920758 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.063082436 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.062272636 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068154741 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076937304 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.07358157 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069964986 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059654854 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.080522158 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.060903667 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.062023643 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069679225 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.065556146 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.060744047 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.097054143 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.061272328 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.067229804 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060395351 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072852101 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080907202 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074391744 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.078558717 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.062728682 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.063306748 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060701768 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.062983407 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063862545 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069525107 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061008645 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06758609 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.0602057 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.062608841 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071159564 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.061124666 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.067195362 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069574434 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073074695 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070593886 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069013908 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075411333 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.06920097 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.069957133 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.06186153 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079766469 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.063095465 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073443146 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.075228194 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.062621631 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074368411 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060477058 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059294966 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.060308825 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093239097 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.062400566 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.061721409 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.060632476 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.060724746 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.062092559 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070226425 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.067103838 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067446676 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.064415642 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07626148 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069248792 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.060678768 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.06847914 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.07880016 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063520299 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.061015595 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.076860491 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063759709 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.060451057 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078171362 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.073632312 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.062574774 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.06170124 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063647581 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.07461045 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.062321903 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059553508 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068783339 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.062829386 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.063903438 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.066308468 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068148572 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.060405897 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069766094 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.065725913 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.062353415 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.058882478 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064649085 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.061456187 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058849612 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.06921239 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.060219016 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.074982567 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065993578 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.073825311 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074323693 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.070241527 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075275209 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.059729977 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.058926422 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.077484652 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.200377225 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.062245685 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.07841014 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061366872 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071956124 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060966767 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.062845048 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.069793551 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060079115 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.063999205 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.060983017 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.066878468 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.06283177 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063064786 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.065325919 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069049648 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073162965 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.062589676 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069855916 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.062146356 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075786079 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070521545 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.06562772 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.066638672 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.062119251 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072527423 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.06718256 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070407958 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.060529786 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.06187725 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.061427436 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071183483 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.070228312 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.063183434 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.069825963 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065087139 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.06196428 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.061226665 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.062587091 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064183058 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065089886 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.061876392 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068049871 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069312633 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.074867062 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.072299995 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069812947 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.059960112 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.060665368 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.063361916 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.060595891 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065010827 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070085667 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.075684476 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072233265 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080753467 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.0608221 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070009307 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.062581607 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077551163 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07324726 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.062510264 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.066380892 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.059870907 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.063139792 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070033159 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072279861 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.075085098 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.075248904 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065078535 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065454408 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.060626132 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075120415 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.061505972 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068954968 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.070157954 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.066326276 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.060935542 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.063050618 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.069753488 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065751031 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.061335788 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.076100353 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.068088992 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060665036 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074582985 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.061261004 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.072283948 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060499644 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063927684 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065654495 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.062964725 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069718741 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076193671 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060059414 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.06148342 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076011832 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.062900747 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.0627389 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068079787 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.07535362 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064999582 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067798644 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07098317 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069576399 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064601075 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069535819 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.061666309 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.069469291 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.063912927 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071014643 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.05919513 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.076995915 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.057970159 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.074115137 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.060251144 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.070591757 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.060929271 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068965965 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.06155244 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.0769921 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.062138208 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.060973227 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.07191677 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.058904655 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068733258 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.059601657 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.064640425 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066123082 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.069080994 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.062111483 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.204283668 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.063482619 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070426251 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066408319 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069907508 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.070617656 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.0657057 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.06072937 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068903286 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072331957 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069245133 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.062814204 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.063239486 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.061287618 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070174249 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.06288819 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.062769305 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06870191 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065235487 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067042468 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.062970523 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.063199504 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.063110678 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068971462 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070690797 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.078793282 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069558319 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068180458 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069807417 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.060500591 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07626068 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.060849623 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068631855 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.059800811 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.068606663 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.06971331 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.060929354 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.079822755 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.062729255 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069033276 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073704772 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069571728 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064095626 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079575497 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.065265675 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068821971 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068586094 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064969672 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067311353 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.063416363 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068543024 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069829317 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071190207 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.061778958 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067733958 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069195964 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062972816 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.069890554 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.062640165 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068207478 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.062653971 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.059944249 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.06495504 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.072258628 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065607202 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.06560985 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.061217711 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06014283 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.06127381 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.069096162 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065565727 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068880353 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.075726474 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059981069 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.062058017 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.061008494 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066282317 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.078600275 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.070703022 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068239123 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065142007 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.060045577 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.062505038 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.063224514 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.06107045 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.06511032 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060205763 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.061376494 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071279677 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.062843467 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.06529556 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061288335 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.062618655 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.069436406 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.066617316 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.061438618 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067058609 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.060461552 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.065438967 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.059944861 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.062999768 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064941525 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.060345958 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064258832 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.07086485 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.07657471 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.06708163 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069247739 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.061616599 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067983625 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075293586 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.068983479 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061932294 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069279155 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.059737182 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.078688265 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069579342 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068272123 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.06995807 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.061050579 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076507657 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.064447978 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069777388 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.075373224 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.061411079 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.068080302 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.059829181 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.075523265 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.064800607 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.059887104 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.068283662 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067112158 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.205451442 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074112861 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.062719682 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.06975218 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06800337 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.064450273 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.063409187 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.063436184 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069872015 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.077287236 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.061893414 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.06611733 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068786407 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068827163 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065740433 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07310868 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069098155 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062859877 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.063677128 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064363538 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.062537874 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072451423 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061523282 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065101066 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065517386 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.060552439 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067405842 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076521101 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070109151 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070729146 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.060241715 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.060321726 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.078897773 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064129103 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.065262365 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068889451 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070000128 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072768552 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.06990754 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078512323 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.061656118 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066517226 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073093968 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.062391534 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.061210492 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064183493 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.062410869 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069569996 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.070603685 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067782041 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063359348 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067506502 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.073495631 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.062175749 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.06519866 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.066653089 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.061665024 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070737702 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068415169 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.068645472 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.062576194 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060660278 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064352167 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069131216 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068045301 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.06938225 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062070386 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.069149823 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.07489507 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068105718 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.064970969 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060856806 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.064948221 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.06948165 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.06640973 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060741245 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065334256 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063976954 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.06936169 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070051212 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065354235 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060563079 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077951318 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068946678 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.069935629 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.062974101 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.063334178 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061250494 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060632016 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.072066637 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060537077 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.062351745 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.063766685 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.061551297 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.07614625 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.06751804 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.076426103 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062149917 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065312977 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060666802 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070364091 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065261639 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.061121354 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071094191 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.059995527 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.076167687 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.072592443 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.069248711 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.060369494 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065418645 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.068705611 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074511757 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070166901 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069096668 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.064678617 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.070390834 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.062188689 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.070821947 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.060023771 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.059413161 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070078937 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068302838 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.072416177 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.060060778 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.070449547 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.062243648 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067759305 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.067960666 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.062027047 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.062434955 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.061992555 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.20617186 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.064849172 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069106578 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.064832488 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075688146 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.060885059 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070841984 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068669355 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.070360769 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073531844 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072456978 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.067869205 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.060864172 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06724875 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.067797816 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.062190899 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066873024 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.063765318 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.081383694 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.061932943 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.062100559 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.074033248 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.067318549 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.060286233 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.067204792 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.064064804 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.069579109 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.061342433 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.069784445 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.064437118 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.060788872 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.063927209 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065426024 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.060184918 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061122508 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.061400706 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071706012 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.065444848 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.061791743 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.080117752 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.062759157 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068758566 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072774967 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067667515 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.063194536 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059693808 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.062300589 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.073160679 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.075863057 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063721037 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068728677 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.062696345 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070400447 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.060023013 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069036057 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.085053261 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069156323 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.06110835 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06126538 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074874927 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.075887066 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065484826 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069968012 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070160484 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.063249874 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.082780246 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070889698 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062435133 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.071902797 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063573566 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.060429204 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.059934122 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.063165253 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.072482611 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.061079124 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.064077847 seconds)
  done (took 41.786438816 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.098618517 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.061017561 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.059587345 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.059535823 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071664124 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061792362 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060841312 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06189533 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06195939 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064147371 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.060748495 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060917437 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073097646 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.075513712 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072411663 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065832733 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061062341 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061633343 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.060672211 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061895693 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072138981 seconds)
  done (took 2.746342544 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.068241404 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.07505666 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072270093 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.078584014 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069696827 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065932318 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073181015 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065855093 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07417367 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071336357 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.074055763 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065974134 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.071269955 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.071300867 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071305214 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06622068 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074051896 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069649429 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.066044707 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072921561 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066176025 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073132316 seconds)
  done (took 2.89133681 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.061851705 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.061266599 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.06927893 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060697353 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.06002035 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.064342682 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.059973603 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.06433012 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.064372127 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.064349439 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068540835 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.061103549 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.059965175 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.065535736 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.060263228 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.061298262 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.104591445 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.061552799 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.061619675 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.06002569 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.06613417 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.06964121 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060139291 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.060501632 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064538788 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.06426384 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.060180117 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.063591689 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.06108129 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064408018 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.061383631 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.05992349 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068827722 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068044936 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064278412 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064834532 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.062551863 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.061640599 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060733366 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.060297955 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068453209 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.061854458 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.061240798 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.062083471 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06881069 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.060781503 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.060122132 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068823157 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060012635 seconds)
  done (took 4.47378421 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.071851047 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.111657715 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.06651027 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091634626 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.074869913 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.067940633 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.066369979 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092876609 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.061545823 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.062556781 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.075959041 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.076402923 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064592124 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.065928757 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.066273002 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.063847549 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064789586 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063250637 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.067275692 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063729392 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.067289674 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.068159203 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.075137129 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.075098613 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.065024379 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063616875 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063669883 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.065474003 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.075047865 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.068621512 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.066081838 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.06649295 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.075371389 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.066536128 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063723826 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.063630148 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.076295461 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.064012843 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.064011045 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062052286 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.063361359 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.065761728 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.06792415 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.076218501 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064296358 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.068444575 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064343273 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.061919307 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.075593978 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.064374241 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.068944046 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.076929821 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.065756349 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064702914 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06567609 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.075696779 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064197626 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063047377 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.064556201 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.075217184 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062256671 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.065291558 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.076218277 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.063811054 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071994555 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.076486423 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.068792216 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.065587993 seconds)
  done (took 6.182780655 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070229884 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.091424933 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071448239 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073253005 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072592011 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072253371 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072176578 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.0722697 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072372767 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073188491 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072455848 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112589524 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067523069 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077258354 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071917714 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072027174 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071768249 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071952632 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071824067 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071931433 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071903559 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072727407 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072053543 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072439664 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.075288813 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06594003 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07114361 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.07049228 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07152935 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.070075925 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.073306695 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.070320703 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.070376057 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.070973492 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.07466097 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071786706 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.061709281 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071859899 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071677823 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071639324 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067596018 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072750668 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071621294 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.06758579 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072409703 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072248598 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072779762 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.075200615 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.080758779 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073180903 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072424081 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072826189 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072175962 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07238257 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072782263 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.081193417 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07299058 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073246237 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072595361 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.073211625 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072946353 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.080993806 seconds)
  done (took 5.916160751 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075311332 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067764126 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.079466553 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061584835 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.059424702 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069473414 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.059528558 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.059311018 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067411567 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.067650919 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069836647 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069081194 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071700374 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069393162 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069479091 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071422334 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06902046 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070514514 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069085004 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070498265 seconds)
  done (took 2.738830638 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.072695924 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.077698088 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067064154 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070633964 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.066843106 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07100791 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.065782399 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066737152 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067182955 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066650231 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072279732 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072735997 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067115408 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071403003 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.072224398 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070750247 seconds)
  done (took 2.478310352 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.066400489 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.06872487 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.068841207 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.062740685 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065794272 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061474073 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.061956407 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060254571 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.060817322 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.075262723 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.061979283 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.073808999 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.062166062 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.060973825 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06110328 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.067745527 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.060171901 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.061787511 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.062117601 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.067907201 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.068827647 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063304349 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065990621 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.062459896 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067801251 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.069488139 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.063813269 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065728084 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062053958 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.062272696 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.06799452 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068655109 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.061917086 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062694016 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.06085492 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.061973829 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.061830307 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.062683071 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067835055 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.062046025 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.060655913 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.06693217 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.062125512 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.063073184 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061527038 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.062741222 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061106797 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067783827 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.06266003 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067529851 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.062079328 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.064362348 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.062517869 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.069597675 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.065192071 seconds)
  done (took 4.90247845 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074834517 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.065180522 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060884614 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060681946 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.066087322 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067240755 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.066028126 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066683762 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066933764 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.060462143 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066963426 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.065747688 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06679664 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.065913418 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066699016 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066303854 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060208283 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066367998 seconds)
  done (took 2.553635026 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070861555 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065146343 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.071195369 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065871511 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065616114 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.065304707 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061410748 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.061388952 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061423176 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065463758 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065934199 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.065027291 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060928516 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.065041099 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067821917 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06557773 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.065231032 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.061360737 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065623203 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060998338 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.065313186 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06100818 seconds)
  done (took 2.788291991 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.08814837 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083297725 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.123809964 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079186906 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.087702451 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071889639 seconds)
  done (took 1.899020927 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089902893 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102584807 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065668112 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066401158 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076221174 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069240891 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069311871 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069839286 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07638231 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074475647 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069666353 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076550641 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076479095 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072045728 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076432366 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079345535 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06964956 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069444542 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065832979 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079739086 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069939033 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076420528 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069871159 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069384068 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069763619 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071900268 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079703967 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074438547 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071879353 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076538642 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079526622 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069574242 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077092228 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074412979 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065968263 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076316421 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069778164 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079653236 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076683453 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071758765 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065855077 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076612625 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076352808 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071744025 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079712441 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070235851 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071937809 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069842224 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070110458 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082284064 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076860624 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0720337 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07649716 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079971689 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079855061 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082374059 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074532906 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071895379 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076491864 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074589519 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07188084 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077206584 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071769608 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074414718 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079712076 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071694937 seconds)
  done (took 6.281639859 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096667914 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065154427 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069560705 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075123782 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071679607 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069584478 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070002001 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070173896 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069444618 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066498172 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10459621 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070013416 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072272238 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072209177 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070145278 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069679375 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070027613 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071882866 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066627036 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082219976 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069828025 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072020764 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071812806 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072289385 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074792682 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079783223 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069760844 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069903636 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069688229 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069616538 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071876552 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06994399 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071882801 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066225071 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071831047 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069640869 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069363958 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071706377 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069671103 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076896498 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072134895 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079864342 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070305956 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069681034 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074212888 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069745473 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069499766 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066658506 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069965918 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066328867 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074922857 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074524743 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074847544 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072173596 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070123751 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070881598 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070246976 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070042837 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070172883 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079877057 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072281416 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070007471 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082099367 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06983083 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070224525 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072074458 seconds)
  done (took 6.164065251 seconds)
done (took 127.055606596 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.20916239 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.183473111 seconds)
  done (took 1.745200842 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072774488 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.09603669 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.073549104 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.132029168 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.069852347 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.103499596 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.102746974 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.074121991 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.069800556 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.06943294 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069565657 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.072267651 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.136998459 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069784467 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.069516759 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.072146671 seconds)
  done (took 2.725340428 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104404733 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.183585423 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110518861 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067731221 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104754046 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.074728846 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.067348575 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079722627 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.072830951 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.072568651 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.0771763 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074923506 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.072045316 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.074806971 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.072728728 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076543851 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.071629905 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076443261 seconds)
  done (took 2.910589235 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.092954254 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.08440865 seconds)
  done (took 1.557331997 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.156951709 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.103480902 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.144419729 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.326662917 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.133584319 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.281397323 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.128606944 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.126319606 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.109548454 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123406233 seconds)
  done (took 3.006467007 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101822654 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.164985582 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.305330712 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.117888544 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.075561813 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.087572041 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.123142389 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.081599054 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.078652724 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.078728065 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.078543576 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.07892933 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098531841 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076470236 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076357483 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076886878 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102029085 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076052722 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.075613153 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076030712 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.101820301 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069829468 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.07657767 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075419985 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078083985 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078654209 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.070672138 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.06936868 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076116191 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075635614 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078622327 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.084163002 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078051811 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.104020137 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.073760335 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.105225594 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075305567 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072820811 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.07362612 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.071896527 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077251788 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077575445 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078562032 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076720553 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.070836537 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.074632817 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070705053 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069767808 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.079369278 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.070442044 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.079289025 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078665245 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.102576581 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.069538106 seconds)
  done (took 6.096677036 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10757157 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105925278 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068934811 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112338643 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103868977 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068331991 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.104424584 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098088707 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.106351386 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068131865 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067551612 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.067545316 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075930051 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.078310772 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.114687093 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107775486 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070333717 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068070395 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.106488257 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.106863088 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066947068 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100211777 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097033269 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.106105699 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066815663 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068484079 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066780318 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.067218383 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.073472384 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.074495997 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.067393163 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.075819208 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.080469106 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.075064161 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066122223 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06676648 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066667426 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078700199 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075670851 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.076351563 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.07500163 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066776049 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067805988 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068871612 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069549403 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067386137 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076248468 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.07717569 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.07601056 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068465155 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068945315 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067879478 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068284822 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.076456141 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.075884529 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.077721604 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076556772 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067641592 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068310775 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070594808 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078222895 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078465652 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077481099 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068329874 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.076470723 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067435381 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078937034 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080872855 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068239607 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068844879 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068451869 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068014362 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.06906706 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.075892563 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.075913171 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06920066 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068284043 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067930275 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078347112 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075944158 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06811846 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075906832 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067680477 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068221252 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068963078 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068646809 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.075362437 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.07740461 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070056705 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068046301 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.06808377 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068144481 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067453915 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075242733 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076512646 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.07594128 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.075935571 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068685448 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.075868347 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075778468 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068485185 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.075208815 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067593006 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068147424 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068122702 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.075513472 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.074431192 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.076970302 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067938801 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.065922147 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.072297714 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.207097117 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068036421 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.07500215 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077017715 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.075149847 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.066756563 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079277505 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067696601 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076659762 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067614371 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077195981 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067461349 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.075056916 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067580101 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.066651977 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067724314 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.074616121 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06772694 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06709958 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067591362 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067523829 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.074805252 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.077797573 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068269795 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074448857 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.074734733 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.06833921 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.074297245 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067642953 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.075381644 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067557864 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067972511 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066717051 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077625414 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067867095 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068026852 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067076798 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076553656 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066775241 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076525397 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.073370865 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06672458 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077960762 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076195064 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.074013705 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.076497862 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06761929 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067195582 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066877074 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.067547945 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07389773 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07466118 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067573743 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066829724 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.073245102 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.076136267 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066572242 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.074165007 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.074348723 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.074084286 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067055748 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.066831364 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077219417 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.076142212 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078092244 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.073997777 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074540003 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.066935781 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.074304958 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074533443 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066875364 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081761741 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069219041 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.080625923 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.074402464 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.073883503 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074911078 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.075788093 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.076412299 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.076305881 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.078221807 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066350729 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066635045 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.07420879 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.066977039 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066944877 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.074221287 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.06732187 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.06748413 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.080073385 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067141079 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.076227025 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066534171 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.075228222 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065944908 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067315389 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078237062 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066889381 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067432126 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.074254614 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068729036 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075677222 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.07925823 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.074951259 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066254082 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067433431 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.074681981 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.075132232 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067691626 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067522825 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068221062 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.074665974 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.074565676 seconds)
  done (took 18.087229931 seconds)
done (took 37.518396072 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.206775211 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.15951401 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.192556182 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.113793323 seconds)
  done (took 2.151193597 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.095871884 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.096882014 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.076798088 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064635966 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.08479975 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065050251 seconds)
  done (took 1.905982525 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.27857073 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.19624003 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.176654554 seconds)
  done (took 2.06783305 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.21631916 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.196994132 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.474605568 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.292270687 seconds)
  done (took 2.696428719 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.131882174 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.079870856 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.061740511 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.072723474 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.110559672 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.142482726 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.088138713 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.112108322 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.07331473 seconds)
  done (took 2.347888754 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.131837981 seconds)
done (took 12.745599294 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.113085904 seconds)
    (2/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.198321544 seconds)
    (3/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.244454201 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.096551229 seconds)
    (5/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.201370261 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.066208161 seconds)
    (7/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.1919255 seconds)
    (8/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.198203245 seconds)
    (9/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.112341786 seconds)
    (10/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.176785443 seconds)
    (11/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.183377807 seconds)
    (12/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.168857662 seconds)
    (13/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.169540804 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.151842663 seconds)
    (15/309) benchmarking ("sort", Int8, false)...
    done (took 0.173075663 seconds)
    (16/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.076254679 seconds)
    (17/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.414403781 seconds)
    (18/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.240638046 seconds)
    (19/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.179674926 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.07286124 seconds)
    (21/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.072597132 seconds)
    (22/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.072766473 seconds)
    (23/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.14406957 seconds)
    (24/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.154370977 seconds)
    (25/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072431821 seconds)
    (26/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.063559199 seconds)
    (27/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.189810708 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.118152862 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090008548 seconds)
    (30/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.128524737 seconds)
    (31/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.160527471 seconds)
    (32/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.118386813 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.121438072 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092335085 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.093902167 seconds)
    (36/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.074845842 seconds)
    (37/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.073892084 seconds)
    (38/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.175736082 seconds)
    (39/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068635003 seconds)
    (40/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.225907899 seconds)
    (41/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.226098117 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089075707 seconds)
    (43/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.06318616 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071610752 seconds)
    (45/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.149149689 seconds)
    (46/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.062271112 seconds)
    (47/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.15732921 seconds)
    (48/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.177155196 seconds)
    (49/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.078567805 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.087292366 seconds)
    (51/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.093590778 seconds)
    (52/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.147177196 seconds)
    (53/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.077253726 seconds)
    (54/309) benchmarking ("sort", Bool, false)...
    done (took 0.149278035 seconds)
    (55/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.077898414 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088438241 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.083381984 seconds)
    (58/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.07398351 seconds)
    (59/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.144548154 seconds)
    (60/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.076486447 seconds)
    (61/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.06537569 seconds)
    (62/309) benchmarking ("sort", Int64, false)...
    done (took 0.064893341 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.074061336 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090388245 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.14022976 seconds)
    (66/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.062614192 seconds)
    (67/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.07210852 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090801567 seconds)
    (69/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.071279638 seconds)
    (70/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.061891099 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.063168169 seconds)
    (72/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072264226 seconds)
    (73/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.063709422 seconds)
    (74/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.089833749 seconds)
    (75/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.075914248 seconds)
    (76/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.162069707 seconds)
    (77/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.173171782 seconds)
    (78/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071310086 seconds)
    (79/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.144898029 seconds)
    (80/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.216965545 seconds)
    (81/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.287401418 seconds)
    (82/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.076967007 seconds)
    (83/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.07546278 seconds)
    (84/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.08787265 seconds)
    (85/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.213994243 seconds)
    (86/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.073363281 seconds)
    (87/309) benchmarking ("sort", Float32, false)...
    done (took 0.134304553 seconds)
    (88/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073443798 seconds)
    (89/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.082273676 seconds)
    (90/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.144176809 seconds)
    (91/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.123869693 seconds)
    (92/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.149178652 seconds)
    (93/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072457197 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.119545365 seconds)
    (95/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071064971 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.086451917 seconds)
    (97/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.207614093 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.06387977 seconds)
    (99/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.088152985 seconds)
    (100/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.168055471 seconds)
    (101/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071963163 seconds)
    (102/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069679608 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.080851059 seconds)
    (104/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.070834571 seconds)
    (105/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072209792 seconds)
    (106/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.211503795 seconds)
    (107/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.063097258 seconds)
    (108/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.064487838 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086606404 seconds)
    (110/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.070545009 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.118207297 seconds)
    (112/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.076490037 seconds)
    (113/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.071469972 seconds)
    (114/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.155481559 seconds)
    (115/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072954102 seconds)
    (116/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.066182522 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.147747115 seconds)
    (118/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.064308466 seconds)
    (119/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067322959 seconds)
    (120/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.072371496 seconds)
    (121/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.188602905 seconds)
    (122/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067303868 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.077129562 seconds)
    (124/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.064183037 seconds)
    (125/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072609873 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.125112467 seconds)
    (127/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.064648175 seconds)
    (128/309) benchmarking ("sort", Float64, false)...
    done (took 0.131232362 seconds)
    (129/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.06442426 seconds)
    (130/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.062806147 seconds)
    (131/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.220000381 seconds)
    (132/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.063017609 seconds)
    (133/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.069878633 seconds)
    (134/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.071626566 seconds)
    (135/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.076599657 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.079474864 seconds)
    (137/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.063841969 seconds)
    (138/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.073445334 seconds)
    (139/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.070737581 seconds)
    (140/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.070385478 seconds)
    (141/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.165512673 seconds)
    (142/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074876994 seconds)
    (143/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.07626177 seconds)
    (144/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.065752002 seconds)
    (145/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.063309031 seconds)
    (146/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.247450822 seconds)
    (147/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.06228417 seconds)
    (148/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.067906652 seconds)
    (149/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073970388 seconds)
    (150/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.06738428 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.118483739 seconds)
    (152/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.064372389 seconds)
    (153/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.067550859 seconds)
    (154/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.071053134 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.127585887 seconds)
    (156/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.075034104 seconds)
    (157/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070092815 seconds)
    (158/309) benchmarking ("sort", BigInt, false)...
    done (took 0.247630154 seconds)
    (159/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.063738247 seconds)
    (160/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.160209811 seconds)
    (161/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.14281051 seconds)
    (162/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.061773641 seconds)
    (163/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.062276786 seconds)
    (164/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.206804944 seconds)
    (165/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.072582809 seconds)
    (166/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.064635942 seconds)
    (167/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.224670893 seconds)
    (168/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.1865734 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.078090096 seconds)
    (170/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.168200907 seconds)
    (171/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.174606486 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.121396941 seconds)
    (173/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.064539825 seconds)
    (174/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.158456378 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.063782677 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.145372917 seconds)
    (177/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.063821874 seconds)
    (178/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.079338315 seconds)
    (179/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.065014272 seconds)
    (180/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.166768278 seconds)
    (181/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.083472737 seconds)
    (182/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.062254665 seconds)
    (183/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.142284218 seconds)
    (184/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.064432673 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.062624179 seconds)
    (186/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.069813319 seconds)
    (187/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.06201146 seconds)
    (188/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.230923563 seconds)
    (189/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078269589 seconds)
    (190/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.066561567 seconds)
    (191/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072403168 seconds)
    (192/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.065308588 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065318905 seconds)
    (194/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.213285304 seconds)
    (195/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.065219562 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.146958248 seconds)
    (197/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.064556906 seconds)
    (198/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.065796498 seconds)
    (199/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.065459554 seconds)
    (200/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.092067823 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.113832722 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.129142818 seconds)
    (203/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067538221 seconds)
    (204/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.193913666 seconds)
    (205/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.063492735 seconds)
    (206/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.170250933 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.099213948 seconds)
    (208/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.176739682 seconds)
    (209/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.064736491 seconds)
    (210/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.064303028 seconds)
    (211/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.076153502 seconds)
    (212/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.063990734 seconds)
    (213/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.065247752 seconds)
    (214/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.072143268 seconds)
    (215/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.072531672 seconds)
    (216/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.065190091 seconds)
    (217/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.06715157 seconds)
    (218/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.079611864 seconds)
    (219/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.065663036 seconds)
    (220/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.06644657 seconds)
    (221/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.072393747 seconds)
    (222/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.064299062 seconds)
    (223/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.075291374 seconds)
    (224/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.089892045 seconds)
    (225/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.063503446 seconds)
    (226/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075470141 seconds)
    (227/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075658486 seconds)
    (228/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.064401991 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.142245585 seconds)
    (230/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.160349206 seconds)
    (231/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.070302939 seconds)
    (232/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.063485016 seconds)
    (233/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.062336211 seconds)
    (234/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.064895987 seconds)
    (235/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.07160311 seconds)
    (236/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.062924153 seconds)
    (237/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.152460331 seconds)
    (238/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.063325421 seconds)
    (239/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.065149985 seconds)
    (240/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.065596205 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088642018 seconds)
    (242/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065884029 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065422878 seconds)
    (244/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.064984383 seconds)
    (245/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.06793677 seconds)
    (246/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.066574961 seconds)
    (247/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.064810487 seconds)
    (248/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073518451 seconds)
    (249/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.066324357 seconds)
    (250/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065202518 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.064391254 seconds)
    (252/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.064582201 seconds)
    (253/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.078302963 seconds)
    (254/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.06310978 seconds)
    (255/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.06486632 seconds)
    (256/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.064868337 seconds)
    (257/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.063755706 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065587514 seconds)
    (259/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.075530359 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.110380785 seconds)
    (261/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.06456785 seconds)
    (262/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.064956046 seconds)
    (263/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.06587488 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086709775 seconds)
    (265/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.066395192 seconds)
    (266/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.06784595 seconds)
    (267/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.072897779 seconds)
    (268/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.065603977 seconds)
    (269/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.066239429 seconds)
    (270/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.065690863 seconds)
    (271/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.064584671 seconds)
    (272/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.06851484 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.124386563 seconds)
    (274/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.064200344 seconds)
    (275/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.138194099 seconds)
    (276/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.064767385 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065540007 seconds)
    (278/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071054587 seconds)
    (279/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.062795849 seconds)
    (280/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.07282299 seconds)
    (281/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.063441251 seconds)
    (282/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.062763745 seconds)
    (283/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.063050981 seconds)
    (284/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071392931 seconds)
    (285/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.063122601 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.132242008 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.089344299 seconds)
    (288/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.065803921 seconds)
    (289/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.064278087 seconds)
    (290/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.065704044 seconds)
    (291/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.062366994 seconds)
    (292/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.147515854 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074295741 seconds)
    (294/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.063994394 seconds)
    (295/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.064671916 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.063215372 seconds)
    (297/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.062708491 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.071435993 seconds)
    (299/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.07047512 seconds)
    (300/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.163437845 seconds)
    (301/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.062865327 seconds)
    (302/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.063178362 seconds)
    (303/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.063923838 seconds)
    (304/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.064560447 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.06346051 seconds)
    (306/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.064560575 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.084296071 seconds)
    (308/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.063205397 seconds)
    (309/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.06663264 seconds)
  done (took 32.560745108 seconds)
done (took 33.994076397 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086052628 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091421807 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073637382 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.086512398 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081579357 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.098165755 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074020383 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078999435 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.081132727 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.079577955 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.07953571 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.072547511 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.075269962 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075682908 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.072795027 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089290471 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.080283912 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073961674 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074061116 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064487331 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073991592 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065296159 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.064090957 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.072223744 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077083067 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073170123 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.075379173 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07488424 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065320934 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065570689 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.06986536 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074611569 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067822166 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078204189 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072614348 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072050534 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073482531 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076124863 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.062842956 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.06430105 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074061101 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.063737718 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072451125 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.070215043 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.068794388 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071006729 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072610812 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.075952859 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.086823387 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068334144 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074416905 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.074877789 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.07571018 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.069762675 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.06911209 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072506851 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.069821121 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08682138 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072386454 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067806207 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074367272 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073419435 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070647055 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072047828 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072623176 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075011864 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075566776 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.07065796 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074415748 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072383635 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064698178 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074421291 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070332192 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065267456 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077317251 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.079331558 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064220214 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.069719638 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072751481 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.07235432 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063395146 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070077225 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.064320312 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070188582 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069532555 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.07219038 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070638361 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.072049664 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063083067 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072522875 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071888661 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071928709 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.062842587 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075805769 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.063376629 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070278752 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064357334 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064041709 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.062758588 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069128977 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.063667814 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067539577 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.071147304 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.062116088 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.068565647 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077264114 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.063899678 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07108431 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.062430022 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.063191936 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.075181673 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075105105 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.063890558 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06773776 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.062620581 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.069278589 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063072646 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.063790851 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.063619093 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.063500451 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.068506411 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.063929769 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06767988 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.068673309 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075923624 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.062977595 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068342123 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067899815 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063630523 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070504947 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064136704 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063397548 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.062539411 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077049441 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067526433 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.063299643 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.068682986 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067642822 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.07096175 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.062115866 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.071196823 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.068505334 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.205288506 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071245175 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063536774 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.076003432 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068441347 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068333358 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.063483979 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.064405401 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.062786833 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.063401005 seconds)
done (took 12.475105244 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.064564231 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.093762748 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.072648818 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.080533339 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.076093224 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.064715673 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.068525734 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.082173272 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067482697 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.086765299 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087663741 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.087680282 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.093855003 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064707637 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065869304 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.066643098 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.064670119 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.072737477 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.081816953 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088136945 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.096323058 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.06563182 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.075410897 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.08198057 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.077404731 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.08339758 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067288943 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.0666339 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068718855 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.084209241 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.090516324 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.065785808 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066553012 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.081119083 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.080751283 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.07368452 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066634514 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.069051623 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.064703908 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.064094205 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066982528 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.079805211 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.068227774 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.07070434 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.064920005 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.064872692 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.064693103 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.067672162 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.077575066 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.068502637 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.072187014 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.076679102 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.066299126 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064374932 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.062478526 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.068670388 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.063901424 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.064986684 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066124712 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.063816826 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.064425197 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.066704131 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.064906798 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.064781093 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.067518883 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.0671193 seconds)
  done (took 6.263149719 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082653541 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.093311386 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.081690214 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.081765136 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.063510266 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.064610837 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065000014 seconds)
  done (took 2.05869793 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.065334354 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.077902515 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081119673 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081499707 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.073591873 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.082801419 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065016994 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.094976309 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.063827596 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.078822366 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.113355123 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.084184325 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069825359 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078191725 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065414229 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.07257232 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.064821532 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.07287217 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073522306 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.08119229 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06878729 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.092096933 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.078398576 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.065287279 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.085096635 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.069214886 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.063786742 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.06496367 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065845041 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.065609282 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065592247 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.103856109 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.06846958 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.076712334 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065720783 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.064075048 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.070623126 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067855371 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.067507723 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.073590088 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.070368392 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.065845917 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.063043321 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.06638609 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.067043544 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.069048453 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.063020759 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066095393 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.065703966 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.077097417 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.063436913 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.06852343 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.067720443 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069558471 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.070842886 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069118105 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.072642226 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066275991 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.076484885 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.072811607 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066799254 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.075218278 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105941519 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.070057392 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.073056652 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.068999329 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.068548675 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.070115681 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.065498876 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.06683171 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.067389327 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.074576619 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.064395844 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.06683084 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068065162 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.06645939 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.068930581 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.081353718 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.081216107 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.077346695 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066817893 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.06674475 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.068766984 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.081057162 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069658272 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065808566 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.068068959 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.063935514 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069464759 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066043153 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.070937692 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.06598895 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.073143875 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.067202498 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068102344 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.073908136 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.064703631 seconds)
  done (took 8.484702741 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.067100413 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.066413937 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.067373253 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.065598726 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.065668009 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067012309 seconds)
  done (took 1.962168287 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.089345486 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.065322913 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079343078 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.065542403 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.101298176 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.074691859 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.074486245 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073930016 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.077936904 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.077901525 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.072632132 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.075723344 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.072041132 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.067109194 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.072270008 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.066160602 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.072643096 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.068547752 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077330717 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067517712 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.078939278 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.067308653 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067103358 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.077319199 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.068340412 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.06584504 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.065616236 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.077325402 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078393884 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078269929 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.068433051 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.070179216 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.074869185 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.075581999 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.074802192 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074757283 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.066642585 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.072970805 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.069210839 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.069946363 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.076637022 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.069172908 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.069498539 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.072896637 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.076248543 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075153952 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.072725751 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.071679916 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.072840042 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.070909163 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.071010059 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.066138977 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.068064552 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.070934048 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.073721774 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07557266 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.072759199 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.074468704 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.06848429 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075510722 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.066838834 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.070349327 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075550076 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.069712709 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.07116868 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.073064058 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075193801 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.068923502 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.069062035 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.066866919 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.072671872 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.066710197 seconds)
  done (took 6.750132052 seconds)
done (took 27.033918458 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.991130457 seconds)
  done (took 2.495348632 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.567779601 seconds)
  done (took 2.109521498 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.679810989 seconds)
  done (took 8.23038093 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.299631848 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.338924678 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.731988015 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131749373 seconds)
  done (took 3.083220963 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.72604431 seconds)
  done (took 2.276147535 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.232742628 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.222515838 seconds)
  done (took 2.019718837 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.3491262 seconds)
  done (took 1.895166237 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.138347687 seconds)
  done (took 2.680419966 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.23354042 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.162237579 seconds)
  done (took 1.953152946 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.470780733 seconds)
  done (took 2.021020423 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.4960931 seconds)
  done (took 6.051039344 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.241624619 seconds)
  done (took 1.835493683 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.237568872 seconds)
  done (took 1.793414502 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.720738005 seconds)
  done (took 3.270401597 seconds)
done (took 43.265766507 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083193491 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.085893007 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.083891036 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079200018 seconds)
  done (took 1.858592793 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.07276772 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.070312325 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.074097542 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.074541786 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.072561585 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.073286239 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.073527259 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.070064012 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.071292531 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.069651141 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.069010549 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.069743519 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.072966312 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.069742097 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.072701156 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.074176443 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.069640094 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.069714153 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.070971407 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.068481094 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.072567659 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.069695504 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.06803237 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.068864789 seconds)
  done (took 3.258421235 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.076861604 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072918609 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075332222 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07216013 seconds)
  done (took 1.856571734 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.076258238 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.086663777 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.087918728 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.093922077 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076694348 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.076808521 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.085093282 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.085456634 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.065485105 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.088886563 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.067491577 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.066254547 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.066480408 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.088182275 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.08462092 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.062692591 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.064409135 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.077027779 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.076528014 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.078838414 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.067415849 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.064979295 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076324706 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.076311205 seconds)
  done (took 3.400596785 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.080691746 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.06535172 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.080050176 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091910701 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.094731491 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065791616 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.08103345 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093850023 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.14225544 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065504347 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.071101728 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065381015 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.107595231 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065154299 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.081752902 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.112559512 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.116585305 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069039338 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098991109 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065715498 seconds)
  done (took 3.283159331 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.078298351 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.06964979 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.070079915 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.065820519 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077996064 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073389448 seconds)
  done (took 2.005493086 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069284491 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068101263 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067775261 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066679169 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072366127 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067241767 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066226333 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067747056 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067596597 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067246449 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066854656 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065934829 seconds)
  done (took 2.3774962 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.165915205 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070056138 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.071099233 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.068828739 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072319366 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066786087 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082408622 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069213241 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.086858272 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066720039 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066639007 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069236746 seconds)
  done (took 2.519433751 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101423096 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128507488 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097684527 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073196315 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17355318 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095130897 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.091171198 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.121945015 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093803517 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.06989986 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094436173 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137485852 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096799503 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.099193922 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082835677 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125403233 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111078171 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088792245 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114842682 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082591647 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.072003687 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134204739 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070867412 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093133051 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102088891 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.101729414 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111694357 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134819329 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083334146 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.089223174 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083178446 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.074575845 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.10560469 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.084196797 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.097186561 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094439237 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099354696 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086876587 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.090674829 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123080128 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155532048 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10016763 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101419357 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136675787 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079810653 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.109928296 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081671922 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099826936 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105699441 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09400359 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076695699 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09374197 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.106388299 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100379143 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.081235318 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081835961 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118798253 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.100155618 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097146824 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081267481 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107752534 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.087324254 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109183705 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26759297 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141518428 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106033835 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139702517 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127257482 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097846952 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.091555362 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.093716859 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077217438 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113093651 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098767886 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137956439 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111340242 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101029469 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.098147218 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083432012 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110262618 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116588003 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095292724 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096698604 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148828129 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109886442 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091567005 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092489214 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.146705418 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072751054 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149119031 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091183356 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124543796 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097546016 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140543363 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093136058 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.084923363 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108807016 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104522995 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.090941014 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104141613 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086144656 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11549208 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094049415 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102378728 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082898693 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092478325 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088353133 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.098632544 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.074471938 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103418834 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114861567 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112966271 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076333804 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110019227 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088241369 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.079052901 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094369435 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141665568 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085576589 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077181496 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155192837 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.094607527 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.118764238 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110985983 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.085438871 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.268236404 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136787872 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091775152 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09061011 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076507158 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158562849 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077055678 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120619984 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082660143 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104864212 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107490171 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131028474 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138565426 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09431083 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078063853 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093694063 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.107732722 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088958719 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087559813 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078731924 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.109614973 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12802003 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.103548387 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083195581 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.094255491 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.070579442 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114004113 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075416197 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083565697 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097558977 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.089400905 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.091733461 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145003797 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.085824389 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110130645 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100117264 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.068537607 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093762205 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155578523 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085048867 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.113925404 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118073555 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085346262 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069752981 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.095927253 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.072585454 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107708343 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.092051218 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106973717 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07808101 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106468932 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069827232 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076043184 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131522133 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102942079 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.092351214 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.135898603 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108398752 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.091031924 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.104956432 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.098454989 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095357433 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10407451 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.107833833 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260471152 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.074474243 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13080948 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089834051 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.077585935 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086320153 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079212256 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.079524194 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099992906 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11492404 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088048845 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101237363 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103509946 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092100731 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.113642137 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09104574 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081035325 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134027598 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077559413 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077200335 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090126596 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.10830128 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090037749 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.13748784 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.082414974 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137854207 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093033564 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080959135 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113960635 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.068531752 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.069696737 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.083047591 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094237373 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117873713 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080684841 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080472076 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121752364 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134964866 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100007085 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1048224 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070012458 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09249501 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138620833 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.118544094 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083494179 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112231499 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086751024 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130266932 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095721187 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120712982 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106473996 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110714023 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.091909146 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.082997828 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.074683375 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09072066 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112235828 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086262514 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081601713 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.067686318 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074594855 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093077722 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0896198 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111131988 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086556145 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134298153 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.072527445 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098665528 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10384155 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.256150514 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092373363 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099712098 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.095477849 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094009089 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094279872 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094928795 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.075436986 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128989262 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105648268 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080531663 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091556866 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097410106 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10969349 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11182109 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113351841 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096491251 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107901617 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125331709 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099265781 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082128101 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084321048 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.094931708 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.087096819 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081886853 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.102533609 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111519087 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099294422 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108911199 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.095466731 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.091724669 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106520587 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092414183 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088147661 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.118421197 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15398597 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.101987032 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.104530092 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084936676 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1072397 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10565059 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116464287 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.114334918 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111056347 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072307249 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077097092 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.072413621 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109074884 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08156829 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117583249 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076324849 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107486271 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097024053 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080213956 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.066630399 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101720087 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09467825 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.084692219 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125680088 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.11649358 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.074490599 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.092185009 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10770745 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084307682 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126681758 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.104050104 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102173041 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.072998616 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090389109 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.071928895 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.258568591 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.103500053 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.077551535 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.076563287 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.070336998 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107654922 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084717993 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110511777 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088092532 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101213561 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121551206 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131374546 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086731146 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097346651 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119321534 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114557449 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.082138481 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114976875 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138889208 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.122934727 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.083620121 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.086288063 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109758075 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108640249 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104382154 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077792463 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081099562 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111328445 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115658985 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.06999677 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08674224 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072086398 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.086424697 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11492699 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096989736 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084198188 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120142551 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077118897 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110281053 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097685106 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124105203 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124873257 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148486878 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099843455 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088171302 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078776433 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127183071 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.072400458 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119097509 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112959451 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088740018 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.070197884 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086658322 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.098907477 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.627843445 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11208454 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078345698 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138755365 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08912059 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119333861 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087578781 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.12187815 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091219276 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103704069 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091470513 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.281091995 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.083302251 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113190167 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.18224639 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112926048 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.109581199 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07579925 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.090591591 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076315187 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.080476342 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.083278517 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089325174 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111602551 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086210221 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108391435 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.081649586 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.109200546 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092867181 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090021564 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.099616795 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081399576 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138083357 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08729583 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12297417 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108021286 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078529894 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074446527 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.086259287 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.101689887 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08274777 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094736978 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.078807068 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.075720838 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152859242 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101021991 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085514938 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10502806 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.094964669 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.088387527 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093927865 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119830641 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112943808 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075178737 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.090037974 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106392178 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081480038 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077070349 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099610048 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.071448779 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089925686 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10042298 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099064759 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091166569 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.101632615 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077834657 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087468714 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109846908 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085373248 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.076884737 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076907899 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.076491313 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.076337818 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103706798 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108698734 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114254614 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108533444 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092180788 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093075163 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.07868972 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.224482416 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078987403 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.247299026 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.106496971 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078859964 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.135887353 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090559861 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091696849 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098951461 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105503791 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155942152 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077079895 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111773233 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096638371 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112393779 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089728503 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109198491 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097227917 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094163901 seconds)
  done (took 51.183798259 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.095008604 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.152915523 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.160031756 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.080565174 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.094368841 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.119118764 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.208385616 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.192528743 seconds)
  done (took 2.781903119 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.06877477 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.083196118 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.106511398 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.084015421 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066875758 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.06803308 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.210988486 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.083451572 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066107168 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.105013002 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.076713277 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068786614 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.401931973 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066081277 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067157735 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.076703886 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.065453814 seconds)
  done (took 3.426307595 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.374875327 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.599625435 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.342336144 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073284743 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.949025797 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.090084889 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.260543279 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.13465184 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.080027346 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.553757042 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.367278067 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.130529654 seconds)
  done (took 18.627131621 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076909466 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.07402966 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.077281105 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.076996857 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072471505 seconds)
  done (took 2.040341142 seconds)
done (took 100.216437683 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.08285187 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.174195343 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.068059347 seconds)
  done (took 1.943607406 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.084814861 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.082570532 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.082736677 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.08015769 seconds)
  done (took 2.002877039 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075499536 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077351483 seconds)
  done (took 1.817151897 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.249548733 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.163903748 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.091543845 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084687538 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081387342 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.08171808 seconds)
  done (took 1.920730456 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072798234 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.071904757 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072629206 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.073024968 seconds)
  done (took 1.951711574 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.068999338 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.066649936 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.068959933 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.071671356 seconds)
  done (took 1.940765719 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.084523689 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.084596454 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078738645 seconds)
  done (took 1.909678137 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.097752065 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.097217482 seconds)
  done (took 1.857734424 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080659317 seconds)
  done (took 1.743997824 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.091166662 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.099718186 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.15565101 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.112483455 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.149912436 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.133388648 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.076357882 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.078156047 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.072747501 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.071137236 seconds)
  done (took 2.70459327 seconds)
done (took 22.044237204 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080093699 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.363016455 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.358042276 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085071499 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.670115741 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.354848247 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.96855666 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.089867465 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.097639029 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066485239 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082918846 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.646529077 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.962330277 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.326177358 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.948400941 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.326058574 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.667499101 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068878064 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067206431 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066554142 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.95220112 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.065866597 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06721438 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.066675888 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.647328108 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371702561 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067593041 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.323810054 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066728491 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068804727 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354790602 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068256912 seconds)
  done (took 16.056551619 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071722475 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123972206 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073180916 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084302059 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.06946126 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.067864671 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.069725533 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.067196775 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.107934462 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066823165 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085056324 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066787669 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.0704254 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068308222 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087227241 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067538952 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068467155 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067896988 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066976785 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070069736 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085463057 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066962186 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067530069 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067483836 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067817289 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080100846 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068249501 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067041489 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067346069 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069703646 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070306179 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068865275 seconds)
  done (took 4.043806783 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.123926791 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.129878941 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074701975 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110047791 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.121905306 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070883467 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.153603006 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093874414 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.1161959 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069457534 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087359751 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069076006 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.105951974 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068791497 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087662317 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067988055 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068858315 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067990546 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067031054 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067821989 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085981191 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067173565 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067486598 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06797618 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068279652 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082334676 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068262799 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067009248 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06705098 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069721036 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071580033 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068535896 seconds)
  done (took 4.357396372 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.070650472 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.072811377 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081080751 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.081854556 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.067198583 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.069640223 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.070696557 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.067068849 seconds)
  done (took 2.267485209 seconds)
done (took 28.406567248 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080035897 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068231567 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071925628 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.08886048 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074481185 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.071591816 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.065722694 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074883397 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072276906 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.071841396 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.073217831 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067141888 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070355569 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.065134096 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.072280341 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.066809386 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.074009318 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071548953 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.071563618 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.071490954 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.068192063 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.070861936 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073449406 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.070057475 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.070175687 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.070044167 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.074786861 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.070748117 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069304385 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.068321179 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.066608943 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.076120172 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.072431765 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.072143183 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.065287887 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.065442333 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.069769584 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067548475 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.072120791 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.074654316 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.066665245 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075567055 seconds)
  done (took 4.644208259 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.085860818 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091145765 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083568104 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.083119946 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.102116721 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.084106163 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088533195 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079956007 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.078034365 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.08741177 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074779109 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.082373714 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.080152927 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.073789967 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.07853186 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075139337 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.080865646 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.07305469 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076830289 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.076906562 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.085289008 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.07047636 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.078244927 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.077914123 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.07250536 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.078280958 seconds)
  done (took 3.789478579 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.07393905 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087656921 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.093921965 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.152112773 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.111442847 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080240329 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080085025 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.093972757 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.098403339 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067009841 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071012893 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094419692 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095745744 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.075206428 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.108110177 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.083449963 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.080779598 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068580461 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.07284468 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098075524 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.087508204 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.084375693 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.096479091 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084655467 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.065243424 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.068066947 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072237269 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080299302 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072841145 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078147776 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070102488 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.06926003 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.066683671 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.076637709 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070118387 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.064565706 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.08950417 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07770204 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.07933906 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.10807462 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.075284151 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.0689438 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.097442673 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.13169698 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067300272 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.070832817 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.071543162 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080496812 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069260333 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095793162 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081498291 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066364251 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.067130906 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067307472 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067855752 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081447775 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.067655105 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.067902144 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077515895 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.072057791 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.088074853 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071197713 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085308628 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.06566251 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.076260762 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.06694285 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067461976 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.064721254 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.099356819 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.072473666 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.116117284 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.066606433 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.06390603 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077477223 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.076326779 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072339703 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.065676581 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085017666 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078826015 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071470337 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077854998 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.068670191 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.068558478 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.099151803 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.066792808 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.06681972 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.065527387 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.070447282 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070767561 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068126856 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081587354 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067164975 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070512563 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.082895751 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067645059 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068126179 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.070599936 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.069238168 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067249045 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.0806879 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071495426 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068348117 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077739755 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.066550522 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.068951579 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079631069 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073430795 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.065749367 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.068207164 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.069979455 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069175908 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071698857 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070975431 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069641762 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.074204432 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074915732 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073275041 seconds)
  done (took 10.778601863 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.168064109 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.15717569 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070220856 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.150686334 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076479532 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.073351601 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.150447285 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.08874805 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068759514 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.06944177 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.067775519 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.097434164 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.094525382 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.106162234 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.071335319 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069251222 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.092451126 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.101774548 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.153418276 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.148507809 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.092360346 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075388621 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070722119 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069983368 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069652002 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.076861522 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086775501 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.074915247 seconds)
  done (took 4.423075165 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.078480283 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.094658688 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.071861925 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.079616179 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.085945723 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.06703381 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069106398 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068183283 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081152212 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.074783683 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066189812 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.070808051 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.06951522 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.068711351 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.067396594 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.07274809 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.07314918 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.065120827 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070091942 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.071503487 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.076725583 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.091891496 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.070897197 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.065805517 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.068784872 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.06745821 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.074295426 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.077647789 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.066766049 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.081626992 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.06365852 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.071740518 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083031615 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068849048 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.06817643 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068577143 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068415026 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068159672 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068785811 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066328275 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066123006 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.073248483 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066876485 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.075866089 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.082234598 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.075772901 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.06920073 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.068607477 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.068893318 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.063283254 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.069286328 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069366274 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.068664014 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.073860472 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.070062567 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.06986968 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.071255176 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.094192388 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074369085 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067725203 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.067480175 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066506439 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.070127029 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.078240958 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.085407527 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.070005027 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066935084 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068126088 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.073807602 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.082371056 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067661384 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.073028132 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065016325 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.066939413 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.068245738 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069306141 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.067713947 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066469353 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067729474 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067800076 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.066796 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067433384 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.067656679 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070449668 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065977807 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066370243 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068445606 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.068354071 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.074287846 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.065707112 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.07000009 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067893216 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.065018076 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.069056174 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.072434011 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069244718 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.080663862 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.077464537 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066903016 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.06448778 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08030044 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.068623095 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.065665255 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.071894291 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.071178123 seconds)
  done (took 9.218645706 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.09520874 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070059131 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087287748 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093629976 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.07937232 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.07402697 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.080153882 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069501892 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085358208 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.067421135 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076979123 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067361469 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080173693 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078751141 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070127286 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079158783 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071180775 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.088105978 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083870262 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067279357 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.077746505 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.08101914 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.081289629 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.084758482 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.084859449 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.08526442 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.080706199 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.071214401 seconds)
  done (took 3.948227055 seconds)
done (took 38.48223129 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.764427146 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.936693433 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.758619041 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.94237307 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.797717744 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.896140081 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.867939824 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.749176368 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.920344635 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.809289276 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.019503345 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.254055903 seconds)
done (took 65.470933397 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.825411467 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.926649337 seconds)
    (2/2) benchmarking "String"...
    done (took 2.021220272 seconds)
  done (took 5.632998213 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.996253212 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.584250498 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.017440787 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.751126949 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.754606635 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.208808084 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.559989097 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.209326465 seconds)
  done (took 30.769866295 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.839729625 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.979282113 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.42975434 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.449140389 seconds)
  done (took 15.43230083 seconds)
done (took 63.442046843 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.789663185 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.749167595 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.7636565 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.778292839 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.761933031 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.749887415 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.752325705 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.752184646 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.769876474 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.817624235 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.752031889 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.76618282 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.750757769 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.798622411 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.458505988 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.818187212 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.776130926 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.765716202 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.765453846 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.780657635 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.764136762 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.758479779 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.220446434 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.941765361 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.36170358 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.082429315 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.263023825 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.159079719 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.76629374 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.757934929 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.847200212 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.010679485 seconds)
  done (took 203.734149591 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.759974169 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.537585732 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.616124995 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.764574008 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.044224317 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.936825652 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.862288929 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.164702971 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.763545727 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.768337952 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.902095592 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.760787698 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.927751023 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.703559026 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.796314763 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.789361198 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.902908781 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.962724388 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.801135792 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.910435928 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.765308113 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.726524647 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.658156944 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.886590504 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.776349659 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.768980928 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.759198867 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.780755437 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.947625552 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.851234336 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.806331016 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.779390659 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.919200025 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.630911726 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.78338598 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.773437227 seconds)
  done (took 167.984236348 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.957094071 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.765170879 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.762467209 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.819665019 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.883020497 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.762527502 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.422087 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.771845749 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.093749575 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.763333808 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.762893611 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.763919385 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.762686861 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.777137978 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.84909143 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.761039122 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.778928243 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.764389552 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.79022918 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.759543435 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.761328832 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.764630441 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.763248601 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.763189108 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.766163264 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.763713844 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.164967756 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.005808659 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.761289539 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.764834199 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.546228769 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.776126248 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.016042204 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.760514838 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.856247492 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.818937526 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.882524841 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.764611379 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.983263307 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.835073612 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.763557278 seconds)
    (41/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.762625361 seconds)
    (42/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.828014693 seconds)
    (43/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.774041518 seconds)
    (44/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.759946371 seconds)
    (45/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.764995522 seconds)
    (46/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.770871882 seconds)
    (47/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.829883072 seconds)
    (48/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.032214384 seconds)
    (49/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.766892737 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.884945189 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.248903807 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.764355468 seconds)
    (53/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.763698706 seconds)
    (54/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.764742881 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.355268584 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.765232945 seconds)
    (57/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.764422764 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.770103669 seconds)
    (59/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.771455005 seconds)
    (60/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.765250848 seconds)
    (61/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.764767442 seconds)
    (62/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.764830475 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.159136508 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.833037166 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.366844979 seconds)
    (66/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.762076112 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.023558083 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.763156988 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.482462546 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.967422339 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.763171452 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.76488433 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.764210185 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.766628479 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.766572748 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.76915125 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.886055241 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.771704504 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.892061274 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.845664284 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.883365139 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.766977693 seconds)
    (83/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.77919252 seconds)
    (84/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.592400459 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.835905337 seconds)
    (86/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.802109317 seconds)
    (87/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.593240548 seconds)
    (88/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.763294833 seconds)
    (89/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.139530691 seconds)
    (90/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.549465292 seconds)
    (91/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.766779029 seconds)
    (92/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.765740806 seconds)
    (93/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.779786245 seconds)
    (94/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.768208475 seconds)
    (95/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.766170048 seconds)
    (96/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.767238864 seconds)
    (97/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.849094506 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.765225243 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.767205232 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.766979205 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.886233339 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.497280066 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 21.959061198 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.763435073 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.767371466 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.776354978 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.847452075 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.883685961 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.766659021 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.83333259 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.770098785 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.768347604 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.857139797 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.76524991 seconds)
  done (took 400.207458396 seconds)
done (took 775.634841057 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.356213424 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.330981262 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.434264295 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.343078822 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.319416749 seconds)
  done (took 13.481680477 seconds)
done (took 15.184964805 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.782258238 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.774919713 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.825600968 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.851056514 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.779668391 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.786789927 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.848829665 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.783792337 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.818889975 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.822497946 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.849151884 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.850663528 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.790858505 seconds)
  done (took 25.262867912 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.783756289 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.927959958 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.011147792 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.817740768 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.78496715 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.017321496 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.837673191 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.919357515 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.922931603 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.01122638 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.015958985 seconds)
  done (took 22.751537147 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.783657226 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.934221377 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.014285818 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.815927937 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.783825066 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.019256221 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.843795612 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.926933444 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.927068725 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.01438595 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.015862593 seconds)
  done (took 22.788986622 seconds)
done (took 72.506940946 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.773108542 seconds)
  done (took 3.47265871 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.790972878 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.933524377 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.771859462 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.770284726 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.771496877 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.771491706 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.77030068 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.772511215 seconds)
  done (took 16.053112447 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.775313873 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.77234568 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.772950982 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.773087732 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.771203716 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.773454765 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.773660632 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.772500845 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.772698209 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.772058331 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.773065121 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.776964799 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.772532502 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.773301023 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.773257954 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.772873939 seconds)
  done (took 30.071644024 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.776305422 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.773623548 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.773316961 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.772689448 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.773368191 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.773437484 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.776052268 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.772608691 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.773714432 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.773976829 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.773475377 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.776729371 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.773954214 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.773717487 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.773987182 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.773761605 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.774369939 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.775403539 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.77855755 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.77377752 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.774021078 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.775053112 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.776713918 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.773061365 seconds)
  done (took 44.288313552 seconds)
done (took 95.599925617 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.539365162 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.773030907 seconds)
  done (took 10.015040501 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.77546478 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.77605622 seconds)
  done (took 5.258976425 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.775617948 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.775996108 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.775960181 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.775238117 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.775454687 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.776155419 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.775252241 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.775900125 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.775965441 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.776604864 seconds)
  done (took 19.460973448 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.775902879 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.776294208 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.775729314 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.776986955 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.776166192 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.775652975 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.776525977 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.775742082 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.776627363 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.776554386 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.776870421 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.776238135 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.775812874 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.775290917 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.776066829 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.776563705 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.776866526 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.775842302 seconds)
  done (took 33.675351814 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.777493524 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.777638551 seconds)
  done (took 5.259524848 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.777968639 seconds)
    (2/7) benchmarking "second"...
    done (took 1.778119828 seconds)
    (3/7) benchmarking "month"...
    done (took 1.777191685 seconds)
    (4/7) benchmarking "year"...
    done (took 1.776976064 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.777772666 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.776741362 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.777586697 seconds)
  done (took 14.147902373 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.777896397 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.935371867 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.987636376 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.608871423 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.779228629 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.782155099 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.107304557 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.780709407 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.783113392 seconds)
  done (took 20.247814597 seconds)
done (took 109.773315781 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.611614018 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.773144654 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.043036546 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.894727453 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.793885449 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.115509117 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.812956956 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.425483551 seconds)
done (took 42.179491418 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.849841062 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.781893866 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.808404846 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.808625294 seconds)
  done (took 22.104906677 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.780589703 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.151610198 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.809511628 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.642728902 seconds)
  done (took 22.106669081 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.162658699 seconds)
    (2/2) benchmarking "read"...
    done (took 2.12911294 seconds)
  done (took 6.003377879 seconds)
done (took 58.776457027 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.778424642 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.779211826 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.779691757 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.779515676 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.779260399 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.77885471 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.779473707 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.780554609 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.779090361 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.779610412 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.780283613 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.779521927 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.778106737 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.780631541 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.779082552 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.779746374 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.779829366 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.780016082 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.779142927 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.780834178 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.780263891 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.78061784 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.779256942 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.780914373 seconds)
  done (took 44.418133385 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.780513761 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.779839995 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.780803332 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.779474386 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.780079418 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.780672766 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.779380982 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.780842321 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.780664734 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.780049449 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.780624536 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.781683802 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.781367728 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.780183775 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.780474709 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.780470325 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.781046569 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.780562531 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.781015401 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.782385346 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.782092222 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.780907196 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.782379146 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.781397787 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.781702451 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.781667173 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.782013139 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.782808258 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.781633893 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.785676485 seconds)
  done (took 55.144938617 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.781895256 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.782129085 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.780918796 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.781203065 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.781405749 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.782457054 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.782185819 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.78154538 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.782952486 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.782022037 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.781591695 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.782557695 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.782021286 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.783469845 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.782788482 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.784180215 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.782110674 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.781004614 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.782437247 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.783571066 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.781924719 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.782427753 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.782997592 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.782516784 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.783486009 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.78328417 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.783062434 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.783312383 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.783367637 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.782766352 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.783860531 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.782389697 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.784892408 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.783316138 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.783167341 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.783381024 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.784032959 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.782586756 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.78498333 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.782967414 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.783871476 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.785140739 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.783663479 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.783825008 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.782659921 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.783761874 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.784244849 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.785334695 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.785247673 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.7861757 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.783748013 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.784366212 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.78391568 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.784602403 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.784543094 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.784315692 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.784572953 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.78556325 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.785336288 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.784603068 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.785419061 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.785263286 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.78368262 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.785026249 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.785198593 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.784315996 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.784887656 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.784427504 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.78533181 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.784370489 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.78464257 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.784476842 seconds)
  done (took 130.127427605 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.786404423 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.78599303 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.784615533 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.784763332 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.786607216 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.78633231 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.785435188 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.785586624 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.785021208 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.786443355 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.78756105 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.786256657 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.786688077 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.787068553 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.786536223 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.786444653 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.785532189 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.786206625 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.786581342 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.787577318 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.786679702 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.788019094 seconds)
  done (took 41.010022038 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.787597858 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.787441113 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.786656571 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.786224513 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.786695254 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.786427379 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.787654243 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.786781585 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.787538659 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.785508009 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.786554176 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.786481684 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.786196272 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.787572218 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.787106666 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.787145911 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.787431481 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.787337232 seconds)
  done (took 33.879394186 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.787461286 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.787784095 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.787558852 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.786682701 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.786635107 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.787273149 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.78672112 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.787599625 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.788180541 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.789360413 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.787860632 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.787892498 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.787456746 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.788311412 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.788881854 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.789374463 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.790157836 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.788477986 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.788710745 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.789330462 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.790101877 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.789204064 seconds)
  done (took 41.055817168 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.788334491 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.789156574 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.789820933 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.789422686 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.789834384 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.789490911 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.790212587 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.789939089 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.788887061 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.788927568 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.789314155 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.790600472 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.7902973 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.790184066 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.7897893 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.789452756 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.78950175 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.789870586 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.792431911 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.7909278 seconds)
  done (took 37.513462836 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.793154477 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.78973598 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.789331787 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.789460693 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.789589695 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.791414206 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.791327646 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.790245297 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.789735135 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.790263697 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.790701979 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.791788707 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.789804936 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.789811478 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.790653653 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.790994543 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.790984062 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.789825969 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.79048831 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.790413705 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.789804124 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.790089673 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.790305542 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.789753032 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.790407185 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.790383456 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.788747724 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.7898487 seconds)
  done (took 51.847169397 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.790284329 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.790724666 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.789975277 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.791074948 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.791417075 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.792569294 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.790507041 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.791647219 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.791447817 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.791095907 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.793522722 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.791694608 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.793140332 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.791723879 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.792687057 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.792928881 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.793283442 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.792001687 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.793249434 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.792442245 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.792377014 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.793455058 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.793215618 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.794050792 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.791738259 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.791379502 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.791522509 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.794322812 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.792017768 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.792206823 seconds)
  done (took 55.485642456 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.813539206 seconds)
    (2/2) benchmarking "in"...
    done (took 1.813435684 seconds)
  done (took 5.345959972 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.793352559 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.792906112 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.7934207 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.793483789 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.793037333 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.793037267 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.793255816 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.792539853 seconds)
  done (took 16.063785378 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.793821446 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.796700543 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.794461605 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.793573433 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.794661955 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.804132228 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.798608437 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.79385684 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.7948625 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.795353863 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.797202087 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.797389439 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.802645182 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.798175566 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.794535264 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.795891935 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.795354217 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.798739559 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.795239039 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.795090155 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.797025987 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.796293278 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.794601796 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.795556272 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.794044869 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.796239956 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.803348473 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.794972845 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.794700173 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.793975879 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.801605833 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.795311992 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.794352616 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.794056734 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.795696064 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.794618319 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.801975982 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.795406134 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.795725907 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.795570806 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.797851112 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.798232878 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.798658889 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.801901123 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.796932728 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.797281238 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.79555322 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.79405789 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.795418616 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.798919896 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.803932495 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.796686402 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.795810485 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.796967691 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.798945593 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.796368898 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.795693801 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.797979186 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.803302031 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.803892222 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.799709373 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.817487551 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.806547205 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.795504639 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.796656206 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.805908214 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.819796879 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.798862721 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.798040007 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.797211161 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.805392436 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.800157153 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.798797084 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.800220117 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.811252323 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.807962017 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.797619061 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.798830149 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.798722632 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.799833399 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.799604392 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.798773969 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.798186408 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.798436034 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.808885303 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.823627539 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.799284306 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.798410529 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.800245787 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.801653838 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.803006304 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.801971958 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.800761455 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.79946282 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.79926408 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.803398587 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.7986669 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.798899248 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.800180966 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.809307633 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.80099052 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.801589889 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.803389266 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.80860149 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.800657902 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.799797778 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.804137784 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.7994448 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.807508935 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.800135711 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.800730398 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.800198413 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.803211382 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.80351387 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.801318417 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.804064763 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.809301532 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.810259115 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.804085828 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.803937103 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.804506904 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.803651605 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.810620705 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.823896709 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.800094423 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.804688873 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.803937601 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.811992539 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.804268665 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.80178206 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.804281602 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.802137701 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.801880442 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.802685276 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.802964068 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.801886831 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.802654343 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.802365896 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.802164715 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.803036559 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.805121532 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.802559301 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.804917921 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.802278329 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.805722667 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.802284793 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.804832798 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.810596243 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.804742383 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.8022482 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.802345604 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.804698966 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.805212754 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.802182152 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.802569943 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.802582261 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.802640653 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.802904243 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.804077209 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.801630358 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.803021725 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.804355864 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.807600632 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.80245798 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.802945693 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.804962553 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.802596677 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.803830598 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.804458589 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.803165844 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.805280581 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.803606246 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.806599663 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.805884172 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.803303713 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.802901505 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.804166942 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.803620401 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.806779681 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.814019888 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.806490793 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.812638762 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.803223963 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.812352333 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.805604247 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.804330884 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.803780982 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.804161194 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.804167327 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.804327471 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.804878444 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.808717296 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.825783212 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.816251199 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.808335325 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.807484431 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.810846465 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.810655584 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.811233828 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.806171319 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.807392092 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.806502028 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.806899611 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.805003607 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.805982855 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.809692973 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.807918031 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.806625886 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.80916276 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.806225754 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.805413521 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.804558991 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.806271788 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.807218047 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.806249719 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.806552221 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.806731593 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.807160261 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.813471858 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.808240935 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.807795144 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.805498045 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.808675731 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.807185124 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.807203121 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.807054496 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.809804119 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.806192094 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.807673681 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.814423451 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.809048645 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.807986674 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.807739345 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.806983965 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.808995671 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.807494995 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.810400656 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.81554461 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.809681582 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.807864934 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.812656077 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.809357282 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.809211596 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.80822912 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.808317117 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.807991501 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.809427424 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.80825768 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.808597969 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.815434206 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.80919921 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.809538098 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.808753934 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.811744315 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.810731183 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.809083742 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.807649396 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.811271505 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.816814606 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.815688336 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.809506453 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.812401784 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.811458512 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.810562058 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.813210599 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.808820898 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.82165096 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.818917222 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.809237819 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.810284185 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.809440586 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.811620958 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.810165627 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.808555213 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.816300599 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.812011489 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.810345843 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.81459329 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.810227486 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.809038987 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.816527284 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.81009519 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.813228109 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.810328588 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.810956672 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.809657585 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.810544085 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.811801169 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.810674111 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.811977935 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.814583642 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.810372349 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.80949904 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.811512407 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.820716479 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.811882745 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.812125784 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.819177184 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.812035907 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.810739514 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.812638182 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.811582773 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.811405471 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.811443205 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.810887896 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.812436201 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.81108509 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.814870853 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.821629195 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.814632494 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.818459937 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.815327072 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.822174703 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.811720145 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.812446492 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.812176022 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.814779349 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.81993936 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.811885657 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.812204537 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.820540964 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.814373989 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.813139216 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.816922505 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.812128064 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.811756367 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.811539734 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.814269799 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.815758961 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.813183431 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.810958135 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.812202794 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.812822474 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.812775469 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.814244616 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.813851596 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.811810181 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.813388593 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.812498704 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.812428388 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.811155086 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.811522941 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.812268919 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.812847831 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.812648493 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.821008286 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.8137378 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.813253989 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.816935604 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.813364273 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.822948637 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.813349752 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.813531894 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.814540927 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.8149241 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.816186205 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.814354544 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.813587915 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.814642682 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.814034231 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.814932342 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.82551486 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.822055861 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.816833939 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.814137099 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.813171054 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.814256165 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.822846982 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.839224876 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.813323638 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.814933706 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.817551437 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.821689776 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.814498775 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.819261402 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.816571718 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.822623584 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.814678887 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.814809534 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.818192817 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.82734321 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.815083315 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.815775262 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.814332415 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.818964046 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.81774191 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.814663182 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.816807535 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.817748334 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.81683721 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.826732804 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.815543458 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.817683989 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.815502054 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.814488263 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.814879461 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.814948239 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.814912408 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.81579148 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.815048946 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.814598819 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.817556579 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.819857765 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.816045927 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.817397316 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.823061655 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.815109873 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.815262528 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.819136849 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.815872929 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.818291056 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.815374709 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.815219455 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.819229667 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.816793531 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.817221514 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.818427678 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.825074232 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.817097045 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.816705045 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.816347519 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.818867092 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.815929359 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.814870826 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.816374336 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.825300849 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.81807311 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.824926561 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.824035111 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.815625783 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.817384262 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.823469451 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.825061123 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.815104654 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.816926583 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.815214705 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.81818765 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.818378374 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.817407458 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.815788597 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.818714081 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.822257238 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.816929073 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.817808792 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.815632497 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.816157346 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.818042887 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.819026532 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.82204757 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.817279333 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.816440891 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.817354549 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.818244224 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.818197547 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.819683741 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.817196523 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.81847511 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.819674548 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.819415003 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.822116556 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.817247128 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.81610805 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.817404279 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.819232824 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.819430317 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.818478294 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.817487137 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.81806031 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.820620418 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.824538822 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.818691106 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.819525019 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.819897539 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.823355227 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.819664213 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.817598473 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.819410116 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.818596512 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.827461897 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.820047579 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.818714921 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.820974743 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.818534894 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.824396878 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.819939175 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.824413376 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.817876132 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.820299779 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.818343795 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.822588522 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.830006326 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.822452233 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.823684591 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.827318886 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.82356051 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.821619813 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.820447958 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.819739409 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.819838763 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.820421315 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.822505785 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.819481414 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.822515978 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.819163979 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.820974388 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.818242367 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.820507024 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.819856019 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.820419411 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.82442422 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.828501343 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.830653965 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.822476829 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.821439432 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.820217508 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.822993673 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.833290295 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.821090035 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.819158934 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.81999518 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.821166682 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.820954639 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.82951847 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.82966285 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.82546193 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.822634209 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.826159153 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.840157937 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.823544481 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.83010526 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.852252577 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.824795996 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.822038878 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.823036308 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.82464084 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.821979429 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.825046476 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.821338016 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.828222941 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.819585712 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.82269067 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.830885945 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.822859301 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.821537393 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.8215773 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.823701752 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.829043873 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.823414295 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.829943793 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.822311831 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.821723862 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.823543557 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.82422781 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.824275364 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.821713747 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.82285026 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.824291854 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.823541568 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.823874623 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.832990194 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.82265148 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.825074513 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.836624052 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.835245789 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.823720602 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.821700534 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.823014707 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.830280955 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.825932459 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.825161103 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.827395902 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.830650511 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.827171081 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.834010846 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.825354839 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.824358076 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.824899891 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.824143546 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.823756331 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.835381608 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.83399538 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.826115068 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.826333473 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.829641906 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.825848344 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.831774769 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.831194687 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.82534883 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.827152202 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.825078742 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.825141216 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.825150856 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.826333038 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.828921852 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.833762009 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.824029443 seconds)
  done (took 1081.919913649 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.825777496 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.825691713 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.826896031 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.825919897 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.824665638 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.82650018 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.82683928 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.827144859 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.826329605 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.827004977 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.826616423 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.826538537 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.825454731 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.82648183 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.826596182 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.827605611 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.827286669 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.826601946 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.827818945 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.827955404 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.825740102 seconds)
  done (took 40.109769479 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.826357952 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.827013348 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.828015674 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.826254103 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.827688371 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.828701654 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.828305444 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.828581573 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.82815274 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.827878485 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.829697514 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.829381634 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.829076883 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.828106113 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.828999087 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.828933025 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.828710165 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.828907621 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.828608106 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.829108307 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.828841255 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.830231354 seconds)
  done (took 41.978368267 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.827915213 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.828502284 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.829401925 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.8314895 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.831436839 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.828468432 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.829298383 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.832558992 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.83084453 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.829936399 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.836268659 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.837517085 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.829226777 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.832887703 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.828537319 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.828958958 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.976480481 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.829294214 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.828502021 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.830809119 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.829002432 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.836582761 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.830567848 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.830943809 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.829639595 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.8299675 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.831514117 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.829700887 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.831542328 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.832367552 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.834924692 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.83038971 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.830762033 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.833898117 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.83249313 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.833344403 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.834204232 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.829681626 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.832479621 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.832232885 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.840503873 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.855401387 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.832390542 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.82963355 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.840167034 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.833389217 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.834027765 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.835064252 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.840884444 seconds)
  done (took 91.689937753 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.832352443 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.831367123 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.830954082 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.835094423 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.832132342 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.832721526 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.831989325 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.832526296 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.832790387 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.833772333 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.832448392 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.831521483 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.832687336 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.833663114 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.832484183 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.832911652 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.832334101 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.832389217 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.833342164 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.832696385 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.833060303 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.832443062 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.833900649 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.833051603 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.832831271 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.833397469 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.833286637 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.833024213 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.832509745 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.832469141 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.832381272 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.833251458 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.832766954 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.833252268 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.832516822 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.83330255 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.83462575 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.835304588 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.83429063 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.834732547 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.834637815 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.834220044 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.833464523 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.833476696 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.834668052 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.834049036 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.835490613 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.834719654 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.83469261 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.834081053 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.835502003 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.835122792 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.834387565 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.834376456 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.832905292 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.834653517 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.835337069 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.834746305 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.834296116 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.835870085 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.835453999 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.835556213 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.835452967 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.834415883 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.834794723 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.835881576 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.834950456 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.834507961 seconds)
  done (took 126.449375106 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.834622314 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.834340093 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.834439156 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.834162773 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.833889802 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.835175943 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.834754076 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.833866349 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.835073334 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.833823378 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.835609942 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.835289568 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.833729929 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.834034056 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.834112328 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.83448855 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.835380086 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.836083737 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.834585232 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.834850206 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.835982509 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.835170023 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.834895146 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.833329453 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.835165248 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.834377343 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.834953279 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.835452499 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.835644187 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.834084308 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.835398147 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.835222921 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.836174594 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.836239278 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.836053954 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.836632337 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.836307576 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.83684222 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.835183649 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.835537632 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.836096984 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.836716118 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.835257887 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.837220881 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.836929841 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.835553206 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.836752805 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.835855316 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.837159177 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.836182705 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.837180212 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.835038026 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.836096559 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.83602088 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.836480674 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.836188702 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.837579053 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.83563024 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.837217405 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.837962127 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.835652394 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.838783822 seconds)
  done (took 115.56631217 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.839136764 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.836900713 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.836607512 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.836778354 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.838082974 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.837973649 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.838229941 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.838557301 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.838837102 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.838355525 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.837347841 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.836387485 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.838616506 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.839954207 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.837976681 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.838372434 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.837854547 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.838110105 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.838454179 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.837181055 seconds)
  done (took 38.520608979 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.838024276 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.835407794 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.837820217 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.836620675 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.836967738 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.836508083 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.837968 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.8374532 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.83749288 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.836986106 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.837135043 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.836924471 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.837917795 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.836916946 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.83794963 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.837773269 seconds)
  done (took 31.160913319 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.837924723 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.839821401 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.836910802 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.839685163 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.839413127 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.839912674 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.838836372 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.839343489 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.838275952 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.839551947 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.839617107 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.839929134 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.838518679 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.839927424 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.838599953 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.838763516 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.839122562 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.838903541 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.840069663 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.839934344 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.83898804 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.840386889 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.838636576 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.839870009 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.840196423 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.839569321 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.841043845 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.838944482 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.840311056 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.841322992 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.838877556 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.839929597 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.839004898 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.839758733 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.839694264 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.839612376 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.841278241 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.84134274 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.840708946 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.841424408 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.840695816 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.839843173 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.840553535 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.840862997 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.840547549 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.840311029 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.841099723 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.84070432 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.841342007 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.841387876 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.842543083 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.841299581 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.840814841 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.844388039 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.842386018 seconds)
  done (took 102.967744889 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.841939134 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.84019622 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.840636075 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.841759166 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.840518028 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.840246174 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.841187965 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.840320083 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.841894571 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.842986007 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.841463628 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.840231928 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.840789922 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.841806577 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.844052133 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.84029989 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.842889877 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.844134037 seconds)
  done (took 34.913136079 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.842330703 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.844807717 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.842428694 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.844156032 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.842418 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.841850976 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.842858738 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.842070829 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.84247892 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.842118272 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.842442681 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.845020245 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.843396689 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.844740679 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.843135564 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.844133265 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.843867681 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.842215922 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.843144405 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.84280972 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.84377129 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.844145072 seconds)
  done (took 42.318396603 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.844626635 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.845745424 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.858511768 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.865209251 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.863257273 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.87929448 seconds)
  done (took 12.92529023 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.842825809 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.84372753 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.840514527 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.842585219 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.843287619 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.843179868 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.845664618 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.843682123 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.843933952 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.844037761 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.843520733 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.845817409 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.844345016 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.845427175 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.844117743 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.843356797 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.843144665 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.845650313 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.84448213 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.843066906 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.845052961 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.8466006 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.845075349 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.843403005 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.843958665 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.844505559 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.845237552 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.843993787 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.844416909 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.844235901 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.84560076 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.844401845 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.844263384 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.843649853 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.843960541 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.845993145 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.844615708 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.845482845 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.844264104 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.844546062 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.843390089 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.843449429 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.844465254 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.844007339 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.843939398 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.845282384 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.846101457 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.845894623 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.84404696 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.845211055 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.84507296 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.847526854 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.847524032 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.845725834 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.845284245 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.846378233 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.84643256 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.84634979 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.846283293 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847564865 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.848132929 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.845743853 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.844954826 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.847141654 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.847072479 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848435659 seconds)
  done (took 123.532404426 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.846734976 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.845911114 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.848608065 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.847771832 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.84689539 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.847411523 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848927035 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847501392 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.847238428 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.84655624 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.845335856 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.846157542 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.845789179 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.846099126 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.844934621 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.845845541 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.845688729 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846664644 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.847912687 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.845841636 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.84637779 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.847745628 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.847138396 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.847310567 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848070186 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.846232861 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.84688826 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.846776142 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.846778702 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.8484109 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.847999559 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.84735386 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849046161 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.848457557 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.848205142 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.848292599 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849060425 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848171073 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850086415 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.849282737 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.848265769 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.849618889 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.850920132 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.849108222 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849617381 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.848795422 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848356781 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.848576123 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.8487468 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849819895 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85039152 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853130964 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849594959 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.850049307 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.850368929 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849889574 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848162717 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849202519 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.84902438 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848914561 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.850451252 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849127504 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849078355 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852086482 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.848849188 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848625119 seconds)
  done (took 123.753412266 seconds)
done (took 2521.415525621 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.885500101 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.896097734 seconds)
  done (took 15.554396294 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.019032216 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.968751246 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.855648586 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.89316682 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.85272674 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.872096779 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.874016985 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.852096433 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.855870685 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.857812551 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.855899356 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.039028061 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.861097248 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.854073923 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.856618305 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.949153708 seconds)
  done (took 52.099754914 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.862383028 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.857484341 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.87284169 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.857273102 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.862197858 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.872436016 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.885009321 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.863618075 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.898474169 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.875704583 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.929232886 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.868493632 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.863855689 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.910925614 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.87574055 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.875993191 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.958790447 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.936281794 seconds)
  done (took 35.703853264 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.938863143 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.87131031 seconds)
  done (took 10.593181904 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.878275817 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.870077933 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.862006251 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.866009592 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.861046533 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.869315513 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.853156112 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.863276623 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.851819452 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.863770415 seconds)
  done (took 70.418121409 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.857576334 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.857746805 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.85776773 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.852481583 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.852407313 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.853635642 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.853898965 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.855576931 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.539641146 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.894870688 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.86687869 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.86264982 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.854464824 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.8568081 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.852653344 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.879872617 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.964771196 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.852166613 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.851862526 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.859710139 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.854432135 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.907253359 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.870678413 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.856404632 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.891344723 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.542062864 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.868382288 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.860963826 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.971103763 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.852293147 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.854387314 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.039521896 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.864436388 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.320947074 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.185609879 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.863576982 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.863527195 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.859836532 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.853483002 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.976684907 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.857209985 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.860802682 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.777363976 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.160220339 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.951749692 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.901411298 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.205943614 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.858224062 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.855177104 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.890216146 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.859277941 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.857891274 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.875873616 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.370447103 seconds)
  done (took 132.195374496 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.855001432 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.20067445 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.020489127 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.856522864 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.137826826 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.057880267 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.852835612 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.900620897 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.853949048 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.08100857 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.108016063 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.960298817 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.855263341 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.854965756 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.852796911 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.852425228 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.008871872 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.924226481 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.852645712 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.852654858 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.879995159 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.096753117 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.974876368 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.854603073 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.881203876 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.065235137 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.97396976 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.957751506 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.633923764 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.854652966 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.916026078 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.855476922 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.855668973 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.852520732 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.011665985 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.947533551 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.934207814 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.857092381 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.854813002 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.857843501 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.513983945 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.05524046 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.951494309 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.986707247 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.106043843 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.056288552 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.634397534 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.854854436 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.592459725 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.019515481 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.086431567 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.090444156 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.979762756 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.856457566 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.39087985 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.856700744 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.857385182 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.103538623 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.078439939 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.953544891 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.860632682 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.858096781 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.853701091 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.095421379 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.858749284 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.947744641 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.859626556 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.855857739 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.953058785 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.95898127 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.085713434 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.065615641 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.884106233 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.197636862 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.370914864 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.103726113 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.92168091 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.106662082 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.862922726 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.855074235 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.93399028 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.699363134 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.109947728 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.101881279 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.100887026 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.891629573 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.579560395 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.858437408 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.083975851 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.079919646 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.117949439 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.100278768 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.088658151 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.182518013 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.858486963 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.858016657 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.093658836 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.977485513 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.856390903 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.199840077 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.087282131 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.455803555 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.884926982 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.163231886 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.989806935 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.85803783 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.497347845 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.858469933 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.089645484 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.897636273 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.860557172 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.858621855 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.07548209 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.849833679 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.860011634 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.491228037 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.917896978 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.862160792 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.091558716 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.857901098 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.12577725 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.860775203 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.091701994 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.440764981 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.886471027 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.089343868 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.103658698 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.858357046 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.104322808 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.098854307 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.971021894 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.077344799 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.558162528 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.860686995 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.146148745 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.858826356 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.858448965 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.028080604 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.86261674 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.001565234 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.858236348 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.150748376 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.878292138 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.089093801 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.860627611 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.111925063 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.889369122 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.9099623 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.860441855 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.976256419 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.863869182 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.720965242 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.016529648 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.863153002 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.858834878 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.656449255 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.858496887 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.01313975 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.088354194 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.878220431 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.931901129 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.519000128 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.861592758 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.942283717 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.880256481 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.245695811 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.862693252 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.111410387 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.860076379 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.861283248 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.861272649 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.09723016 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.040581731 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.866195718 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.859325836 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.767146213 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.860387534 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.861615865 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.040812603 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.168245296 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.857953726 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.063720876 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.860525763 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.986665867 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.861056369 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.933053536 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.201567786 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.858634674 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.862227995 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.862240394 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.863946815 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.861764641 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.123517614 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.884214283 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.395640013 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.998053448 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.137681076 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.167608814 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.104179657 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.902955232 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.86614083 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.112384536 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.862781673 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.921201796 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.863148555 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.880763661 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.096279045 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.866544202 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.070206002 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.133559955 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.782392749 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.909840129 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.866746659 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.863135825 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.859583462 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.009088074 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.942342461 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.861663399 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.864091554 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.9738263 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.98013698 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.067864332 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.863902866 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.893727692 seconds)
  done (took 900.689738042 seconds)
done (took 1219.034043146 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.858750077 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.855094164 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.855425414 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.856245438 seconds)
  done (took 29.210769535 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.856095913 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.852282897 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.853790227 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.854361808 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.855795821 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.852915426 seconds)
  done (took 12.905335886 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.871761898 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.855455837 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.853775765 seconds)
  done (took 21.361000293 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.933327752 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.260771253 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.005935639 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.288831329 seconds)
  done (took 10.269626978 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.853392771 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.85340194 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.852590103 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.854394936 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.856894066 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.85954117 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.856177789 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.854909689 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.857033796 seconds)
  done (took 18.480372085 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.538801952 seconds)
done (took 98.556062767 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.128469085 seconds)
    (2/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.175717574 seconds)
    (3/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.115730166 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 2.041346189 seconds)
    (5/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.6144814 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.966972733 seconds)
    (7/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.987299005 seconds)
    (8/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.947874527 seconds)
    (9/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.692708948 seconds)
    (10/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.113714373 seconds)
    (11/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.065933809 seconds)
    (12/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.304254105 seconds)
    (13/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.875625522 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.953584343 seconds)
    (15/309) benchmarking ("sort", Int8, false)...
    done (took 4.829109644 seconds)
    (16/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.886317956 seconds)
    (17/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.099046578 seconds)
    (18/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.25026854 seconds)
    (19/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.867049678 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.029229819 seconds)
    (21/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.963925551 seconds)
    (22/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 1.954227764 seconds)
    (23/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.186693602 seconds)
    (24/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.868328309 seconds)
    (25/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.891357771 seconds)
    (26/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.045509711 seconds)
    (27/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.18659613 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.543421199 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.637379518 seconds)
    (30/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.342372703 seconds)
    (31/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.122260925 seconds)
    (32/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.878463124 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.880200347 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.543625141 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.222371482 seconds)
    (36/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.956490713 seconds)
    (37/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.000331035 seconds)
    (38/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.867130349 seconds)
    (39/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.004932856 seconds)
    (40/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.775260548 seconds)
    (41/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.957310256 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.771534204 seconds)
    (43/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.242746084 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.040140648 seconds)
    (45/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.146525725 seconds)
    (46/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.973150489 seconds)
    (47/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.966857328 seconds)
    (48/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.953658819 seconds)
    (49/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.875718415 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.761004474 seconds)
    (51/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.912305298 seconds)
    (52/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.87131026 seconds)
    (53/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.301803864 seconds)
    (54/309) benchmarking ("sort", Bool, false)...
    done (took 2.08774018 seconds)
    (55/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.361802594 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.824186432 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.722813622 seconds)
    (58/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.512131012 seconds)
    (59/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.078419408 seconds)
    (60/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.873726777 seconds)
    (61/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.951238001 seconds)
    (62/309) benchmarking ("sort", Int64, false)...
    done (took 5.524031677 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.108500779 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.475366633 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.008925737 seconds)
    (66/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.02197737 seconds)
    (67/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.88851778 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.905404207 seconds)
    (69/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.967131686 seconds)
    (70/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.958565485 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.18290934 seconds)
    (72/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.891647814 seconds)
    (73/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.102016219 seconds)
    (74/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.888561673 seconds)
    (75/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.54168156 seconds)
    (76/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.139732657 seconds)
    (77/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.949550639 seconds)
    (78/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.897258586 seconds)
    (79/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.972769793 seconds)
    (80/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.208876882 seconds)
    (81/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.953962866 seconds)
    (82/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.890996253 seconds)
    (83/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.954774844 seconds)
    (84/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.872978727 seconds)
    (85/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 8.507593091 seconds)
    (86/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.941543257 seconds)
    (87/309) benchmarking ("sort", Float32, false)...
    done (took 5.534847434 seconds)
    (88/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.877699539 seconds)
    (89/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.497404115 seconds)
    (90/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.355268827 seconds)
    (91/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.873975572 seconds)
    (92/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.090491434 seconds)
    (93/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.90099577 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.562737206 seconds)
    (95/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.06939424 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.014631731 seconds)
    (97/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.097723599 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.192815202 seconds)
    (99/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.885529259 seconds)
    (100/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.384625222 seconds)
    (101/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.88166057 seconds)
    (102/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.003515658 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.201047643 seconds)
    (104/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.078687016 seconds)
    (105/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.895711777 seconds)
    (106/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.187035703 seconds)
    (107/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.335639019 seconds)
    (108/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.044613955 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.771748065 seconds)
    (110/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.892597172 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.754283914 seconds)
    (112/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.093568414 seconds)
    (113/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.000155381 seconds)
    (114/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.017381725 seconds)
    (115/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.88837306 seconds)
    (116/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.950781116 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.908020488 seconds)
    (118/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.971147401 seconds)
    (119/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.940383563 seconds)
    (120/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.473137449 seconds)
    (121/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.365126465 seconds)
    (122/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.931618436 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.161981783 seconds)
    (124/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.728867391 seconds)
    (125/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.987779822 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.00026504 seconds)
    (127/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.868178588 seconds)
    (128/309) benchmarking ("sort", Float64, false)...
    done (took 7.254992079 seconds)
    (129/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.115942794 seconds)
    (130/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.25971225 seconds)
    (131/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.121425667 seconds)
    (132/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.182438782 seconds)
    (133/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.954041047 seconds)
    (134/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.015531012 seconds)
    (135/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.918243272 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.134585033 seconds)
    (137/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.564038007 seconds)
    (138/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.999392885 seconds)
    (139/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.186866205 seconds)
    (140/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.189661701 seconds)
    (141/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.114972682 seconds)
    (142/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.110676852 seconds)
    (143/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.435044899 seconds)
    (144/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.877360286 seconds)
    (145/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 8.608718106 seconds)
    (146/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.715737899 seconds)
    (147/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.98531523 seconds)
    (148/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.887239127 seconds)
    (149/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.12277162 seconds)
    (150/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 1.951151317 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.001892211 seconds)
    (152/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.869831607 seconds)
    (153/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 3.653781193 seconds)
    (154/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.886102139 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.999895476 seconds)
    (156/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.870589512 seconds)
    (157/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.89083423 seconds)
    (158/309) benchmarking ("sort", BigInt, false)...
    done (took 6.867060225 seconds)
    (159/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.025660798 seconds)
    (160/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.037068259 seconds)
    (161/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.041582508 seconds)
    (162/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.888900111 seconds)
    (163/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.868431667 seconds)
    (164/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.08409568 seconds)
    (165/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.591264738 seconds)
    (166/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.367392566 seconds)
    (167/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.87667807 seconds)
    (168/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.281860893 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.231879075 seconds)
    (170/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.879276903 seconds)
    (171/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.87515554 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.004964175 seconds)
    (173/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.87672608 seconds)
    (174/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.230026791 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.272580198 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.878906485 seconds)
    (177/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.986025879 seconds)
    (178/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.715187764 seconds)
    (179/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.585519799 seconds)
    (180/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.075410917 seconds)
    (181/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.893438338 seconds)
    (182/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.068691493 seconds)
    (183/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.880769655 seconds)
    (184/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.880278487 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.289868457 seconds)
    (186/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.277346312 seconds)
    (187/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.953936773 seconds)
    (188/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.900431227 seconds)
    (189/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.563548348 seconds)
    (190/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.889058426 seconds)
    (191/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.93418433 seconds)
    (192/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.050179996 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.274585965 seconds)
    (194/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.188693715 seconds)
    (195/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.134584858 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.910257564 seconds)
    (197/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.110514953 seconds)
    (198/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.674518245 seconds)
    (199/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.034143858 seconds)
    (200/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.904632681 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.024707401 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.974298385 seconds)
    (203/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.936102584 seconds)
    (204/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.851194812 seconds)
    (205/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.114931057 seconds)
    (206/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.028117071 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.870260731 seconds)
    (208/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.874097707 seconds)
    (209/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.588174722 seconds)
    (210/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.976928869 seconds)
    (211/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.431969893 seconds)
    (212/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.637593785 seconds)
    (213/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.214533689 seconds)
    (214/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.952252968 seconds)
    (215/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.900173925 seconds)
    (216/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.029690471 seconds)
    (217/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.878984714 seconds)
    (218/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 4.41780787 seconds)
    (219/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.27058992 seconds)
    (220/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.025764317 seconds)
    (221/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.107529873 seconds)
    (222/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.573202436 seconds)
    (223/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.873660014 seconds)
    (224/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.735987262 seconds)
    (225/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.15034055 seconds)
    (226/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.589148343 seconds)
    (227/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.196574857 seconds)
    (228/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.22134107 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.883653775 seconds)
    (230/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.986179505 seconds)
    (231/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.891662101 seconds)
    (232/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.068031016 seconds)
    (233/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.963001056 seconds)
    (234/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.298949461 seconds)
    (235/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.897727653 seconds)
    (236/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.028782816 seconds)
    (237/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.393835114 seconds)
    (238/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.365285102 seconds)
    (239/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.190473608 seconds)
    (240/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.355367954 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.037254096 seconds)
    (242/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.877383428 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.210868138 seconds)
    (244/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.1577168 seconds)
    (245/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.962420339 seconds)
    (246/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.154214899 seconds)
    (247/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.062887297 seconds)
    (248/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.909399852 seconds)
    (249/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.303342356 seconds)
    (250/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.881382188 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.228767151 seconds)
    (252/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.881247629 seconds)
    (253/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 5.286673448 seconds)
    (254/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.27156056 seconds)
    (255/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.880062393 seconds)
    (256/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.08425584 seconds)
    (257/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.014279543 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.214338773 seconds)
    (259/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.53380322 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.150380234 seconds)
    (261/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.14883724 seconds)
    (262/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.980754518 seconds)
    (263/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.137870388 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.773985476 seconds)
    (265/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.196676479 seconds)
    (266/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.938959373 seconds)
    (267/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.113271045 seconds)
    (268/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.660396596 seconds)
    (269/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.315715671 seconds)
    (270/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.359076697 seconds)
    (271/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.077439337 seconds)
    (272/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.936155568 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.007959537 seconds)
    (274/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.060704279 seconds)
    (275/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.882216568 seconds)
    (276/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.979600387 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.226370147 seconds)
    (278/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.89464388 seconds)
    (279/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.987323389 seconds)
    (280/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.959171982 seconds)
    (281/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.00603991 seconds)
    (282/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.075833505 seconds)
    (283/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.177582 seconds)
    (284/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.9007022 seconds)
    (285/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.058553335 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.011685104 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.65745944 seconds)
    (288/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.875997609 seconds)
    (289/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 8.521195125 seconds)
    (290/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.520954451 seconds)
    (291/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.144450338 seconds)
    (292/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.887697791 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.778651048 seconds)
    (294/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.965726291 seconds)
    (295/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.201388521 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.191797189 seconds)
    (297/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.025733481 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.905232523 seconds)
    (299/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.881394539 seconds)
    (300/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.875724123 seconds)
    (301/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.174224156 seconds)
    (302/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.184941133 seconds)
    (303/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.983239001 seconds)
    (304/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.217171652 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.095907444 seconds)
    (306/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.875440942 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.828754455 seconds)
    (308/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.986614537 seconds)
    (309/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.110503558 seconds)
  done (took 1014.211352478 seconds)
done (took 1016.083814876 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.904418474 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.893109827 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.876384268 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.896844303 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.989940664 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.919854053 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.886980098 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.875942986 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.923816778 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.92356093 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.873115363 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.912709799 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.872572538 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.870596497 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.873793009 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.886750032 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.17664694 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.895911411 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.887449903 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.880787379 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.88700729 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.871267589 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.918456044 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.908271212 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.870456351 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.872072939 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.871450793 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.882950708 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.977899025 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.869932231 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.871135909 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.881224672 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.167060703 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.887544494 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.860483621 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.881995888 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.876226943 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.874890998 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.866134742 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.894695215 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.31008463 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.863864941 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.863459246 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.862168226 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.862270378 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.867431126 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.862914277 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.869912818 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.877400788 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.878452193 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.305379669 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.881900375 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.866555407 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.863048784 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.877359464 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.864395534 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.867209546 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.877282134 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.882136651 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.879795838 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.154511584 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.895972043 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.8665238 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.881562441 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.871578665 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.34230871 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.865008142 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.870703453 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.310102586 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.875173028 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.341465505 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.877252785 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.864850895 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.877910681 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.897471613 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.167504688 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.887649259 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.862369814 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.872679005 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.861490663 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.875282585 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.877586661 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.868546653 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.863109562 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.881685074 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.910889646 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.877744472 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.866219244 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.876960738 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.884352354 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.872575744 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.877156707 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.870221048 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.86364114 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.876806414 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.870502965 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.868060739 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.86697708 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.868157692 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.87997341 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.309151024 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.884335226 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.86214842 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.862666477 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.863755018 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.880808035 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.309796826 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.869965256 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.89001859 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.916375887 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.868834689 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.156999331 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.89517592 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.880560764 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.877967632 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.868302692 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.862478809 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.156939798 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.333252692 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.88496751 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.867616798 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.866241092 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.882459576 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.867308759 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.865023143 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.170199921 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.894485358 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.882169058 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.990580596 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.88141017 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.900822681 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.865234985 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.872765666 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.912713632 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.883286298 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.899555431 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.870406354 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.881781494 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.885135024 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.864950148 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.879855364 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.881147927 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.866592153 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.876162253 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.864465289 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.913272568 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.880079919 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.881382505 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.88853104 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.991149224 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.864780784 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.159558503 seconds)
done (took 293.633730045 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.945016882 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.865816013 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.989290701 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.866348552 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.956078032 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.938779888 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.867757148 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.867006199 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.866262034 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.365862496 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.866128019 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.871450957 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.865131499 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.866771159 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.93587754 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.867999088 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.866609052 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.333992462 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.867646872 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.946785778 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.866389517 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.86862236 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.867490453 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.36723044 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.867511605 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.864897242 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.946819864 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.866675128 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.314079658 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.866177577 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.866871029 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.313326873 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.948295545 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.894391517 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.877387175 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.873794224 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.957144647 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.880377076 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.935120276 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.935282082 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.989404451 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.900634574 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.86625644 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.867945636 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.87100699 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.866434498 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.868772043 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.901444949 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.86693542 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.87375074 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.314132955 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.877466681 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.874091448 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.868619777 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.868488557 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.896319696 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.870493399 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.867188979 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.948649958 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.869581846 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.935421127 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.369131609 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.393729371 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.867587259 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.871075779 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.869206928 seconds)
  done (took 185.218429406 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.937803512 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.942830494 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.9371889 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.872532443 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.918351486 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.935544282 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.871428435 seconds)
  done (took 15.207652876 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.87711883 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.868343934 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.920826619 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.918573099 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.867371326 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.052611881 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.881031715 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.873312733 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.898121176 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.871480818 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.521603792 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.918694555 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.877870603 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.869594612 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.880945802 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.92600706 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.873465221 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.871246073 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.979757922 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.020623046 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.8764164 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.879432961 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.897983436 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.882740042 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.873139369 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.874320464 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.869217357 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.877492947 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.869677896 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.869840938 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.869369229 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.924988839 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.869343296 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.867504187 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.864931524 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.861178527 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.862429728 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.864786714 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.863631194 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.865604286 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.86195337 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.866882966 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.857174326 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.856476988 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.855723231 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.880269203 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.857436025 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.860265577 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.853691079 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.854595265 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.882663818 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.85648468 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.857352331 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.858776806 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.898932597 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.858319525 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.85295471 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.853518712 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.854244755 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.854454803 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.853225801 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.002328807 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.903194035 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.858097395 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.903875004 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.005120682 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.854604379 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.854477975 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.853358143 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.939447937 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.850996765 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.900219872 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.853172013 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 1.970655755 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.847435503 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.034178207 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.870261919 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.851139492 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.851965505 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.845304977 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.853361977 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.845109062 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.84675596 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.851936648 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.849617535 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.844930457 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.844842521 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.846674971 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.853661563 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.845563769 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.895903661 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.84404384 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.845673271 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 1.979599102 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.845347354 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.955283771 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.872631782 seconds)
  done (took 204.904602424 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.852038995 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.853312944 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.846582561 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.861371479 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.846605215 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.847009142 seconds)
  done (took 12.875932667 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.848039322 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.849936231 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.845889223 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.844827853 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.844481129 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.845758637 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.844951153 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.847790053 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.850271335 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.847707428 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.845607442 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.844629633 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.845707889 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.845565713 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.845868265 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.846931857 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.846306676 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.846020909 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.846759014 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.845323128 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.055308185 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.846194764 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.845883443 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.852551942 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.852015626 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.84709482 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.859425015 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.845886213 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.846997934 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.853563899 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.852809938 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.84688662 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.854226948 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.853382946 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.849770009 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.854979468 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.849236006 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.845720603 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.844810754 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.845265972 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.845914265 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.843006509 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.842522113 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.842307419 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.845100078 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.85427434 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.850180748 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.854274908 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.840986783 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.840190355 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.841052936 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.84506406 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.838496321 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.836846377 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.846890706 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.844658622 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.841785662 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.840803403 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.837569076 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.845244459 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.841864483 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.838722806 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.839585573 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.842035913 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.84595582 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.838356715 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.84603951 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.843571918 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.839309941 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.838303573 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.838317679 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.839667134 seconds)
  done (took 135.871159555 seconds)
done (took 555.889024479 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.143783774 seconds)
  done (took 8.904611852 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.996972133 seconds)
  done (took 8.858662858 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.538238384 seconds)
  done (took 10.303323266 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.842899648 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.875357409 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.848149574 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.844833843 seconds)
  done (took 29.185856624 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.172100332 seconds)
  done (took 8.934106568 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.852724322 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.842232669 seconds)
  done (took 15.531172205 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.940229967 seconds)
  done (took 8.696728496 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.890911115 seconds)
  done (took 8.663286167 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.846356116 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.856338583 seconds)
  done (took 15.479146366 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.840075252 seconds)
  done (took 8.593955077 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.192786232 seconds)
  done (took 10.036960841 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.839192103 seconds)
  done (took 8.64314746 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.838391997 seconds)
  done (took 8.594610526 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.889567004 seconds)
  done (took 8.646066453 seconds)
done (took 160.839151735 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.836361143 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.830251001 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.832089289 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.830446883 seconds)
  done (took 29.082929039 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.864529734 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.867064431 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.875541087 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.8674539 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.854820246 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.85657991 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.866883744 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.867810926 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.85718755 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.865390045 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.866558447 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.866321449 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.866115193 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.87628933 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.875812627 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.866787215 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.867511501 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.866690444 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.858769693 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.87705154 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.864485033 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.869013558 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.834018173 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.833266271 seconds)
  done (took 46.48880945 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.023073451 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.904128512 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.985363822 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.887509429 seconds)
  done (took 9.557940728 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.829255049 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.897118131 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.882939977 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.887321108 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.884074749 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 1.934001178 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.886002301 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 1.972546083 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 1.960388292 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 1.969544621 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.840461947 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.854887993 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.856239689 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.887610785 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 1.939542502 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.833139422 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.831537981 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 1.961368106 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.895990674 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.021516995 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.832026666 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.886722637 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.883871769 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.885395675 seconds)
  done (took 47.269353365 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.834106654 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.845366008 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.841837378 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.836515491 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.833799024 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.835915859 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.841133296 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.836697612 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.855837285 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.836855027 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.835815014 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.835000576 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.84282172 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.835101775 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.832177977 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.847988818 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.849548187 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.835687084 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.839831297 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.842236532 seconds)
  done (took 38.552120118 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.833455949 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.679326543 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.179058811 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.082829248 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.83253576 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.83193474 seconds)
  done (took 31.197300319 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.846031314 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.838253968 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.834595637 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.889315208 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.97230172 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.841067123 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.833805207 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.845017162 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.881674994 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.896896288 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.855779388 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.86116576 seconds)
  done (took 24.156418575 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.835211275 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.835189596 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.835121526 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.845560564 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.843273119 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.84209696 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.842041884 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.833205631 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.846522302 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.854811641 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.842551771 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.847912575 seconds)
  done (took 43.867078719 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.541819935 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.908052748 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.838004117 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.709688326 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.297783937 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.390213189 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.736325918 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.621773257 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.302437266 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.762821636 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.039282079 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.836046426 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.919363676 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.836801266 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.106390906 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.251979513 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032917721 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.076791044 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.606268865 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.871009914 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.040069571 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.062816116 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.127902092 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.837510674 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.836940035 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.83728193 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.478879817 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.662268912 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.872057167 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.269083581 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.081988569 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.785667579 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.894907413 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.846025099 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.856258204 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.841042834 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.841265203 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.106900973 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.837273424 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.082608239 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911249831 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.07937452 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.843853209 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.258503933 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.541270234 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.188254889 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.952377851 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.836710401 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.841170679 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.839090582 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.765138443 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.923017291 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.838123516 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.842579325 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.537645392 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.838427569 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914034594 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.839161445 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.041836583 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.645300204 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.531877759 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.839201912 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839670996 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.398995912 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.959440269 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.95151316 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.584367867 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.219032489 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.254129596 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.935226978 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.839044805 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.840341854 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.081104153 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.806698457 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.574119005 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.875947915 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.976063828 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.85540492 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.478694434 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.139824062 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.314763364 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.399305381 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.757885366 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.119935717 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.654709482 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.824090388 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.055063355 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.708107627 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.766377054 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.072202874 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874986222 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.84342879 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.103406282 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.569024257 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.948768216 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.85225941 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.277570381 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855127533 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.846283138 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.841425189 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.056495943 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.349380503 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.8749124 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.954969188 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855544915 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.924201569 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.767263359 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.85834534 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.842953681 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.920536082 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.844873516 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.843354348 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.887260836 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.619704046 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.886358543 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.786683075 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.842507882 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.952052598 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88136852 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.790163364 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.099141362 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.148912936 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.52529654 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.874173322 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.971947202 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.282307337 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.070126064 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.845413854 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.055682188 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.380478074 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.284523836 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.890966159 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.13448482 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.902626132 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.134338942 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.272896723 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.919081015 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.638100291 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.643555694 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.056598162 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.858726822 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 6.841812291 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.845586066 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.847726974 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.77689488 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.488109184 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.266941666 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.017062963 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.058371963 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.287707403 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.829006204 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.843589249 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.148994285 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.981442926 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.8277718 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.501521838 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.360048236 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.681626043 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.868465443 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.085256862 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.135525044 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.809701403 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858463784 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921178685 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860729489 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.866413262 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.264624012 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.209155115 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.844750243 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.847177293 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.791479689 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.845723812 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.846599839 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.379333366 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.817050879 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.850032271 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.856208088 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.719038071 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917474324 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.847537415 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.847989092 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.385806538 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.350349358 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.850098176 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.524417066 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.849447176 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.044623737 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.123770211 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.258882308 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.973066482 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.544813668 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.289989047 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.959212064 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.54719892 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.77384785 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.847106947 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.791809311 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849812914 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.851554295 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.851975244 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.038079893 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.123229435 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.145221689 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.307184731 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.914530193 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.049615822 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.632857061 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.799993013 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.84699251 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.851003271 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.850003126 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.848114845 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.357373013 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.088417479 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.966636887 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.875662338 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.850983544 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977681325 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.85948324 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.773348689 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.847577626 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.849134596 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.397831232 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.876419872 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.79350612 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.210038788 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.74977605 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.97097602 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892255496 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.860453543 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.851826208 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.642694502 seconds)
    (233/481) benchmarking "4d"...
    done (took 2.892699649 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.77480557 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368037592 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886002613 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.592348772 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334966825 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.409443444 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.14122343 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.170730134 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.182381403 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.920532188 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.059493513 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.932646189 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.904457541 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.934556424 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.783519013 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.781188319 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.512450579 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.180497944 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.118338986 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.85974474 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.066289479 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.584038198 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.07981475 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879614863 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.618275835 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.162152535 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.826413636 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.867680389 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.284215245 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.958525273 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.933970503 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.85611279 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.801578596 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.195745794 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896142766 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.55900357 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.869952002 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.204960885 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.393931638 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.924300276 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.284856794 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.072527643 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.851227686 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.209206512 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.162446566 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.894145405 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.859422806 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.84636633 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.065547954 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.435481433 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.698800101 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.861834861 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.115414535 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.151146533 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.764911532 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 1.857199779 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.109404634 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.114047203 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.854386764 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.267829988 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.233612683 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 2.960376568 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916504908 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.081586158 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.642857663 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.161305716 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.414449645 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.344818511 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.857181262 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.780412848 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.555742092 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.057654437 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.855573597 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.821031985 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.076266718 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.092634325 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.540800044 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.070703599 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.097895099 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.866123186 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.128312666 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930244675 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.950422954 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.217174242 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.309332603 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.104356373 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.081376732 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.394704442 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.072652095 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.322232858 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.024780179 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.858295546 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.05892936 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.069502253 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.072027189 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.292549095 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031410034 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.565860394 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.86385807 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.065416091 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.161705513 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920934424 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.289851765 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.030630693 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.941781619 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.863843713 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922289971 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.861238416 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863438581 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.296770702 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.389428179 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.871589513 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935944419 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.980350839 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.368719432 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.857436789 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.864202495 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.129891316 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.217492551 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.192707894 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.841695461 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.855437188 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.865764267 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987843495 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.784244457 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.863888494 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.129170397 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.860956175 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.374276496 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.002652491 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873827953 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.219973103 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.248647675 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.633209585 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.823982531 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.862895539 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.086590265 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.176104924 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.149313571 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.97696973 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.130187543 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.19809041 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.893974621 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.305950498 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.102506641 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.863018181 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.732614812 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.864241443 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990490787 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.056037408 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.137906481 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.431495359 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.597955549 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.125122401 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.70993303 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.863610265 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.603111081 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.12566396 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.135556569 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.910220946 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924060573 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.866985896 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.405314354 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.586962305 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993431237 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.759543236 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.784787409 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.866301408 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.190182936 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.100655136 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.569884234 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.865524124 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.139565877 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.160796457 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.133466097 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.915226567 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.712025597 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.074227157 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864283452 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.874620298 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.120120709 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.085144314 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.11029865 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.863991567 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.862254816 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.668168369 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.788540545 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.861183881 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916885136 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.086550915 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.882774139 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.377139343 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.561165341 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.150578563 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913948664 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.863700299 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.138556892 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.384048731 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.425974481 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.866169594 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.086989962 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.893261974 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.156334304 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.864473709 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.413961289 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.170963044 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.865518571 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.50616426 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.111341305 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.132261444 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.794311103 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.870479505 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.077087629 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.70552799 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.864859976 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.860687914 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41234007 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.100733396 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.598160264 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.419075378 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.864099685 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.86841627 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.403533757 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899368791 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.395776097 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.899453645 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.88268482 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.38318124 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.561691867 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.156186703 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.106529356 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.49481185 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.516023275 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.866657203 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.863392601 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.866511146 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.78448432 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.046587925 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.053773685 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.158685917 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.900825679 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.411154083 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.904374467 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.30506717 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.984996111 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.12866356 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.907989761 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.387582871 seconds)
  done (took 1655.195006234 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.885001804 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.914047618 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.866471403 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.867995986 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.86669066 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.877160894 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.906275289 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.93162385 seconds)
  done (took 56.904942091 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.860548748 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.874501335 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.864834225 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.86191744 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.873367752 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.862483242 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.020259145 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.870362506 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.865799529 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.86595091 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.86334767 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.860126175 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.139453495 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.879471733 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.875081268 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.859784028 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.862931769 seconds)
  done (took 73.946993221 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.861822791 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.039147097 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.924988812 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.870393387 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.756834989 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.874333863 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.747661144 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.894219579 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.86397979 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.629758125 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.164361731 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.893530514 seconds)
  done (took 90.305550334 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.870058479 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.865250601 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.86539032 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.865954613 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.865111844 seconds)
  done (took 11.124199186 seconds)
done (took 2159.479322679 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.108073245 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.96238095 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.007506176 seconds)
  done (took 5.755023818 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.013104352 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.057252146 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.173169905 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.935862432 seconds)
  done (took 9.974581647 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.184996108 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.23209336 seconds)
  done (took 6.203016002 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.373404915 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.864230915 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.280199192 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.866431537 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.867174061 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.867273683 seconds)
  done (took 22.392964339 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.867453066 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.867306976 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.865922015 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.865858719 seconds)
  done (took 9.254257513 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.866968467 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.5766584 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.866906765 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.87697655 seconds)
  done (took 20.974110922 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.01398867 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.981100322 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.012668616 seconds)
  done (took 7.794913248 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.088653891 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.713625221 seconds)
  done (took 6.588013197 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.011122161 seconds)
  done (took 3.798441176 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.894985137 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.13790453 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.361165052 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.399976804 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.518076409 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.662661467 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.193734529 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.113256072 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.293319181 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.318154311 seconds)
  done (took 24.682398949 seconds)
done (took 132.834611724 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.233061602 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.896076998 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.075913482 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.243457698 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.185451369 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.075840451 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.075228923 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.252057213 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.940176684 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.908046879 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.235155514 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.095084744 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.026383309 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.894211902 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.030780023 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.895587723 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.094617762 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.254486153 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.917288843 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.137990596 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.077593052 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.882268889 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.082699648 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.897763594 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.095645358 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.02764289 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.426563768 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.896254703 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.067842382 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.440328681 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.027405676 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.277074973 seconds)
  done (took 168.455532407 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.868840212 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.867733209 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.868613423 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.868428873 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.185243206 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.868868897 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.86840969 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.867521358 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.070803334 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.050579074 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.867536013 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.156094305 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.870049129 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.86847054 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.870356223 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.86757737 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.226544215 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.869126725 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.868763767 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.86794365 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.870230837 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.009946164 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.868158961 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.032411572 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.2087372 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.867401045 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.868335684 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.868477291 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.870236039 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.870024629 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.869137803 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.869262449 seconds)
  done (took 207.583366397 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.870708658 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.870966732 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.868978489 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.869138516 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.869948248 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.871661159 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.870249826 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.868984546 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.640050562 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.62748792 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.868250658 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.869828676 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.872646132 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.870281184 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.870339241 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.869953002 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.869813341 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.871423119 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.87138968 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.870789752 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.8712616 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.605937366 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.867997899 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.616643212 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.869906875 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.871861139 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.870621273 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.871357511 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.871828588 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.871763466 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.872176809 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.873747289 seconds)
  done (took 220.66569508 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.117148727 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.872910508 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.874701213 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.895672271 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.874726981 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.8736176 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.880630878 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.121135533 seconds)
  done (took 19.306770715 seconds)
done (took 617.821923859 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.240159155 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.072640983 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.056880071 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.903029452 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.123492183 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.941218485 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.899080938 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.961751637 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.750979702 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.973998163 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.540916234 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.917249314 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.635697358 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.926025287 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.026720742 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.955669527 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.47125746 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.584023486 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.038569397 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.948148837 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.078902977 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.858690166 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.980405561 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.79062364 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.544885962 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.883171363 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.964400268 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.487958684 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.911826372 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.060099798 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.559024439 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.217645876 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.909712072 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.894516431 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.955136218 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.933579653 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.159711067 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.903829384 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.020403352 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.642307648 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.941477669 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.647255016 seconds)
  done (took 103.107318739 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.893199148 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.888961249 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.88897618 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.889946495 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.898458723 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.889826109 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.888890047 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.889120561 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.890285842 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.889859313 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.888858504 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.899221811 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.889862493 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.899498109 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.892141216 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.88847338 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.890754151 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.899748796 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.890447328 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.891212551 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.890509473 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.889302041 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.875599196 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.890676925 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.89095954 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.889885476 seconds)
  done (took 50.979152678 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.876315567 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.031583346 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.126746922 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.897068285 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.878723623 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.882141486 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.895842582 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.882918975 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.881569496 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.881173727 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.966354681 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.885192852 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.898085917 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.125687708 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.893244431 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.878060156 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.876390955 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.880336868 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.035721152 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.896639282 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.898598631 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.882568049 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.898530967 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.892138117 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.880827155 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.882070985 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.882358487 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.377240554 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.887100256 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.971164381 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.939846402 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.901994513 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.316820753 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.132401706 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.932547855 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.886211756 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.879783676 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.975370541 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.887102884 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.881138486 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.896991781 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.885366117 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.126411223 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.418149262 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.895145744 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.880325877 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.387205867 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.984565701 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.920715118 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.890078962 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.132250241 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.896475354 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.882322296 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.881921722 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.918148535 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.893482388 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.882634192 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.246064856 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.895923269 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.89797451 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.88633527 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.8806324 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.049835358 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.893020055 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.03247971 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.88998399 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.887418361 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.882993622 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.130533728 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.896901737 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.432580095 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.896014031 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.881586026 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.971753212 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.040280437 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.411415132 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.895674435 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.046462782 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.33499198 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.906087196 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.892183467 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.368944072 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.909444366 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.889717095 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.884309365 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.88293211 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.881809796 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.926443876 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.897003944 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.338793798 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.428171452 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.266956983 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.909677152 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.893879764 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.885665224 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.24786377 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.890983756 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.883494701 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.118653744 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.441484386 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.89790911 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.889219773 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.411575124 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.898450607 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.902458487 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.892258307 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.136280929 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.900900434 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.926990026 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.882180579 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.889438183 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.885016363 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.902662351 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.892114635 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.882733666 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.399457406 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.990319837 seconds)
  done (took 234.034054062 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.883360448 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.880759507 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.880922467 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.879796084 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.881971638 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.884601055 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.881402411 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.881490783 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.883321219 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.882217411 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.881500791 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.884413122 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.883064498 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.883190843 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.926510396 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.884831068 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.485854956 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.885165156 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.883399786 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.883208224 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.525019107 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.887340154 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.884855645 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.882356251 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.885788698 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.884531387 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.888442637 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.922046669 seconds)
  done (took 167.868404037 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.885041352 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.997041306 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.901978767 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.913802478 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.890483234 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.885013353 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.984124007 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.899176125 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.892421539 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.88527353 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.885932663 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.946417988 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.893740938 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.98159039 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.914109132 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.991229124 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.985866318 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.889762434 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.88473075 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.886929614 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.914142494 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.893406219 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.946549747 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.007447709 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.902347843 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.99892136 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.904869734 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.887188826 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.885425237 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.997688309 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.900638872 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.945929998 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.913365187 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.90457043 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.002446117 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.00003127 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.989094391 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.987545255 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.889626351 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.887341454 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.887410686 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.889718025 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.999282315 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.903881489 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.888840815 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.006148609 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.903152344 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.888515479 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.887671779 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.887727553 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.899352428 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.904189925 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.951898884 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.014924086 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.919781651 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.911682841 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.985544561 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.014902843 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.888265427 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.984571297 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.89324627 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.000282971 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.905593797 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.889742464 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.890705797 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.89154424 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.916321686 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.993628036 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.991984471 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.893234163 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.984524948 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.921217353 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.894991024 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.888121369 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.889002804 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.001027148 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.003172457 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.921461532 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.922017272 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.919103774 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.899976158 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.888081852 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.891497285 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.906251127 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.894093147 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.003035279 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.004688069 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.893154784 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.890299916 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.888672943 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.890519283 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.912785803 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.009888831 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.923224786 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.995151589 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.953156311 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.961463295 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.901239757 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.903310276 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.893421902 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.951928096 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.902450061 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.902064607 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.181783261 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.951864463 seconds)
  done (took 204.583293171 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.264484385 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.940543351 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.946468142 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.213495522 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.272914278 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.815505209 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.932779757 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.943297553 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.972311424 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.166501226 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.014451977 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.962525668 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.925027428 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.912154637 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.942144066 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.973395542 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.951305859 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.267869787 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.144703072 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.477548718 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.928017704 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.208848594 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.267041859 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.519430593 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.986203334 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.335278615 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.566243684 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.104024017 seconds)
  done (took 63.771631875 seconds)
done (took 826.143411003 seconds)
SAVING RESULT...
DONE!
