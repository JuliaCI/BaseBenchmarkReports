cset: moving following pidspec: 32123
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.294607004 seconds)
loading group "string"... done (took 0.583715748 seconds)
loading group "linalg"... done (took 7.127245529 seconds)
loading group "parallel"... done (took 0.166195138 seconds)
loading group "find"... done (took 1.120531618 seconds)
loading group "tuple"... done (took 1.978825502 seconds)
loading group "dates"... done (took 1.267103904 seconds)
loading group "micro"... done (took 0.235274163 seconds)
loading group "io"... done (took 0.971171596 seconds)
loading group "scalar"... done (took 38.29284355 seconds)
loading group "sparse"... done (took 12.341970736 seconds)
loading group "broadcast"... done (took 0.966472084 seconds)
loading group "union"... done (took 13.051998577 seconds)
loading group "simd"... done (took 4.419594634 seconds)
loading group "random"... done (took 8.934759325 seconds)
loading group "problem"... done (took 1.934584237 seconds)
loading group "array"... done (took 21.177893137 seconds)
loading group "misc"... done (took 1.919993559 seconds)
loading group "sort"... done (took 3.199161288 seconds)
loading group "collection"... done (took 17.914642348 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.539271677 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.142355702 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.119614364 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.140400615 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.184657694 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.133401271 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.14632924 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.087353008 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.029717231 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.164561915 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.142054181 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.479911696 seconds)
done (took 5.080513502 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.204112315 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.090064183 seconds)
    (2/2) benchmarking "String"...
    done (took 0.096797977 seconds)
  done (took 0.900059172 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067901205 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128673913 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.081232678 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068982862 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067610408 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.082066688 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.069118564 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06712048 seconds)
  done (took 1.283891308 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.077424646 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069464362 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.085180544 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069668747 seconds)
  done (took 1.020263805 seconds)
done (took 4.207403388 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.900661506 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.236849707 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.19107199 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.456049287 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.150074552 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.189763229 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.67037064 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.322183563 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.212531406 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.10219209 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.106961231 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.379168066 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.108248863 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.666757326 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078477344 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.107227966 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.159750388 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.431478466 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083376154 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084411306 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.105760493 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142367612 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.103339613 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078879273 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.170789633 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071664909 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.149052013 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.096253765 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069876803 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.248310784 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.190930737 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.684810325 seconds)
  done (took 10.508508161 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.102385145 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.118260432 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071161891 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.14062442 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.102759613 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.086536691 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.07265284 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.084082443 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092912088 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.160465153 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.11638131 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107667028 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.082773815 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071904429 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.101694623 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.213231331 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.110987422 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.086087143 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088390729 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077836398 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122557651 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.08395583 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.095543218 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078906382 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.153397504 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.196061685 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113993604 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.112421563 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.071375036 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081920274 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.132234093 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143069595 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067714168 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083478119 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.142147042 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.111176788 seconds)
  done (took 4.612129127 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.03277125 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.160718676 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092692252 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.152860973 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.086860749 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.111200579 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.083757909 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100701434 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.246870137 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.07158297 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.461434499 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130072071 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103047642 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069995384 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.085420286 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069981748 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.521727802 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.145107555 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104243908 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103316596 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075405978 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.087824395 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.364891266 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069984839 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067936538 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086613149 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.060583114 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.146793342 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06966703 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.214477723 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.090392803 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088210989 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103985149 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.198463237 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.113095574 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.11201373 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.066322691 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084894096 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.108360644 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.085618592 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.170038272 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074673055 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.081993361 seconds)
    (43/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.066397526 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066627227 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.105870441 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118792509 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.105289658 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.085163474 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06903344 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.182108427 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067960997 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.100586756 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.87064019 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.16482724 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.08440274 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067364101 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.287110026 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.084910831 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.08530281 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065869506 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.250492287 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.153546169 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068136607 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.084352185 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067304802 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069367737 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.389362792 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069265503 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.664352968 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070954683 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077664201 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08590813 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068630039 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089425289 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074130512 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.10096634 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068809504 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.068762516 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.084494457 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067619244 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.08501084 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087084603 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.20241216 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.083670671 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068873152 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065368016 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.103596365 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111372635 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.071559978 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.06683533 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116416914 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069982987 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.084416707 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.10327598 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085848262 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.101556566 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.071203115 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.129548414 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.069633669 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.132734963 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068813626 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.112332693 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.074269916 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115867468 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.094580896 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069695081 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.155501921 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066289042 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.08308794 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068330317 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066107479 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.086158669 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069717629 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.099496447 seconds)
  done (took 20.901487996 seconds)
done (took 37.772904721 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.291757526 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.092640825 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.092736205 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076673352 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.092901664 seconds)
  done (took 1.443510121 seconds)
done (took 2.210081326 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120949155 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117795538 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06535336 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11364112 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06557668 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.118159921 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115186899 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082895898 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116981743 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.06804932 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113013721 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.0660586 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06479936 seconds)
  done (took 2.026616982 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.086088021 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086139867 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086283328 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084017438 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079757309 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084231741 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081526554 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105659715 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081967627 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08892176 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066002513 seconds)
  done (took 1.693727657 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084661658 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085633555 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086660364 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082616221 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.0803001 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083196179 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081901111 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103775912 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082568317 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090531009 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065782264 seconds)
  done (took 1.690682786 seconds)
done (took 6.168581977 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.08078463 seconds)
  done (took 0.839700472 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.700816065 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.511085625 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085501173 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.134628226 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.222341572 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.155842696 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.441219547 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.110602685 seconds)
  done (took 10.295734216 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.090739615 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.098546759 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.072334651 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.08958664 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071912986 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.087730369 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073928228 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.073042262 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.087632865 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.074081784 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.089300144 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070101564 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.085390164 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070607557 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071396107 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.087566533 seconds)
  done (took 2.123694718 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094830172 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.094055375 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.093188969 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.078261805 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.090863437 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074654787 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.093145478 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076647841 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.088325194 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074673009 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092523186 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076206207 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.088991706 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.068226126 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.092204892 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078557411 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088589469 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077315985 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.093252477 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077904512 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.092769794 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067911507 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.089032603 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07753192 seconds)
  done (took 2.892260662 seconds)
done (took 16.917193408 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.133096695 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.078157452 seconds)
  done (took 0.977843582 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084654277 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099512608 seconds)
  done (took 0.957339737 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.086511058 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.082579394 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091226409 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.094896343 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.083817983 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.067649481 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.104296465 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068869996 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.083260653 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068376376 seconds)
  done (took 1.603624186 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.07166158 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094515352 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072993647 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.098068664 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075724997 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.081317867 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075079073 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.085445463 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080467965 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079891863 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.07352456 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.10131345 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073438897 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.102228845 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074353154 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085554748 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.089363205 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069974294 seconds)
  done (took 2.260323021 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068164578 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.069325739 seconds)
  done (took 0.913653156 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069902381 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06656285 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083826796 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068111258 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.079942965 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064528284 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.081444774 seconds)
  done (took 1.289659787 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.402529994 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110911299 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.243531575 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.08937331 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.104261959 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.264102186 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.084828826 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073261906 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.089385307 seconds)
  done (took 2.276360578 seconds)
done (took 11.051831321 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081945854 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088583683 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111171466 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.420551034 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107393977 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068080618 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.142706008 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.209175162 seconds)
done (took 2.007559758 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.127621554 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.618908588 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.403925616 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.212966931 seconds)
  done (took 2.015851785 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.378341435 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.092825086 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.075126205 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.06817099 seconds)
  done (took 1.39650284 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067518653 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070615704 seconds)
  done (took 0.921777323 seconds)
done (took 5.242636266 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069657342 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.068148796 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.080741345 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.068183298 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.06640192 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.080878457 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.088592629 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.084893045 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068197862 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065722787 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.082175695 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.071861095 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.084896228 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068465405 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066076343 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080971023 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068205605 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066389756 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081480817 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.068608287 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065573481 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083591294 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.06655905 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06585432 seconds)
  done (took 2.580870577 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.088012005 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084783079 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.074419403 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089799055 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072412177 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.089088912 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073229324 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069655948 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.089223897 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070045193 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087639213 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.07264352 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.085262807 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072472627 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085473043 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073236831 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088715204 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069213056 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070618141 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.089927012 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073772064 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084608078 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.07284105 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089067422 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072259971 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087280725 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070867888 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.084517384 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073942356 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.088034316 seconds)
  done (took 3.179904975 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.073529728 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065720929 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.082031498 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.073070647 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065472511 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.083374052 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.066212555 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.082208661 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.067684694 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.06556264 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.082891593 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065112087 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.066550803 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.082486748 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066629778 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.085075035 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081942055 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066016271 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.081317322 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065871122 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068686824 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.082102404 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.066575674 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.081897805 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.06579286 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065632045 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.082043983 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.066468974 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.066841194 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.081695068 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.069476924 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068929412 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.081937805 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072276727 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.085784591 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065362577 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069621641 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.080760347 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066099179 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06565379 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.081524949 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.066142559 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.065400153 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.088598981 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.066477537 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.083415077 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.066312181 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.067643847 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.082056975 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068820434 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.081516444 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065478021 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.067680678 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.082076596 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069855952 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.065163054 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.082466145 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.065087366 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.082587588 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065782455 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.065310917 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.081451949 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067626417 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.066240494 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.096672168 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.073010482 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.081185462 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067580736 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.067334641 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.083892131 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067869541 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078970187 seconds)
  done (took 6.071365175 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.120438328 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.093403131 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083597061 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068278426 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080315569 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066312456 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069909867 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082557762 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068312738 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087400811 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066107366 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06711434 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084215476 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079308236 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081854869 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06817924 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087510031 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064488895 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.066714656 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085365594 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066610051 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.085424492 seconds)
  done (took 2.516719656 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.190140166 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.08895854 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.110965619 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092128155 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.086209929 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075164528 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.08745334 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072573298 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07288824 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086864424 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070341402 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08796176 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07004194 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086343305 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070740559 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086050242 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072445081 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086128783 seconds)
  done (took 2.384715216 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079998521 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067655811 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.107817504 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068298555 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.084951746 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071281517 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08917976 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.0775975 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086764771 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068705279 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092102491 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071088521 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.086295463 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068551469 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070653218 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.084267159 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070644909 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084008524 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076961782 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089587092 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074027198 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091527056 seconds)
  done (took 2.555551165 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083959923 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069972891 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.102913787 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086788297 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064142589 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067327365 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.09052317 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.069625834 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.09080656 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.070319496 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068254694 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083133426 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.073549283 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.084188078 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.073189649 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084959996 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070463798 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068448307 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086692565 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064782827 seconds)
  done (took 2.349017785 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089073806 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085198249 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069860564 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093483871 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069657799 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.086194809 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078200031 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.085642892 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069595771 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.10979666 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06992733 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084841098 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077153613 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091141816 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069300974 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093855871 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077472962 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093505012 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069849639 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085273759 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.21943841 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070250719 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092765456 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069499584 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085097062 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069054662 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069844759 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090452576 seconds)
  done (took 3.214805019 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069478587 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06826673 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082142769 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065750801 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066242631 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.082141854 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065508085 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066141095 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.085106652 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066143744 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.068223594 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.084307348 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067902313 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.084460313 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068424288 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068670632 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084346506 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.06624197 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066026839 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082693532 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.068631106 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067718871 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.084819824 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067110236 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081507961 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068533585 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066457518 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.082194189 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068319789 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066116042 seconds)
  done (took 2.977907468 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079316881 seconds)
    (2/2) benchmarking "in"...
    done (took 0.092171065 seconds)
  done (took 0.973421396 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066793509 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083058385 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.083110231 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072518644 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089326653 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069503756 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.092787359 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073320257 seconds)
  done (took 1.429802899 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.08458582 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.080359931 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086390944 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080392053 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.09595643 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085436378 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.156650269 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086750066 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075507939 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083323012 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081482612 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067675966 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.092079202 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069962719 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090863516 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074514408 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.06669559 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.090333153 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.072268273 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.083147756 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069825856 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092409426 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071467607 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.065610297 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086689591 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.077580403 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.09639289 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.070255119 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087765176 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075261564 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073595683 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.079129385 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.069011745 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.085677635 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.067555618 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.094340149 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082934229 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087171709 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077202032 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069334424 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094523603 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063764285 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.089490506 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.07571481 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093733521 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.069722942 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.069310366 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.080893901 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066925479 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086341273 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064039122 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06826285 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.079776624 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076012978 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.087991304 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078730569 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.070570325 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.086545974 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.0721609 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088154733 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074979645 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086506302 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070411958 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068414539 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09399883 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073305972 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09365278 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.064928863 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062991552 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.082898089 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077422394 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.1067231 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.075148317 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.085244649 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069917139 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.082950506 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070920655 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070428394 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089831856 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.075375575 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.085100694 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075188542 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091277505 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067894391 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.07045607 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.09334257 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.067413141 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.08743519 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066742619 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100974118 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.067714774 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.082379595 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066096437 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078562277 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087557154 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.068568807 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.082744493 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075024069 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063482 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.085103207 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069550294 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08541401 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078590451 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090722785 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074694962 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.093314414 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.07649772 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068577946 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088359527 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.066059915 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085571037 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066849735 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075312422 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.079268092 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071224157 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.084783368 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.069444051 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076548346 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.083399062 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.069250383 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09232939 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073244582 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.083040633 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065475094 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.072077387 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.084829178 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073078121 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093039479 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.068138996 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064385446 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.081158766 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072121287 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.085589761 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072768901 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090810971 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07157046 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.06381194 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.083727689 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073662367 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.094133559 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068959214 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068667853 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.091045322 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070218184 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084297084 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07512235 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087337021 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067038912 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073863708 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.08604117 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064960321 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08875425 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071141765 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067174672 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.087726807 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072333342 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.08705234 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.070405405 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.0833601 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073799685 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070141478 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084457472 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068438535 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083543886 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078458607 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069890255 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.080575589 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065541361 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.091832293 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066515435 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.068333156 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084192221 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071496392 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.086277055 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066024428 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.068101993 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.086788251 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079320104 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089208894 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069971503 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.089898693 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079815132 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084763302 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.07091733 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.068045196 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085943508 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.070665934 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.093776345 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073829523 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090341633 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070256683 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.066056082 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090156931 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075893687 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.0844755 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.067739915 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.06722278 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.088962966 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074921782 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.088850758 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.070561697 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083898715 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068679583 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072307172 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087605125 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.068766564 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.083822774 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073615456 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.085075121 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.074343823 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070377248 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.09613504 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072657855 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.080955161 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072395251 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083814626 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074792587 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.06430446 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.083329105 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067461661 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.086775572 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.068293146 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070977394 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.080172618 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076075815 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091767475 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068150327 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.06815848 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.085811874 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076045086 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.086704599 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071361585 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071587237 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.091445482 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078378241 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.084164323 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.072485008 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096239174 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068893912 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062267676 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.089437146 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067469863 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.084380793 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.068840786 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066588138 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088142857 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076871254 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.09209193 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.063044776 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.087343718 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067348829 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.06791572 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.081206989 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072560555 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.087520634 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068684519 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074313962 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086764366 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.070669181 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088756651 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067982321 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068872732 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.085981532 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071708268 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086287536 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070984217 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066976788 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088784993 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06723792 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.08273463 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070382466 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068242997 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.086054295 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074206966 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.085416616 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068325001 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.07080333 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.086340149 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069428326 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.08506382 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06847625 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087669229 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06877765 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069306625 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.087526521 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064345296 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091521577 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.06864533 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076252975 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.085354452 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.066248617 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.089908363 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070698585 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073613894 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086250113 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069899349 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.086079618 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068622569 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.087157005 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075755244 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066653471 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.095717168 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075737218 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086021999 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071838678 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068258979 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.087445779 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067678002 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086383409 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069843787 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068225881 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.08484745 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073565362 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.087960811 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069551979 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070230213 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.086842732 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069375127 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.086607641 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.06379269 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067640395 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.08451171 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.069170631 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094563217 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069288942 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.08530829 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.068323317 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069838209 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.084779557 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.066082039 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.092931172 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077798248 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.086644067 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076118816 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066593952 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.087627368 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078688746 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.07996959 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067085597 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.065561084 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.083330562 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076352047 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.085718248 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078290989 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.085130164 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068738688 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065875433 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.085809295 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.068187231 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063467807 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.084791315 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072726973 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084826265 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068986827 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.06902768 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.089032496 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070537786 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095061453 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.068397256 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086436527 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.069632455 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.06615014 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.084602537 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068004986 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.087537032 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.069953286 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067051803 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.082882038 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068717805 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068471752 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.086655175 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068887017 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.086594805 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075685568 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067641539 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.088150945 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072282646 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.083683905 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072462859 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.085586853 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.069173722 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.06751666 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.088977788 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071287207 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086559765 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077360455 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068520836 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086332251 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068747657 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.083857888 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.069052017 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067958606 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.085995445 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067801102 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.086860794 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076597394 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.083380218 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071219668 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068959058 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.085263857 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.076466723 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.087135935 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071915959 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092444557 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.06858514 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069771787 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.093137024 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.073113315 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088562946 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069460797 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069284321 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091840066 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067923336 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.091823613 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069601144 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.086611317 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069826776 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066867635 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085477221 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.068926732 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067942835 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.091863217 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069803013 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.084567781 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068255343 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.066402934 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.086517788 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072354527 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093100483 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070806221 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088709873 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.0644383 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066343919 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086888308 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066292627 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.086823034 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071494596 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.0742454 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.087817903 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068927559 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.084638171 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078021493 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07396798 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.090174377 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066325013 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.089606482 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.07055793 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.087400614 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.070198478 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069314049 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08682291 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072911388 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.087587765 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067845025 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075700652 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.08925315 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071078616 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.086898787 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069137155 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068699243 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.08189826 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069206066 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.087169408 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073300199 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070101825 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086134913 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079555514 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.08397302 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068640847 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089349428 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068511908 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073528971 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.080911322 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070414903 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08748166 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070374112 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064410594 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.08507239 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066761489 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.087923533 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068747473 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064428174 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095776656 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078068212 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.088901153 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068720892 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067448163 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.081857579 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.065495667 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.085446166 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069929598 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069672586 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.096590833 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068273767 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.084357846 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.065339316 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068890257 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088511111 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072985868 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.084150751 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064859671 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067578209 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.089512379 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074310442 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085435673 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068578629 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070900119 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.088291125 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.067418894 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089496083 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065902593 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072007664 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098245166 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.06949982 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087151948 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074328439 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092483908 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069488108 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.081224302 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.070992808 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071695126 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.086279247 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.070513641 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.086748047 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083762666 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089264371 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067541698 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067575956 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.088786185 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068482969 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.092883326 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069531763 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069729129 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.090687528 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070355102 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.094492923 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071473147 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092971082 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072216006 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.089478267 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06870615 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069169628 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.084180863 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067867759 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.069875556 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.08863682 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073398432 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.094989778 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067965358 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096758504 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077725124 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.08806965 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.066623688 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06818007 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.086579281 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.064908531 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.087242464 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.067870606 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.067093131 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.085661025 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.068524808 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069776598 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092418583 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.070101228 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.087200601 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.069811149 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.063159835 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.088992887 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071453298 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086953302 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.066258164 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.068288258 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.08686166 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.07214987 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090405454 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067458497 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070345932 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.088324418 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069775942 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.082137038 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.07582857 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067093667 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.088415989 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068434194 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087116715 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.070403946 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070663875 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091246882 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069948074 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.088503262 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.078062151 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088106536 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.067217246 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.065793877 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.092029222 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.067326849 seconds)
  done (took 47.1348665 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.110152522 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084138297 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064044319 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.08187329 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077984003 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083900805 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063912853 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064952014 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08317923 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068299071 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.081958092 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064602647 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091571134 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088710656 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095307997 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069220375 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082240007 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06556157 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081683882 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066463773 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091458283 seconds)
  done (took 2.50861637 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.078190393 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.090858731 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07562193 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.096234747 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070740044 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091115 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.076306973 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091165746 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096800146 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06999265 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.095926883 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074271094 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.087006164 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.070104957 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087484662 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07314789 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.095827718 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070535849 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.091011835 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076172357 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090963817 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075740343 seconds)
  done (took 2.66966059 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.070629084 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.068458469 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.08710437 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06370686 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067875453 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.081421221 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.073041925 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.084071187 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072382134 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.074100858 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.08492257 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067986836 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.086974864 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.064004481 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067953946 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.084152072 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.13435835 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071315579 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067431703 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.088768094 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064068682 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.088686265 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.065087972 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.064527119 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.084937257 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.072553342 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.086651412 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.067228718 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067333774 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.08509664 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.069044486 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.083943383 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069669221 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069259953 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.085097763 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067540869 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.068175255 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.08529376 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063914572 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.083980376 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068748051 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.064039123 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.085995441 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069618387 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.066169865 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.084453615 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069994464 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.086600878 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064024871 seconds)
  done (took 4.561664709 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.087453968 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.131870104 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088877065 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092011261 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.103477064 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.093702287 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072361951 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.111996774 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.066045242 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.085935819 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084712923 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.105007266 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.087312384 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.07423422 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.090080223 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068710267 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070387387 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.085725965 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.073195327 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086769531 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.073533859 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.094261805 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.100647196 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.082885099 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.09001734 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068183491 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.086275143 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.07356697 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.099505019 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.074344537 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.091875366 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.07499752 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.101960934 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070661701 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.085715542 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.071675385 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.10264492 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.069307808 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.08894062 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.067261866 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087673395 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.072555813 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.092276564 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.085600128 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086941232 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.0747756 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086629844 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.066460009 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.099300544 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.071529646 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.094550895 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.102801074 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072728517 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.068229671 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.091580574 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.101482101 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.069231591 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.067068487 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.090773295 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.09916404 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066625908 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071426298 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.101846087 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.08837153 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.075795522 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.101942228 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.07342952 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090382091 seconds)
  done (took 6.754088417 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078831487 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093242728 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083711825 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102175751 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093496428 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.076131891 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.092790341 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076020224 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.092898505 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079232273 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.09345103 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114469858 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071130355 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096093737 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075293105 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094213756 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075435024 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093821893 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07486345 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.094243714 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.0929698 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.084232272 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.093745747 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.101472737 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.104910087 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.088159086 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075678535 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.092428119 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083914523 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.094131611 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104397606 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075838306 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.093433488 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.102830135 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.088035508 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.092825993 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068073975 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092473459 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075570793 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.093433747 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070382954 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101509607 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074366517 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.088072774 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075200406 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.093970101 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.101679808 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.085977862 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096514947 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097796311 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.076142192 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101658652 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075088299 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094143912 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.101264879 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.108989505 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101931731 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.100533539 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075237201 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.102260225 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10099562 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.108857527 seconds)
  done (took 6.439637299 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090523155 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096074168 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098461325 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064324297 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066884801 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091427562 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067510012 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.084913915 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.0771808 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095740076 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079367786 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090661551 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075888365 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099402664 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090489126 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076676786 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090520065 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073968119 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095418849 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07331145 seconds)
  done (took 2.537774721 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078212626 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.104444524 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069715843 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074146422 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.090663444 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074585133 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.08924076 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071639282 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087929019 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07233114 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096724059 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07918387 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087463877 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075282498 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.095858001 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074856008 seconds)
  done (took 2.186092294 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.081852826 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.097432936 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083300494 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.088268212 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.06753414 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.083277208 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068752508 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06449973 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.084255058 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.083545143 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.087906943 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070810794 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.08814532 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067200591 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064832981 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.090921559 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064853717 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.084150944 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069189215 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.10132346 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.079694039 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.085788117 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069858175 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.069468029 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.088654448 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.073819616 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.087288195 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066945302 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.085254204 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.070071839 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.087463081 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.076258025 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.084742581 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06756428 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066620055 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.084893669 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.068997542 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.087094809 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071693064 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.068435062 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.086285118 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068356241 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.087145342 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.070337857 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.083286512 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069540937 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.065279887 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.093171528 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.067884548 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.087297064 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069477094 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.088692153 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069582991 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.078504998 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.091323626 seconds)
  done (took 5.174894704 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083960612 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071154494 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084448682 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067631838 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089382137 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070453493 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071386704 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089781355 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07038741 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084621404 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071938231 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089978959 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071653978 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072703737 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088864947 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071901215 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.083213956 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072025253 seconds)
  done (took 2.273880914 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074785249 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068618738 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.095469456 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069054813 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.087395114 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071704928 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064993379 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.086194572 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067776118 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087649529 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068917087 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070442915 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086062943 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071523106 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087012444 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069469399 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070949089 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085734379 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069055484 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082779689 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071525926 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067560792 seconds)
  done (took 2.544344529 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.074992774 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.09540457 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.164155576 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.107519912 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.084004077 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.099960631 seconds)
  done (took 1.497599067 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093839848 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100952616 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070362284 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107725961 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076808241 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088865373 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070606899 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088057016 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080594272 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102436511 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07103335 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098838391 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097142907 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080145871 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095270398 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076935681 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089705069 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069863223 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087725706 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108262208 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071141509 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097587768 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071544095 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088055213 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071176983 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096623814 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079812253 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103626769 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087668904 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079696567 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094202108 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070893279 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098388584 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102839703 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071835348 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098433685 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071499432 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107642718 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076639798 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097152187 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071148945 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096147276 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098891514 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076759695 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096526 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071006178 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093840415 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070108864 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090143166 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11377262 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07670221 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097001609 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095472049 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0799215 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097025285 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11390847 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08402155 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09751933 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095376716 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084651223 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097942355 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075910301 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097879277 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103740883 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077425941 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09828428 seconds)
  done (took 6.714335642 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089289266 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107160403 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071846656 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102744314 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098779206 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072082381 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088640907 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071125218 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089122505 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070133449 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130309185 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071625892 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098528544 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097885629 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071174539 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089271767 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071509898 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096870669 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071318112 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113967944 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088968872 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079597262 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098467288 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097347631 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084337619 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095794807 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070802244 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089307952 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071106875 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089444697 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07569936 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090443985 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098430953 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.07002822 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097741356 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070951915 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089199085 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075742057 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089727137 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076621372 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097953515 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107330513 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071553279 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089295366 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084204882 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090032861 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070388538 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089501939 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071439833 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089124097 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084930621 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103946781 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10313089 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098233634 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072883902 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089646722 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071829479 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089425905 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072109498 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094752938 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080170961 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089381043 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114527035 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070856156 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08945407 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080123878 seconds)
  done (took 6.614177801 seconds)
done (took 130.629644286 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.202782906 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.185647767 seconds)
  done (took 1.260088828 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.07223692 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097748317 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.099376848 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.13071461 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.088077399 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102581753 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.119468989 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.081156325 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067633141 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.088083044 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068990449 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.089790605 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133406452 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068076052 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.087986136 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070562801 seconds)
  done (took 2.343998283 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104855906 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.197277522 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110676039 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06765289 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101188765 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080396625 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.086263745 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.078073874 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094842599 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067813856 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079704395 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096985228 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066375837 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.097389636 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07621528 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.098920958 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067183516 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099270044 seconds)
  done (took 2.554643808 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.107158428 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.143367446 seconds)
  done (took 1.130121688 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.203256457 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.123055175 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.204071282 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.418169773 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.209023699 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.283096916 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.174118278 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.173096835 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.160211198 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.170080881 seconds)
  done (took 2.994275435 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101841787 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.173454625 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.313419851 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.139526021 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.087587402 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.117955599 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.139798748 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.09042289 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.102301198 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101735107 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083252756 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.099129708 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098773633 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.096849317 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.077087799 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.098986434 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.122394043 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076436599 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078874965 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.097280024 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.119662932 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069073751 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076001811 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.095936715 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.079143895 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.098974179 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.068670213 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.087659668 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.078178682 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.096535044 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080472684 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.115453321 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.099086658 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.132215782 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.083687575 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.133033445 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.099061107 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074913821 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.096126538 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.075294832 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.099626903 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.07966511 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104502035 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078514347 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.08792375 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.079612886 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.086800087 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068832438 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.100133446 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.080564284 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.100306532 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.081293246 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.13222152 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.098907972 seconds)
  done (took 6.314040826 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.746058993 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.112711091 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095124873 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.810725388 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091001298 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106666286 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.718126254 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118423598 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.210724872 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.767878953 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.091009171 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.100068802 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.183850797 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.219023947 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.905587309 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.2883974 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.644548762 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.106683696 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.110631254 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.134596988 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.141568322 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.178096275 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.152892017 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.438311053 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.077190519 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.094395809 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.139001242 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.076695017 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.163635159 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.08559807 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.095095567 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.157625299 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.228569132 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.160026116 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098558194 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071980667 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092379826 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.150034592 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.222729004 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.194181458 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.159947544 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070790013 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.092648453 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.141566195 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132977884 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070012253 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.142459611 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.155921092 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.17210643 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.075814688 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.097148397 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.144846626 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.141262032 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.146355612 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.101621366 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.275078316 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.286893099 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071223585 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121547435 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.105368202 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.217525124 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.105398041 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.202411232 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140647733 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.169432904 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091751716 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.733798934 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.149968374 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.092900666 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.076241779 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119646054 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095175666 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.14048777 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.144143189 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.349685617 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.163894347 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.075565368 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071124575 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.229571778 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085229637 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09244782 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.144326496 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.076606976 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.124659176 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.146453038 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.164453005 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.15064049 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.207887552 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.143073025 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.140619499 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.096282039 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125280276 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.077315242 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.191123965 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.1979648 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.142646233 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.1850623 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.159873677 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.145411203 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.150202177 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.078331203 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.15142468 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120113769 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.103222941 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140447045 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.196066525 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.124651747 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084484056 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094876461 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.141226482 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.127501928 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.088161383 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.142054106 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.173233498 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.461330752 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.149675076 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069361474 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.108885315 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140481929 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.143080641 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098327029 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.215645532 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124671549 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.148175337 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12291768 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.090355224 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121366069 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.14305894 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.080896989 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124921913 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.139799786 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098130586 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.215597333 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.171186637 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.100184451 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.194427748 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.161819621 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.096547745 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.150814477 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12115245 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.148512332 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.078935887 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.139277943 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098271377 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.774311328 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.146497213 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.12289755 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.075626052 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.175865977 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071403703 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105876358 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.105100019 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070374342 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.734483606 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.108262221 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.101985519 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.086020843 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097011675 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122071969 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.138712503 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.074548825 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.141522199 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.204346074 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.077484717 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120218452 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.105773779 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.141342906 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.097283618 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.086007438 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.105901541 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.085560003 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12359193 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.09506408 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.085984608 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.147666993 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.163295891 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.175002296 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.565059871 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072301588 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.104552988 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.183794089 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092429566 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.244682406 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.158846958 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.18082585 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.142478799 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.102847237 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.288607843 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.144993657 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.157206273 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.108445173 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151600866 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090037624 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.13899957 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.144303429 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071402509 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097830697 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.142811461 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.146000551 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.142854355 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.947354228 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071476358 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.225415866 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.06997932 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.151868722 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.098162466 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.078935168 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.263679054 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071983488 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.148368668 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.165671109 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07609421 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.105527735 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.6782071 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.10590182 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.142574925 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.076484791 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.200152374 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.144582645 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.13796808 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.13937556 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097973136 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.141981365 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.187009025 seconds)
  done (took 40.786427471 seconds)
done (took 58.263992848 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.259231052 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.179921988 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.243522768 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.145268991 seconds)
  done (took 1.80737677 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.145973395 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.105899107 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.119114026 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.087118726 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103885074 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.088142914 seconds)
  done (took 1.553041152 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.405915182 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.267002152 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.23185024 seconds)
  done (took 1.809318424 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.283901379 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.21566806 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.447225441 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.299925735 seconds)
  done (took 2.259664716 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.176681579 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.114915567 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.069519347 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.107145218 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.161406058 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.253351947 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.13018959 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.189476746 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.081255951 seconds)
  done (took 2.239106411 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.19904749 seconds)
done (took 10.775529298 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.216147169 seconds)
    (2/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.300776129 seconds)
    (3/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.133747758 seconds)
    (4/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.134910748 seconds)
    (5/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.160911652 seconds)
    (6/309) benchmarking ("sort", Float64, false)...
    done (took 0.149465415 seconds)
    (7/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.075057333 seconds)
    (8/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.193376761 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.190038777 seconds)
    (10/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.185707549 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.095780734 seconds)
    (12/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.095415648 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.101929213 seconds)
    (14/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.246133114 seconds)
    (15/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.074375586 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.098132359 seconds)
    (17/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.167920877 seconds)
    (18/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.102947558 seconds)
    (19/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.09832048 seconds)
    (20/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.095766108 seconds)
    (21/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.163299409 seconds)
    (22/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.203369115 seconds)
    (23/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.106741842 seconds)
    (24/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.151581001 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.141524396 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.117416133 seconds)
    (27/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.205101318 seconds)
    (28/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.079938651 seconds)
    (29/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.212085217 seconds)
    (30/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.212201561 seconds)
    (31/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.182183455 seconds)
    (32/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.23396622 seconds)
    (33/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.177574661 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.149891119 seconds)
    (35/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.132107306 seconds)
    (36/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.208355559 seconds)
    (37/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.09872383 seconds)
    (38/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.070568808 seconds)
    (39/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.187398035 seconds)
    (40/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.071537776 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.111532684 seconds)
    (42/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.082260922 seconds)
    (43/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.096001765 seconds)
    (44/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.146043174 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.111577909 seconds)
    (46/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.179053665 seconds)
    (47/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.076524343 seconds)
    (48/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.072245799 seconds)
    (49/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.100273179 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091657999 seconds)
    (51/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.104090146 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074338267 seconds)
    (53/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.088284847 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.157289953 seconds)
    (55/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.159519237 seconds)
    (56/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.069162315 seconds)
    (57/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.098656927 seconds)
    (58/309) benchmarking ("sort", BigInt, false)...
    done (took 0.208908375 seconds)
    (59/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.088087482 seconds)
    (60/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.092931844 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.145097653 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.154734246 seconds)
    (63/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.185246192 seconds)
    (64/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.055316439 seconds)
    (65/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.115194431 seconds)
    (66/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.070708585 seconds)
    (67/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.168872276 seconds)
    (68/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.055214559 seconds)
    (69/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.183004666 seconds)
    (70/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.054837645 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.118211638 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.146141181 seconds)
    (73/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.099678209 seconds)
    (74/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.053722937 seconds)
    (75/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.077675168 seconds)
    (76/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.158626401 seconds)
    (77/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.074170925 seconds)
    (78/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.087915042 seconds)
    (79/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.112123049 seconds)
    (80/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.159204102 seconds)
    (81/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.062831296 seconds)
    (82/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.052104862 seconds)
    (83/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.155640394 seconds)
    (84/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.052783002 seconds)
    (85/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.090861516 seconds)
    (86/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.070737512 seconds)
    (87/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.078131631 seconds)
    (88/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.098814122 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 0.06875614 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.098903854 seconds)
    (91/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.171220884 seconds)
    (92/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.075577778 seconds)
    (93/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.080127034 seconds)
    (94/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.069741726 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.113436332 seconds)
    (96/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.069450137 seconds)
    (97/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.0945338 seconds)
    (98/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.076663005 seconds)
    (99/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.13077139 seconds)
    (100/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.079196153 seconds)
    (101/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.171878732 seconds)
    (102/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.102131683 seconds)
    (103/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.097801348 seconds)
    (104/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.215237029 seconds)
    (105/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.069322047 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.12041157 seconds)
    (107/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.052795281 seconds)
    (108/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.068961816 seconds)
    (109/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.201618823 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.11780321 seconds)
    (111/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.100677363 seconds)
    (112/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.185378475 seconds)
    (113/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073941756 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.148920189 seconds)
    (115/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.073111804 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.166637664 seconds)
    (117/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.191164267 seconds)
    (118/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.077680049 seconds)
    (119/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.053658206 seconds)
    (120/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.130601314 seconds)
    (121/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.072966346 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.119453185 seconds)
    (123/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.055645755 seconds)
    (124/309) benchmarking ("sort", Bool, false)...
    done (took 0.16038859 seconds)
    (125/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.07613927 seconds)
    (126/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.17250352 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.116073815 seconds)
    (128/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.056051225 seconds)
    (129/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.065148432 seconds)
    (130/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.076525399 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.073684269 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074462656 seconds)
    (133/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.085146784 seconds)
    (134/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075536361 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.169978304 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.078706388 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.126927067 seconds)
    (138/309) benchmarking ("sort", Float32, false)...
    done (took 0.130585328 seconds)
    (139/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.091055096 seconds)
    (140/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.09856946 seconds)
    (141/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.104528556 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.075721714 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.06745523 seconds)
    (144/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.098840542 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.092246522 seconds)
    (146/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.195420009 seconds)
    (147/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.121796538 seconds)
    (148/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.172404212 seconds)
    (149/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.096828992 seconds)
    (150/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.139107678 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.089725396 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076499005 seconds)
    (153/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.200040913 seconds)
    (154/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.068906921 seconds)
    (155/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.093203987 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.092340375 seconds)
    (157/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.105530045 seconds)
    (158/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.078106898 seconds)
    (159/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071240637 seconds)
    (160/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.144362878 seconds)
    (161/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.080098728 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.121637013 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.068522617 seconds)
    (164/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.097731313 seconds)
    (165/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.053952383 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.068280792 seconds)
    (167/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.102464041 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.068015993 seconds)
    (169/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.133218537 seconds)
    (170/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.117740321 seconds)
    (171/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.052775139 seconds)
    (172/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.097700434 seconds)
    (173/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.054243753 seconds)
    (174/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.052965214 seconds)
    (175/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.2035033 seconds)
    (176/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.054322846 seconds)
    (177/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.16112838 seconds)
    (178/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.07275103 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.135353619 seconds)
    (180/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.067928094 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.111655938 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075773637 seconds)
    (183/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.085917765 seconds)
    (184/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.096052097 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.115192427 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.079697069 seconds)
    (187/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.053873106 seconds)
    (188/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.097527858 seconds)
    (189/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.067648598 seconds)
    (190/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.077546464 seconds)
    (191/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.161476124 seconds)
    (192/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.079716242 seconds)
    (193/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.103483318 seconds)
    (194/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.198468417 seconds)
    (195/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075925221 seconds)
    (196/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.054088438 seconds)
    (197/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.074583981 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.107073348 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.067656055 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.089984328 seconds)
    (201/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.079175412 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.110953884 seconds)
    (203/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.271814703 seconds)
    (204/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.05397144 seconds)
    (205/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.074631436 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.068620202 seconds)
    (207/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.172695146 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.068582415 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.09740786 seconds)
    (210/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.090203368 seconds)
    (211/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.053974916 seconds)
    (212/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.055229808 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.11805675 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075968442 seconds)
    (215/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.076060236 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.068182208 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.068064336 seconds)
    (218/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.078279052 seconds)
    (219/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.053902073 seconds)
    (220/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.069365788 seconds)
    (221/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.091979555 seconds)
    (222/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.116216138 seconds)
    (223/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.076851644 seconds)
    (224/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.074044096 seconds)
    (225/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.054680663 seconds)
    (226/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.075858385 seconds)
    (227/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073347398 seconds)
    (228/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.160261255 seconds)
    (229/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.081137653 seconds)
    (230/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.053416455 seconds)
    (231/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.075193972 seconds)
    (232/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.067145 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092897105 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.1157053 seconds)
    (235/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.06754547 seconds)
    (236/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.092014994 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.14213272 seconds)
    (238/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.131972059 seconds)
    (239/309) benchmarking ("sort", Int8, false)...
    done (took 0.164958897 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.097278776 seconds)
    (241/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.10064548 seconds)
    (242/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074726884 seconds)
    (243/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.054275304 seconds)
    (244/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.114128731 seconds)
    (245/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.069014042 seconds)
    (246/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.076511182 seconds)
    (247/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.075640965 seconds)
    (248/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.069541811 seconds)
    (249/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.092788054 seconds)
    (250/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.05384742 seconds)
    (251/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.190970655 seconds)
    (252/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.064464549 seconds)
    (253/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.052706591 seconds)
    (254/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.090634466 seconds)
    (255/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.055945933 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.090206182 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.114666443 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.1395694 seconds)
    (259/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.063042381 seconds)
    (260/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074309041 seconds)
    (261/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.076948185 seconds)
    (262/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.053330187 seconds)
    (263/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.067970358 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.096470774 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.067678143 seconds)
    (266/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.095974164 seconds)
    (267/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.073669071 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.075839698 seconds)
    (269/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.076466042 seconds)
    (270/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.144100081 seconds)
    (271/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.193928257 seconds)
    (272/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.191174417 seconds)
    (273/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.054134889 seconds)
    (274/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072066962 seconds)
    (275/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.075485546 seconds)
    (276/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.05555787 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.115303566 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.093407861 seconds)
    (279/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.053126039 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.112438866 seconds)
    (281/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.075567378 seconds)
    (282/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.076143233 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.067976145 seconds)
    (284/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.07645034 seconds)
    (285/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.10631532 seconds)
    (286/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.055392526 seconds)
    (287/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.068758107 seconds)
    (288/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.158934565 seconds)
    (289/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.113079702 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.075498014 seconds)
    (291/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066718227 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.088703056 seconds)
    (293/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.05357564 seconds)
    (294/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.05479377 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.121597086 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075996281 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.090772806 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.073995406 seconds)
    (299/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.068371572 seconds)
    (300/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.076104308 seconds)
    (301/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.069096553 seconds)
    (302/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.114212855 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.073671646 seconds)
    (304/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.054781729 seconds)
    (305/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.091139258 seconds)
    (306/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.055068948 seconds)
    (307/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.063710433 seconds)
    (308/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.077884351 seconds)
    (309/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.067615302 seconds)
  done (took 33.59977724 seconds)
done (took 34.517638821 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084578208 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115351825 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076640074 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.116572388 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082309109 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.102209889 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075401044 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080748885 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.10427535 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.084680151 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.103559017 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056395231 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.098744978 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076844541 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.099111979 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092658932 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.103019066 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074292703 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075783594 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.089827292 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075265504 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.089338057 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.06964944 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.058314588 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.101704547 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075802291 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.074112105 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.099352837 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067895832 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.089908821 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071044685 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073764573 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.089519266 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081303287 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.096331909 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076059811 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.077455384 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.100597954 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069371704 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.089453189 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076154697 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.06689548 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.096090386 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.076028868 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073314951 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.095501259 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.076005692 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.104277218 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093263742 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092003034 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.0756061 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.100486654 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079281884 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.074041236 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.093634017 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.076438485 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.094648659 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094765962 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.098065663 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069681804 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075520766 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.099268962 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074232255 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.097896629 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075579664 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077695622 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.100464483 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073853194 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.099537148 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073379479 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.068092209 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.097995977 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071547378 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.067962372 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.099968237 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.07891975 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.089653506 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073943011 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.075440791 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.096752037 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068043377 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069707023 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.092166008 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.074792294 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091221417 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057256999 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.072571923 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.095985995 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067772093 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076679095 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.09581042 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.075235907 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.091727519 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079164919 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067998316 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.095273833 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067389787 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068426066 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.09224507 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072445717 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067321875 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09209206 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076816333 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.091079061 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.073941823 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.082355874 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.089545 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074013309 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.089148156 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067265289 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.084081694 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.099643316 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068946456 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091393467 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067972513 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.075051364 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.090274601 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.068215783 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067911573 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.089366626 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.074751835 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068072276 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091719537 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.075289027 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.103612613 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.068247938 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072418525 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092601946 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.068401354 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.07323327 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.090845796 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.067926399 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.069881066 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.087646621 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070327488 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.089837373 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.074980815 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070715886 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.098169957 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.070021408 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.09825006 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.07262827 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.074518591 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.096326505 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067292651 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.061188222 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09169058 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070596909 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.070308925 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.089609517 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06975663 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067550518 seconds)
done (took 13.453378063 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069333407 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.170490383 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.127573015 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.098473481 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.111869642 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06843444 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.102306116 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.106534824 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.092154539 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.12838619 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.089999616 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.109970031 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.117143664 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.090319559 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06820137 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.072510877 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.092488675 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.091112859 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.12696912 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.10983272 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.119078911 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.090166512 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.122876017 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.09224439 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.113187636 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.105486234 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.090909121 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072777919 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.093164655 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.095398807 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.110062402 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071344861 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.06868337 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.125023952 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.119611986 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.088058252 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.090270401 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.086687569 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.090357233 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068069956 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.116523766 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.101874194 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.106760221 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.084727267 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.096328865 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.071961013 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.092046304 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.088777707 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.114736857 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.083696241 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.113260105 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.135195051 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071975231 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.108229698 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068134428 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.111905328 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.107197319 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.070434113 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068450606 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.093330343 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.068440745 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071687035 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.113543096 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.117202387 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072179998 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.106952388 seconds)
  done (took 7.378253453 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.087672876 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.118241358 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.086604431 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.110153875 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067970452 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068799287 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.091176074 seconds)
  done (took 1.60244065 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069804651 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091666895 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.113450289 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090786846 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.110349018 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.089100682 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.101428676 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.06856074 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.109169519 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06989407 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.113896242 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.107074277 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.093815941 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.076097937 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092718324 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.092097577 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092395109 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.091256338 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072750842 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.114967827 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071464317 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.112353209 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.071675212 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.06930302 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.107194692 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069905714 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.140690053 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07356554 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093802005 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072637223 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067992006 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.142559273 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105688815 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.080229192 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069625233 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.107364806 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.084659137 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090796946 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085941789 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.097285133 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.08387912 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070298357 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.093356199 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067614056 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073995908 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.103314031 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070225191 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.092957739 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072413647 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089128834 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.093318018 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.08383094 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.092104786 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073455847 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.070319928 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.097611498 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.079924651 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.092857786 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089731255 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071205828 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.109211465 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086189049 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.106501851 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085110458 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094627997 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084110538 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.106570144 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.071966658 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070077456 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.096469057 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.085764027 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.089422323 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071146687 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079734052 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.093363435 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.092530493 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.115613339 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07163278 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.10235279 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069642114 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.07069372 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.092572992 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.092191227 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096327902 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071373514 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073055969 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095711277 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067980765 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.067358979 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.096057648 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068941024 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.092975825 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.072969474 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070682455 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094615962 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086574885 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.092287126 seconds)
  done (took 9.499280598 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071101379 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070241449 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.094114244 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070626592 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070268005 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.093250223 seconds)
  done (took 1.454007465 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.101961192 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.094782137 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084316409 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.097500733 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.109547611 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.107548632 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086087755 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.108192991 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087450099 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.104888663 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085134189 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.107889039 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.089933724 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.099035732 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083875104 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.097412173 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.084947164 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102575203 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.08135304 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098889754 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.090707632 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.098180039 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07552994 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.10906752 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.072997258 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.076205684 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102474927 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082250058 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.104526064 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.085051868 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.09888127 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.073747866 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096755919 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.085383988 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.107920089 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074716431 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098016184 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074338432 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101768313 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.072875027 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.107677293 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07664789 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.080841906 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.096536955 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.108008927 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.073891074 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.074538635 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.10147379 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.083536246 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.097427196 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073829431 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.098347768 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.073235806 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.097239424 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074429124 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.107818268 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.073390284 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.107557627 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.075637928 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073467798 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.09555431 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.07408503 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.107108761 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.073203184 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.106348272 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.074568045 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096713931 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07596073 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099144371 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075607615 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.07397878 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.095680851 seconds)
  done (took 7.486037209 seconds)
done (took 28.393127944 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.65460563 seconds)
  done (took 1.638766808 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.771671411 seconds)
  done (took 1.758120746 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.735269371 seconds)
  done (took 15.728361408 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.616611495 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.762015633 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.811086835 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.159243846 seconds)
  done (took 3.335457799 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.889204925 seconds)
  done (took 1.897711718 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.235597983 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.224586408 seconds)
  done (took 1.454308919 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.736390067 seconds)
  done (took 1.738477986 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.30114973 seconds)
  done (took 2.293111424 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.322096219 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.183688966 seconds)
  done (took 1.506662559 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.523151377 seconds)
  done (took 1.523287669 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.939722073 seconds)
  done (took 7.944807973 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.232371144 seconds)
  done (took 1.247734862 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.270785837 seconds)
  done (took 1.274027766 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.12073278 seconds)
  done (took 4.123134045 seconds)
done (took 48.459214569 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080701712 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083993482 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.106260903 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080871492 seconds)
  done (took 1.349699726 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.080723321 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075757629 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.102146851 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075301015 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.103187116 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.075947604 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.100349463 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.079632696 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.075503029 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.099234528 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.076162752 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.09794005 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.078201504 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.100011203 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.072845043 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.078259282 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.10025234 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075655138 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.101462952 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.075412685 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.073314364 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.099113376 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.078724 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.097371908 seconds)
  done (took 3.08382115 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080404584 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074336639 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.099157175 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074491996 seconds)
  done (took 1.335799339 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080124976 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.116639921 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.092154443 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079365935 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.117635646 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.111978573 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072090884 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.072449041 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.097222545 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079720097 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.093268878 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.101114338 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.113646146 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079406175 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.104384385 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.067904868 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.071577534 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.112004268 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080621319 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.103006147 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073039661 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.08251165 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.09408325 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.093206198 seconds)
  done (took 3.203276173 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.07993016 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105649734 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.104507525 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091883889 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.118644031 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067908455 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.101291773 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093130829 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.150587642 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068306342 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.096297794 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06858277 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.098653541 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066823305 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079933642 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.134031946 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.114445653 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.094888693 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099473279 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.091075927 seconds)
  done (took 2.942507293 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.076859817 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071750998 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090121466 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.071186629 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078865157 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.097841109 seconds)
  done (took 1.500580162 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070322508 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.06981978 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.092001793 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068243972 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074054943 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.09246472 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067746372 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069027465 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092385436 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069718792 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068626755 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.091192551 seconds)
  done (took 1.939366053 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.386555796 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.093787854 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070957932 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.090080987 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073230369 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.091589136 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082375071 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069551594 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.115995981 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069519161 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.092113605 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071223887 seconds)
  done (took 2.325068904 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266984003 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080316324 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.325181296 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170799325 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143857195 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157879995 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106223321 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14133981 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.200760528 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14091537 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203129593 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226884495 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136478871 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170965796 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117821602 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.108992805 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21391529 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225349246 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107601686 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227417109 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208430687 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158774309 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182773133 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129331791 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136842218 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151831897 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.074315028 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1076541 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234429616 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164222083 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203495728 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139930773 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098693776 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231630498 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227827164 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197871656 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164386563 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086679121 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.157962406 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.167061093 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257039673 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115705498 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196484588 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136272057 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107800791 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175019731 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149209313 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.149481275 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.139788333 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116723391 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17658237 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243748932 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.167527235 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113331304 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139336849 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143910643 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.146602504 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105966595 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244482067 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219513422 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160356669 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.097831414 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099583275 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213954052 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162144106 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.144011534 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.15583757 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120931265 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169886169 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.212444466 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147888229 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176842543 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.182525145 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091789636 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148036115 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196949214 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158424166 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204178816 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180685412 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.074886544 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155488782 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132211463 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083691847 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.170068188 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078751329 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235016953 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125658308 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.14065282 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141216694 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137825361 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11295176 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223256195 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206476461 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106941933 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.092290536 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133169893 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.151440843 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1776747 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115326301 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13709233 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149666844 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.082323353 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193889798 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.077513017 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155371912 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.104831194 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154373933 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1635629 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078187151 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158220128 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131792625 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.130153203 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166604667 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222807064 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093585981 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109738756 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203719964 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180930563 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.135489131 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178586138 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190985127 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.127953704 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131419201 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207833607 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244689035 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092337162 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226313877 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137132681 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086394737 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.114716204 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156767066 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14278854 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.152085836 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086072811 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.181109162 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202589211 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.102616446 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099932453 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193021203 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084688583 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108524408 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142006575 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130563155 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.098794987 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.129486943 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.136170336 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173501123 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157331962 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136002592 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155744319 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127424524 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230062796 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117222352 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.133016138 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107231898 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.09763999 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.168650276 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219601808 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082935238 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229474104 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.157280817 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133793906 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151886684 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086601988 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172540494 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106194689 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.074197582 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20216292 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14085952 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112975156 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.210936276 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132174407 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.15748642 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.154575511 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165172896 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162662016 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.188697302 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110060542 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.115102646 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142243089 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156325761 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.101308416 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.098295259 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.110355575 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132488642 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125456514 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086607048 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174607529 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182476621 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101987532 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14237815 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126353565 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181386095 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.104284206 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162988871 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.148739384 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123549623 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.187245141 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215506013 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166527844 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12885482 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178064776 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.097534456 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077625497 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.11894435 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15828579 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111541123 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086420546 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148098103 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.206906134 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160910443 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170100424 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140349074 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152300629 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189473421 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.098577275 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.120447735 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206696325 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156330999 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.157224257 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093002857 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.127051418 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17638191 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13852682 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247269695 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145915176 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15335958 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208985724 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.131691168 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083784033 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135600423 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169681784 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135264069 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.212341798 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128849045 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09146792 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140225006 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.109465712 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133709991 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159832254 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151137993 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166409169 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.145712075 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189101354 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081106849 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148723171 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153767365 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153715995 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.092321326 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150368551 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22528655 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09926884 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148672285 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217224058 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083396849 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.154125298 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241588863 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202471197 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087633025 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139700136 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15773687 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159636108 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14840829 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197784606 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141346241 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167259749 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141140957 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.088376386 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115626805 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101929753 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135670874 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.125939869 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.141251551 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.148442583 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.123029214 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166786643 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14224085 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141607146 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149787747 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.101306178 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.119976602 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125919483 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212405919 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177298917 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209491197 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.129791708 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.208815221 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230580803 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078105376 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082272418 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.109287108 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171489663 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113589731 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165985938 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.125258133 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10973479 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182640624 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176227756 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124657341 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.071656263 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139673829 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168381532 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141651394 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127860094 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.136379709 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198145385 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.133048522 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081730398 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156252358 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133597495 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132718005 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239915785 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064125692 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126357458 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079092055 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109329505 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161328829 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217384602 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.085985624 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.154242074 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148495038 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152766841 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160578444 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131346182 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12666522 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117097 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212277097 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161621391 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.118979846 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144018182 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162038824 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215326547 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110867744 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.123966353 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237283866 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188660595 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.225487603 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.11785623 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146557775 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146800464 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140010136 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17451515 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112627327 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204011626 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110833804 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168963127 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135141794 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122200295 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159447854 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.141812481 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118609267 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182506493 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151107223 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111441742 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08351346 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149059732 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153551551 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136387693 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.103645341 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172196951 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.10129971 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170019418 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232525051 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085165641 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136299591 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126086675 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085595104 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139152333 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133759306 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115192537 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.123276752 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232334773 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.120777715 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185466254 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199353195 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14554662 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171027807 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127954011 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.666096831 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.107347034 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188816545 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151333833 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239468805 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127649497 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14952935 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140036749 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155401865 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17713046 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133929794 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.205952093 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164293754 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.151747488 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108368353 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131870337 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141717162 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.094674226 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135383679 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145073092 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146772041 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.130199841 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.152197955 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158888145 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.110573898 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125197091 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194600195 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148345673 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202457626 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17342057 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087040773 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148944792 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198221612 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109131063 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.154320336 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192379201 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138913599 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129123754 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.109264189 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.136542369 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210026028 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.101759246 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198030286 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180748553 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115673953 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145041454 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.176674867 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165937555 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1388723 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156409302 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126256434 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.143685267 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146807831 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088236456 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.106409361 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136313586 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142442761 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.103467813 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133172846 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.146423765 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185932959 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.099302175 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125999474 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106738498 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203586972 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241568927 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.09208437 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112516069 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151136076 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143381189 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.147305682 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157568027 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.110147258 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085990005 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.112338147 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.116052442 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.137066447 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144538214 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132758106 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141555568 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203566253 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.114717926 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.252199584 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099264066 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13600469 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.072173774 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.109008805 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126084879 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127385672 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112099858 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127712926 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237318788 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.124551749 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.093006921 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121640087 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.076168681 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111882497 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162309271 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140622555 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153126992 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12804802 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.066482801 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140684559 seconds)
  done (took 72.408041989 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.13425892 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.104665524 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.117839864 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.17329252 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.145579518 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.239959141 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.183290445 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.224575473 seconds)
  done (took 2.42113312 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071294856 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.117595845 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104054427 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.117552484 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.09051093 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069930522 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.29666873 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.111797378 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068888919 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.11536817 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.12073159 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093001998 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.471194627 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067453976 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.095837244 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.085530531 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068892113 seconds)
  done (took 3.255486372 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.427823541 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.634245861 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.452159099 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075125684 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.913521181 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.10832787 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.394651804 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.162937481 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.092138393 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.430343493 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.733141242 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.148655381 seconds)
  done (took 17.671765961 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076870763 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071381675 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.111206578 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.085530891 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.100192244 seconds)
  done (took 1.543802888 seconds)
done (took 115.980557243 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082424535 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.344527365 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055386142 seconds)
  done (took 1.53150191 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.085693502 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086679408 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.112569248 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084348212 seconds)
  done (took 1.475278278 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.076690553 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079013164 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.112017688 seconds)
  done (took 1.371394937 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.279896086 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.1666273 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.089736231 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.08505417 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080494391 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.105652755 seconds)
  done (took 1.376421743 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075174848 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.077194181 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.100713846 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.079007943 seconds)
  done (took 1.430268594 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.078548654 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.05442949 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056686411 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.082939473 seconds)
  done (took 1.378264671 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.093344173 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.106988833 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.082715207 seconds)
  done (took 1.384141719 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.10999615 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.114319878 seconds)
  done (took 1.330503714 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084543893 seconds)
  done (took 1.182776724 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.09495069 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.141711911 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.157131818 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.138816171 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.166472013 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.137393354 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.088350465 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.115980206 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.105591949 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.090852878 seconds)
  done (took 2.342029925 seconds)
done (took 16.515884925 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080824407 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.38976392 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361917913 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118198415 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668344518 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358101532 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.024677619 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.120499737 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121995263 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.096607266 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08486953 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.675136162 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.990675595 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.345928668 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.977964378 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.326230732 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.675089034 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.0701826 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094687023 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069170524 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.986471054 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094766064 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069561826 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070532682 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.675432937 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.37362391 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095361558 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.325691812 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068707622 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096765122 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.35644662 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.0957212 seconds)
  done (took 16.053698499 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072537244 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.144526535 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074822278 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084764224 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.097801697 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070959176 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.098248739 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070682765 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.152346792 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06960025 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111743032 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069037501 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.098560095 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070059643 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088031368 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.095003232 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069781173 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070459617 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095513347 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070251725 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.113473002 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069216356 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07025023 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.095421493 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070861877 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107267386 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070113945 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070118122 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095545573 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071453283 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098434735 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069729768 seconds)
  done (took 3.881216414 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117347474 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.153505937 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075580403 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.129576719 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115476941 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.098044758 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.172465126 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094681027 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.156590272 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069213057 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112045392 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070247022 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.128072837 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071259636 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.116556752 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070002735 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070647863 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.095346636 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069382945 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095757772 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088365736 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094350227 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069932503 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070255607 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.096088639 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082627244 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095092601 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06980595 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070638871 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096812499 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072806937 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095791245 seconds)
  done (took 4.196282124 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075182171 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076623571 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110089124 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.086683029 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.097691718 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074176755 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075497159 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.097527771 seconds)
  done (took 1.798480251 seconds)
done (took 27.035359922 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081145591 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072252128 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.100189285 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083725122 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.100588424 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080043865 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069831785 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.102774418 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078561477 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074507575 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.103560234 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.06921685 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.098489047 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.068998398 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07684335 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.095239447 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081901003 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.099761039 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080767393 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080066663 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.097841812 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.079424796 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.10250459 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080355256 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.107373476 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081097546 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.083766137 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100899269 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071367293 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.098468283 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.078387884 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084692294 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.096897381 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081102344 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.096040615 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069440571 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.069778362 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094803754 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081283406 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.100954432 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.07189905 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.101319794 seconds)
  done (took 4.727622417 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090792804 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092550866 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.112746837 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.066881121 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.09864624 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.067067231 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.116474014 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.06514532 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060701613 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.116359333 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.057439934 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060513709 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.090880234 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.05569082 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.061247633 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057724536 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.089298146 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.058724714 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.061229763 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.087581566 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.059669368 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.056122983 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088116224 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064402156 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.05790255 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.063095959 seconds)
  done (took 3.069642592 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.078272273 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085308709 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.116023062 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131007221 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.135672303 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078428435 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.105760794 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089262882 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.113848821 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068781338 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072919842 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.125203046 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08893099 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.102024162 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069114154 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.115783259 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.083475869 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071080682 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.101940062 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092760097 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.112345181 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.080058247 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.120187068 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083352137 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069655431 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098029649 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073308531 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.109044697 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07427711 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.07896569 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.099391489 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073210526 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.098030438 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081273735 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073450375 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.097767309 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092390081 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.105097075 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079668247 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.070302841 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.098681862 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069625667 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.115606079 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.11316591 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.094662 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.076964751 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.077157735 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.104202419 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.06895592 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.114575009 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078097808 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068813103 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.099086508 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069208348 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.095862291 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082255423 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.072380123 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.098004654 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078197927 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.099024145 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.082485065 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073479577 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.111467262 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069676507 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.103441057 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069158311 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070282162 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.095113195 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093032592 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069846254 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.137074618 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070674871 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.097055534 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078045169 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.103678263 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074659374 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.06947769 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.110639305 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079444552 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.098687864 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078186253 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072925659 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.098569573 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.088782053 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.098112577 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071536336 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.071047882 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.102843224 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071712173 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.096445939 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082326938 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069687784 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.098768751 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085778891 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.094629053 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.07049674 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.076197441 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.101426026 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069464301 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107183963 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073851416 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.0707984 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.104699394 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069684683 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.098781554 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079420327 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073139877 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.09443453 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.074026751 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.102368123 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070574043 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070811481 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.098072806 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070780278 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.104634665 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075903065 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073516145 seconds)
  done (took 11.462027189 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.194189045 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.19596224 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071973453 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.179713105 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077276441 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.108509958 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.180969573 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.097518694 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.09700997 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070220553 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070085653 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.130085368 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.125168589 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.107543045 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.107163939 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069159699 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.115223654 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.105812492 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.183205478 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.178360119 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.11739827 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077309453 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.07101046 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.098335449 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071594743 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.106086319 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086152896 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.103850619 seconds)
  done (took 4.328414454 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084344137 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.130071354 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075777501 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089792969 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.12109132 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.07064755 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.102841045 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071681878 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.109820138 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.082447802 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.098853801 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075870497 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.076280113 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.107326628 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070180067 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.107208653 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080535586 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071594209 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.100083689 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074768148 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.105969191 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.082179441 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.100821532 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068774622 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.076041472 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.096252489 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066075633 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.114231291 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069858151 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.118502129 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067874043 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075527048 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.110410049 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.0701504 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.095939879 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073807212 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.072452323 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.100294194 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070599609 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068210914 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.096046253 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.059586449 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068092774 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.109248601 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.075641325 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.088880104 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.076325638 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.074702959 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.101018934 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068024953 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.098685141 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071602408 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.073645726 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.105421261 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074035724 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.074827206 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.101001546 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.067943472 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.104869264 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073701985 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065679593 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.095319809 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074525158 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.068352591 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.105039341 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074691029 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.095210108 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072884255 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.074820961 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.10351168 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.073609375 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072752321 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.095183741 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071907177 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.102330053 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074439405 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.074125031 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.096074528 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069563312 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069963418 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.084914626 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069846037 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.055208574 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.100399718 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069205838 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068652459 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.09970646 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.076663041 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.109918273 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071262287 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.102875936 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070708874 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.069369302 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.100131021 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.065187805 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072378891 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.1130945 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.113040033 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069434036 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067766256 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.11167492 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074192867 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.069375682 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.085460653 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076333084 seconds)
  done (took 9.996720214 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.098520182 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.094326233 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.099375084 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084401644 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.125640812 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.094208115 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.105062426 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076463856 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.07128223 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.114951658 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.069304297 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.104974762 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.069478252 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079068399 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.125796074 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077625627 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.099259451 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079246431 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073660524 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.137536325 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084645234 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.111301074 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.082335933 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.09768171 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074250032 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082252089 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.125927063 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.081008795 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.107589711 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.085747641 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.081130196 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.125330055 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.087044755 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.101381482 seconds)
  done (took 4.350700417 seconds)
done (took 39.040836266 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.219498636 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.396028457 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.18116862 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.047492208 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.184054996 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.196510322 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.194489111 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.182021295 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.275969292 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.183498984 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.46170132 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.789996481 seconds)
done (took 58.443441882 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.235064935 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.332789808 seconds)
    (2/2) benchmarking "String"...
    done (took 1.456370779 seconds)
  done (took 3.917717516 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.601564623 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.065400022 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.438937512 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.185248822 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.196916642 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.488410645 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.733965037 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.014808803 seconds)
  done (took 27.252500871 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.192550438 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.533432629 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.389069255 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.389893728 seconds)
  done (took 17.636164775 seconds)
done (took 58.771202034 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.17737648 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.234922017 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.184781012 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.186924012 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.287436967 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.208154148 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.538580552 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.205508394 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.195977897 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.17598349 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.202164589 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.186887283 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.185100061 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.569513638 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.183419047 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.190893151 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.191367255 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.703103761 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.552161787 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.192902918 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.213149844 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.222551743 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.189438963 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.188353791 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.24236069 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.18318721 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.194555221 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.189156185 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.167162441 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.188147358 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.258577476 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.665689434 seconds)
  done (took 189.585070594 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.183385625 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.305293207 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.36295916 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.215931175 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.802784815 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.379175118 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.314830599 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.852153747 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.195088644 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.200951568 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.48491714 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.181677106 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.539888455 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.144004215 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.19239456 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.288987781 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.487159982 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.513006163 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.192778042 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.438285322 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.202671466 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.513637192 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.457855375 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.413569645 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.18889366 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.274347207 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.206223807 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.20939448 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.369760504 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.42538491 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.200000823 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.21490319 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.68929453 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.03867403 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.186905772 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.192445416 seconds)
  done (took 150.188163751 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.426781363 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.179128119 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.180213722 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.179864147 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.206884903 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.180321914 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.648763008 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.648016301 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.676848349 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.397033078 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.238347605 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.364356193 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.180081522 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.269205134 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.191520322 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.18149857 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.195269852 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.205844653 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.181188031 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.181386887 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.646585805 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.191761694 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.274423827 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.184988573 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.180947871 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.206650218 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.572058125 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.179579557 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.205752829 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.485292244 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.219030047 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.1801138 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.419996496 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.274326037 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.180047748 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.28327879 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.179345387 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.205640173 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.180897494 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.180016703 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.440906113 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.179138782 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.178638133 seconds)
    (43/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.179697929 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.179587514 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.182942845 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.696399995 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.180322857 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.638471012 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.179996696 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.030923176 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.179659459 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.179609639 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.434680044 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.533881748 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.178365912 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.178234976 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.181839256 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.179410486 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.177655527 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.203743154 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.38483877 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.269438663 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.179275937 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.181343503 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.20425684 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.179114719 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.257919828 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.176506562 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.233246745 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.233457832 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.283345114 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.623196483 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.177994379 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.26730841 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.290793169 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.176698727 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.177535689 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.177250229 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.177467582 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.279300665 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.17602248 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.521867944 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.182337103 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.179703765 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.234349876 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.266233729 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.177726177 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.402654719 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.177307907 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.177673767 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.812768228 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.2656642 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.177521873 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.178771492 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.177182658 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.522011022 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.623544733 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.268864499 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.179145576 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.456847104 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.180684746 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.534616155 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.616532312 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.687448848 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.179253986 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.281012469 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.18206917 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.179903363 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.178858497 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.207993821 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.179847764 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.238057632 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.178414416 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.572538762 seconds)
  done (took 340.027953739 seconds)
done (took 682.358821434 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.844148706 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.823704195 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.928169944 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.822943606 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.808025669 seconds)
  done (took 10.349433052 seconds)
done (took 11.47349254 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.34252443 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.341154534 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.228259258 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.342942573 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.204232962 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.35638295 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.317634379 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.198799441 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.269536916 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.242590466 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.270838269 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.220601934 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.202746026 seconds)
  done (took 17.662374046 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.472331875 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.476411335 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.245406607 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.471775265 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.220245768 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.479709529 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.369235705 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.373096458 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.38479242 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.195945673 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.194871025 seconds)
  done (took 16.009911072 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.488750412 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.466592962 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.248139923 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.476149578 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.221670855 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.511290878 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.370710339 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.371627548 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.365566254 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.195774254 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.194505747 seconds)
  done (took 16.036512757 seconds)
done (took 50.833602542 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.189443642 seconds)
  done (took 2.314710753 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.220586369 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.377380691 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.2017571 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.19391571 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.190590919 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.19162849 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.194784774 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.190560087 seconds)
  done (took 10.888582473 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.188177454 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.189218802 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.188307701 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.189921589 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.187768888 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.18822111 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.190765966 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.190340307 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.191093781 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.191133616 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.191887315 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.189000384 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.187893323 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.188212114 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.18893714 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.190276572 seconds)
  done (took 20.157611523 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.189580816 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.188599672 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.18882684 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.188721513 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.188036476 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.189140474 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.190545892 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.189917411 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.188727523 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.189955645 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.189761267 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.188583705 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.189508216 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.18930332 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.189570848 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.190300868 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.190601653 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.189040557 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.193814398 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.189231131 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.189963302 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.189759368 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.189658504 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.189791318 seconds)
  done (took 29.679812663 seconds)
done (took 64.165501891 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.991071163 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.570090984 seconds)
  done (took 8.688469815 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.191614138 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.191713035 seconds)
  done (took 3.51277875 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.192255512 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.191587455 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.192675985 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.19236222 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.192235254 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.192769433 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.193188319 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.191905117 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.192471932 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.193241546 seconds)
  done (took 13.05291521 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.193501859 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.193226697 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.19056385 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.193463794 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.192584075 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.191219425 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.19169972 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.192585441 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.193902159 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.190122754 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.192616142 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.19163856 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.193761533 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.190581166 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.193524188 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.19141724 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.190482824 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.190346234 seconds)
  done (took 22.585944281 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.193727476 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.194104191 seconds)
  done (took 3.517457623 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.191581136 seconds)
    (2/7) benchmarking "second"...
    done (took 1.191268377 seconds)
    (3/7) benchmarking "month"...
    done (took 1.192013744 seconds)
    (4/7) benchmarking "year"...
    done (took 1.192094121 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.191253319 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.190732197 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.190861573 seconds)
  done (took 9.46938157 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.194651527 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.377262053 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.450674717 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.767577093 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.195104338 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.199225164 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.991688122 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.197920287 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.198948745 seconds)
  done (took 13.703314606 seconds)
done (took 75.658274322 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.143128901 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.185758104 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.937828622 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.20470173 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.201771739 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.529800813 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.190502979 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.315856092 seconds)
done (took 36.839388218 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.187168585 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.857899893 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.892247826 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.191804618 seconds)
  done (took 11.07268671 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.181316784 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 1.99608789 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.177401661 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.125032671 seconds)
  done (took 17.610903164 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.731393471 seconds)
    (2/2) benchmarking "read"...
    done (took 1.530005802 seconds)
  done (took 4.393054779 seconds)
done (took 40.394008695 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.195763512 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.196225246 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.194550919 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.195929138 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.193748114 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.193210457 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.195827496 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.195212889 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.197210459 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.192913802 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.193715913 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.194754327 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.196208065 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.195915426 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.193236903 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.193136164 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.195955129 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.19355318 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.193914817 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.195892361 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.194168427 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.196911007 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.194409416 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.194941417 seconds)
  done (took 29.809567108 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.196729307 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.195480945 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.195915817 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.196637369 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.194651517 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.197268862 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.196463935 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.195035947 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.196445362 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.198337861 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.19469406 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.194674923 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.197230317 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.194516716 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.196658069 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.19521989 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.196708614 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.19508794 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.196712629 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.195124486 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.196801846 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.19490167 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.194808302 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.197611017 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.196488978 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.195630832 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.197491176 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.195914244 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.198065395 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.195584136 seconds)
  done (took 37.016380362 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.202224651 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.205786455 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.19815309 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.198963451 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.198203629 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.198725398 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.197761499 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.198364758 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.197547801 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.197582443 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.198317718 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.19914432 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.19878096 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.198861019 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.198258192 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.198761202 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.199123814 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.199122611 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.198647106 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.198725524 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.197986824 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.198390029 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.198611613 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.198891321 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.198462807 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.199184722 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.199395035 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.199034686 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.199547915 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.199146493 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.198855051 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.199161293 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.199339949 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.199918008 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.20018846 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.199328231 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.203775501 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.205626435 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.199326334 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.200461275 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.199984157 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.199487681 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.200673676 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.199107023 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.199516429 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.200626566 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.2006992 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.200544627 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.199255208 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.198995807 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.199708955 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.200240523 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.20001674 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.19995694 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.199985786 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.201109918 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.200714451 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.199513383 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.200373666 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.200153106 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.200540723 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.200155612 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.200598521 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.200714705 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.201599785 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.20113199 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.200914154 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.200901219 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.201114092 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.201256549 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.200831422 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.201069679 seconds)
  done (took 87.523188498 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.201423177 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.197432758 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.197106703 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.19681853 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.197218443 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.200060789 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.197100206 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.199965875 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.197069941 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.200959959 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.199286696 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.198740689 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.198097925 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.200660155 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.199750125 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.198294611 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.200932948 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.198300254 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.200670086 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.202136721 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.20008418 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.1978573 seconds)
  done (took 27.516406894 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.200613569 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.200612092 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.19829911 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.201157594 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.198136027 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.200197974 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.201098012 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.200827798 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.20057998 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.199972616 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.197779633 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.202414894 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.199180421 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.199626975 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.199149994 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.198624088 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.202182918 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.198923848 seconds)
  done (took 22.73503887 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.199153334 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.198504335 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.201289368 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.197926833 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.19988213 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.201274939 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.198919615 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.201695019 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.202261912 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.198897407 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.202070369 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.201494638 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.201031556 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.198899978 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.20145946 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.200741275 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.20189612 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.199865224 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.202964666 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.199696456 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.19996754 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.202201184 seconds)
  done (took 27.549665105 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.202059113 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.201997082 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.200380683 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.199561627 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.1998152 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.202426847 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.20270973 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.199813903 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.202547408 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.203328835 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.200532032 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.203808741 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.200934104 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.200437881 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.200365869 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.200421038 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.202839824 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.200546184 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.202716143 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.20092093 seconds)
  done (took 25.166334834 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.203698147 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.204626933 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.203142585 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.204603303 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.204077976 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.20367002 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.204056404 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.203852984 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.204870179 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.203778832 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.203825989 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.204242157 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.204203025 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.204422057 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.205429348 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.204972596 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.203367648 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.203839639 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.205293297 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.204031916 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.204103825 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.204181791 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.204636872 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.202877104 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.203517155 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.204384134 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.204474276 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.204812795 seconds)
  done (took 34.857410507 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.204172829 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.204417198 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.204203137 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.203424 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.202434087 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.202552691 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.202992086 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.202677658 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.204989626 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.202579416 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.205053348 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.205526666 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.205056128 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.205475677 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.204697424 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.205648926 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.204661908 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.203863893 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.202978863 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.202370588 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.205606197 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.205709411 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.205477537 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.203275046 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.203184888 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.205287248 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.203120398 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.20419311 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.206080824 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.203650533 seconds)
  done (took 37.266299204 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.22611809 seconds)
    (2/2) benchmarking "in"...
    done (took 1.224836943 seconds)
  done (took 3.591566007 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.203031142 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.207628724 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.206661412 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.204171663 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.20423169 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.207188845 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.208116559 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.204715941 seconds)
  done (took 10.786750236 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.207470029 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.206587401 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.207404766 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.206436381 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.205703683 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.208198514 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.215309272 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.221526263 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.207536369 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.207768594 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.21067246 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.213383768 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.211377037 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.206435552 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.206785912 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.209217032 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.207201315 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.207828866 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.20747841 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.208288668 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.207628925 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.210173124 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.210381777 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.206026017 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.208613497 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.221132069 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.215302605 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.208273765 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.208244697 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.214686513 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.208750857 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.204925044 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.208248964 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.207620883 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.208851455 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.208635625 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.220805867 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.222869737 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.215917069 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.208947299 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.209412886 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.206641835 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.210988978 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.211157328 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.210444554 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.209427604 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.209992801 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.206408058 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.209363338 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.211198078 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.21430234 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.207267151 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.206635929 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.216738695 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.211790123 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.219243423 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.223103701 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.210982318 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.216791285 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.220949147 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.224468434 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.217208365 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.21210537 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.20894212 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.217509563 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.232274138 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.220040374 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.222521679 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.20950959 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.21097617 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.220861867 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.2259727 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.220782491 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.210826869 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.209976976 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.211141566 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.211292486 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.211022678 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.222195413 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.228652125 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.210109958 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.210249347 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.21923893 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.232290862 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.210204695 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.210813903 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.210181762 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.210960797 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.211543708 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.223077464 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.225387998 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.21076573 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.211316009 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.210969867 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.214994669 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.211328445 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.209996565 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.213023496 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.210535956 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.212012365 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.212401643 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.215126566 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.220248645 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.211474518 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.212326023 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.221317318 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.213695779 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.210580769 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.223623787 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.214122312 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.212668483 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.213999128 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.219507262 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.210658764 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.215150244 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.223242322 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.213232412 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.214765892 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.213864898 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.213817569 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.220532672 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.238089593 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.21399361 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.214003299 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.216863378 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.224459835 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.213471759 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.217293793 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.213861679 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.212300439 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.211594735 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.214719865 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.21460438 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.21417612 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.213193607 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.215524064 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.211748939 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.214194044 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.213487428 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.214871901 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.216240273 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.214094428 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.215641341 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.217064909 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.214436769 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.215643774 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.222817595 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.21646585 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.215982249 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.216806634 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.213780278 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.216201256 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.218535893 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.214910446 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.215950636 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.214429007 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.214087935 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.215351719 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.216394162 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.215701104 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.216001114 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.216062722 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.21807241 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.214684501 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.220848919 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.214935804 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.21371687 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.217269698 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.215132285 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.215741346 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.21561048 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.214459886 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.218621772 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.221802142 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.215906076 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.215690846 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.220264326 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.215732477 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.215565645 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.21570042 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.217987193 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.224731771 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.216529699 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.225730235 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.215596716 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.216602423 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.218681782 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.216953993 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.216908502 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.216087857 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.218300646 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.223160517 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.231435993 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.225593717 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.217967232 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.220294779 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.218790009 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.220175017 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.223267558 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.216023614 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.217535186 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.216284134 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.215256197 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.216745382 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.219857214 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.216844997 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.217768454 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.217461569 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.218609694 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.216998183 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.218209895 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.221131436 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.220978087 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.217902703 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.217843684 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.217082153 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.217295789 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.216052252 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.216240625 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.218180613 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.218871476 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.217913514 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.227880122 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.216580344 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.21913983 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.219073972 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.218741354 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.215587722 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.219024975 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.221213568 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.218770735 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.228138978 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.233722462 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.219570582 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.227179256 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.233087983 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.21781976 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.222581622 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.218469132 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.216004578 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.220241633 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.225383704 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.219746183 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.218995309 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.219109174 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.220152212 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.2200395 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.228352218 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.217873555 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.219339603 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.220586981 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.222754776 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.216597223 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.220631656 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.220578619 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.22120201 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.222749456 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.221746565 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.22082855 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.221305576 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.220164069 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.220146196 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.219714066 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.222580373 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.226144386 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.22665308 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.220020739 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.223849293 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.220431347 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.22396595 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.22140362 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.218860071 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.222614998 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.222187684 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.21894038 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.222060142 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.21394747 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.211074488 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.216341567 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.215063818 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.217342343 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.199814528 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.20166492 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.19927371 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.19860439 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.198201155 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.202672659 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.200753117 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.201904094 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.202883412 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.193592211 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.189970325 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.18888964 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.189178385 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.190126973 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.190904279 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.190814672 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.193814379 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.199253863 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.195475026 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.193643608 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.190219329 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.200879729 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.20981178 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.195092057 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.197589475 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.186551988 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.184833617 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.185777658 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.184005465 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.1869571 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.189290321 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.187216175 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.193677901 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.194989281 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.192935499 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.185011542 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.186655121 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.188955563 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.182992315 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.183015745 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.185475197 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.188422708 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.193246851 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.198400705 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.183752013 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.186167975 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.182656478 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.184490064 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.183828081 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.18410911 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.186272545 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.182812182 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.193395769 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.197484925 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.18569575 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.186399741 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.1817209 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.182882858 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.184876783 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.183877822 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.192351572 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.183961591 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.187082791 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.183996021 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.185025886 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.184687883 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.184678055 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.186148771 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.182609987 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.184216651 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.193063716 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.19844217 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.18703605 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.18547861 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.196804065 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.185130008 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.192340424 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.196699297 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.183430656 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.184119961 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.183015506 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.186038111 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.182692427 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.186327509 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.179229172 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.179999462 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.183626445 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.18016899 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.182565743 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.18112845 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.1803748 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.180515503 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.189788659 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.197570368 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.179223955 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.182447155 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.175940096 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.179745046 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.180888432 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.178885573 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.179831987 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.177641101 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.183954675 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.182478795 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.176287295 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.175400826 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.1766922 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.1761998 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.176463019 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.176857201 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.175872117 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.177324275 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.17898308 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.175947816 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.182240944 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.177229321 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.177654256 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.17905772 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.175629974 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.187032717 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.176270547 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.17727639 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.175457781 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.176292894 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.177229323 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.176671108 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.17521898 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.174868725 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.173676485 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.173802636 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.178097427 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.177533516 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.176407035 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.17185073 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.177244757 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.171885878 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.172355586 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.172403828 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.171472485 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.170932435 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.173085737 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.171078215 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.17417906 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.174988691 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.169823923 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.170607199 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.171122085 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.171089551 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.174699908 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.170438724 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.168107061 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.170558841 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.169898062 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.167928152 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.170340473 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.180771678 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.171558762 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.177300113 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.176247812 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.172390968 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.170488408 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.171593471 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.176463585 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.16899387 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.17055952 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.170294379 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.172684831 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.170510063 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.172584419 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.169691857 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.178659536 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.171095166 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.172356657 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.181159609 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.187183325 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.169755537 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.171057013 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.172795313 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.170698222 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.167385902 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.171147101 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.169618866 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.179610126 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.186729867 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.170044523 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.173007573 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.169314471 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.1707627 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.173791868 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.171098253 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.172568173 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.168652841 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.172226821 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.170737924 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.172180037 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.168969296 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.170842771 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.170593383 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.173762338 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.176271441 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.168996242 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.173990605 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.172018831 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.172712423 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.171698065 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.171749834 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.169606655 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.169360087 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.172194739 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.172176141 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.17213087 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.175199062 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.171382146 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.172251415 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.172716366 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.172782419 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.174524115 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.179956926 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.178047988 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.169906125 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.172234336 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.173213211 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.176026905 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.172463498 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.172081894 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.172481978 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.175228848 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.173244027 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.173171381 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.172783994 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.173921048 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.188766374 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.187509039 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.173555655 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.173439671 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.178917909 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.174207051 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.171433768 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.174027523 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.177093518 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.175060402 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.178918753 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.17330263 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.181663429 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.187211193 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.17445048 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.177506283 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.175383264 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.179341965 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.177223138 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.174029305 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.173851674 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.177577509 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.190398091 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.174091957 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.183210843 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.199960648 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.190135936 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.176306071 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.174925195 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.173761463 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.174027619 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.178244769 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.174243469 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.174370387 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.174913719 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.174488025 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.175253939 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.179947729 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.176764458 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.175497763 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.174550914 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.1751724 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.178200515 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.172908973 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.174810733 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.175779945 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.173745835 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.174750195 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.175391563 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.175352211 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.188267174 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.185383644 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.175806486 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.17580786 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.173419567 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.180048778 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.177606432 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.182970783 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.181850784 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.175896836 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.175628678 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.177785426 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.176080157 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.17395929 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.176707395 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.175627732 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.175674362 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.173334868 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.190613509 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.18288101 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.182348439 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.177518331 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.17605354 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.177466145 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.178366108 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.175888634 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.176369025 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.179479232 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.176997744 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.179317786 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.176787186 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.177285444 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.178514111 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.182863527 seconds)
  done (took 714.547480821 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.175789925 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.175813668 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.174483101 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.175514704 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.175134685 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.175461398 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.175804255 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.175842971 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.176464828 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.176398316 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.176266917 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.175384099 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.1761507 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.176226648 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.175756397 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.173075139 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.174034298 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.173594899 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.174045549 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.17383113 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.17340585 seconds)
  done (took 25.794303685 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.175797352 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.172139942 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.167769384 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.170378337 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.168322251 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.170507539 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.167439197 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.170909665 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.171293632 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.170486829 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.167223061 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.167167493 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.16511761 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.164948435 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.164817735 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.167510044 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.166803157 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.164620374 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.168142911 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.16314629 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.164934736 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.162850134 seconds)
  done (took 26.807098981 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.166457039 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.165614878 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.164505907 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.163016229 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.164679815 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.162096102 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.164997458 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.164725705 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.165103014 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.16804351 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.163573019 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.165056757 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.172301176 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.16829904 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.16792637 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.165809006 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.30889837 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.165268975 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.165348551 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.165234062 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.163703461 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.172969929 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.163214006 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.163035564 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.164239623 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.165259606 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.166470464 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.166026172 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.166349707 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.166377891 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.168342786 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.166278757 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.165577378 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.168277087 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.166135119 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.166896087 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.169685172 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.167153252 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.164180822 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.166501596 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.175259559 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.183182806 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.167657761 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.174726697 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.166759286 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.16737005 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.169958745 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.172948942 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.164292037 seconds)
  done (took 58.430964833 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.167372011 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.167813668 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.164629418 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.167949976 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.167627671 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.16721887 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.167306711 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.167410067 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.165137625 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.165650454 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.168070829 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.165880302 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.166553945 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.16852893 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.169148972 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.165818337 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.165968555 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.166018918 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.166105773 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.165934507 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.165674981 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.169351973 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.169136239 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.166803315 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.168794615 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.166839384 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.16601288 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.169153623 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.166560777 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.16613391 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.169078529 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.168474694 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.169689558 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.167306288 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.166446624 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.169396633 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.169152966 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.16670817 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.169477774 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.166583666 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.169441327 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.170006602 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.169280707 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.168773151 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.166950783 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.167291721 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.166950953 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.166310495 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.166494325 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.17005859 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.17065704 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.167771232 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.169449993 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.166780886 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.169831961 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.169823251 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.167169036 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.167002816 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.169895407 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.167082421 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.167341664 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.169918188 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.16741246 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.169783314 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.170425207 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.167325687 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.168043803 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.169989731 seconds)
  done (took 80.518242795 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.169548876 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.170070711 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.170859301 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.171082912 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.170664894 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.17037309 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.170534148 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.169679981 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.170338333 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.170475884 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.169689589 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.171712791 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.170829254 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.171617793 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.170536449 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.170513972 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.17181695 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.170860804 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.171227568 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.17122524 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.171223088 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.170704355 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.171025616 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.171764069 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.171924942 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.171083127 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.171507601 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.171874789 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.17094934 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.1719328 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.171851583 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.171031257 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.172091971 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.171965698 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.172512759 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.171517219 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.172934781 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.171917321 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.172538268 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.172573104 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.172297206 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.172794053 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.171748038 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.17154373 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.172209515 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.172412349 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.172887563 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.173015517 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.172201697 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.172379694 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.172329498 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.172783473 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.172425646 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.172522514 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.172134728 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.173339644 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.173233271 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.172822563 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.172827491 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.172930171 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.172752835 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.173596375 seconds)
  done (took 73.755949288 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.172637981 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.173564744 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.171093525 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.170731184 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.173077533 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.170934947 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.173651612 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.172665931 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.173463307 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.173598767 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.173816548 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.17168029 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.17175316 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.173452154 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.172046543 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.170783889 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.17198455 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.171576527 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.174939022 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.171446345 seconds)
  done (took 24.560904346 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.171759672 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.174331221 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.172503812 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.171706339 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.174606714 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.172206969 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.174285275 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.174420275 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.171406741 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.174660755 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.175597512 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.174702008 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.17260174 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.172869456 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.17583265 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.172970879 seconds)
  done (took 19.888989027 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.172253078 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.175272921 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.17486535 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.175458485 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.172120081 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.172672355 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.174938811 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.173180229 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.172905148 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.176083022 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.174739946 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.175180961 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.175482871 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.175551771 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.172980812 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.176325536 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.173081433 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.173585793 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.175290709 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.175869587 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.173704168 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.174052677 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.176342887 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.176606772 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.174083743 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.174926389 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.173225855 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.17385215 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.173285807 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.176464094 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.173413281 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.174517472 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.174385169 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.173951325 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.176330534 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.175366348 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.176745595 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.175939174 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.176529632 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.176914132 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.17668761 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.1749057 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.177023018 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.176741867 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.174237381 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.176895428 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.175013104 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.174947154 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.175613758 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.175420767 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.177151984 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.177672256 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.17744269 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.177815642 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.177168712 seconds)
  done (took 65.748327445 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.177400929 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.177767383 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.174907018 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.177397712 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.177677514 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.17533157 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.177430713 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.175130291 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.175008907 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.177616507 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.176526699 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.178179428 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.176038096 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.17778092 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.176284283 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.178496651 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.176058079 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.176077368 seconds)
  done (took 22.297181462 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.176807132 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.176825783 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.179000466 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.176273267 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.175857651 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.179277467 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.176238694 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.179246879 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.179129844 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.17667151 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.176959156 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.179317059 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.178605046 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.179077647 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.177062516 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.177073509 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.179987533 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.17944274 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.176517642 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.177279378 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.179787984 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.179936526 seconds)
  done (took 27.033276694 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.178673003 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.177872213 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.195215234 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.218896963 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.206469703 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.178141344 seconds)
  done (took 8.272918596 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.17813293 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.180690093 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.177245191 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.181592653 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.180194592 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.177340648 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.177668386 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.177401156 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.180091101 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.1783188 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.177008152 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.180236189 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.180838783 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.178443165 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.180290513 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.180157406 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.178175517 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.178197994 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.179256177 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.180673088 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.178838098 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.180612043 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.178031602 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.178289555 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.177935247 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.178198454 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.180646775 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.179026867 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.179105221 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.180498702 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.180853179 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.178450817 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.181194783 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.17964345 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.182254335 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.18146298 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.179070478 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.182193016 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.180807417 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.178364231 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.181772413 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.181415618 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.181957294 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.179008789 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.181447567 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.179212286 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.179047045 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.179114577 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.179553051 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.182405969 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.181641668 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.179532869 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.183340781 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.182093378 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.182403239 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.182569378 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.180255237 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.180076787 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.182379406 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.180348872 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.180045035 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.182884551 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.180225917 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.180947778 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.183162587 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.18035576 seconds)
  done (took 79.004886536 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.181458951 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.181353655 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.181028516 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.182307137 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.180892303 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.182547642 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.179962835 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.181562971 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.180878237 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.181531128 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.184270707 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.181874816 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.181654439 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.181112344 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.18099919 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.181772474 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.181143606 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.181610424 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.181569773 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.185108247 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.181242118 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.181671906 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.18083742 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.181227568 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.182318135 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.184536907 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.18150115 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.181472389 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.182352079 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.181880109 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.18210332 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.182325752 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.181697436 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.182077408 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.182376171 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.181823004 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.182427069 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.182334929 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.182221147 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.184825496 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.182552538 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.185369983 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.182702298 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.182731696 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.183082424 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.182234677 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.18199065 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.182899432 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.182950046 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.183237319 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.18344922 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.183455974 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.184163641 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.183033715 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.18348812 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.183060044 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.183634626 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.183286231 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.182999372 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.186015106 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.183924014 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.184101355 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.186039622 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.184591488 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.184081654 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.183239537 seconds)
  done (took 79.173051863 seconds)
done (took 1650.782898089 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.234277934 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.196180083 seconds)
  done (took 13.553318289 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.34954732 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.299684555 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.184180785 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.190703423 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.184668708 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.180910384 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.205003104 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.1857679 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.184660723 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.184830679 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.184670161 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.371172095 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.240796452 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.18576441 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.184933974 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.278693128 seconds)
  done (took 40.730066994 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.207827979 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.194139404 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.287805286 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.207626648 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.212834146 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.350709921 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.240226138 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.192126991 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.33813834 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.228676727 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.535239579 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.213307739 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.193180525 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.14889377 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.208441252 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.352747079 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.40896629 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.538210539 seconds)
  done (took 27.18439466 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.572004747 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.217357177 seconds)
  done (took 8.917664732 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.210141631 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.192373466 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.225363499 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.206380172 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.224825142 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.250545374 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.209912378 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.245700131 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.20113826 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.232604415 seconds)
  done (took 63.340404458 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.210219268 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.193751451 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.193913765 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.191787424 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.184752578 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.184741818 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.191214432 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.187037875 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.307867107 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.300799307 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.204449804 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.199343568 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.193531757 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.193358244 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.191438195 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.226483254 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.316940895 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.190748193 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.190741725 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.198698986 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.193158906 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.313998761 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.228972928 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.192708027 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.301644201 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.276785161 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.196468986 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.199532085 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.30995816 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.192290908 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.193036269 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.194193197 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.195746274 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.737110996 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.676937354 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.204618814 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.215351149 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.203349504 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.192488631 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.367756864 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.195086235 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.200398875 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.186798552 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.63612908 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.347116155 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.294743717 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.302773623 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.196076087 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.194773749 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.255442225 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.19579641 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.195208527 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.221077466 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.909551022 seconds)
  done (took 102.29963286 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.221650089 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.675222976 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.35484184 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.207118689 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.939094505 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.827001088 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.188589836 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.431909798 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.252351493 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.18732209 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.514875036 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.64736122 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.195260379 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.192998674 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.219810677 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.269517949 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.188328024 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.915501651 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.191111651 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.188725104 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.586825876 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.203327653 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.204274726 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.25025773 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.225371553 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.610216154 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.450005614 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.595740091 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.192370366 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.187684845 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.611465691 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.196406402 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.2616151 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.191790328 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.443260268 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.501329891 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.483699008 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.189105821 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.190034626 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.190214823 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.220301652 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.607335216 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.493479819 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.19004466 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.202910402 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.616537008 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.189972826 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.188301361 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.194536314 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.385532177 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.175306618 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.191239664 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.445383038 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.189917723 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.526428129 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.283862815 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.225624025 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.641300745 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.191205418 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.222239599 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.244210718 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.189458317 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.197932227 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.195493076 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.192642671 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.500917247 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.569956961 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.19532857 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.500753289 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.606621134 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.1920929 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.667614052 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.052388577 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.208398161 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.239948764 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.190201445 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.723791376 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.639948678 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.240208627 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.19166767 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.483265349 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.192990598 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.493509866 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.20351739 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.191687134 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.599690834 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.208250117 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.224089544 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.200451207 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.192090603 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.82145179 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.195166044 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.439359616 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.257786086 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.191412784 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.191895884 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.221405812 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.199220399 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.192202404 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.191969658 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.672248697 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.193100282 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.467567234 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.209602146 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.193467222 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.192042309 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.194553148 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.192254345 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.404060507 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.6019741 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.197193909 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.192490762 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.193083771 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.19941821 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.491626983 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.19631247 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.461522455 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.194089697 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.202841404 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.19711965 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.882567184 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.204310351 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.193549453 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.192689205 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.033048378 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.402907635 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.210120086 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.192568159 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.193729566 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.206894968 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.37848749 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.193970407 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.232587942 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.193936845 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.851566318 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.221538079 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.21972315 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.8407027 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.194929397 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.012284663 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.214664388 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.193837422 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.48729585 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.452296368 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.501791537 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.195354815 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.193976516 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.840437357 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.209189774 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.325406211 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.211106538 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.196225255 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.389575042 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.353353901 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.196252048 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.769764885 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.194797639 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.402986575 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.195331198 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.512473418 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.639271476 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.196440574 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.202149611 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.853743588 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.858097678 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.830727591 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.197859895 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.508602383 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.165184837 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.646681323 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.195454992 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.197333407 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.621104488 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.198725122 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.202477102 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.194218704 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.196705436 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.269062212 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.368120047 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.723406828 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.19774966 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.614879797 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.204489525 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.197832269 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.210989845 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.19916177 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.552133211 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.245235104 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.195668619 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.221007977 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.195801644 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.200697718 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.629661102 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.068393942 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.198405794 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.347846533 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.780188765 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.197573293 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.195800175 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.778860706 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.474953175 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.664357913 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.208044365 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.464847394 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.197073124 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.234721545 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.88132645 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.203399068 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.628139637 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.199266341 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.197234393 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.747416017 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.198676436 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.259294343 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.197395651 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.199196797 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.681983133 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.199542069 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.200764638 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.393220792 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.205781855 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.440197676 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.198393128 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.241477491 seconds)
  done (took 1076.87803111 seconds)
done (took 1334.026885382 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.197852182 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.197975829 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.187461429 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.19959907 seconds)
  done (took 25.925715395 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.207434427 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.204189424 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.205282546 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.204487382 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.206606005 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.204229742 seconds)
  done (took 8.375993838 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.252855803 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.199128113 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.198245932 seconds)
  done (took 18.792584548 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.395290098 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.344440634 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.526883813 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.10845055 seconds)
  done (took 9.52055449 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.206194499 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.205331354 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.205874314 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.207396684 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.208639151 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.210393591 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.207130103 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.208377681 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.209856023 seconds)
  done (took 12.014063669 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.698910363 seconds)
done (took 80.470918792 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.690229378 seconds)
    (2/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.603721994 seconds)
    (3/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.251153504 seconds)
    (4/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.21618316 seconds)
    (5/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.732941569 seconds)
    (6/309) benchmarking ("sort", Float64, false)...
    done (took 5.415760031 seconds)
    (7/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.282970775 seconds)
    (8/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.444089532 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.334725039 seconds)
    (10/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.377702072 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.431539964 seconds)
    (12/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.245331535 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.245338438 seconds)
    (14/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.187639511 seconds)
    (15/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.436749289 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.226912887 seconds)
    (17/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.546684721 seconds)
    (18/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.878851222 seconds)
    (19/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.342892699 seconds)
    (20/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.671578337 seconds)
    (21/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.001293933 seconds)
    (22/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.309450298 seconds)
    (23/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.325826544 seconds)
    (24/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.326378187 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.800384564 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.895542187 seconds)
    (27/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.241969349 seconds)
    (28/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.307271371 seconds)
    (29/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.185912397 seconds)
    (30/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.497066552 seconds)
    (31/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.012249236 seconds)
    (32/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.187401191 seconds)
    (33/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.554008435 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.188261932 seconds)
    (35/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.91415556 seconds)
    (36/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.757827905 seconds)
    (37/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.229806534 seconds)
    (38/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.346166676 seconds)
    (39/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.678460301 seconds)
    (40/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.639360526 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.431900557 seconds)
    (42/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.182038063 seconds)
    (43/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.307482659 seconds)
    (44/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.490488011 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.439047818 seconds)
    (46/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.175643366 seconds)
    (47/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.229210502 seconds)
    (48/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.873557941 seconds)
    (49/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.202458272 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.354678967 seconds)
    (51/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.211204678 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.314917889 seconds)
    (53/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.437635563 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.45933255 seconds)
    (55/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.224369738 seconds)
    (56/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.215147756 seconds)
    (57/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.204587316 seconds)
    (58/309) benchmarking ("sort", BigInt, false)...
    done (took 6.222331072 seconds)
    (59/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.356124002 seconds)
    (60/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.268079114 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.322428438 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.321862506 seconds)
    (63/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.411522831 seconds)
    (64/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.25577782 seconds)
    (65/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.912149933 seconds)
    (66/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.275520202 seconds)
    (67/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.500825941 seconds)
    (68/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.177465313 seconds)
    (69/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.421742939 seconds)
    (70/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.189786252 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.629892654 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.237785621 seconds)
    (73/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.300473028 seconds)
    (74/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.700713801 seconds)
    (75/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.301738074 seconds)
    (76/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.357148602 seconds)
    (77/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.402195534 seconds)
    (78/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.887643084 seconds)
    (79/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.361041716 seconds)
    (80/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.711860113 seconds)
    (81/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.534849731 seconds)
    (82/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.307248161 seconds)
    (83/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.351739408 seconds)
    (84/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.40382551 seconds)
    (85/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.343228298 seconds)
    (86/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.619593252 seconds)
    (87/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.259988334 seconds)
    (88/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.864528416 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 5.305726733 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.601254104 seconds)
    (91/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.213471598 seconds)
    (92/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.54541829 seconds)
    (93/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.206978279 seconds)
    (94/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.316530837 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.91154097 seconds)
    (96/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.30695108 seconds)
    (97/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.606981382 seconds)
    (98/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.287942676 seconds)
    (99/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.350062617 seconds)
    (100/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.23298124 seconds)
    (101/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.724826161 seconds)
    (102/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.209894692 seconds)
    (103/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.237809084 seconds)
    (104/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.209581117 seconds)
    (105/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.195470032 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.291850388 seconds)
    (107/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.336725162 seconds)
    (108/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.266961627 seconds)
    (109/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.212412329 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.423524971 seconds)
    (111/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.750937899 seconds)
    (112/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.438411058 seconds)
    (113/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.23599358 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.233271738 seconds)
    (115/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.443967747 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.222006408 seconds)
    (117/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.637622714 seconds)
    (118/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.225252085 seconds)
    (119/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.672558176 seconds)
    (120/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.545102665 seconds)
    (121/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.229740936 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.045347916 seconds)
    (123/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.198428181 seconds)
    (124/309) benchmarking ("sort", Bool, false)...
    done (took 1.713275797 seconds)
    (125/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.232850386 seconds)
    (126/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.209510532 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.48748791 seconds)
    (128/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.196765447 seconds)
    (129/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.496012305 seconds)
    (130/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.504097362 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.883265369 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.489582787 seconds)
    (133/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.335495389 seconds)
    (134/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.237752764 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.31164531 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.039814635 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.283078651 seconds)
    (138/309) benchmarking ("sort", Float32, false)...
    done (took 5.190119375 seconds)
    (139/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.218509867 seconds)
    (140/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.390815574 seconds)
    (141/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.352598699 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.313779513 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.98940232 seconds)
    (144/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.254535479 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.562209701 seconds)
    (146/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.594370014 seconds)
    (147/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.416723005 seconds)
    (148/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.599524267 seconds)
    (149/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.916434657 seconds)
    (150/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.213353705 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.924862968 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.238036562 seconds)
    (153/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.21070422 seconds)
    (154/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.998784355 seconds)
    (155/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.235445693 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.202708043 seconds)
    (157/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.332656453 seconds)
    (158/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.23378888 seconds)
    (159/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.274873548 seconds)
    (160/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.211036333 seconds)
    (161/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.222693303 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.735096317 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.051323441 seconds)
    (164/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.240017461 seconds)
    (165/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.791808598 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.065186969 seconds)
    (167/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.209041148 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.547172563 seconds)
    (169/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.557876991 seconds)
    (170/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.87679006 seconds)
    (171/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.712297166 seconds)
    (172/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.239408791 seconds)
    (173/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.496723091 seconds)
    (174/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.974186506 seconds)
    (175/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.198108143 seconds)
    (176/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.80776276 seconds)
    (177/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.367899238 seconds)
    (178/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.277440317 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.198506848 seconds)
    (180/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.319391819 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.561381588 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.254381847 seconds)
    (183/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.376791767 seconds)
    (184/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.296358712 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.033169753 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.764822708 seconds)
    (187/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.613493743 seconds)
    (188/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.223270601 seconds)
    (189/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.405251438 seconds)
    (190/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.267726072 seconds)
    (191/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.478412362 seconds)
    (192/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.224172131 seconds)
    (193/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.321308872 seconds)
    (194/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.215069544 seconds)
    (195/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.222740556 seconds)
    (196/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.419051037 seconds)
    (197/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.895798801 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.287337146 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.611640047 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.283542872 seconds)
    (201/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.332020357 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.443023745 seconds)
    (203/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.749334626 seconds)
    (204/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.393538678 seconds)
    (205/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.525308837 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.80477879 seconds)
    (207/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.213758818 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.647000776 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.262661315 seconds)
    (210/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.979619363 seconds)
    (211/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.984610556 seconds)
    (212/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.198914347 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.772080226 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.416290358 seconds)
    (215/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.208669171 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.719288463 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.812236921 seconds)
    (218/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.20953622 seconds)
    (219/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.723588596 seconds)
    (220/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.353131665 seconds)
    (221/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.273737848 seconds)
    (222/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.20468131 seconds)
    (223/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.788145723 seconds)
    (224/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.238507888 seconds)
    (225/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.200025354 seconds)
    (226/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.227057342 seconds)
    (227/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.233831242 seconds)
    (228/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.90908806 seconds)
    (229/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.217970921 seconds)
    (230/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.992106398 seconds)
    (231/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.45636583 seconds)
    (232/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.256625508 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.028076517 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.356805265 seconds)
    (235/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.664843673 seconds)
    (236/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.278984112 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.21472464 seconds)
    (238/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.528745318 seconds)
    (239/309) benchmarking ("sort", Int8, false)...
    done (took 4.240927489 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.26586417 seconds)
    (241/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.21408874 seconds)
    (242/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.244019297 seconds)
    (243/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.364745871 seconds)
    (244/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.24380317 seconds)
    (245/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.219411232 seconds)
    (246/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.97507636 seconds)
    (247/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.297916196 seconds)
    (248/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.223066575 seconds)
    (249/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.302261429 seconds)
    (250/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.674841123 seconds)
    (251/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.26889496 seconds)
    (252/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.904357253 seconds)
    (253/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.936448332 seconds)
    (254/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.219822526 seconds)
    (255/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.217589156 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.411570227 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.306820608 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.201616689 seconds)
    (259/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.584264345 seconds)
    (260/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.243618044 seconds)
    (261/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.775512021 seconds)
    (262/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.474064014 seconds)
    (263/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.218623803 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.259437816 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.608710566 seconds)
    (266/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.255756755 seconds)
    (267/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.301709723 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.600148313 seconds)
    (269/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.674444463 seconds)
    (270/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.219303013 seconds)
    (271/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.218433213 seconds)
    (272/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.217444015 seconds)
    (273/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.007070316 seconds)
    (274/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.304283583 seconds)
    (275/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.372202922 seconds)
    (276/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.659767438 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.589711551 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.352233505 seconds)
    (279/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.200859328 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.468207004 seconds)
    (281/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.303781014 seconds)
    (282/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.779057876 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.571955592 seconds)
    (284/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.256210446 seconds)
    (285/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.463678743 seconds)
    (286/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.794678579 seconds)
    (287/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.218358556 seconds)
    (288/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.245618661 seconds)
    (289/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.234127033 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.300436331 seconds)
    (291/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.300658845 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.334436846 seconds)
    (293/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.717223879 seconds)
    (294/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.963080201 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.202301532 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.40935738 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.011514643 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.26009044 seconds)
    (299/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.22429323 seconds)
    (300/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.807660852 seconds)
    (301/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.233937225 seconds)
    (302/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.231334237 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.243088628 seconds)
    (304/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.209683843 seconds)
    (305/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.218858309 seconds)
    (306/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.54572252 seconds)
    (307/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.559168024 seconds)
    (308/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.223374461 seconds)
    (309/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.334206181 seconds)
  done (took 871.265535978 seconds)
done (took 872.413282854 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.251407003 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.245086238 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.227867531 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.25031573 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.340308628 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.258898647 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.239647537 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.231272587 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.27744699 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.278588053 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.227207244 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.256287362 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.230614274 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.229720765 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.228575728 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.243310502 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.126308788 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.229901442 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.246801224 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.239911655 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.246227254 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.228334551 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.279125106 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.257657858 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.233135311 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.23285914 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.233572161 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.249215681 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.342325301 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.232131077 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.232813734 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.242044769 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.12842068 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.22943535 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.225801044 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.250140649 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.242444987 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.23974803 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.234457776 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.26281853 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.483101246 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.230353129 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.232110002 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.230922991 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.231357349 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.236229018 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.232227251 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.238429484 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.244079192 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.24496924 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.503399436 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.247163324 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.234323844 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.231691748 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.243289756 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.231093067 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.235832041 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.247560461 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.250888318 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.247683278 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.12123664 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.236729061 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.234245347 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.248631206 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.238648871 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.518662961 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.229048798 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.237080892 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.50605065 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.239389487 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.519940792 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.241363971 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.233811316 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.246145664 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.264306358 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.131586467 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.228091172 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.231966194 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.240850934 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.231678811 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.242881467 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.245508115 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.237943238 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.233506767 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.246239383 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.262350918 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.243663171 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.234572409 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.242832248 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.252189293 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.241006847 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.245892021 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.236746057 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.229875641 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.243701115 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.238158223 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.236826627 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.236186448 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.237908765 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.244945694 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.494763821 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.250699089 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.230795727 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.231073 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.2338351 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.248903872 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.507629045 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.236195541 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.257205956 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.283060813 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.237420103 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.139705562 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.239260007 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.250869988 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.244335768 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.239335026 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.230889327 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.138570372 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.519210548 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.250954408 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.237930027 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.234554187 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.25133069 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.237727336 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.232803619 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.143942255 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.237169559 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.249641374 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.357775883 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.246583685 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.267503808 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.234038889 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.239224737 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.264901053 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.250798119 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.267804136 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.239167422 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.252760371 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.251621631 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.232945789 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.247410197 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.247391944 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.237550028 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.242880331 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.23067908 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.269191025 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.249008091 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.249026297 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.257839775 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.357112294 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.234771344 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.131447023 seconds)
done (took 207.689452553 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.29713436 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.233108856 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.344718805 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.23374797 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.330065248 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.329261253 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.231742716 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.231782535 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.231630598 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.642111649 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.231086632 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.232026901 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.229971858 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.232122461 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.315869011 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.234342161 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.231852505 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.57766487 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.234832893 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.305616707 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.228745504 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.233326255 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.235196061 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.616768416 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.235123778 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.236213069 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.306039305 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.235183609 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.582119212 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.235037712 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.227695047 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.581576653 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.324278745 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.261230529 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.244778574 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.233943343 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.332788389 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.260396779 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.315105923 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.315936112 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.345879393 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.264172063 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.233144703 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.235861442 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.237287096 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.236203672 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.234538264 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.262946513 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.230287881 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.23446319 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.578709372 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.245757807 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.244810578 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.234327381 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.234070483 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.25565848 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.234961917 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.235965173 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.325761087 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.237446521 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.298324951 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.617743579 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.616956889 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.237230495 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.232485796 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.234412099 seconds)
  done (took 141.923807626 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.303439241 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.31038723 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.342164657 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.237332443 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.286645023 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.346087459 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.237773669 seconds)
  done (took 10.237022515 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.244019847 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.238216986 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.287154302 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.286968246 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.237568315 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.384462084 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.238418846 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.248859964 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.236632831 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.290404022 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.239465069 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.23900283 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.245605025 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.238341305 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.286964308 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.248792545 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.353150868 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.238938637 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.238329908 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.391590202 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.23633553 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.2449662 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.290249858 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.249698109 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.240019468 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.244935482 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.80436604 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.239391524 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.236901714 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.240215867 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.236713354 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.276932557 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.239427103 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.235373244 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.237368235 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.354786262 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.238871513 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.237852022 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.240768876 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.233043253 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.239582507 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.240510623 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.240168197 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.2376849 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.240173951 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.26282082 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.239442948 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.240316017 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.240412162 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.240349573 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.290474917 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.24064197 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.238714856 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.237415484 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.295788987 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.247663853 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.240702651 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.238487565 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.241144168 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.238694626 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.394662247 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.28863445 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.240780391 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.289572383 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.243634962 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.242930753 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.243052618 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.240326567 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.295434211 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.241007266 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.289303486 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.239218855 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.395251476 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.264083609 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.242700614 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.243777996 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.242938754 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.240794522 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.235999781 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.247533544 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.239149831 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.24268056 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.247380606 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.239602808 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.239045663 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.344670507 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.350623118 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.239975181 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.25378695 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.248506087 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.239610883 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.294354738 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.241796854 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.240894029 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.293986514 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.356934774 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.295040484 seconds)
  done (took 144.049366073 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.246230922 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.249157989 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.24315804 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.257653126 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.242063839 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.241927492 seconds)
  done (took 8.658823601 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.244896637 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.243528802 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.243043699 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.243139335 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.243340281 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.2440104 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.2436605 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.243980857 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.24621144 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.243739917 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.244708806 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.244871757 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.245041681 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.243352597 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.243057911 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.243555762 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.244512503 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.241234827 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.244287975 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.243951258 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.34773655 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.244229688 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.243925634 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.245288616 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.247779973 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.244543025 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.252457979 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.245115334 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.245171764 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.252017911 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.247775383 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.244829117 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.246247773 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.250188403 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.247145607 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.245505875 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.248186218 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.246186624 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.242836023 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.24548797 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.246770168 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.245801394 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.246046626 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.246764397 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.246549015 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.249103696 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.249756721 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.253976734 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.245262458 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.247399081 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.247009218 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.246073223 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.246851464 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.247353858 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.250319307 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.249986691 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.249682281 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.246691154 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.246062109 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.24716555 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.247170231 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.247123311 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.247510003 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.249809069 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.244057684 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.247681088 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.247959898 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.250175116 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.246945326 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.246345536 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.247884754 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.24472556 seconds)
  done (took 92.013966261 seconds)
done (took 398.05304853 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.406446037 seconds)
  done (took 7.590699106 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.435627821 seconds)
  done (took 7.62234588 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.053644615 seconds)
  done (took 19.244006218 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.286362261 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.299083713 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.252249457 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.245155499 seconds)
  done (took 26.265962594 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.354416247 seconds)
  done (took 7.538001631 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.240889276 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.262601381 seconds)
  done (took 13.689630926 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.552400935 seconds)
  done (took 7.736789988 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.096288882 seconds)
  done (took 8.286682323 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.25566558 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.274298885 seconds)
  done (took 13.726313083 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.228066555 seconds)
  done (took 7.413178849 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.13991775 seconds)
  done (took 8.327819166 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.2531328 seconds)
  done (took 7.441886218 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.296533367 seconds)
  done (took 7.482349716 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.425777501 seconds)
  done (took 8.611048131 seconds)
done (took 152.160124486 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.243157538 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.243720706 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.244047198 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.242801237 seconds)
  done (took 26.159824438 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.284426684 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.284255047 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.285276347 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.294995847 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.287210629 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.283649843 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.275692738 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.276763549 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.294499243 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.286611996 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.286012886 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.2863269 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.283852973 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.276681712 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.285901626 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.287172341 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.294993379 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.285916978 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.277126693 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.287532791 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.251794066 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.295174053 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.287820512 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.251396988 seconds)
  done (took 31.978282334 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.44855621 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.321880294 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.403737667 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.302777772 seconds)
  done (took 6.664933846 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.303619915 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.30407196 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.31638316 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.354219094 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.382247585 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.314170296 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.278279391 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.273442982 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.259575152 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.305443675 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.386048435 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.323299798 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.390319615 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.251668769 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.439492591 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.252497061 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.25228138 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.304591797 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.35578002 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.369772073 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.252564364 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.304497971 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.307960419 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.321587537 seconds)
  done (took 32.791998738 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.251089141 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.260585433 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.257979248 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.252210146 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.251762199 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.253307157 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.258986825 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.253910983 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.273592686 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.253698312 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.25131571 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.251891748 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.251075715 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.253091602 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.25281493 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.265263494 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.266554063 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.252661937 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.256136686 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.258553706 seconds)
  done (took 26.316056091 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.24560362 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.100191115 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.59781228 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.502021982 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.24460527 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.246607021 seconds)
  done (took 27.126640606 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.315790423 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.427359385 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.253036997 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.56996614 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.64567546 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.253277584 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.253654057 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.462351812 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.732596428 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.732246277 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.303652597 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.314643403 seconds)
  done (took 18.45639642 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.256051435 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.248179396 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.259377609 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.263958158 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.30288918 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.258228361 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.260217448 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.24672843 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.304112181 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.307883015 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.25691967 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.304104298 seconds)
  done (took 36.460199936 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.335120956 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.294752376 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.139967087 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.962755385 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.625396739 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.459667704 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.980963712 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.683162709 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.255301503 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.522898609 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.902747601 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.351439918 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.50373936 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.249901935 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.250939942 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.185467518 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.476402976 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.706357059 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.251197007 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.915739553 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.275155114 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.249243671 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.015702833 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.276274591 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.461335354 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.378181808 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.510293231 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.250437657 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.503083377 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.263019442 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.261573209 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.250419943 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.523667066 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.886263377 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.344403845 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.260836176 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.928452005 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.962592585 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.244711288 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.92317573 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.652930827 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.253869838 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.261129321 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.251225881 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.184318243 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.250342118 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.678865479 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.259273053 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.962063365 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.251231239 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.261889046 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.346024775 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.254119484 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.066871487 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.251830194 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.252621314 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.249405972 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.257032989 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.826335089 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.370476253 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.255168232 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.1873881 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.612324522 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.928080019 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.825683705 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.355036308 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.255700134 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.255809132 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.186475118 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.92810858 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.270839254 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399109167 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.272055997 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.902223983 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.896259066 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.90938035 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.195469974 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.763484622 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.254794994 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.18855718 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.479479022 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.252973322 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.18743602 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.208906383 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.187491996 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907929563 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.262185328 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.583347777 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.262080313 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.670774335 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.265633964 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.27048987 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.276900746 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.477592817 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.137378394 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.254351829 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.700465498 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409991681 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.275452999 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.671844425 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.190746512 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.258392513 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.507795765 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.464201981 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.255389321 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.185953607 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.441351969 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.260413268 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.271542195 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.256303138 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.265450843 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.784407946 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.267355514 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.38313273 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.272009659 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.255035797 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94888462 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.260909884 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.356229195 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.954575652 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.496899953 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.978001002 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.258401258 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.338197218 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.25725755 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.255995851 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.03474604 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.772402929 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.25625484 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.258355789 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.265073893 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.267687926 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.257112443 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.200973786 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.262847746 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.000441216 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.259441505 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.478976381 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.2623972 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.532252906 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.190613914 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403768623 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.348546527 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.478814814 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.372740444 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.256585467 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.51307067 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.266858465 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.262392906 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.270256891 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.275901215 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.35594905 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.279462774 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.257612376 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.514213567 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.261444237 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.262578691 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.456930573 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.261685132 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.259134481 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.263223643 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.075198189 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.79012269 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.235547292 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.257572861 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.147025155 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.271606075 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.322468781 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.263768944 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.268348352 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.932887982 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.045151268 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.264720948 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.268519653 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.482327659 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.268754516 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.948588559 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.342225449 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.442030507 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.792228607 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.273374992 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.194602772 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.969924273 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.951666157 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.258753733 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.193460131 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.259907914 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.268346792 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.269652006 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.758683536 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.795651657 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.26406209 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.936789849 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.266762412 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.269655875 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.263818542 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.25911106 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.883974504 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.403817292 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.265310655 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.271928279 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.402940351 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.274327452 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.19409404 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.263907013 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.265501592 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.261070625 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.260327644 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.293372381 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.94002629 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.727216047 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.518558553 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.928979199 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.274136207 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.033262196 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.290700754 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.258482322 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.741455894 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.27875452 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.275246937 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.271049375 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.272412772 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.954116638 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.92031693 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.832880151 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.930844113 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.745825639 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.151808835 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.272939125 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.263587438 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.685816867 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.198031261 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.818713537 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.434577353 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.683968267 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.207568722 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.445080609 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.380424727 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.96531292 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.272005525 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.4896212 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.146291586 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.75259854 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.286751161 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.473140768 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.297203984 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.261814149 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.1923097 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.546951005 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.480818494 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.724037369 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.34408842 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.686069608 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.752146706 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.277671691 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.262957566 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.55106839 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421511268 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.979984752 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.434540669 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.263899871 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.96740088 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.739400365 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.272807296 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.48869984 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.837191823 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.2747554 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.447765572 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.201076965 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.274338631 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.275009682 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.264221447 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.401704101 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.263033158 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.516855886 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.273256079 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.198077055 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.270483901 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.754585421 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.119810978 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.269818715 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.264292966 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96181881 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.268166041 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.52158654 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.265342104 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.892014193 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.272436051 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.199412129 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.198514329 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.957128506 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.267540959 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.239188945 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.721976604 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.601991782 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.252992736 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.285121852 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.112424286 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.518593768 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.278373954 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.800259165 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.491539128 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.03616101 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.288630852 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.365223107 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.819163317 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.264698542 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.265110339 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.501085767 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.08551572 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.489209 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.180029764 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.178076971 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.264991343 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.479412395 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.267099932 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.974988497 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.503605202 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.978548778 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.272402168 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.928939049 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.293108818 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.042384034 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.193164798 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.627102593 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.274166382 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.345285204 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.276247815 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.276541097 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.277566096 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424529702 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.020121768 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.281598729 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.280270555 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.361117922 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.426578259 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.894705801 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.272048442 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.804752993 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.944202936 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.807263289 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.279992737 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.26580799 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.267895429 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.201441182 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416399672 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.492506608 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.540833582 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398611349 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.687008765 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.291544906 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.791006678 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.285657005 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.479979221 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.543196455 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.161641571 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.267912835 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.280509102 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.268810465 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.279591164 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.479471035 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.726964179 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.789410228 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388804723 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.26854929 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.693318166 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.545319977 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.269276052 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.268526035 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.860295794 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.288624063 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.565687435 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.27724882 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.058616881 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418299586 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.280108437 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909141169 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.280398276 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.430177487 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.043405075 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.970311352 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.525862618 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.687675109 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.280264026 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.803085255 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.910681405 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.534475186 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.336348358 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.280553942 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.387950127 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416644514 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.273637303 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.270811725 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.26955611 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.11572749 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.979121084 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.278757414 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.809227986 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.533450028 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.266678781 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.270884972 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.293972936 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.279769891 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.493027886 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942132861 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.497021059 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.281131384 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.275409399 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.089837427 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.810469098 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.285006107 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.205513262 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.274822338 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493511552 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.509633806 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.294364537 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.723096718 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.98219611 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.805931206 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.243690717 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.293752082 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.271512674 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.932307089 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.811279782 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.903889421 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.739671978 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.830345228 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.277285525 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.546268559 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.276761499 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.280367866 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.548891378 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.275361189 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.271769552 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.298878015 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.806344742 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.983330995 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.273031534 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.993661638 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.210562653 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.613096536 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.889114914 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.211264778 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.274931858 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.444081921 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.274992921 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404165684 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.284513415 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.276249939 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.274002557 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.00840159 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.545079638 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.279632531 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.259989447 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.880456603 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.281040086 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.280220873 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.495284208 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.281165375 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.94078612 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.623107103 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.528105736 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.281418849 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.260063861 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.276924331 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.273380607 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.259610016 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.471450123 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.767082088 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.795018829 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.282995678 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.285755988 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.278147416 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.489790369 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.485521729 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.096741057 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.300578461 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.286273411 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.290933569 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.184439379 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.775589629 seconds)
  done (took 1542.706013055 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.291096147 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.295231101 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.302118428 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.330433554 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.318081309 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.341641988 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.380625657 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.320272488 seconds)
  done (took 51.795996517 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.281910541 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.492815869 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.302996748 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.274121659 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.282961822 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.283391689 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.681881187 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.27356012 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.282432122 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.283308156 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.285208872 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.274353825 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.858320444 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.283466601 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.283097417 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.2692863 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.28315548 seconds)
  done (took 64.200658101 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.274266552 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.508734102 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.349044209 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.288478003 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.957055554 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.274650806 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.505458421 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.351575321 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.276227285 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.328441877 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.934043961 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.289232961 seconds)
  done (took 82.55457807 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.282480504 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.282234064 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.282369318 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.282649579 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.283408705 seconds)
  done (took 7.631135495 seconds)
done (took 1956.030744908 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.529681023 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.910368675 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.934010765 seconds)
  done (took 5.061705807 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.422798256 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.471471476 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.591984888 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.611480358 seconds)
  done (took 7.316314636 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.55138867 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.643102151 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.457946636 seconds)
  done (took 5.869217221 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.56476879 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.281800288 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.392934701 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.275994705 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.278548593 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.277074174 seconds)
  done (took 20.051708603 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.279721302 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.282730288 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.280058032 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.283156322 seconds)
  done (took 6.345156308 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.26153954 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.002499719 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.266321228 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.277300092 seconds)
  done (took 18.026015565 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.028993847 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.03904803 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.023132644 seconds)
  done (took 7.309704954 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.284407406 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.120824405 seconds)
  done (took 9.623428592 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.571684139 seconds)
  done (took 2.789744762 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.412159449 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.547883431 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.216935737 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.169149584 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.248157348 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.763984088 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.768164726 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.383061878 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.154795543 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.231253096 seconds)
  done (took 26.116543308 seconds)
done (took 121.496081054 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.807570522 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.278243369 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.486195529 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.778330555 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.505890573 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.486242197 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.488064915 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.74740398 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.288432331 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.279722192 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.782388516 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.508876447 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.436934221 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.279258482 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.435686704 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.27788452 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.506417433 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.855036839 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.460220608 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.661097664 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.486838583 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.418964344 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.613585157 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.441600363 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.504772872 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.488601666 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.013028005 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.283740631 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.636985062 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.02877766 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.437446724 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.836219875 seconds)
  done (took 182.760274461 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.278990208 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.291830201 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.287328678 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.278858601 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.278332555 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.278925205 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.281059658 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.291575843 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.279387237 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.279890035 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.279634147 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.278804252 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.30785081 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.290726517 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.279952117 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.292300716 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.298908728 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.279478431 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.278856458 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.280209632 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.281518107 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.279792728 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.282716733 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.290331176 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.27933145 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.280309409 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.297416415 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.28104455 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.280424935 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.280174785 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.279659081 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.293328676 seconds)
  done (took 202.321203889 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.27961662 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.280015095 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.292447803 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.293201333 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.293393069 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.280159481 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.282315015 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.279928276 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.280236791 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.280355477 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.283627639 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.286753315 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.28314009 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.283167076 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.280100579 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.293321743 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.283001664 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.28096028 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.284895077 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.279981351 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.283706753 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.281119368 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.28176875 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.28945607 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.280487003 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.284915598 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.280504517 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.281513969 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.293531973 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.280816866 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.289299429 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.281267274 seconds)
  done (took 202.312486954 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.483162366 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.28936274 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.289870221 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.248142634 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.289555042 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.289313445 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.280106511 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.486038243 seconds)
  done (took 13.878996078 seconds)
done (took 602.493788339 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.487769607 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.206757359 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.479117713 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.31017717 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.095645647 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.310258721 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.311561782 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.465327967 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.1808999 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.469302061 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.46956825 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.306941809 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.60958768 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.308576457 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.547490782 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.40201324 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.16389126 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.280332396 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.607237549 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.887443922 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.549693239 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.692241105 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.467198584 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.191212891 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.613934 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.708618986 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.9159258 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.16417198 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.3088783 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.611163445 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.842999315 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.274085998 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.362253076 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.344272819 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.400809111 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.383667775 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.147411113 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.344062529 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.48493213 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.453203303 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.881612954 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.003496511 seconds)
  done (took 88.271268934 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.280147089 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.280089949 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.27961018 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.279280429 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.280618374 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.28023283 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.279030462 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.280234077 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.279702502 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.279058105 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.278752744 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.280860551 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.278971841 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.281578924 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.280698152 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.28103404 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.280783463 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.282572459 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.280160454 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.279944981 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.280483742 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.280286449 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.281483253 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.279604311 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.281282165 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.280804125 seconds)
  done (took 34.515311151 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.294310546 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.515631118 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.687190948 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.29906967 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.292828537 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.296866575 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.363149822 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.295273435 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.29614651 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.296711251 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.439651561 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.297541665 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.328751037 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.692138224 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.297030147 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.294449225 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.295508087 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.294118882 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.523751276 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.30292181 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.366063178 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.297318028 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.366085487 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.305219961 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.297153097 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.295549139 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.300150768 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.785552197 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.296690732 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.441567112 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.989812586 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.362484604 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.733872766 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.70294615 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.989959996 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.297092271 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.296442471 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.446653131 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.297703681 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.294966823 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.365311207 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.29595865 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.696232877 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.91258515 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.311494279 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.296407477 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.808513722 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.445651713 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.516150346 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.30349427 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.716627277 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.299398435 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.296911692 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.298515818 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.516982363 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.303664578 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.296038259 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.811077438 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.302525876 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.366513975 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.297254804 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.296814445 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.532793946 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.298018956 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.521893394 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.297993535 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.304542244 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.297056461 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.695989414 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.300196353 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.920886763 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.31200123 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.296355104 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.442987289 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.521646484 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.839865328 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.300197915 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.536548401 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.746618253 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.364865093 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.301158508 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.775146672 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.369649732 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.301851648 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.299768642 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.299850247 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.297960013 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.341397691 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.365352624 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.855075817 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.922336989 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.828041771 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.370870327 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.310260301 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.298238297 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.812144595 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.314681473 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.299233213 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.691978053 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.927629782 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.313325121 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.306179742 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.917998767 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.315685156 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.367867849 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.304993364 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.705314513 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.30140762 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.342874546 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.299121911 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.305196121 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.302202407 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.369363241 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.302434867 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.299469118 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.901976954 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.464813285 seconds)
  done (took 170.186284852 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.306387062 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.298414297 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.302683675 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.292017679 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.292611915 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.298214076 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.293149026 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.29248369 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.298658085 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.293273133 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.293999346 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.296099193 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.295239586 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.297212425 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.303388942 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.300206595 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.9062538 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.292364629 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.292649334 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.29348126 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.074230636 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.294504841 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.293191701 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.293930919 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.294091896 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.294194706 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.295037979 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.296725484 seconds)
  done (took 150.909531054 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.301443593 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.811185665 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.302831478 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.419311743 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.320543681 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.299903143 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.417409692 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.352770151 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.302474846 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.299087035 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.299200977 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.573393969 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.302991124 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.765492488 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.471090877 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.420253107 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.764272597 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.302879716 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.299859844 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.300062273 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.420122228 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.308210677 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.575226195 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.813015072 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.303154118 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.812645254 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.290999493 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.302360134 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.30015056 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.813661342 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.300437255 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.57689856 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.37139981 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.35587657 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.815778226 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.76825649 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.76859673 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.432901804 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.301503977 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.301004137 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.300868665 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.290494946 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.816738506 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.304066098 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.302456608 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.810297256 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.317120599 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.304275378 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.311701186 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.301202974 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.355051235 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.35749921 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.58243628 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.822219115 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.371465475 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.324052199 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.420672093 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.661441317 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.305399893 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.767100981 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.290405152 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.820374081 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.307086654 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.291643663 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.303063306 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.308354069 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.437197207 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.422270335 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.767890209 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.304966791 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.773625991 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.44018447 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.303089849 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.302782234 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.304535829 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.818553544 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.773895456 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.439882003 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.425547276 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.477686586 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.295073165 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.303045971 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.292607727 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.374033208 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.303855026 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.820665042 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.773546844 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.306864707 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.304796745 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.305652741 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.306383094 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.461865971 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.822979497 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.374330413 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.764766734 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.59476485 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.581766758 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.305554839 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.358447348 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.304801377 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.585556095 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.306150333 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.356422943 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.722995787 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.583816979 seconds)
  done (took 154.348717607 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.526197594 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.408256571 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.389302534 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.410147248 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.806996037 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.846621766 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.464092434 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.421647228 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.406637109 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.540809494 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.394767089 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.399198986 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.475521626 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.391029821 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 1.988393708 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.368179169 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.391883761 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.422764743 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.406111235 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.274118787 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.892592409 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.571616962 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.461366065 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.345677062 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.39461441 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.041474478 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.829315029 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.813787925 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.461001549 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.486486691 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.793740169 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.387985503 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.179585621 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.926427742 seconds)
  done (took 62.561160652 seconds)
done (took 662.016089233 seconds)
SAVING RESULT...
DONE!
