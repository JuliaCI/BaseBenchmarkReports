cset: moving following pidspec: 14499
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.642419707 seconds)
loading group "shootout"... done (took 1.266830376 seconds)
loading group "string"... done (took 0.415604759 seconds)
loading group "linalg"... done (took 7.81212927 seconds)
loading group "parallel"... done (took 0.157140309 seconds)
loading group "find"... done (took 1.391604239 seconds)
loading group "tuple"... done (took 1.952628947 seconds)
loading group "union"... done (took 12.499653982 seconds)
loading group "dates"... done (took 1.35387345 seconds)
loading group "micro"... done (took 0.200443952 seconds)
loading group "simd"... done (took 4.379220297 seconds)
loading group "io"... done (took 1.019609582 seconds)
loading group "random"... done (took 8.764496843 seconds)
loading group "problem"... done (took 1.530333783 seconds)
loading group "array"... done (took 19.347227584 seconds)
loading group "misc"... done (took 1.49149646 seconds)
loading group "scalar"... done (took 39.197447078 seconds)
loading group "sort"... done (took 3.245412119 seconds)
loading group "sparse"... done (took 11.831792871 seconds)
loading group "collection"... done (took 16.762266155 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.530723617 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125360101 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.129435801 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118947166 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.146802437 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.121263952 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.127740533 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085833911 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.868905724 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.141123008 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.113110216 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.421714113 seconds)
done (took 5.472347821 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.164432929 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.092986525 seconds)
    (2/2) benchmarking "String"...
    done (took 0.084841265 seconds)
  done (took 1.474316545 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064865801 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.134512527 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.064574724 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.065768673 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066167688 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065491447 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065445269 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065229157 seconds)
  done (took 1.826491208 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.070347919 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.066331644 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.063701274 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.065665097 seconds)
  done (took 1.567649561 seconds)
done (took 6.4144842 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.236170024 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.09838807 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.279039645 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.44042912 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.595432252 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.091091333 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.074194178 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.069240613 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.130063145 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.31596335 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.102995771 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.183546349 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089058794 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.171881186 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.975615846 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.117396349 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083778088 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.120946719 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.090850469 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.129890081 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.392347719 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.07490786 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.070670223 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.067264355 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.068792069 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.646805896 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.669837168 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.125871886 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080944171 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.160483526 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.113890937 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.630553227 seconds)
  done (took 10.832522331 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.089498325 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.087891512 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.065516602 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.120559274 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.089735677 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.066551556 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071539612 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.064395196 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.084911071 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.120226508 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.086263227 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.095002215 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.063275655 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.06584672 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.071384 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.192405508 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.076475149 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.077444616 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.064106491 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077868844 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.106447974 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.074977467 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.075323237 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.074830426 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.125194568 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.165620451 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.093275642 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.095114653 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.062682997 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.075767217 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114127726 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.121889736 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.062975415 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.062471159 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.116829989 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.092077119 seconds)
  done (took 4.599864169 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.943457679 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.090223629 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.0986324 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.606394412 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.062989024 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.146946093 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.238407302 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.069699373 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.316814336 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.142541978 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.137007468 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.145568071 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.115756549 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.068237267 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.194794304 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.110692388 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.474985631 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.064901138 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.064570268 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.062801456 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.065904033 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.064868791 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.061245973 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.067142997 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.092043176 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.084713425 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.170967414 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.910637757 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.23277937 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.064276575 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.156962936 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.084250398 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.352714642 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.069084854 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.08014483 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.061957469 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.081584762 seconds)
    (37/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.405576032 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.120374125 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.062512347 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.160160013 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.114102584 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.061881001 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.112887091 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.075279613 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.065904071 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.066167884 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.065266011 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.0682625 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.076857511 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.099634048 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.064698564 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.062069443 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.159858089 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.061412772 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.063453065 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.064495041 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.146146312 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.06375675 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.139468337 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.062304202 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.06678894 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.099442089 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.065838855 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.085881658 seconds)
    (65/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.061603634 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.096473418 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.32951334 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.025310664 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.067188327 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.908840322 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075819649 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.064893334 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.068890405 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.064766595 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.065755052 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065253325 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.070070402 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.067872852 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.065537675 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.10542111 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.063402595 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.066824516 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.063673338 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.068976316 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.094775181 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.062406084 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.471453742 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.094162794 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.063926715 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.073339759 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.101976099 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.064137592 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.068665266 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.064402597 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.061448515 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.063487013 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.063865345 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.06524727 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.067484987 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.091505135 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.066561544 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.217719123 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.024701098 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.066051134 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.063935259 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.069533822 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066542706 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.069423608 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.063588548 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066813602 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.06542651 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.062201402 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.105543974 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.064305132 seconds)
  done (took 21.281744516 seconds)
done (took 38.959383738 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.249778855 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.076146277 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.076933217 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.07731869 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.07692732 seconds)
  done (took 1.945631066 seconds)
done (took 3.32470856 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.105238353 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.062134427 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.098601142 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.097587072 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.061471291 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.061803536 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.095223417 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.061002067 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.094023212 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.095727104 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.097121487 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.096659223 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.061261573 seconds)
  done (took 2.470806086 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.066857872 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.078158802 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.079419969 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.05964423 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.069972694 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.079904503 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.061079904 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.080760162 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.085335774 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.079803931 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.079455722 seconds)
  done (took 2.188869583 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.066493097 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.077810268 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.083738845 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.060155096 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.071129773 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.079945429 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.060104079 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.079344803 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.082388892 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.079955053 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.07922481 seconds)
  done (took 2.183962829 seconds)
done (took 8.209883274 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.063806969 seconds)
  done (took 1.413143912 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.512087544 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.354377688 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.065565039 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.084793101 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.188564292 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.09225952 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.210649502 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.069319997 seconds)
  done (took 8.104434441 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.096212565 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.065425878 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.064715064 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.064895402 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.065106789 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.065078039 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.065570974 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.067101791 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.067183972 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.066368453 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.065838788 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.066845426 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.067141324 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.066102848 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.066756838 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068195329 seconds)
  done (took 2.538739298 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094786571 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093175451 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.069306315 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.070130646 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.069456348 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.069425838 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.071997534 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.070788538 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.066517287 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.068138995 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.069651154 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.068599279 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.068256231 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.059759392 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.069259077 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.070391606 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.066312808 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.069526637 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.070698666 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.071466101 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.070264106 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.059591606 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.068639729 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.070816638 seconds)
  done (took 3.16858418 seconds)
done (took 16.595290433 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.110858538 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07294721 seconds)
  done (took 1.541164262 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.065970079 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.066713144 seconds)
  done (took 1.502203812 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.072074821 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.057950326 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.078260867 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.068171671 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.058815209 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.059416319 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.076792764 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.058591795 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.058409061 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.059374833 seconds)
  done (took 2.019065738 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.060866956 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.067723072 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.065405326 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.066121111 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.064723442 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.060430953 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.063850864 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.061135746 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.068030828 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.058709616 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.064691032 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.079936664 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.064044559 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.081905573 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.064101828 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.064869451 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.066830274 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.064260448 seconds)
  done (took 2.563090314 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.058380959 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.059208662 seconds)
  done (took 1.499426505 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.062229809 seconds)
    (2/7) benchmarking "second"...
    done (took 0.059702055 seconds)
    (3/7) benchmarking "month"...
    done (took 0.063153342 seconds)
    (4/7) benchmarking "year"...
    done (took 0.063307637 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.060212824 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.059634496 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.06016599 seconds)
  done (took 1.801498005 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.406991508 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.118568227 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.332511658 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.065417557 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.073926572 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.243683649 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.060586337 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.064971463 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.065435864 seconds)
  done (took 2.848810747 seconds)
done (took 15.164450211 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.07745714 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.080418009 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.085786605 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.404116555 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.088339235 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.063668929 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.109711393 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.167152816 seconds)
done (took 2.473393561 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.223427252 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.334757831 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.894301771 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.066199927 seconds)
  done (took 3.678063435 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.322817045 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.076040084 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.075924145 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066018928 seconds)
  done (took 1.934646437 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.062424669 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069167097 seconds)
  done (took 1.518866646 seconds)
done (took 8.74877697 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06098538 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.061268332 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.062590231 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.061848096 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.08885099 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.062214355 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062023174 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.061320081 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.061478212 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.061505892 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.061425275 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.061480342 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061599735 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062385373 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06209687 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061459219 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.061828141 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.061386698 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.061714826 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061560625 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061734791 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061370783 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.061890426 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.061685454 seconds)
  done (took 2.923959429 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.076664959 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.062549791 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.065168868 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.065272227 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.065534242 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.065357688 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.06510204 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.0637716 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.065234718 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.063889979 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065240301 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.065897878 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.063350643 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.065739317 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063556297 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.06591801 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.065273498 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063932875 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063574388 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.065149746 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.063480845 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062321096 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.064217042 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064556365 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.065841682 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06563739 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.063342595 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.064382076 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065665758 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.06570054 seconds)
  done (took 3.354036681 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.061414309 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.056777138 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.058078554 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.067666519 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.058702789 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.058851087 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.059278282 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.058322011 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.058654095 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.05989889 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.058770779 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.05807144 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.059447216 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.058364972 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.058473628 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.058914077 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.062413909 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.076431015 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.058472313 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.05833417 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.062321028 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.057952207 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.058552394 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.058362089 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.058900996 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.058509831 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.058237018 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.058466811 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.057384976 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.059004073 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.058892315 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.070725663 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.062873564 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.058381303 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.068544817 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.062703157 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.058543706 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.062903545 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.059826868 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.058357128 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.058087868 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.058114686 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.058504987 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.058369038 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.067495546 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.05874983 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.059302136 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.058794829 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.058299787 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.057910736 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.058036561 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.060269075 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.0635854 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.060185647 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.057865363 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.059724004 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.058079078 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.05906938 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.058204402 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.057836381 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.058242294 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.06170421 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.059933136 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.059065366 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.076543041 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.059713839 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.067492894 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.060837391 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.059289775 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.06152621 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.059198877 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.074071887 seconds)
  done (took 5.760447081 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.081314838 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.083217349 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.062836554 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.062513201 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.057729091 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.057661205 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.064884218 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.057493014 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062215531 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076876569 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058557813 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.063089702 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062691132 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.062478173 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.059608759 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.063294244 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.067215674 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.059339824 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.058857635 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.062602536 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.059162035 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066321552 seconds)
  done (took 2.82566279 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.134694146 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.063298094 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.099271994 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072196486 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065851557 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072433146 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.063008335 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064539974 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064595078 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0647469 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065063507 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064826998 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066938439 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065023206 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064773224 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065073671 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064416751 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064680285 seconds)
  done (took 2.690653423 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.073938045 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.062992599 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086581666 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064354601 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.06401134 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.063679152 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067891724 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.068795186 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.063711496 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.064308209 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.068502937 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063893607 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.063870474 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063918185 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063977976 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.063971718 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.064280147 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064122612 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069097944 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06814377 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068146987 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068853034 seconds)
  done (took 2.880600038 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072348329 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.061779014 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074697847 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.063595984 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.057995619 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.057601951 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.062615523 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.062679143 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.063704801 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.062806031 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063518575 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.058653224 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.06490576 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.063045713 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.064993277 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063967549 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06275986 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.063063173 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06273572 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058533904 seconds)
  done (took 2.674198611 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083463211 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.060321275 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.060381092 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078811592 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060383477 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.061544459 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079908295 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.060297157 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.060539795 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080510877 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.060299856 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.059929223 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079201488 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080014353 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.061496766 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078687348 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078575744 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078593718 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.060402508 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059973253 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.080997895 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.061763093 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080406229 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061652405 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061942137 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.061828417 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061920589 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.080614176 seconds)
  done (took 3.345159221 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.060765074 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.060224903 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.061004346 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.06132185 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.061054201 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.060710966 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.060706979 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.061004316 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06124819 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.061990194 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.061635701 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.061537198 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.061367253 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.06150796 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.061298666 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.061659518 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061419891 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062393308 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062030375 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061851484 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.061376085 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061382732 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.061663117 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.061835921 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061935353 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.061121713 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061719622 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.061596548 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061284666 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.061860398 seconds)
  done (took 3.259029659 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.070828745 seconds)
    (2/2) benchmarking "in"...
    done (took 0.069164563 seconds)
  done (took 1.555662154 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.059523177 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073319233 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.057454046 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069696817 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.067273284 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.062060929 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.067718841 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067187313 seconds)
  done (took 1.934750699 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.064915863 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.085856469 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.059837532 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.060005568 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.062230057 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.115148321 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.07358384 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.072479313 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.071699933 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.061564741 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.0599316 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.070438494 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.058765462 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.070999081 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.060899835 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067926291 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066852163 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071935453 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071814245 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.058762171 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071424522 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060890408 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.059322607 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.061193939 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.060812114 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.0661513 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.073647494 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070009439 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.066489274 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.056679038 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.076153536 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.057718481 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.058756566 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.067159331 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.062090559 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.057953235 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092543173 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.058215473 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.063381024 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.058160932 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.06922717 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077695351 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071710438 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.076425439 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.061138879 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.061385005 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.058779048 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.062626439 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.062360752 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068321786 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.059142957 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065901337 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.058399789 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.060555549 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068971859 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.059660873 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.064922486 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.067827943 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071348153 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068469389 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070831489 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073479638 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067777905 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.068353099 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.060104067 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077458835 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.060875331 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070795976 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.0723596 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.059315682 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071198131 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.057479416 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.056957099 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.057564701 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088870888 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.059289857 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.058727949 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.05783978 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.057764351 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.059096665 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.066439242 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.063771122 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06460448 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061254342 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073194438 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.066216246 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.057511353 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.064842496 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.074795534 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.0607893 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.05848867 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.074658861 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.062240575 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.058579424 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075803194 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068497119 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.060802998 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.059969493 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.062386175 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.072910821 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.060734287 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.058261356 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067346113 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.061091189 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.062223037 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.064071732 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066229272 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.059126247 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068550129 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.064531591 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.06106954 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.058105531 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.062783937 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.060156275 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058172376 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068173499 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.059233566 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.073354636 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.06505298 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.072265957 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072815422 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.06893393 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073916393 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.058732041 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.057948277 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.076144206 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068412767 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.060832973 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076613765 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.192599356 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070584893 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.059420333 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.061094539 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.068023309 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.058724575 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061504606 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.059443782 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.065476799 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.060376236 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.060356485 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.062757043 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066191631 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.069956158 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.059875873 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.066825717 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.059088257 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073020517 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.067273736 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.062598951 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.06280778 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.05912627 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.069711446 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.06443327 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.067360533 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.058023677 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.05912496 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.05857058 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.068483916 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.067366101 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.060286022 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.067061162 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.062680832 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.058921034 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.058834056 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.059588563 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.061546534 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062886904 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.060305143 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066960431 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068198865 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.075699434 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067505697 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067980216 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.05860184 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.059201341 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.06113783 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.059039907 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.063541447 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067715696 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.073662149 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.070087383 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078602237 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.05933101 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068268958 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.060950657 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075151318 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07154042 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.060426775 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064266831 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.05807067 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061120728 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.06792589 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070851533 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.072352638 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.073237424 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.063584882 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.06372007 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.058862546 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072940685 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.060249248 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067635416 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.068101386 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.063536431 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.058888796 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.061083009 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.067696917 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.063331544 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.059515743 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.074048615 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.066393709 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.058955852 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072470562 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.059609581 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.070012161 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.058933626 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.062394272 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064237312 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.060003389 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067013743 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07228767 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.056919298 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.058346251 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072366412 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.059889776 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.059987032 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065331011 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.072249062 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.062635301 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.065237198 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068562104 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.06829594 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064165638 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068472177 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.059920074 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.066823926 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.061763826 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.069623754 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.057880261 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.074453082 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.057261009 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.072554187 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.059584954 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.069717958 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.06000497 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067893375 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.060004067 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.075343328 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.061041308 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.060283204 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.070389094 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.058203642 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.067551694 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.058465741 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.063416061 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.06467944 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.06788757 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.060942101 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.067906944 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.060818784 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.06689196 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.063614103 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.06702275 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.067531771 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.063278497 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.058562764 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066676434 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070335786 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.066816692 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.060828207 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.061566456 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.059588591 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.067904279 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.060436628 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.06016782 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066338633 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.063309864 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.064757623 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060485552 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.06095993 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.060434671 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06687906 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.067604977 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.076359413 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066686582 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.065627006 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.067387259 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.058847842 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073751292 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.0589131 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.064325898 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.056387159 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.063619254 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.066205742 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.057409076 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.075183351 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.058807625 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.064275701 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069366374 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06665415 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06180531 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.07584237 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.06260085 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066276886 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.066183953 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.062985031 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.064686345 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.060577352 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.06633017 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.067829433 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.068732338 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.059832178 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.065394406 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066750381 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.060130185 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.066338341 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.059931999 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065901675 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.060216253 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.057564233 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.062642187 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.069706815 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.062732014 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.063313263 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.058349109 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.057079343 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.058532539 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.065293072 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.062588606 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.066524228 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.072473557 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.057002245 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.059032475 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.057718821 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064146695 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.075509998 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.067808691 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065687719 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.062823797 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.057433292 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.059839658 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.060442843 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.058553572 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.062324866 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.058046643 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.057638951 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068315158 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.060115394 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.062302893 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.058732766 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.059276522 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.066966518 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.062845934 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.058780324 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.063982288 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.057550798 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.06367486 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.057459571 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.059548678 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.062226138 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.057479668 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.061059938 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.067467842 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.073216038 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.063965496 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.066275758 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.059079061 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.065170313 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072267123 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.065663716 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059191944 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.066786574 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.057459108 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.07519795 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.067167527 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066443477 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.067639029 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.059088026 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.073598705 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.06230692 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.067688016 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.072584202 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.05928903 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.06502303 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.05811658 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.072880893 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.062383941 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.058044993 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.065746388 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065219713 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.063876944 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.069046325 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.058853608 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.066000162 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06359128 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.061268734 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.059873214 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.060133259 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.314078056 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.07760082 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.062037873 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.066529808 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069002706 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.070169158 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066825119 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074866864 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069676224 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063544864 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.063695462 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064765579 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.062190551 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073304607 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061674157 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065419138 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065447497 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.061037354 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067483834 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077078195 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.07018584 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070501274 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06077508 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.059708427 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.07816924 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064047515 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.064441888 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068477629 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069297477 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07217272 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.069195146 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075935352 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.060354935 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.065409925 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07178502 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.060817102 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.060053423 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063602067 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.061560211 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068266407 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.069304892 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066761666 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062142897 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066217745 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.072614563 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.062317287 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064414545 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.065351726 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.061665196 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069732879 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067468612 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.068214083 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.061268075 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.059412875 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063062467 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067692131 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066691102 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068463594 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060450259 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.067287888 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.073226642 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066372969 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.063441704 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.05943302 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.063401128 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068422914 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.064609472 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.059832784 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064322999 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.062964518 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.067526284 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068817197 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064031634 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.059588138 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.076280684 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067442129 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.068414829 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.061908242 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.062185085 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.05990719 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.059116031 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.069510484 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.058520322 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.060485475 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.0626928 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.060658419 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.075822784 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.066872787 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.074230963 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.061259831 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.064020241 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.059353375 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.06906632 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.063983442 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.059858788 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.07003123 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.059655857 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.074880694 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.071367987 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.068657835 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.060024031 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064505392 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.067850725 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073891078 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069085677 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068889737 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.063744069 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.070849983 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.061749044 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.070105745 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.059583543 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.05862306 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069469637 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067542584 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.071473094 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.05947543 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.069013166 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.061884469 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067216468 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.067536933 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.06176235 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.061453464 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.061591947 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068635196 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.063690213 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068463876 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.063850024 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.073786787 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.059170012 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.06969181 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.066668317 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.06858299 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07070858 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069918893 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.065925677 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.058547503 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06498536 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.066274349 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.059381086 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.062675116 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.06179624 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.078775161 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.059996113 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.059647478 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.072037769 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.06535395 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.057959225 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.065321318 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.062616562 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.067856032 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.059647108 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.067978497 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.063097997 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.058869825 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.062570431 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.062770919 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.057040884 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.058055038 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.05841696 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.066805877 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.06258431 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.058001406 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.075831535 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.059989309 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066221068 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.068497715 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.064044126 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.059425045 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.056905893 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.058763887 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069304005 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.072696847 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.061469003 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065811695 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.059719723 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.066107268 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.056568457 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.06593726 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.082003589 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065659508 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.058661082 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059258684 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073050117 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.073447221 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.062885341 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.067773661 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069060475 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.060654535 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.078681847 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.066623609 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.0596295 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.068676105 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061457734 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.058212917 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.057749864 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.06047445 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.06966472 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.058241665 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.060670884 seconds)
  done (took 40.554992371 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100761187 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.060453658 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06004388 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06067166 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072683988 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061164826 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060779635 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061669888 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.061149411 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.062762759 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.059882242 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059681288 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070689852 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.073707248 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070186666 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.063924021 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059832957 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061005016 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.059569172 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060479211 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069810211 seconds)
  done (took 2.978083969 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.065383062 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.073009459 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071017916 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.077171829 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068061129 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064035558 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071125412 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064107956 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072030375 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069329935 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.071851162 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063991766 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.06931927 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.069103038 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068068363 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062990824 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069916782 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066426944 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.062334756 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069244355 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062628107 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069338117 seconds)
  done (took 3.026218289 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.059880915 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.058896572 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.066807788 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.05773712 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.057892606 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.062213095 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.059343518 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.063286475 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.063737195 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.063225947 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.06811863 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.060646461 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.059278438 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.064730378 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.059688247 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.061365781 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.10148524 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.060463411 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.060443481 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.059905658 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.064168652 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067965369 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.059510754 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.059262944 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.063302351 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.062913768 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.059580323 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.062540513 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.060168324 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.063381205 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.060502638 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.058746879 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067390908 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067249302 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.063522492 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06329265 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.060868297 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.060060075 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.05905383 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.058802817 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067347443 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.060538869 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.05931401 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.060494874 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06767438 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.05900687 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.058869926 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067668691 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.058653641 seconds)
  done (took 4.597620859 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.069713447 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.107744517 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.063715663 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088406561 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.070871871 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.064357446 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.063740853 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089611659 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.059127853 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.06100872 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.074014738 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.074066794 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062719478 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.063971953 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.064538506 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062202879 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.062957053 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.061803096 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.065219024 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.061886022 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.065065575 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.064541818 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.070593962 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.071117778 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.061922044 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.059885515 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.061419741 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.062113189 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.07095837 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.065522606 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.063661652 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.063137035 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.072568324 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.066506332 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.061489817 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.06126409 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.073329878 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.061161381 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.060453045 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.059445262 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.060358081 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.062127382 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.064636519 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.071988242 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.060761356 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.065205208 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.061105158 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.058516639 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.071118662 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.060729523 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.064868236 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.072744912 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.062062868 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.061424516 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.062661232 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.071504314 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.061124723 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.059968853 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.061280826 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.071800747 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.059606125 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.061945908 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.07202163 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.06022269 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.065398156 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.073468414 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.066306679 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.063501689 seconds)
  done (took 6.160288833 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067738983 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.08965351 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070575775 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071120474 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069710999 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.069574197 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068516429 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.070139778 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.06842863 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.068974071 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068416851 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.105941119 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.064371329 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073026736 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.068316888 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068781375 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.069049652 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.06863859 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069880638 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069816071 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.07004137 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070479079 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069908156 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.070651886 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.072515066 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065453039 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07039254 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.06995223 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070176205 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.069746702 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.072640036 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.070192216 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.069674113 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.070362505 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.072975197 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.069775061 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.059991885 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069663552 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.070013929 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.070130527 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06585195 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070617866 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069454178 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.065602655 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069917099 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070119105 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.070634712 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.072635844 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077837704 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070739599 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.070280529 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070729001 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070046608 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070085056 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.070536407 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.076357077 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069124579 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069084238 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068444842 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.068974337 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069130658 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.07584817 seconds)
  done (took 5.950258504 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0730582 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065891161 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.077470493 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060909425 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.058915492 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06902298 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.059092799 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.059247572 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067121165 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.066994182 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068566604 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068962978 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071306586 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068699828 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068650034 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071603594 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068720077 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068978481 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066501032 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068589558 seconds)
  done (took 2.902860518 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.070770456 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.07605307 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.065220036 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069028556 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.064474528 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068560721 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.063854773 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065013713 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064864409 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063895349 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069142817 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069796189 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065629376 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068916738 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069871837 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068659633 seconds)
  done (took 2.627061508 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.065276779 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.066367558 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.066301649 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.06112967 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063816755 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.059482066 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.060412044 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.059042286 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.059225538 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.072890127 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.060013763 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070752668 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.059432049 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.059181104 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.059226409 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.065052242 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.058260053 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.059150709 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.058818472 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.063506737 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.065209548 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.060062252 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.062613794 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.059001969 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.064372825 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.066229368 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.060729838 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.062848797 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.059142103 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.059419567 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.064164688 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.065164688 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.058646097 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.060130689 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.059028661 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.060395044 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.060498534 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.06081864 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.065766154 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.060000553 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.058534493 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065234633 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.059790259 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.059760347 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.058126609 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.05933461 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.058473806 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.06438219 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.059103306 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.064083257 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.059062745 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.061286104 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.059164331 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.065834464 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.061126712 seconds)
  done (took 4.942538004 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073008703 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.062829242 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.057743675 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.057705491 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.062679713 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.063329312 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.06263529 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.062951032 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063068411 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.057801004 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.063035331 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.062054043 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063338282 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.063725862 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06511663 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064108535 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058878644 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.064430971 seconds)
  done (took 2.684090251 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070123887 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064294758 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.069177203 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064065709 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.063826077 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.063236361 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.059293383 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.059804728 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059664765 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.063946056 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063739181 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.063138682 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059189967 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.063342273 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.063445688 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063511241 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.063281165 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.059277616 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.0636789 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.059147434 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.063059757 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.058693528 seconds)
  done (took 2.937403903 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.086109789 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.080975743 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.121043943 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.075765517 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.083708487 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.067828238 seconds)
  done (took 2.067577741 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087688584 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099931811 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062883112 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.062352853 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071655226 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066571596 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066459528 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067332395 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073107488 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071556992 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067606635 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073553205 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073905654 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069982671 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072883654 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074746911 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065952426 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065728159 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.062654639 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075276858 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066001488 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071778313 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068533937 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066083442 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065998233 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067769046 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074448713 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069993929 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067918026 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071722838 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074257328 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066110321 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072152026 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070088566 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.062944187 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071786624 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06582581 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074528318 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072002764 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068118271 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.062559355 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071980433 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071765618 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067790102 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074504603 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065859233 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067796764 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065992321 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066340742 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076646954 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072465158 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0679573 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072080148 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07460032 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074719288 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077045715 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070528917 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068080179 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072596634 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070521 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067821592 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072145014 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068049267 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070732062 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074833544 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067888083 seconds)
  done (took 6.203129282 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094851319 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064040202 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066100865 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071018548 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069347034 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067828502 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067160365 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066151135 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066573763 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.063983295 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100956876 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066674573 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067868161 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067956724 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066518078 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066188954 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066490823 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06810386 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.063356782 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077166692 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065847889 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06783521 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067916931 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067823278 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070032875 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07438704 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065970271 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065830795 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065969939 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065696429 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067911668 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066045639 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067871428 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.062891838 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067703802 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065824588 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065504505 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067649739 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065725819 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072072632 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067867304 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074616155 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066051586 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065508859 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07021465 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066078523 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065977771 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.063193831 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065977215 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.063376647 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070676419 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070145652 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070515829 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068047719 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06586959 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066188384 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06621945 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06589408 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066429546 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074656938 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067661948 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066218224 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076966234 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066504384 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066455573 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068195742 seconds)
  done (took 6.088344723 seconds)
done (took 128.319393214 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.205367085 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.181153038 seconds)
  done (took 1.919364376 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072873792 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.09373134 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.07166629 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130604036 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.068433501 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101805516 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.101077378 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.072151671 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067925879 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.068037793 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067782899 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.070320851 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133096291 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067755801 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.068028336 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070346948 seconds)
  done (took 2.883602976 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.10297455 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.175728927 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107518718 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066382812 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101521036 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072885427 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.066117795 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.076063728 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.069423337 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.069272667 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072840215 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070901083 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.069134983 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.071140964 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.069439243 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072555334 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068796696 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072268083 seconds)
  done (took 3.038677914 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.090434447 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.082245649 seconds)
  done (took 1.742950167 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.152793834 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.102015705 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.139908218 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.313045662 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.128501381 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.124202942 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.127286947 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.122621515 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.107609101 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.119679209 seconds)
  done (took 3.000006064 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.10069356 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.1703322 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.301963417 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115304899 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071882841 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.097080913 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.117625699 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077487319 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.076194981 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.075723892 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.078253834 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.073386117 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.093735733 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072580105 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072552376 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.07273367 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.096543782 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072235726 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.070954949 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.072207658 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.096288057 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.0665662 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072601108 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071521045 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.073733447 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.073856159 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.068158702 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.066466348 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.072237544 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.071023286 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076717207 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.096542213 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.07584812 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.099165143 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.072149483 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.099480674 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.073014066 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072466782 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.072847298 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.07251428 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.074411092 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.073300444 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.075047298 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.073562093 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067990949 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.071356298 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.068832803 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067983937 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077449028 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.069155192 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.076491949 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.074504035 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.096691514 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.067700631 seconds)
  done (took 6.15141208 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.1043341 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.101690553 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067401146 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.108259624 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100720824 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06656781 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.099511687 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095061154 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103749654 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06603309 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06528914 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.065590337 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.072802515 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.075789408 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.110850588 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.102382541 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068117782 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.066206483 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.102540386 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102800469 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065037962 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095871964 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.094651278 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101771249 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.064813298 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066215531 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.064673644 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.065430328 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.071015778 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.071909681 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.065823794 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.073371048 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.077450583 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.072087868 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.064957389 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.065258063 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065014166 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.072272023 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.073354838 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.073011185 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.071398095 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064507235 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.064760067 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.065626231 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.065895354 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.064719149 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.071883238 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.07262213 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.071727852 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065115148 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.065486913 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.064953249 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.065514925 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.072742891 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.071544641 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.0732541 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.072998786 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.065239799 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065250694 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.066931582 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.073458426 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.073612159 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.073446602 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066330238 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.074424002 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.065203603 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.074260924 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.0769465 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.064996619 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.065828499 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06542723 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065051778 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.065432612 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.071945842 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.071575498 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066223198 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.06498738 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065127291 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.074362492 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.072059689 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065539624 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.071530859 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.064943282 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.065679062 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06563591 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065979984 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.0710768 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.073323177 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.06616152 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.064946852 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.065093816 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.065381136 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.064719216 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.071700969 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.072862468 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.073079332 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.072110834 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065489328 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.072269963 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.072147504 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065913545 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.071925744 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.065219309 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065622423 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065773761 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.072445764 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.071577921 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.073421938 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065065092 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.065272875 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.071684625 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.074225182 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.065334568 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.202063104 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.074780996 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.072826799 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.065074504 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.07758286 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066278161 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.07358778 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065843104 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077301935 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065879924 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.072323434 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065510999 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.065466785 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.065430102 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.072427594 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06572707 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066032356 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065797001 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065566974 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.072827024 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.076013946 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065816928 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07246409 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.072796601 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.065970627 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.072834665 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065693504 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.073357577 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066231678 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065736483 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064811075 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.075374791 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065679343 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.065420001 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.065516529 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.074399042 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065552934 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.074691656 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.071945313 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.064880276 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.07629905 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.074835995 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.07175117 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.07505625 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067050468 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.065348556 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06527127 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.065189363 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.0710774 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.072936308 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06541252 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065428153 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.071192199 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.073925819 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.064887144 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.071739246 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.071569946 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.071857846 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06528036 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.064819644 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.074884152 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.07378701 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.072021045 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.071780999 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.072357193 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.065070873 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.071282961 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.072090533 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064948681 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076756808 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065020228 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.075622006 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.072595627 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.071215149 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.072540166 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.073335892 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.074340575 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.074127583 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.075943783 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.064938892 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.064943621 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.0720299 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.065642815 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065243487 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.071631456 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.06583904 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.065527148 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.076669234 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065317858 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.074193302 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.065070842 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.072685375 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065485056 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066127776 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077229399 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065414599 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066020442 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.072672649 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.065288209 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.072012846 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.074462214 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.07195285 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065478643 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065804602 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.072852014 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.073087028 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.0650804 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.064717352 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065457051 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.071558469 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.071320257 seconds)
  done (took 17.688142727 seconds)
done (took 37.997994682 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.196799131 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.153740706 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.188339148 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.109748546 seconds)
  done (took 2.301267762 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.092423328 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.093759808 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.074045686 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.062001902 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.079227916 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.062023074 seconds)
  done (took 2.056473523 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.26514929 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.186048602 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.16867435 seconds)
  done (took 2.205786607 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.210597182 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.190130668 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.464494363 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.284720112 seconds)
  done (took 2.839565576 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.128153362 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.076595387 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.061742427 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.070455216 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.104628428 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.133447424 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.08404225 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.106435179 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.071287657 seconds)
  done (took 2.486830076 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.125354974 seconds)
done (took 13.624440505 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.210573663 seconds)
    (2/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.098722913 seconds)
    (3/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.071534528 seconds)
    (4/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.164260202 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.068686727 seconds)
    (6/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.161881524 seconds)
    (7/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.209264512 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.088138014 seconds)
    (9/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.064932518 seconds)
    (10/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.07956636 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.149208718 seconds)
    (12/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.07120675 seconds)
    (13/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.089653463 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.072690828 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.140443625 seconds)
    (16/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.095553409 seconds)
    (17/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.190350685 seconds)
    (18/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.210477846 seconds)
    (19/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.066537602 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.126854583 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.070109398 seconds)
    (22/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.177177122 seconds)
    (23/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.070839093 seconds)
    (24/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.070369813 seconds)
    (25/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.061861575 seconds)
    (26/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.061681805 seconds)
    (27/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.40600265 seconds)
    (28/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.225831629 seconds)
    (29/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.108911963 seconds)
    (30/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.187444635 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.09081014 seconds)
    (32/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.070613576 seconds)
    (33/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.173338829 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.117213923 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.090991935 seconds)
    (36/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.222118554 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.063058645 seconds)
    (38/309) benchmarking ("sort", BigInt, false)...
    done (took 0.243461617 seconds)
    (39/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.064179604 seconds)
    (40/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.153915114 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.08915455 seconds)
    (42/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.229187029 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.086946486 seconds)
    (44/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.074838638 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.070166344 seconds)
    (46/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.190419162 seconds)
    (47/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.060267061 seconds)
    (48/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.095055134 seconds)
    (49/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072151519 seconds)
    (50/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.070409273 seconds)
    (51/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.06415078 seconds)
    (52/309) benchmarking ("sort", Float32, false)...
    done (took 0.130183676 seconds)
    (53/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.060779745 seconds)
    (54/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.068941474 seconds)
    (55/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.212235002 seconds)
    (56/309) benchmarking ("sort", Bool, false)...
    done (took 0.143761666 seconds)
    (57/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.076567164 seconds)
    (58/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.071951187 seconds)
    (59/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.181015098 seconds)
    (60/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.08441182 seconds)
    (61/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.191876809 seconds)
    (62/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.06114065 seconds)
    (63/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.194889204 seconds)
    (64/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.161751472 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.148163228 seconds)
    (66/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.219469744 seconds)
    (67/309) benchmarking ("sort", Int64, false)...
    done (took 0.065247235 seconds)
    (68/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073443324 seconds)
    (69/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.082878862 seconds)
    (70/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.063460726 seconds)
    (71/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072321176 seconds)
    (72/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.061694261 seconds)
    (73/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072679729 seconds)
    (74/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.062760569 seconds)
    (75/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.177258625 seconds)
    (76/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.084978048 seconds)
    (77/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.07258242 seconds)
    (78/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.060398742 seconds)
    (79/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.069317894 seconds)
    (80/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.162560558 seconds)
    (81/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.072141424 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.239547264 seconds)
    (83/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.140199116 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.123489111 seconds)
    (85/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.146565068 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085017075 seconds)
    (87/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.070038718 seconds)
    (88/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.146152166 seconds)
    (89/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.244270489 seconds)
    (90/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.07438601 seconds)
    (91/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.082079314 seconds)
    (92/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.14417515 seconds)
    (93/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.063928918 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.128637728 seconds)
    (95/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.138790334 seconds)
    (96/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.06745539 seconds)
    (97/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.08689076 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.129948986 seconds)
    (99/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.153916604 seconds)
    (100/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.072874967 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.113857322 seconds)
    (102/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.062761644 seconds)
    (103/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.062718401 seconds)
    (104/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.089686486 seconds)
    (105/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.167141641 seconds)
    (106/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.178678518 seconds)
    (107/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.06976302 seconds)
    (108/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.062066277 seconds)
    (109/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.069320875 seconds)
    (110/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.061550314 seconds)
    (111/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.15578726 seconds)
    (112/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.073807216 seconds)
    (113/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.182794931 seconds)
    (114/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.06973043 seconds)
    (115/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.070785796 seconds)
    (116/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.069714299 seconds)
    (117/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.168175984 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.091893816 seconds)
    (119/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.089746885 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.125962266 seconds)
    (121/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.063224883 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.119235238 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073822018 seconds)
    (124/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.070395605 seconds)
    (125/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.135745191 seconds)
    (126/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.064399358 seconds)
    (127/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.193665476 seconds)
    (128/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.0628354 seconds)
    (129/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.071547367 seconds)
    (130/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067135429 seconds)
    (131/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.073866277 seconds)
    (132/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.064507916 seconds)
    (133/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.142124888 seconds)
    (134/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.223408161 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.08094485 seconds)
    (136/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.063009945 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.082889953 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074170219 seconds)
    (139/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.073459364 seconds)
    (140/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.091047952 seconds)
    (141/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.070080078 seconds)
    (142/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.197977143 seconds)
    (143/309) benchmarking ("sort", Int8, false)...
    done (took 0.163264325 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.081006042 seconds)
    (145/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.061549148 seconds)
    (146/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.061545309 seconds)
    (147/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.066194437 seconds)
    (148/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.064859988 seconds)
    (149/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.060443057 seconds)
    (150/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.062604707 seconds)
    (151/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.080832072 seconds)
    (152/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.070307429 seconds)
    (153/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.077998447 seconds)
    (154/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.062245203 seconds)
    (155/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.062228518 seconds)
    (156/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.070128066 seconds)
    (157/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.073935283 seconds)
    (158/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.064060744 seconds)
    (159/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.061494587 seconds)
    (160/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.062594036 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.089333203 seconds)
    (162/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.144501646 seconds)
    (163/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.062625753 seconds)
    (164/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.19299216 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.13929635 seconds)
    (166/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.068900021 seconds)
    (167/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.17233331 seconds)
    (168/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.062892987 seconds)
    (169/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.137598237 seconds)
    (170/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.146570806 seconds)
    (171/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.073756883 seconds)
    (172/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.061805478 seconds)
    (173/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.062605624 seconds)
    (174/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.142367029 seconds)
    (175/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.069006147 seconds)
    (176/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.136413395 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.084306996 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.134144101 seconds)
    (179/309) benchmarking ("sort", Float64, false)...
    done (took 0.131726882 seconds)
    (180/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.061931124 seconds)
    (181/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.06130378 seconds)
    (182/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.069340073 seconds)
    (183/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.069064311 seconds)
    (184/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.064160708 seconds)
    (185/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.153325901 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.076497164 seconds)
    (187/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.068802222 seconds)
    (188/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.062766387 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.062081627 seconds)
    (190/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.334565039 seconds)
    (191/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.156709858 seconds)
    (192/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.06419306 seconds)
    (193/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.063191061 seconds)
    (194/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.069671468 seconds)
    (195/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.063435482 seconds)
    (196/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.063773997 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.129377638 seconds)
    (198/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.064480916 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.063238526 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.062755131 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.110608152 seconds)
    (202/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.204435017 seconds)
    (203/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.067528764 seconds)
    (204/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.069450198 seconds)
    (205/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.062743653 seconds)
    (206/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.090049933 seconds)
    (207/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.064820783 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.088565432 seconds)
    (209/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074441056 seconds)
    (210/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.07436044 seconds)
    (211/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.062347587 seconds)
    (212/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.062929104 seconds)
    (213/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.141302842 seconds)
    (214/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.064468987 seconds)
    (215/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.141746024 seconds)
    (216/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.063796589 seconds)
    (217/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.138319678 seconds)
    (218/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.062279992 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.086840138 seconds)
    (220/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.070768771 seconds)
    (221/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.061679226 seconds)
    (222/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.062980085 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.084368245 seconds)
    (224/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.06209026 seconds)
    (225/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.070003091 seconds)
    (226/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088310278 seconds)
    (227/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.062202207 seconds)
    (228/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.061579551 seconds)
    (229/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.062833476 seconds)
    (230/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.211702948 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.118042599 seconds)
    (232/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.073611869 seconds)
    (233/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.147848903 seconds)
    (234/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.065635397 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.085088422 seconds)
    (236/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.064896552 seconds)
    (237/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.064110204 seconds)
    (238/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.071272903 seconds)
    (239/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.070840228 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.146040679 seconds)
    (241/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.16998956 seconds)
    (242/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.062237758 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.140409993 seconds)
    (244/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.072366203 seconds)
    (245/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.063523352 seconds)
    (246/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.062855002 seconds)
    (247/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.061208715 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.086085902 seconds)
    (249/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.061366635 seconds)
    (250/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.061132968 seconds)
    (251/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.122141872 seconds)
    (252/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.062708565 seconds)
    (253/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.148451965 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.062757575 seconds)
    (255/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.062862479 seconds)
    (256/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.063184625 seconds)
    (257/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.063247398 seconds)
    (258/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.061617431 seconds)
    (259/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.063306194 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.062244316 seconds)
    (261/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.070318353 seconds)
    (262/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.06162961 seconds)
    (263/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.071315604 seconds)
    (264/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.062546266 seconds)
    (265/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.063244202 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.083773293 seconds)
    (267/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.062047906 seconds)
    (268/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.064783068 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.083144348 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.062505608 seconds)
    (271/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.073990923 seconds)
    (272/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.063138151 seconds)
    (273/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.069704914 seconds)
    (274/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.172203806 seconds)
    (275/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.062898595 seconds)
    (276/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.062768983 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.063002438 seconds)
    (278/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.064294819 seconds)
    (279/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.061441452 seconds)
    (280/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.06172865 seconds)
    (281/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062881926 seconds)
    (282/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.06197309 seconds)
    (283/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.060967536 seconds)
    (284/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.061254253 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.10982509 seconds)
    (286/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.062774374 seconds)
    (287/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.062398254 seconds)
    (288/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.062514911 seconds)
    (289/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.061629341 seconds)
    (290/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.066351693 seconds)
    (291/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.062785197 seconds)
    (292/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.069818667 seconds)
    (293/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.062774869 seconds)
    (294/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.069413857 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.062532876 seconds)
    (296/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.060636656 seconds)
    (297/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.146665305 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.062210816 seconds)
    (299/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.061875584 seconds)
    (300/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073420364 seconds)
    (301/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.062535873 seconds)
    (302/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.062417303 seconds)
    (303/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.069665243 seconds)
    (304/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.062327701 seconds)
    (305/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.062877125 seconds)
    (306/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.062620693 seconds)
    (307/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.06225136 seconds)
    (308/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.063836933 seconds)
    (309/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.061876567 seconds)
  done (took 32.157218418 seconds)
done (took 33.766807919 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08244658 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.085824916 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.069681944 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.081349382 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.077087083 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.096587774 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.070262214 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.074739834 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.076713055 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.075552482 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.074894269 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.068982149 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.071955091 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.071424127 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.06985097 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.084398187 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.07738023 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.070876472 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.070913561 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.061274462 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.070808021 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.062386485 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.061492216 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.068589211 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.073627861 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.069566305 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071629125 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.071508086 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.062976228 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.062767894 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.067124118 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.071420789 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064950139 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.074255048 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.070439211 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.070817175 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.0722319 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.074867422 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.061572337 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.062587177 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.072790654 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.062453041 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.070339904 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.068660283 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.067155598 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.069624066 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.071126792 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.073906465 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.084581314 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066355303 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.072852088 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.073311753 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.073267324 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.067830313 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.067550385 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.070641734 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.068914687 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.084328916 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.071127229 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066554525 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.072164352 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.071808169 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.068976381 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071029894 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.070820655 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.073097518 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.073933763 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.069440884 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.072739911 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.069873128 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.062501264 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.070494047 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.066935543 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.062309542 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.073666898 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075566176 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.061126747 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.066741308 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.070656869 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.07063734 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.061810374 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06650339 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.061588236 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.067240704 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066038643 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.068687673 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.067048414 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.069460542 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.061531225 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.071032732 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.069588197 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.070190333 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.061027045 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.073863687 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.061981862 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.068532064 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.062381601 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.062226922 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.061083263 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.067543525 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.061824378 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066311691 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.070055394 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.061035687 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.066899971 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.075121698 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.062247032 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.069767338 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.061015525 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.061355374 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.073098373 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.072873392 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.062478259 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066274804 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.061317231 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.06793521 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.061521571 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.062023027 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.062122709 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.062681386 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.066764089 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.062588745 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066515038 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.067677506 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.074158891 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.062055526 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.066670985 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06631752 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.062285406 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.068804373 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.062334163 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.062668703 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.061773053 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.075207887 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066215296 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.062508739 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.067440334 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066138727 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.07046498 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.060740479 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.071249894 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.068181794 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.066618455 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.068481283 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.061220302 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.211138156 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06665076 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066662056 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.061852395 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.062856806 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.061933421 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.062640064 seconds)
done (took 12.320503306 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.063789301 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.088717593 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.070748033 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.079018084 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.074585965 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06366718 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.066346079 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.079127972 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.065878591 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.081662914 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.084364512 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.083635958 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.089019219 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.06165007 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.063240087 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.063955712 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.061602062 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.069840698 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.07705989 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.083798832 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.091237241 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.062065328 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.071180156 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.077570571 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.072779746 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.078210687 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.063801659 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.063311134 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.065361981 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.079177237 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086487469 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.062773368 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.063636443 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.075683257 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.076127085 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.06890431 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.063841239 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.066884226 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.063618846 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.06267453 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.064819178 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.07624256 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.068904658 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.066727728 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.06348752 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.063652379 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.063218884 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.065678204 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.075431966 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.066081434 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.070097681 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.074332173 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.064152934 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.0626372 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06124893 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.06684846 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.063046188 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.0633222 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.063005349 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.062676555 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.062946066 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.065320307 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.063669745 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.063260429 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.065920033 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.065354881 seconds)
  done (took 6.258441731 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.081039554 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.091655412 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.078845937 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.079795411 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06252494 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.063371485 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.063380952 seconds)
  done (took 2.225209364 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.064156616 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.075914105 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.078389085 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079301812 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.071226353 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.081099509 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.063553746 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.092708014 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.062523484 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.075306223 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.107826129 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079901315 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066304355 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.074843536 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.063517187 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.070517665 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.063317591 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072137396 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070930434 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.078839306 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.066745298 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.090189006 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.076677764 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.064055563 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.082809788 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.067377142 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.062476224 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.063757143 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064319221 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.06467047 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064166589 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.101055337 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.066741556 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074408425 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065132568 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.06337889 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.068807029 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066819461 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.06561072 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071629839 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.068493298 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.064496835 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.061527604 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064670647 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.065863316 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.066624833 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.062076085 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.064335698 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.064005357 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.074352056 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.062536718 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.067773436 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.066468235 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068343364 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069645154 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067820583 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.071469484 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.064601047 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.074574595 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.070743497 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065121338 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.105347168 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.072174847 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.068038833 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.070960098 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.067134403 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.066816347 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.068001199 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.063802958 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.064933443 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.064357823 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.070965723 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.06287542 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.065549953 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.066931559 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.064739956 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.067378519 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.079938976 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.079651326 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075593777 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.065051366 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.064675862 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066965683 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.079284188 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067750567 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063919617 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.066812776 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.062844451 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.067547856 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064569768 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.069219035 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.064287196 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.071300563 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.065230872 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.066904324 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.071707338 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.063407795 seconds)
  done (took 8.488004371 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068012284 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.066064378 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.06671346 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.065040992 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.06476855 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.064331799 seconds)
  done (took 2.140308001 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.089119283 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.066056152 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.078749626 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.064684786 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.098566618 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.071009897 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.070236778 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071814138 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.077911585 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.076181846 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.070390898 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.072714987 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.070010693 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.065042109 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.069792722 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.064734466 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.070066548 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.066519317 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.076785288 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067372085 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.078650073 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.067259336 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067241222 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.07651526 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.066748413 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.064247679 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.064361251 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.076334456 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077923481 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.071910992 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.065072851 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.066531701 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.071071519 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.071551455 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.070175378 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071134124 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.063638645 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.068924237 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.065770583 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.066381986 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.072269317 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.065210692 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.065960044 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.068619783 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.071837303 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070998 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.068834257 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.066959895 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.069523579 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.068484479 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.06894816 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.064191196 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.066261998 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.071032749 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.073021849 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071762954 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.068740497 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.069549035 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.065381798 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.071457005 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.06360081 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.066290115 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071421148 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.066349333 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.068402067 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.069663674 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.072750127 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.06558021 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.0653734 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.063751374 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.068743611 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.064501981 seconds)
  done (took 6.737685588 seconds)
done (took 27.542991073 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.570445587 seconds)
  done (took 2.250851531 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.562715081 seconds)
  done (took 2.285117691 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.738365851 seconds)
  done (took 8.460217772 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.278959171 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.306360628 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.703779525 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130302936 seconds)
  done (took 3.171646721 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.716174746 seconds)
  done (took 2.453928332 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.229568352 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.21788477 seconds)
  done (took 2.183652598 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.346175644 seconds)
  done (took 2.074689788 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.109778703 seconds)
  done (took 2.835728341 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.221535476 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.154896031 seconds)
  done (took 2.115154357 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.476740844 seconds)
  done (took 2.206473397 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.042246779 seconds)
  done (took 5.777281491 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.230206757 seconds)
  done (took 1.996146062 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.233165821 seconds)
  done (took 1.97107291 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.752098191 seconds)
  done (took 3.479292597 seconds)
done (took 44.992091451 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081236732 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081751349 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081322191 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077730537 seconds)
  done (took 2.026371482 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.072559195 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.068008056 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.071422409 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.071845806 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.070746511 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.071221084 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.070781881 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.06659918 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.068800883 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.065942812 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.06436693 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.065703107 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.068143627 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.065432855 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.068265501 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.069769111 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.065622515 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.06571287 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.068938173 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.065669915 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.068559608 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.065522642 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.063940191 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.065782271 seconds)
  done (took 3.360376861 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.076844204 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.069970722 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.072243011 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.067773939 seconds)
  done (took 2.029878797 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.07435675 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.082532793 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.083873372 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.08962604 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.07347815 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.073105909 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.078843761 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.08022357 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.062243222 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.082384134 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.064295518 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.063054675 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.062867629 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.082712337 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.078578007 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.059436425 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.06074241 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.071685425 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.070707178 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.073337519 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.064028826 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.063332626 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.072626354 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.071506327 seconds)
  done (took 3.483563646 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078720414 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.06420933 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077648091 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.090788692 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092321965 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.063430203 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.077131506 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089933458 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.121538714 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.06163527 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.067547956 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.061902093 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.102298456 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.061739372 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.07727049 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.103127572 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.105608175 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.06595532 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094325341 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.061705382 seconds)
  done (took 3.370572269 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075789419 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.067414181 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.068756634 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.064020603 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.075316411 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.069281232 seconds)
  done (took 2.17149315 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067745525 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066187364 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.06642094 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.065322999 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.070711098 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.06517341 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.064030432 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.065877299 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066185629 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.065723576 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066042192 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.06414357 seconds)
  done (took 2.537488842 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.168034125 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.065663493 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.066928858 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.064931849 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.067772705 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.062964718 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.076642285 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.06532583 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.080596263 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.063329241 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.063565749 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.065505424 seconds)
  done (took 2.656061246 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.09470662 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.092151574 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.125259402 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106578435 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087836805 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.089843756 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.140560245 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.12885557 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105478884 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.065512213 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079136256 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099714579 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095952051 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.131918036 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.10562156 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.06890436 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.095650744 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07760599 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.100163374 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108121681 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105095595 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107558646 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.085635916 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.096959341 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10026845 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108024843 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.067388166 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.066898258 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.13195475 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.09414925 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.086153568 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.088260507 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10554774 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.065429094 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.082097407 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.095304633 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081037016 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.098288493 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.083569016 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091942534 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073504277 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.120464227 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.096346715 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101829652 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.115920581 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089493796 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100478299 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.096395317 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.079042951 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.110658294 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091498927 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.087959669 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072497863 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.149197903 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.087495204 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.100722908 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.107970731 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.078244853 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.085248282 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.090382242 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.118887542 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.094774638 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.248774682 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100037517 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.08450734 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088345648 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.127846729 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.08182979 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.098735701 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.123293418 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.087249806 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.072802427 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.088184954 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.066868579 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.095221314 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097909947 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09082785 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105909851 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.074287248 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.118063955 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.103202159 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.069141073 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.10836453 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089190372 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.151069531 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097475663 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.102036188 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091482065 seconds)
    (89/481) benchmarking "5d"...
    done (took 0.144741749 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084836151 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.078972729 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092928294 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.130910485 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089078178 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.094839129 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.12198655 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086711104 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.07937772 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.072007478 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.081644738 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09091501 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105782488 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.094490265 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087125954 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.078772428 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086195682 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.072019974 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.077436333 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.09310108 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084928191 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.114324736 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.100270524 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.110116875 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.076074487 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106709449 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.091502515 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.12899003 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.114337949 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.0816766 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105945501 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130724997 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.104064877 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.081683133 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.097327672 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.110793003 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101871208 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.085692491 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.13320746 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111002044 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084790302 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.087460216 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089787569 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.101361617 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.148141801 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08713007 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.102967356 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.13308693 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.102517158 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.08963769 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.079743886 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.086854674 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104365926 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.13539239 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.088466524 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.066923356 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090332575 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.122773052 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.071661236 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089772258 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.083841358 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.078804742 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.076164636 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.063568947 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.095468832 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.127072398 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.114218158 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.094558819 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.0893962 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.065189074 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.094265307 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091751244 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.140418346 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.1095908 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.093088832 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.086941134 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09471424 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.075271121 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.123443249 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.123016968 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.087560166 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.08626288 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.119463269 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.084870231 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.0958799 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103876338 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100450299 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.092722663 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.130993706 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.116242869 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.109651098 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098958959 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.117951863 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.076703039 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102293964 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.069789098 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.098262383 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.071999525 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097240934 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.074449538 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.36750027 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.080058883 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.102009222 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.069664788 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.074263162 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.104362213 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.088225488 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084758856 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.131382591 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.12205407 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.079856025 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.091771736 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.099190267 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09612785 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.104876146 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.085529586 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091112897 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.075732433 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.078281098 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089484223 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093627772 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.101346723 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.076208075 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.072390017 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.138268885 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101732831 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090202152 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089373372 seconds)
    (218/481) benchmarking "4d"...
    done (took 0.114020482 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.080742485 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.079409985 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102909435 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.133184436 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.115110683 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.07722457 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.087915052 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.066027387 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.080776571 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.072626018 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10733319 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.071513972 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.109986479 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.065232361 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.127141149 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085071315 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.098825661 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091011051 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.122831009 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.083074023 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.122297018 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084980988 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105401561 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092388668 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.088077813 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.10416194 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.088813305 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.096238661 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.101882649 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084274359 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089255333 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.123946322 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107607755 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.114891124 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.106508159 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.134056805 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106731612 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.072183115 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101841559 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.089345637 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.149795796 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.25811771 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.083275405 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.087300703 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103411343 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.081277055 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.138528389 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.083623708 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.078718048 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.11211387 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.088083529 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.086831304 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073918459 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.100098161 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.084872545 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108134693 seconds)
    (275/481) benchmarking "3d"...
    done (took 0.09412278 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 0.090894155 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103588548 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105038369 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.083563821 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.083833267 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.121917802 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.126200522 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.099104253 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084387879 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085307136 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.097460285 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09152974 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.107199728 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078502573 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.072495533 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.064881893 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.068774951 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.1145513 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102203647 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091842884 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091317259 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.09990533 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.068579991 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085319726 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089185501 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.080539161 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086427144 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.110135206 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.100577596 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.126513085 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.098173267 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089698224 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.135751637 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.126165401 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087593421 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091018443 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09418586 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.073351031 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.146379058 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.113609463 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.076659562 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.079336921 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.074220233 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083318537 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.067896585 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102579017 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102800387 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073652228 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.096590052 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092485494 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.115372966 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090089038 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074455405 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.07815165 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.071396322 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.071954609 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.249587074 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.07556441 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076054963 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.124588769 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102333974 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103437224 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.078869182 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073228113 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.130893121 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.066916144 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.130859589 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.080937418 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.10638614 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.077886025 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077250642 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088440897 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.100696024 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.107592299 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.115876696 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.070755431 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10401463 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.152594107 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076350032 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074562311 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.072801704 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111270116 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087316077 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.145641831 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087556443 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086364167 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075893271 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.124210115 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.103531139 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.081733556 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.123481661 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.078940286 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.070969851 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.081010514 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.105455597 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.069143705 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.07170453 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.109640891 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 0.620922958 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088175188 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.073764917 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.081122473 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.120511461 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079633671 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106543483 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.114433468 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104220882 seconds)
    (383/481) benchmarking "6d"...
    done (took 0.176425296 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.070500685 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089753503 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.102854383 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.096218106 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088856147 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.076688327 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.08430319 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085859574 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.076968682 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10789117 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.078076137 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.084503376 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.077849257 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.101781013 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.127849639 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086152841 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.097659744 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.236796335 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087052782 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098854017 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107101923 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.100250353 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.083309624 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086168591 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.104322374 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.081107243 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.077548766 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097025607 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.074041471 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075822411 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111120644 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.082380821 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.089982452 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103081548 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.082074645 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108486538 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.116918448 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111839396 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.095556708 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076167346 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.083210153 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.085097618 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.071116611 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076892156 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.073319447 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.06737527 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10603406 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084355908 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.078427449 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.097631245 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.103456764 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.09742849 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.105119481 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087760185 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093571914 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.09866825 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.125171777 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.149620362 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.096932032 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.11648361 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.130457049 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.075134373 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.073296818 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.077294689 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.130171046 seconds)
    (449/481) benchmarking "2d"...
    done (took 0.077249734 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089564846 seconds)
    (451/481) benchmarking "7d"...
    done (took 0.227496683 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.075251019 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.078029627 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090018184 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106139259 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.079629977 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078899773 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096187458 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109582606 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082037583 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079263317 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091129957 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.102474003 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.127625292 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.086190357 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.072696754 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.107459017 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.099852228 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.122213402 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.070408651 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079398205 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.127345509 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084740371 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.249902196 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.07779241 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.118828924 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.131206421 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07270634 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.088479746 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.068463901 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085807309 seconds)
  done (took 49.408142818 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.152329486 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.145576048 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.079219258 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.094295916 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.204863594 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.205973407 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.115948102 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.091069264 seconds)
  done (took 2.968204183 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.066373871 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.079445418 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099371163 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.080579343 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.063587458 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.064429449 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.192813899 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079656563 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.063526931 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.103023846 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.072470893 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.065505987 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.350466636 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.062770417 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.063810942 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.071194203 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.064082192 seconds)
  done (took 3.510441942 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.35524855 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.611018682 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.321667169 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.071650095 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.941983581 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.084830554 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.147460745 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.133284704 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.078607167 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.533982145 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.366676195 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.128910593 seconds)
  done (took 18.652968589 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.074855872 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.073354011 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.076869192 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.077574561 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072900584 seconds)
  done (took 2.24833272 seconds)
done (took 100.174007952 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081093658 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.168965075 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.067041026 seconds)
  done (took 2.144751494 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.081261663 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.077802511 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.077721826 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.07562821 seconds)
  done (took 2.194099089 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.073184905 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.07503967 seconds)
  done (took 2.02133083 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.237802093 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.158340737 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087133941 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.080928069 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076380273 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.075981738 seconds)
  done (took 2.112520841 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.070808144 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.068596779 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.068797078 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.069578748 seconds)
  done (took 2.142734561 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.067606841 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.065732074 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.067012765 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.071459717 seconds)
  done (took 2.140944803 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.082455715 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.08248672 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077520684 seconds)
  done (took 2.110747531 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.111617861 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.097048581 seconds)
  done (took 2.077119115 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.077949592 seconds)
  done (took 1.949652616 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.088098079 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.092455265 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.144020174 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.106708845 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.14264078 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.126950048 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.074649154 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.075664564 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.070660222 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.069552103 seconds)
  done (took 2.857973079 seconds)
done (took 24.186949648 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.076844182 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.35914232 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.356310245 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082915212 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667106344 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355068499 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.966387974 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.086595311 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.094923733 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064920214 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.080906754 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.644260291 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.957187152 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324196227 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.942060352 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.31794341 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.646107571 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065566699 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.063970568 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.064856306 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.949892944 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064456136 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.064983487 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.065324246 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.64490713 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.368988941 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065892074 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.321247223 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.064894084 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.067475653 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.352800721 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.066320298 seconds)
  done (took 16.152046999 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.069121804 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.116717866 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.070036546 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.080559262 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.067095702 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.066576394 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.068071397 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.06558485 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.105016436 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.065193604 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08133145 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.064814844 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.069456227 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067367797 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.084708939 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.065955116 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.066872119 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.066750442 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068263337 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066749847 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.083099967 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06502277 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066484138 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.066699835 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.066385767 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.077988058 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.066475604 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.065636138 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06568836 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06795354 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.069057986 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067209525 seconds)
  done (took 4.185467681 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121120567 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122818202 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.070494488 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105227675 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115080268 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.067206859 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.146824807 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.087675942 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.109866254 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06541282 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08180519 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.065258085 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.099230589 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067218714 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.085547307 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.065805924 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067122573 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.066317612 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.065632004 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066594073 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08349679 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.065303331 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066313505 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.066618488 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.066638328 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080072183 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.066688952 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.065876217 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.065641894 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068409755 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.069795339 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067213329 seconds)
  done (took 4.462760321 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.068260769 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.068419604 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.07635231 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.077289652 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.063922638 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.066562866 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.067954853 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.064129451 seconds)
  done (took 2.445356876 seconds)
done (took 29.129331135 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.077526614 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.067160012 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.069103392 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083969234 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.070707199 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.067635897 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.061964399 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.071548959 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.068368461 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.067987103 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.070090441 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.064369377 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.066666576 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.062115079 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.068901078 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.063273967 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.07048624 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.06770342 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.068335595 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.069502146 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.06603051 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.069022925 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.071523394 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.068093783 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.068486573 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.06833557 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.072041987 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.069127364 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.064297777 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.066361826 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.065649011 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.077867048 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069814846 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.070052155 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.063642244 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.064099092 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.067598352 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.0656624 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.069756125 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.072514149 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.065762763 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.072219409 seconds)
  done (took 4.738323864 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087244579 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091389067 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.082839856 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.079029579 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.10062202 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.079544991 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087147701 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.07583978 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.074664543 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.08624201 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.070735625 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.075376077 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.076227819 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.069019113 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.074804847 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.07134318 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.076493671 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.07049937 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075956127 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.07551417 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.087521741 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.068720839 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.075881067 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.076253235 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.070541012 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.077071649 seconds)
  done (took 3.933153341 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.071967219 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086798644 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.091218564 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.154980329 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.11010104 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080627628 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080537488 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.099745755 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.098329213 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066597762 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.069899745 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093238489 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093747283 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074176405 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.106818544 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.0837977 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.076787847 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068059509 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.07261893 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098836707 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.089698829 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.085185088 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.098175889 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085967067 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066762889 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075510915 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073484936 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081506734 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073226304 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077524641 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.069068439 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.068330082 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.065122676 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.07572584 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.068644616 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.0623584 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.085354401 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076402614 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077737213 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.105650624 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.073380117 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.066091069 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.092958374 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.125182683 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.064235755 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.067624547 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.067812892 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076710026 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.065628821 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092516325 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081631654 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.064106218 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.082513167 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.065621401 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.065546844 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079636362 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.065898716 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.067686056 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076284991 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070358858 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.084017846 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.069055245 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083580092 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.064318183 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075050728 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.065757493 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.066019077 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.063133476 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09850989 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071001503 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.113518526 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.066607091 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.063946151 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076367951 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074922439 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.070567984 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.064325516 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082365089 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075417914 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.067724343 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075321528 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.066972899 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.067634025 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.098042506 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.063378482 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.06250118 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.063191224 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.06699594 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.067445894 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.065173107 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.077471084 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.063626774 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.067559377 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.078206872 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.064065564 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.065025129 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.067067532 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.066087186 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.063509716 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.074531338 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.06825952 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.066101721 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076053319 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.065396253 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.067596798 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078603469 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073233257 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.063797525 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.066557 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.067889532 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.066953029 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068419617 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.06786852 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.066574821 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.070098238 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.071788452 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.070030078 seconds)
  done (took 10.808283498 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.164319516 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.155456574 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.06584932 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.147414563 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.073013058 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.069282699 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.149827373 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.083753572 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067276302 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068742519 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.066651223 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.094762452 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.090767618 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.103112727 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.071516698 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067459588 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.089513946 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.096815904 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.152147629 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.144919712 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.08799188 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.071388643 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.067342911 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.066518479 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.06639173 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.073029275 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.08031401 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.073059546 seconds)
  done (took 4.5484701 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.077256958 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.093025191 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.071169814 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.078497185 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.086160842 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067682061 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069176498 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.067086921 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079064823 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.072891481 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.064694252 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.06976468 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.069087939 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.067205334 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.06577214 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.071651794 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.071409705 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.064259812 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.068625872 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.0695674 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.074410136 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.09015768 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.069292431 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.064762034 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.067260855 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.064629202 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.072902291 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.075604606 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.064655546 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.078585235 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.061961351 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.068890127 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.078053623 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.065954447 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.065059063 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.065736239 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.064915566 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.065462557 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.065459122 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.063066211 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.063511409 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.069286958 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.063913895 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.071922661 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.078591326 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.072147228 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.066432351 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.067075407 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.067083629 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.061874637 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.067721891 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.067941136 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.06789739 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.072287606 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.06858318 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.067357377 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068334416 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.093685369 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.070706491 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.064522063 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064386082 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.063478939 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.066269532 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.073746931 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.081036221 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.06636366 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.063352675 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.064853119 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069860054 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.078771702 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.064832703 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.069485529 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.061936254 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.064914738 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.067465751 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.067624354 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.066175438 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.063822735 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.064669504 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.065122378 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.065223922 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.064994251 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.064813546 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.067563 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.063114211 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.063255339 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.06540288 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.066402598 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.072089025 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.063813129 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.067509447 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.065858536 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.064083983 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.067642453 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.070306799 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.06772602 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.078613348 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.074342307 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.06568076 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.062756178 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.07840088 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.066405076 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.064250769 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.070412717 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.068763599 seconds)
  done (took 9.194490232 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.088806031 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.066794448 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083567966 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.089538684 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.075474911 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.070740935 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077971968 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.066111523 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.080273714 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.064493087 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.073679821 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.064459336 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077988509 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.07397484 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.066264075 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.075254387 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.067586478 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084239922 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.078933442 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.063306556 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.072974137 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.076793788 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.076893778 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.081299699 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.080986377 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.082318986 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.076783447 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.067703983 seconds)
  done (took 4.055588453 seconds)
done (took 39.161240209 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.96521269 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.211366794 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.969908982 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.206536385 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.02352531 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.280991 seconds)
  (7/12) benchmarking "nbody"...
  done (took 3.004948692 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.958694577 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 8.079985807 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.984522277 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.280967982 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.425447652 seconds)
done (took 69.343926612 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 7.03227471 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.134259961 seconds)
    (2/2) benchmarking "String"...
    done (took 2.193977217 seconds)
  done (took 6.237992013 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.139183083 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.722640741 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.23458254 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.97319587 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.976021892 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.36819566 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.734473624 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.411194764 seconds)
  done (took 32.320075265 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.128398471 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.191230404 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.658213484 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.696805995 seconds)
  done (took 16.61807559 seconds)
done (took 67.325880547 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.976619073 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.971170827 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 7.002811169 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.996338923 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.968583967 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.975047111 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.97673318 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.971427679 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.982922879 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.040148903 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.972332163 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.976163212 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.96764426 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 7.031784505 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.500203514 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 2.016560648 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.978103346 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.982416452 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.978087951 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.976695082 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.976387598 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.968015868 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.429949981 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 2.121457074 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.586475096 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.356392325 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.104586976 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.373806061 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.973090358 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.968076641 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 7.025775105 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.348676453 seconds)
  done (took 210.37281013 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.975398049 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.830769804 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.889474718 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 7.02385725 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.324605725 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.150544108 seconds)
    (7/36) benchmarking "scal!"...
    done (took 3.069055694 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.355048924 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.982514411 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 7.004989017 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.181879729 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.974064056 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.192594064 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.948218609 seconds)
    (15/36) benchmarking "dotu"...
    done (took 3.013707129 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.978334041 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.120137411 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.166586437 seconds)
    (19/36) benchmarking "dotc"...
    done (took 3.013679125 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.121770835 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.976454295 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.980466576 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.937561895 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.133195461 seconds)
    (25/36) benchmarking "symm"...
    done (took 7.011551262 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.993832127 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.980021796 seconds)
    (28/36) benchmarking "trsm"...
    done (took 7.21114918 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.152007379 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.092886893 seconds)
    (31/36) benchmarking "gemm"...
    done (took 7.005002423 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.992674266 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.191705941 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.842003015 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.987785729 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.980747772 seconds)
  done (took 176.686000804 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.162025415 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.991789961 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.976836994 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 2.026932309 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.097618275 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.974875193 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.650655483 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.980138885 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.71130929 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.969856099 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.975132292 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.974267581 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.974646017 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.98808032 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 4.099014075 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.972863711 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.991459567 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.979737936 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 2.002128592 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.978058806 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.978754046 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.978818338 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.97761409 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.976804419 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.981759876 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.982368699 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.703599707 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.22907761 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.980923489 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.982299863 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.68459572 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.990770253 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.470976836 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.97421318 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 2.071056375 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.978139023 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.979677302 seconds)
    (37/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 2.030166536 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.103436948 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.978248209 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.195508285 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 4.086435025 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.977397959 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.979756301 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 2.045541135 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.990151712 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.974792069 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.973942434 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.984519091 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 2.044286689 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.249105013 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.979853747 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.099265403 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.48063726 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.978312498 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.978359686 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.98033915 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.617291016 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.975074244 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.97810172 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.988584582 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.986503734 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.978800303 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.976638296 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.362167555 seconds)
    (65/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.977820856 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 2.050102061 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.550707197 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.660184492 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.978066394 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 23.031973787 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.061799085 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.977249603 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.98247956 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.980093381 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.979948505 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.981651997 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.984858591 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.100244614 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.987139553 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 5.10328479 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 2.057611013 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.099846346 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.983861355 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.982681682 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.826412706 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 2.05252219 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 2.012229332 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.811617258 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.979609295 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.356044743 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.74825909 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.977062635 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.98052634 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.992607467 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.977936013 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.981226823 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.983711637 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.984009119 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 2.059532179 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.986108587 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.107218686 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.731149156 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.644107071 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.986237935 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.987544625 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.986139394 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 2.070247799 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.107276969 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.994306385 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 2.055911129 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.994203101 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.992829908 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 4.106342912 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.992749006 seconds)
  done (took 427.111836123 seconds)
done (took 818.295711706 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.570395854 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.533129965 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.636307358 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.553769849 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.52770778 seconds)
  done (took 14.737860954 seconds)
done (took 16.654471963 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 2.000559632 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.994231665 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.047121722 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.075347957 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 2.004025663 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 2.005650314 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.069032792 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 2.013513265 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.041384767 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.045798705 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.074845005 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.07382924 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 2.01462999 seconds)
  done (took 28.374963622 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.994119593 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.130591792 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.210624826 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 2.028917967 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.997366029 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.204298115 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 2.049088655 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.125346649 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.126897513 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.209387408 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.229973939 seconds)
  done (took 25.221799577 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.996252079 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.136389316 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.212057313 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 2.026848098 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.99455974 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.215566792 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 2.055759602 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.124620919 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.143435379 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.211996216 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.218780348 seconds)
  done (took 25.259723595 seconds)
done (took 80.772906001 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.99303861 seconds)
  done (took 3.910799895 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 2.001322411 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.127440111 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.988350354 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.99127112 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.992639534 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.987799001 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.984712262 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.988811927 seconds)
  done (took 17.978769003 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.988322706 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.988377069 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.991113989 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.990013671 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.985752901 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.987950763 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.987096041 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.986896789 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.987762096 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.985713981 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.987148092 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.987642972 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.986498718 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.98848277 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.983922696 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.986532713 seconds)
  done (took 33.718448146 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.987171756 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.987800774 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.985038267 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.98514828 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.985828385 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.991726405 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.986403498 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.989282688 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.99040117 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.990887378 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.9884856 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.984959795 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.992270073 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.987618679 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.988286047 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.987926679 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.985205636 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.984435784 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.991178488 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.986909264 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.983945697 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.987426201 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.989091224 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.987006998 seconds)
  done (took 49.626039446 seconds)
done (took 107.158039251 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.660829499 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.687806133 seconds)
  done (took 10.267023462 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.991238796 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.987701909 seconds)
  done (took 5.902751215 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.986866525 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.989861815 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.987411505 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.989868339 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.990058538 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.985487656 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.990300139 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.993154666 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.989361439 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.989584814 seconds)
  done (took 21.814714658 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.987877645 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.988838042 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.990836941 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.985712054 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.988495365 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.986963954 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.988526807 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.992086423 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.990757036 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.990759171 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.988565868 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.98700335 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.98914883 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.987280528 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.989300505 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.991184771 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.99384505 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.987764963 seconds)
  done (took 37.727948966 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.99166319 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.990121409 seconds)
  done (took 5.897126985 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.992286666 seconds)
    (2/7) benchmarking "second"...
    done (took 1.992090746 seconds)
    (3/7) benchmarking "month"...
    done (took 1.99078667 seconds)
    (4/7) benchmarking "year"...
    done (took 1.991501661 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.992848789 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.990736517 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.993302214 seconds)
  done (took 15.864787272 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.987935892 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.128817467 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.18912138 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.796135569 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.993771535 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.994986385 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.265838052 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.996995105 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.994599373 seconds)
  done (took 22.26724922 seconds)
done (took 121.664142397 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.76425493 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.989137378 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.247351501 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 7.039047408 seconds)
  (5/8) benchmarking "pisum"...
  done (took 7.02513133 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.328741479 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 7.013488098 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.641652694 seconds)
done (took 43.970375302 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 7.045164291 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.989263339 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 7.034826148 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 7.035616415 seconds)
  done (took 22.981388723 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.988436436 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.293551555 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 7.013592893 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.914321446 seconds)
  done (took 23.147342023 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.374754461 seconds)
    (2/2) benchmarking "read"...
    done (took 2.334321782 seconds)
  done (took 6.634901577 seconds)
done (took 61.736190182 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.990607424 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.992595985 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.9891801 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.990481841 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.99314302 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.991773384 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.988901566 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.992246593 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.990163991 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.993144711 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.993890084 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.989396789 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.993746098 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.993636273 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.989578208 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.992361461 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.991577239 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.991179602 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.991462469 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.989829036 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.992545484 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.990398965 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.993700187 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.993145685 seconds)
  done (took 49.719834852 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.989578833 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.993880795 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.99228633 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.989880171 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.990281032 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.992239324 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.992546866 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.990535089 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.98986205 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.99104376 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.993096998 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.990132996 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.98647785 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.990431751 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.989151934 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.992355767 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.993242389 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.992965883 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.993278641 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.992286603 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.992004782 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.990300335 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.994334387 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.991780792 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.990917096 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.992149439 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.992155962 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.992468432 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.994875297 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.991335152 seconds)
  done (took 61.673853656 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.991928824 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.993600588 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.997624873 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.994566274 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.99364987 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.994835049 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.995155814 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.993695379 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.993832395 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.993353183 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.993243309 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.992854247 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.991431456 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.993758959 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.993315588 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.995430257 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.990865941 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.993208544 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.996200379 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.993556687 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.991919438 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.993817976 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.990658787 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.99151765 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.992273883 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.992391026 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.992846085 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.993330452 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.993534432 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.994109983 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.993270121 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.995012098 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.993268094 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.995048549 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.992523097 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.988280335 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.996419732 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.989204236 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.989551053 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.990536619 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.992450331 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.992909899 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.992622836 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.990074648 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.987195291 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.989291051 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.988299248 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.989719411 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.989762323 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.99304347 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.990315908 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.98834824 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.989388631 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.988907406 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.99530077 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.994114182 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.991266993 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.992456585 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.990101514 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.988839552 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.991156299 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.991498704 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.992405292 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.988794069 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.99678148 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.99183877 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.990354925 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.991899976 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.993453251 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.992055086 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.993473576 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.991381575 seconds)
  done (took 145.373772694 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.99426835 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.994392451 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.989054235 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.993916967 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.994419958 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.995276495 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.999802741 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.997335207 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.994855284 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.99127185 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.993808908 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.991142738 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.99548551 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.99272099 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.993971883 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.992334158 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.991446951 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.991260074 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.989510754 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.990836335 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.991765069 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.992439214 seconds)
  done (took 45.775299823 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.990759251 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.992662584 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.991847123 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.991724782 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.992618168 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.995804037 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.993311069 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.991252701 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.995330454 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.992068478 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.992566883 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.993233979 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.99414426 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.992466455 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.99280154 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.992386929 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.994176791 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.996540695 seconds)
  done (took 37.798465599 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.995499004 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.994500781 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.995167167 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.993638591 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.995674615 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.993349128 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.998391761 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.993728516 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.99459206 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.993330302 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.995857961 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.992151261 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.991987747 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.992606721 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.99709629 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.992246474 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.9942673 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.995236554 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.99841267 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.993572164 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 2.000047265 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.994167506 seconds)
  done (took 45.81041295 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.993407706 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.992382543 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.993778039 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.995159869 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.99510953 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.994584406 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.992853571 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.995527724 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.998131666 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.997453452 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.998430982 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.994860193 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.9960182 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.993276703 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.994960534 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.99612037 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.994847493 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.99829784 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.994300095 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.993476576 seconds)
  done (took 41.828887009 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 2.004856768 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 2.002272268 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 2.006557135 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 2.004781173 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 2.008113093 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 2.004001575 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 2.004536813 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 2.00547745 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 2.00390289 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 2.003379892 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 2.000646255 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 2.00288312 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 2.005068929 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 2.004990711 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 2.005804722 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 2.002252176 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 2.004996741 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 2.003897446 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 2.004431742 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 2.00349348 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 2.007681304 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 2.005244168 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 2.003756387 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 2.002528736 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 2.007480549 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 2.008044516 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 2.00505748 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 2.005980996 seconds)
  done (took 58.064474359 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 2.000675881 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.999605401 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 2.001453015 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.999720334 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.998631563 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.999225364 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.999735832 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.999739197 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.99823784 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.995048419 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.996543331 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.997557075 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 2.001151132 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 2.001130127 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.998751362 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 2.000575576 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.997814266 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 2.002534332 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 2.003917818 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.003667613 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 2.00403511 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.001807625 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.999562972 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 2.002109948 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.998641273 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 2.001697365 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 2.001890041 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 2.002202732 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 2.003851619 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 2.000214831 seconds)
  done (took 61.941710718 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 2.025973299 seconds)
    (2/2) benchmarking "in"...
    done (took 2.02059567 seconds)
  done (took 5.974961346 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 2.001409208 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.9993513 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 2.005070155 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 2.001689444 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 2.003637972 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 2.006068904 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 2.001484884 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 2.000773275 seconds)
  done (took 17.953493366 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 2.003595308 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 2.007516412 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 2.004352035 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.997877402 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 2.01016034 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 2.016324953 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 2.013528123 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 2.00576166 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 2.007100656 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 2.01448043 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 2.012271769 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 2.010733378 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 2.015267227 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 2.008605901 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 2.004411133 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 2.012360085 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 2.008739359 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 2.008903 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 2.008682355 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 2.004473349 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 2.009921135 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 2.011055145 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 2.003560227 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 2.010535513 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 2.005965276 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 2.010467634 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 2.017894668 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 2.008989756 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 2.009317648 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 2.000469711 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 2.016603893 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 2.004858776 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 2.018201887 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 2.008273522 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 2.012118418 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 2.007267979 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 2.017110211 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 2.01433499 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 2.016444565 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 2.006416615 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 2.009894933 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 2.008208856 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 2.014350274 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 2.019238445 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 2.014082837 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 2.008921474 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 2.010296251 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 2.016765844 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 2.013858384 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 2.016057281 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 2.013501299 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 2.007447463 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 2.005053792 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 2.009173383 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 2.012851954 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 2.011764792 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 2.017762582 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 2.012132417 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 2.02209115 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 2.019604662 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 2.017950331 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 2.032723458 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 2.023726202 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 2.014151954 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 2.01751844 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.015152708 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 2.039305003 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 2.01246047 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 2.011907934 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 2.008727119 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 2.019837263 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 2.012162133 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 2.0091776 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 2.010125838 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.024222839 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 2.020447184 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 2.0126561 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 2.009636648 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 2.014439933 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 2.013612775 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 2.013344137 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 2.014062923 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 2.017309118 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 2.01603789 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.020275642 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 2.037060151 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 2.016297519 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 2.014939229 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 2.017324421 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 2.015768367 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 2.022054619 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 2.017755193 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 2.018776062 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 2.013653179 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 2.014275486 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 2.020452961 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 2.020610342 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 2.019284594 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 2.022585808 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 2.023725749 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 2.012108144 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 2.015303251 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.019010018 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 2.025599975 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 2.014615938 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 2.019245578 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 2.020228342 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 2.019796097 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 2.025725889 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 2.018498085 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 2.013517523 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 2.013345209 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 2.020874959 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 2.025689458 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 2.015180107 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.013500544 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 2.023285245 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 2.020757993 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 2.02174868 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 2.020609716 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 2.018100038 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 2.021143127 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.022131965 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 2.044972956 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 2.014586625 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 2.020389469 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 2.023439369 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 2.033456112 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 2.019001956 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 2.007244465 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 2.015231885 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 2.009982794 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 2.013092595 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 2.018440343 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 2.008722141 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 2.018843076 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 2.012021084 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 2.016343748 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 2.010956348 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 2.02100407 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 2.021744076 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 2.017338778 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 2.014895277 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 2.01556949 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 2.017854999 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 2.018094907 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 2.015604163 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 2.024048439 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 2.017743535 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 2.018803019 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 2.009052361 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 2.018904305 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 2.01850046 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 2.013411349 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 2.011363366 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 2.009946899 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 2.015420028 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 2.017303666 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 2.016723125 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 2.019533083 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 2.010454701 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 2.017915254 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 2.017313896 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 2.018386809 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 2.01558712 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 2.020662338 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 2.016881069 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 2.01672148 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 2.015999689 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 2.014872201 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 2.015319046 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 2.020435649 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 2.01658314 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 2.013713218 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 2.011648615 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 2.017441479 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 2.012563464 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 2.019927195 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 2.01741158 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 2.025546323 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 2.017421617 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 2.022982411 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 2.012524963 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 2.023605889 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 2.012159467 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 2.013206775 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 2.018055466 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 2.016801366 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 2.019805195 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 2.014463725 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 2.012467164 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 2.022095056 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.036432385 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 2.029024875 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 2.019536308 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 2.022202786 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 2.027344095 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 2.015725878 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 2.021070298 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 2.013595826 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 2.018581081 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 2.020674797 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 2.019843552 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 2.02139632 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 2.014410443 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 2.019573491 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 2.020056631 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 2.014978244 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 2.026156705 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 2.022085404 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 2.014308255 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 2.019590842 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 2.014759256 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 2.018823755 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 2.013421264 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 2.019531893 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 2.019051295 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 2.015575057 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 2.026058533 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 2.021364398 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 2.013705266 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 2.021684137 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 2.020801655 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 2.021740677 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 2.01404721 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 2.022312304 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 2.023115379 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 2.021714831 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 2.021400006 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 2.029204748 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 2.021361985 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 2.022037829 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 2.020944213 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 2.015577306 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 2.024293821 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 2.0142708 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 2.025346187 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 2.024622413 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 2.020444883 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 2.016123088 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 2.024751495 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 2.014271038 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 2.024044497 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 2.024445557 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 2.021504492 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 2.021580624 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 2.019185274 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 2.021093161 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 2.013513852 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 2.027286472 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 2.01595436 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 2.020781545 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 2.014740522 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 2.025834749 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 2.022436057 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 2.022761063 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 2.022693789 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.025072573 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 2.034632615 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 2.025399636 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 2.0245692 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 2.028121319 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 2.019798397 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 2.024865221 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 2.020784967 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 2.020725935 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.031676277 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 2.032860054 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 2.017947226 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 2.017361469 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 2.023520666 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 2.020460036 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 2.017423221 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 2.026338265 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.029891919 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 2.02172721 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 2.026933728 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 2.021130051 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 2.02555383 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 2.025478833 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 2.028829008 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 2.022814157 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 2.025247632 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 2.023887636 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 2.021893206 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 2.019046099 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 2.018676606 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 2.02118039 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 2.024430373 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 2.024249202 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 2.024922997 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 2.020886303 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 2.024686513 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 2.020188044 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 2.033047647 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 2.018173892 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 2.022786267 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 2.032956838 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 2.023400317 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 2.023272671 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 2.024433079 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 2.016581636 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 2.024053147 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 2.022281137 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 2.026179681 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 2.028877517 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 2.025555595 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 2.028212187 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 2.032451972 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 2.023295933 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 2.038297387 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 2.025479397 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 2.037209235 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 2.027749856 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 2.022644183 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 2.026073266 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 2.029202947 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 2.036388339 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 2.023588685 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 2.023928273 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 2.032369323 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 2.028875225 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 2.026739978 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 2.032139405 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 2.018421398 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 2.028743623 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 2.027349012 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 2.029020797 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 2.029492863 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 2.02773739 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 2.022998203 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 2.026630544 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 2.024446249 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 2.029794032 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 2.029097322 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 2.028020058 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 2.023932098 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 2.026690936 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 2.023241285 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 2.030905757 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 2.029244245 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 2.024883418 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 2.027072636 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 2.023010216 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 2.019194448 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 2.031328777 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 2.025143145 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 2.027548985 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.035381656 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 2.021904984 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 2.036212326 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 2.028880609 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 2.03004683 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 2.031964374 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 2.024731634 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 2.031075019 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 2.023825373 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 2.030719637 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 2.031227958 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 2.022610804 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 2.029565761 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 2.039964953 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 2.031633454 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 2.032287137 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 2.023998414 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 2.031297186 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 2.027118033 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.033414728 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 2.045732529 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.028019593 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 2.027808586 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 2.027844108 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 2.035225395 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 2.031418342 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 2.032579358 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.030172045 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 2.037455782 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 2.029335873 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 2.027144729 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 2.030028632 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 2.040977414 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 2.032269534 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 2.025471857 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 2.02374641 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 2.032496633 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 2.032450861 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 2.026681823 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 2.03030079 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 2.031342474 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 2.030910398 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 2.044053903 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 2.026627238 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 2.033535299 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 2.029930272 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 2.026641067 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 2.031686022 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 2.026051661 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 2.025630718 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 2.027168971 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 2.03009061 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 2.032196197 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 2.030940993 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 2.03537934 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 2.030060518 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.031045283 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 2.036348636 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 2.032913975 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 2.029552407 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 2.031062652 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 2.030366314 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 2.030722688 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.03404203 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 2.030284006 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 2.031131072 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 2.024171101 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 2.032250722 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.031843238 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 2.037169035 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 2.027400684 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 2.023304385 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 2.025909554 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 2.033505938 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 2.031690275 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 2.033090541 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 2.030829742 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 2.036022757 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.036041088 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 2.044084028 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 2.040880669 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 2.035771068 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 2.034702309 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.035749787 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 2.041774052 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 2.035750948 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 2.033093461 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 2.034365103 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 2.036085678 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 2.035482558 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 2.028755004 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 2.033312501 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 2.038253497 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 2.035231673 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 2.027834018 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 2.033446832 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 2.03476099 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 2.026645269 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 2.034939824 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 2.031936418 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 2.034301747 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 2.026627507 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 2.027804906 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 2.032064453 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 2.03235952 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 2.0330031 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 2.035379842 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 2.035983126 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 2.027786691 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 2.033853951 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 2.03419936 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 2.032474316 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 2.028459217 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 2.029258285 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 2.034082446 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 2.026257204 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 2.028933281 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 2.034821504 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 2.035404038 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 2.028206075 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 2.035611509 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 2.045233216 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 2.029946771 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 2.034266685 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 2.038132113 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 2.03502468 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 2.037539899 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 2.040046188 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 2.03674826 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 2.030800735 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 2.045066736 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 2.031200307 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 2.03652737 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 2.036421422 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 2.030816197 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 2.039875085 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 2.034830182 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 2.036112812 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 2.038619712 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 2.039506031 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 2.029121179 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.038324565 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 2.046178948 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 2.041691913 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 2.037860062 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 2.038148075 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 2.037985858 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 2.035941797 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 2.032031381 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 2.029883881 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 2.038530227 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 2.0387764 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 2.037108957 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 2.033970895 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 2.034103781 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 2.039566262 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 2.035430552 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 2.037094298 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 2.034081038 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 2.028932825 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 2.031569732 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 2.036744523 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 2.043170895 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 2.047188699 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 2.033064989 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 2.038984069 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 2.038318809 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 2.03672384 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 2.049994141 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 2.038180995 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 2.038262544 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 2.03938973 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 2.036921343 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 2.038572203 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 2.04208099 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 2.048532719 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 2.041592481 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 2.038893969 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 2.041294879 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 2.056789231 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 2.039058035 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.046511375 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 2.070982063 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 2.040652164 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 2.038001096 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 2.037923384 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 2.038432412 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 2.039224977 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 2.041478329 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 2.0389485 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 2.044620565 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 2.039470837 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 2.03238091 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 2.045839474 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 2.033111117 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 2.036884844 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 2.040471853 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 2.038885055 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 2.041890646 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 2.038874859 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 2.044513333 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 2.040515565 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 2.03214862 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 2.041825718 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 2.043487528 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 2.035133312 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 2.033408941 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 2.033898167 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 2.039352012 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 2.032353194 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 2.041271953 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 2.047547975 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 2.041533022 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 2.038502811 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.050992016 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 2.051668064 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 2.039728644 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 2.035260341 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 2.044215287 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 2.042356108 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 2.041331298 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 2.035051067 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.042004265 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 2.044614104 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 2.041143369 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 2.043375974 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 2.04144396 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 2.039747416 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 2.042120002 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 2.03598868 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 2.044173664 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 2.053098881 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 2.048871747 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 2.042760913 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 2.0423691 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 2.046786713 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 2.035935572 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 2.044701386 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 2.047003703 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 2.04132074 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 2.043361264 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.045633346 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 2.037013045 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 2.033671024 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 2.035580613 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 2.043980899 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 2.045659647 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 2.045422889 seconds)
  done (took 1209.520148816 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 2.036516663 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 2.0380307 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 2.037889878 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 2.036044511 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 2.036785809 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 2.039403977 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 2.037588789 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 2.038347327 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 2.037339444 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 2.037678145 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 2.036331311 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 2.038536711 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 2.038987114 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 2.036487523 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 2.038544168 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 2.038338456 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 2.038841649 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 2.039446354 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 2.039491931 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 2.031982112 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 2.037888794 seconds)
  done (took 44.75522724 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 2.039036039 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 2.034414804 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 2.038304905 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 2.036589697 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 2.039071272 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 2.035735916 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 2.038299865 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.037739349 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 2.039137205 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.039804218 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 2.037296489 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.038975478 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 2.039326331 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 2.04078974 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.039647261 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 2.038241692 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 2.037082252 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 2.038948563 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 2.037726568 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 2.037833617 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 2.037671913 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 2.042965121 seconds)
  done (took 46.806672097 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 2.047396357 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 2.048373564 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 2.040271386 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 2.041499495 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 2.038196786 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 2.047122077 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 2.038861295 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 2.048221939 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 2.045553502 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 2.048171841 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 2.050798411 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 2.04599455 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 2.039648171 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 2.049305321 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 2.041108891 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 2.048702439 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.190348097 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 2.046874889 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 2.046645337 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 2.039633254 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 2.048870906 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 2.051099292 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 2.03836932 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 2.040663819 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 2.049418503 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 2.049497375 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 2.041380662 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 2.041179374 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 2.043708895 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 2.048615764 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 2.052019483 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 2.040350118 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 2.046351729 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 2.047499782 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 2.047005884 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 2.049413243 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 2.051593779 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 2.050401006 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 2.040843762 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 2.040526751 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 2.053783536 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 2.070305645 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 2.041330192 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 2.048445329 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 2.052234216 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 2.041740418 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 2.041661736 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 2.046227331 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 2.050421484 seconds)
  done (took 102.373969063 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 2.040938281 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 2.043378168 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 2.046290758 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 2.041026275 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 2.043330036 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 2.039199875 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 2.042172441 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 2.040462708 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 2.043351463 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 2.042233392 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 2.041114842 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 2.039794942 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 2.040127539 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 2.040667589 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 2.04053382 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 2.039492003 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 2.040658951 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 2.038633865 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 2.042476609 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 2.043690236 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 2.04187963 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 2.04632776 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 2.046298191 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 2.040387238 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 2.044164527 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 2.04552688 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 2.039449361 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 2.042578328 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 2.041451283 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 2.041886155 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 2.043398042 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 2.042936014 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 2.043752048 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 2.044955192 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 2.042413319 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 2.04242506 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 2.042554419 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 2.046441869 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 2.041720251 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 2.041905109 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 2.046621231 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 2.044332394 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 2.042038964 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 2.041969353 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 2.038167685 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 2.04079967 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 2.039708804 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 2.040392136 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 2.044668014 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 2.039536911 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 2.044673835 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 2.041326646 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 2.045752148 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 2.039968566 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 2.041914863 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 2.042457662 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 2.042057477 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 2.042728351 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 2.040284201 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 2.044648436 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 2.044681047 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 2.046518457 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 2.044864018 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 2.045211655 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 2.045664785 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 2.046555488 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 2.046776622 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 2.044618965 seconds)
  done (took 140.868183835 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 2.053831605 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 2.053434713 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 2.052112535 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 2.052636961 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 2.053044212 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 2.052191591 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 2.0511611 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 2.05228235 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 2.052544832 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 2.050890288 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 2.054330681 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 2.047141361 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 2.054211909 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 2.047917662 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 2.053051496 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 2.054901229 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 2.054486577 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 2.051094876 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 2.050936588 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 2.05317674 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 2.054264507 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 2.053658003 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 2.054502854 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 2.055473919 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 2.052619639 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 2.055339185 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 2.052205211 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 2.052653509 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 2.051400908 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 2.052272902 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 2.054792235 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 2.055251354 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 2.054511405 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 2.054955683 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 2.053433182 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 2.0533613 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 2.052542185 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 2.052196637 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 2.051155799 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 2.056162711 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 2.055996013 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 2.05372165 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 2.055613515 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 2.054289846 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 2.05916295 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 2.05525242 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 2.055872161 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 2.055052629 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 2.046480049 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 2.055617866 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 2.05464858 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 2.056775878 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 2.057270955 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 2.053987301 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 2.054525833 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 2.044935636 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 2.055872471 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 2.055954996 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 2.055227548 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 2.056274161 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 2.053499716 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 2.048246687 seconds)
  done (took 129.283577818 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 2.045552858 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 2.049263229 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 2.04559234 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 2.04724372 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 2.047426635 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 2.045707948 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 2.046117113 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 2.045804705 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 2.048177428 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 2.046585996 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.04759176 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 2.048253425 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.049482015 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.049765451 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 2.046862306 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.05082738 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 2.050061373 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 2.046647376 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 2.049890065 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 2.048660344 seconds)
  done (took 42.930408676 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 2.050223725 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 2.050174472 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 2.047069332 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 2.048198203 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 2.04826616 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 2.050537632 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 2.04517209 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.046303208 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.045706958 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.047438158 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 2.051173295 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 2.051053912 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.049683031 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 2.048308727 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 2.049875782 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 2.047134857 seconds)
  done (took 34.75013934 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 2.048338001 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 2.050504006 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 2.057743619 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 2.054412714 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 2.047867389 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 2.049028951 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 2.050068588 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 2.053590331 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 2.047745388 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 2.052473004 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 2.051236553 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 2.04990097 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 2.049944243 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 2.059512448 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 2.052967268 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 2.052315325 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 2.051617984 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 2.051633494 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 2.049050463 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 2.056319569 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 2.048480891 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 2.050120354 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 2.049673263 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 2.049291971 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 2.052135311 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 2.051246533 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 2.051570824 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 2.050609109 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 2.050484632 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 2.050610464 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 2.051625053 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 2.053784593 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 2.051122994 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 2.051230702 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 2.05725419 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 2.051408321 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 2.051900442 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 2.052255985 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 2.053750557 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 2.055998849 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 2.053659756 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 2.053497731 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 2.053151225 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 2.050762088 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 2.052153893 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 2.053746215 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 2.053216133 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 2.053167657 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 2.055079973 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 2.050067881 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 2.053527024 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 2.06076289 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 2.055342343 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 2.05306709 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 2.053856324 seconds)
  done (took 114.849806239 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 2.055345127 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 2.050469282 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 2.054733124 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 2.051512481 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 2.054269016 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 2.056154851 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 2.056062535 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 2.055884115 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 2.05393048 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 2.054499286 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 2.052080282 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 2.054084577 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 2.055300049 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 2.051941125 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 2.053296243 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 2.051614152 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 2.05447974 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 2.052493233 seconds)
  done (took 38.944907648 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 2.053797074 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 2.054314561 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 2.054844606 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 2.053549291 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 2.055385182 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 2.060159046 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 2.053249684 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 2.05381921 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.056755768 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 2.052649043 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.052379134 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 2.053152242 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.057218274 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 2.05432476 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 2.053588394 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.052926908 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 2.054235458 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 2.058037357 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 2.053911062 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 2.053522097 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 2.052712158 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 2.054197578 seconds)
  done (took 47.17683285 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 2.06529081 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 2.062465945 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 2.075546519 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 2.084213391 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 2.082412429 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 2.099904715 seconds)
  done (took 14.448330037 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 2.057056795 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.054632936 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 2.056149713 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 2.055599285 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.055574278 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.058225459 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.055620732 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.054082615 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.05581235 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 2.058006645 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.055017435 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.058350479 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.058477224 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.055342798 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.05745773 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.057407729 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.055560126 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.05696545 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 2.057197798 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.057545178 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.057931525 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.057563993 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.055675045 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.058004177 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.058654874 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.059818952 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.055971751 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 2.056689157 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.058497062 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.057216569 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.056703218 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.058976871 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.057889848 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 2.057922843 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 2.061138046 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.054790838 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.058365237 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.058559418 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.058096816 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.055897061 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 2.057495028 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.059276322 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.059345367 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.060427232 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.057796276 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.056327448 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.061019016 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.060016372 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.058016327 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 2.059929405 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.058274259 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.06264939 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.058517451 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.057316477 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.058352257 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 2.059196076 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 2.05953711 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.060573668 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.060568118 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 2.057681479 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.059709909 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.059170514 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.059050231 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 2.058474001 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.059682811 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.058111218 seconds)
  done (took 137.803601455 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.05971768 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 2.061769193 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.062475618 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 2.06131498 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.061066732 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.061630641 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.060758167 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.06014465 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.057995053 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 2.062519705 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.058641529 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.059045444 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.06139417 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.056982013 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.060413337 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.057582052 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.057908107 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.059914772 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 2.06089225 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 2.059944328 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.060057634 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.057811717 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.057468776 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.057268546 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 2.059808604 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.059348243 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.062818101 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.057580306 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.061506625 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.060015923 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.058163835 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.057306425 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.06213115 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 2.058143145 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.060700859 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.061086497 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.057389311 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.05866099 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.06190833 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.05806034 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.057807917 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.061583274 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.060873274 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.058540288 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 2.059437829 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.061853956 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.057257115 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 2.062360174 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.058783171 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 2.059708849 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 2.062664434 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 2.062726775 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 2.06269543 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.059722404 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.060837056 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.060663719 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.058175329 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.057902304 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.059774968 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.061097597 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.06120966 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.059154225 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 2.061302195 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.060707944 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.06015512 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.059544809 seconds)
  done (took 137.939838936 seconds)
done (took 2816.298500684 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 7.102341205 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.181999342 seconds)
  done (took 16.266311642 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.225978602 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.179647909 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 2.063146926 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 7.093600174 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 2.061872127 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 7.078410326 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 7.081098426 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 2.063403959 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 2.066718511 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 2.065219578 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 2.06431855 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.254023936 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 7.080850365 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 2.062250875 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 2.0651912 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.159755324 seconds)
  done (took 55.665161753 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 2.067862026 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 2.064971758 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 2.07790262 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 2.066242141 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 2.067115402 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 2.082196956 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 2.102072556 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 2.073131171 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 2.103219758 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 2.084143808 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.146628729 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 2.084738846 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 2.075315108 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.126259132 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 2.089073707 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 2.088473977 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.168767146 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.152699685 seconds)
  done (took 39.708877703 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.150992908 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 7.104212064 seconds)
  done (took 11.254453559 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 7.097088708 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 7.076409349 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 7.078413158 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 7.081406639 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 7.095569057 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 7.075081798 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 7.106543424 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 7.10684661 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 7.085759305 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 7.101663318 seconds)
  done (took 72.916346748 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 2.079754846 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 2.075174634 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 2.076907024 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 2.071399935 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 7.07187226 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 7.073599854 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 2.071555912 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 7.078695563 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.767392897 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 2.111356895 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 2.083139395 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 2.078085851 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 2.075189682 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 2.07488811 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 2.071556154 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 2.097467934 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.178299277 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 2.072063596 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 2.074031497 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 2.080905361 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 2.076414533 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 2.130993166 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 2.090206318 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 2.078390492 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 2.107491739 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.774311503 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 2.084368225 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 2.080063122 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.184948885 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 2.074473558 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 2.075407915 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.289216181 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 2.078378414 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.541860946 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.389397536 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 7.077337297 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 2.083934365 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 2.081804796 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 2.07209727 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.187482713 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 2.074736568 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 2.079637786 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.984634585 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.361785461 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.181240712 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 2.122051612 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.432196891 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 2.07654769 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 2.075564102 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 2.108801058 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 2.078670078 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 2.075996139 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 2.09383547 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.588587879 seconds)
  done (took 144.25294118 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 7.0801593 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.426180578 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.246737158 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 7.081542862 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.361682823 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.282091254 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 7.077098096 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.125413982 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 7.081783519 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.310365422 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.329750185 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.181366851 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 7.079503903 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 7.081122276 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.076804314 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 7.074647411 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.223292867 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.146482906 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 7.079013419 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 7.075599612 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.107292895 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.320906081 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.196202943 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 7.085142024 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 2.102720995 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.287025285 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.197554858 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.181391412 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.855768602 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 7.07791944 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.141450486 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 7.079131104 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 7.079781015 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 7.077834976 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.232277071 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.173365819 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.15933766 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 7.082498381 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 7.074433375 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 7.075697684 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.825621636 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.280031775 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.173105555 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.207445739 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.330729762 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.2825761 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.859980965 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 7.080127302 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.811367793 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.242637883 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.311982451 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.313401855 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.199494857 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 7.082810266 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.414711848 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 7.079083637 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 7.081560104 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.324600426 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.300392278 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.175247313 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 7.082836301 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 7.082682728 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 7.082066954 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.370528274 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 7.079495773 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.175407746 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.084998965 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 7.082442866 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.180171448 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.180252882 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.308311934 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.297322538 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.11154342 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.41956671 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.593228158 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.326907497 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.14379286 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.330742226 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 7.083441298 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 7.076290944 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.160632496 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.922320001 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.332869909 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.361991402 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.323339232 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.115523527 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.80032189 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 7.083713273 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.305088353 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.301205502 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.330907071 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.324945384 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.32017432 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.41075195 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 7.084279283 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 7.082190903 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.328839828 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.201602603 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 7.090113856 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.425579218 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.311777767 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.629224322 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.10893554 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.391917198 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.210863745 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 7.088828502 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.714192231 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 7.082858818 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.308260746 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.121444411 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 7.089794882 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.084119702 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.296604231 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 3.053276685 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 7.083567098 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.733263839 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.14023849 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 7.08645456 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.312375952 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 7.08481846 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.344364356 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 7.084760082 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.311742717 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.186803594 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.112630811 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.25994024 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.328494652 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 7.090507386 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.326995916 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.321527175 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.200722205 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.303858486 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.712335379 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 7.080354298 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.367782433 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 7.085273006 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 7.085273832 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.251162749 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 7.089127642 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.229911618 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 7.092454016 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.369251845 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.104501237 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.327058474 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.091919409 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.340784071 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.118179372 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.133923071 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 7.088997746 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.216520413 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.089733852 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.90765111 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.241667413 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.085542266 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 7.085153919 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.630463135 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 7.086253163 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.230647871 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.311684463 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.10574864 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.15596839 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.749509934 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 7.084803904 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.169921445 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.108884712 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.473777983 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 7.085534535 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.338685886 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 7.092292658 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 7.085693242 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 7.086530622 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.367876053 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.265236887 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 7.085608912 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 7.086757637 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.983053021 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 7.084733501 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 7.08736238 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.268283936 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.499346302 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 7.084107547 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.290004018 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.086663205 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.212520977 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 7.088520715 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.160672499 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.418050976 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 7.087522907 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 7.086069059 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 7.08856039 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 7.084751604 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 7.089227758 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.296191433 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.110638559 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.604808239 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.224533548 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.353559912 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.395792194 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.329228586 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.129197432 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.091750769 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.339990687 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 7.088817484 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.148146976 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 7.087969873 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.108288111 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.319884009 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.08974843 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.293000216 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.354823833 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 3.087627346 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.135137378 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 7.090076235 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.088030086 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 7.089054808 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.231832428 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.177685915 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 7.093315026 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 7.087482452 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.202626604 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.21465945 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.295486803 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 7.091340409 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.163932066 seconds)
  done (took 951.515035604 seconds)
done (took 1293.566033983 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 7.087604667 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 7.08584245 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 7.081600278 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 7.09330247 seconds)
  done (took 30.354457527 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 2.084002891 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 2.092239173 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 2.092654036 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 2.090311853 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 2.086816574 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 2.094174985 seconds)
  done (took 14.546357868 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.1955698 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 7.090138962 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 7.092840698 seconds)
  done (took 22.384604579 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 2.159391441 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.497260024 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.22975541 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.524974288 seconds)
  done (took 11.419481602 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 2.092961585 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 2.090767364 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 2.092638341 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 2.085474232 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 2.087529707 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 2.084329556 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 2.085607459 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 2.083544385 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 2.087407589 seconds)
  done (took 20.796500423 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.750146795 seconds)
done (took 106.262365352 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 7.194909345 seconds)
    (2/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.167855417 seconds)
    (3/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.221154474 seconds)
    (4/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.300221723 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 2.159157477 seconds)
    (6/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.374523358 seconds)
    (7/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.473913809 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.379837298 seconds)
    (9/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.185922857 seconds)
    (10/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 2.088370376 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 7.093289723 seconds)
    (12/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.237355164 seconds)
    (13/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 7.09559009 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 3.828056965 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.225355286 seconds)
    (16/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 7.093112964 seconds)
    (17/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.277869959 seconds)
    (18/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.085600445 seconds)
    (19/309) benchmarking ("perf_sum", Float32, true)...
    done (took 3.907483758 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.182871688 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.235366368 seconds)
    (22/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.199089966 seconds)
    (23/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 2.115368575 seconds)
    (24/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 2.108913374 seconds)
    (25/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.265104851 seconds)
    (26/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.480610721 seconds)
    (27/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.859857762 seconds)
    (28/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.300484344 seconds)
    (29/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.567179415 seconds)
    (30/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 7.096683422 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.459677084 seconds)
    (32/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.183288835 seconds)
    (33/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.248749459 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.981394079 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.435356346 seconds)
    (36/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.460934581 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.480441724 seconds)
    (38/309) benchmarking ("sort", BigInt, false)...
    done (took 7.097757147 seconds)
    (39/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 7.089068954 seconds)
    (40/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.369572947 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 3.008001508 seconds)
    (42/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.307633436 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.83907886 seconds)
    (44/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 7.104857548 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.23583345 seconds)
    (46/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.432390774 seconds)
    (47/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.185634951 seconds)
    (48/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 2.104523188 seconds)
    (49/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 2.107360257 seconds)
    (50/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 2.11194361 seconds)
    (51/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.995299034 seconds)
    (52/309) benchmarking ("sort", Float32, false)...
    done (took 5.826826944 seconds)
    (53/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.18859198 seconds)
    (54/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 2.107237539 seconds)
    (55/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.390399363 seconds)
    (56/309) benchmarking ("sort", Bool, false)...
    done (took 2.318928295 seconds)
    (57/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 7.09708484 seconds)
    (58/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.209330018 seconds)
    (59/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.191011291 seconds)
    (60/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.522458713 seconds)
    (61/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.392241584 seconds)
    (62/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.351000804 seconds)
    (63/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.394266567 seconds)
    (64/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.624090555 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 2.115477057 seconds)
    (66/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.087342948 seconds)
    (67/309) benchmarking ("sort", Int64, false)...
    done (took 7.458321272 seconds)
    (68/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 2.095198305 seconds)
    (69/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.340728437 seconds)
    (70/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.729305345 seconds)
    (71/309) benchmarking ("perf_sum", Int64, true)...
    done (took 2.108911516 seconds)
    (72/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.346104896 seconds)
    (73/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 2.10310832 seconds)
    (74/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.200458365 seconds)
    (75/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 7.098413909 seconds)
    (76/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.801250724 seconds)
    (77/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.795380276 seconds)
    (78/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.278656666 seconds)
    (79/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.2466315 seconds)
    (80/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 7.098125956 seconds)
    (81/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.700437774 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.573037147 seconds)
    (83/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.164841802 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 7.097534631 seconds)
    (85/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 7.1754627 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 3.032756594 seconds)
    (87/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.420451265 seconds)
    (88/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.196709315 seconds)
    (89/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.423963104 seconds)
    (90/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 2.11056394 seconds)
    (91/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.985181665 seconds)
    (92/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.208746803 seconds)
    (93/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 7.095865327 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.198523042 seconds)
    (95/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.090451502 seconds)
    (96/309) benchmarking ("perf_sum", Float64, true)...
    done (took 4.175188466 seconds)
    (97/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 2.123132402 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.219166511 seconds)
    (99/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.271031142 seconds)
    (100/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.237621256 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.212284302 seconds)
    (102/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.740430313 seconds)
    (103/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.339655302 seconds)
    (104/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 2.105229268 seconds)
    (105/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 7.099504843 seconds)
    (106/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.35122668 seconds)
    (107/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.346998544 seconds)
    (108/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.197360104 seconds)
    (109/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 2.117710097 seconds)
    (110/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.388209791 seconds)
    (111/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.248570286 seconds)
    (112/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 7.202420629 seconds)
    (113/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.476256287 seconds)
    (114/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.227117321 seconds)
    (115/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 2.117570004 seconds)
    (116/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.256125191 seconds)
    (117/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.232581667 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.694903141 seconds)
    (119/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 2.146431568 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.220310902 seconds)
    (121/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.883920166 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.895214439 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.478946903 seconds)
    (124/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 2.116173157 seconds)
    (125/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.167773417 seconds)
    (126/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.961773244 seconds)
    (127/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.595598557 seconds)
    (128/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.184671519 seconds)
    (129/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.243903584 seconds)
    (130/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.160326131 seconds)
    (131/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 2.122653403 seconds)
    (132/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.867060296 seconds)
    (133/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.280495213 seconds)
    (134/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 7.096831725 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.352260084 seconds)
    (136/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.10818429 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.998981963 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.424850702 seconds)
    (139/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.75260903 seconds)
    (140/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 7.11007436 seconds)
    (141/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 2.121007262 seconds)
    (142/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.094570895 seconds)
    (143/309) benchmarking ("sort", Int8, false)...
    done (took 6.932870382 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.494971754 seconds)
    (145/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.415415217 seconds)
    (146/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.201366358 seconds)
    (147/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 2.197209831 seconds)
    (148/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.153658192 seconds)
    (149/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 2.114435168 seconds)
    (150/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.995320554 seconds)
    (151/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.016788639 seconds)
    (152/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.845046051 seconds)
    (153/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.012616154 seconds)
    (154/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 7.10891822 seconds)
    (155/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.886685265 seconds)
    (156/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 2.119079393 seconds)
    (157/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.780165282 seconds)
    (158/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.671556293 seconds)
    (159/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.539947364 seconds)
    (160/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.390593199 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 3.107289034 seconds)
    (162/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 7.105240826 seconds)
    (163/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.374202442 seconds)
    (164/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.317905379 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 2.138163976 seconds)
    (166/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.308958809 seconds)
    (167/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 7.107711853 seconds)
    (168/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.863597418 seconds)
    (169/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.285294935 seconds)
    (170/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 7.107121209 seconds)
    (171/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.23658676 seconds)
    (172/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.234889749 seconds)
    (173/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.817662566 seconds)
    (174/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.500151374 seconds)
    (175/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 2.101676547 seconds)
    (176/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.342401562 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.980933466 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.237538464 seconds)
    (179/309) benchmarking ("sort", Float64, false)...
    done (took 5.818147 seconds)
    (180/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.301274235 seconds)
    (181/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.49783112 seconds)
    (182/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 2.123048951 seconds)
    (183/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 2.119381992 seconds)
    (184/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.156631481 seconds)
    (185/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.172824737 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.373697143 seconds)
    (187/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.236157096 seconds)
    (188/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.332603089 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.442066728 seconds)
    (190/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 7.107290041 seconds)
    (191/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.585091189 seconds)
    (192/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.552630766 seconds)
    (193/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.340635785 seconds)
    (194/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.162974642 seconds)
    (195/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 7.108446903 seconds)
    (196/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 7.107545887 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.239836367 seconds)
    (198/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.107185125 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 4.066522644 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.511312505 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.229660364 seconds)
    (202/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 7.173292196 seconds)
    (203/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 2.116558697 seconds)
    (204/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.333911994 seconds)
    (205/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.290208328 seconds)
    (206/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 2.12791469 seconds)
    (207/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.174226642 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.762064578 seconds)
    (209/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.427844237 seconds)
    (210/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.784677509 seconds)
    (211/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.283098423 seconds)
    (212/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.395699946 seconds)
    (213/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 7.10545159 seconds)
    (214/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 7.099721515 seconds)
    (215/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.572899431 seconds)
    (216/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.403600002 seconds)
    (217/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.374319463 seconds)
    (218/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.408778191 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.895692904 seconds)
    (220/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.888567857 seconds)
    (221/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.315806434 seconds)
    (222/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.535764724 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.135302246 seconds)
    (224/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.879038698 seconds)
    (225/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 2.120460569 seconds)
    (226/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.982324049 seconds)
    (227/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.416574402 seconds)
    (228/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.547437612 seconds)
    (229/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.37596818 seconds)
    (230/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.41702178 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.962981667 seconds)
    (232/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.695499379 seconds)
    (233/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.588945352 seconds)
    (234/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.109574136 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.96060926 seconds)
    (236/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.179514165 seconds)
    (237/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 7.10941929 seconds)
    (238/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.591079887 seconds)
    (239/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 2.109711011 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 7.10676827 seconds)
    (241/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.250749787 seconds)
    (242/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.290694388 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 7.113339834 seconds)
    (244/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 7.106995467 seconds)
    (245/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.414382132 seconds)
    (246/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.274139573 seconds)
    (247/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.192535582 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.700560525 seconds)
    (249/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.11612959 seconds)
    (250/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.237436608 seconds)
    (251/309) benchmarking ("sort", BigFloat, false)...
    done (took 7.107300553 seconds)
    (252/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.520592649 seconds)
    (253/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.238016036 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.434566538 seconds)
    (255/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.19425277 seconds)
    (256/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.452747752 seconds)
    (257/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.451985953 seconds)
    (258/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.214078574 seconds)
    (259/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.508571661 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.426372952 seconds)
    (261/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 2.130447195 seconds)
    (262/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.21089875 seconds)
    (263/309) benchmarking ("perf_sum", Int8, true)...
    done (took 2.110826985 seconds)
    (264/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.228038317 seconds)
    (265/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.400267708 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.010402401 seconds)
    (267/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.530826638 seconds)
    (268/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.180303114 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.281848111 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.424984992 seconds)
    (271/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.666106907 seconds)
    (272/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.592261399 seconds)
    (273/309) benchmarking ("perf_sum", Int64, false)...
    done (took 2.128902084 seconds)
    (274/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 7.108709257 seconds)
    (275/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.285807924 seconds)
    (276/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.222297799 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.434144496 seconds)
    (278/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.164376651 seconds)
    (279/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.303380136 seconds)
    (280/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 7.101074423 seconds)
    (281/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.34041302 seconds)
    (282/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.285866613 seconds)
    (283/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.182736494 seconds)
    (284/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.493469674 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.236614257 seconds)
    (286/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.510599814 seconds)
    (287/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.261968906 seconds)
    (288/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.375159488 seconds)
    (289/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.49579984 seconds)
    (290/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 2.193579109 seconds)
    (291/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.943197609 seconds)
    (292/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 2.226042149 seconds)
    (293/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 7.108407152 seconds)
    (294/309) benchmarking ("perf_sum", Int8, false)...
    done (took 2.180640917 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.448076454 seconds)
    (296/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.188626108 seconds)
    (297/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 7.111680458 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.516534805 seconds)
    (299/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.415363039 seconds)
    (300/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.060393586 seconds)
    (301/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.556183405 seconds)
    (302/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 7.21597735 seconds)
    (303/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 2.156285978 seconds)
    (304/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 7.104234407 seconds)
    (305/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 8.238662577 seconds)
    (306/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.399503639 seconds)
    (307/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.261653409 seconds)
    (308/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.550920934 seconds)
    (309/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.441340858 seconds)
  done (took 1084.699859606 seconds)
done (took 1087.05384922 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 2.131922396 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.124794916 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 2.10522465 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 2.129233414 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.217811755 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 2.14979516 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 2.120124118 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 2.106253812 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 2.156112118 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 2.157449841 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 2.101907296 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 2.142769661 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 2.108092486 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 2.107276927 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 2.106876954 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.129235064 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.41878954 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 2.138099482 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 2.124543946 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 2.119064889 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 2.124555487 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 2.10728711 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 2.158728555 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 2.148925907 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 2.111271997 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 2.110972995 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 2.112089416 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 2.127400589 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.222199044 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 2.111307936 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 2.116113218 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 2.119629766 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.416695214 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 2.136157362 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 2.107959412 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 2.127530457 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 2.124273235 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 2.120092021 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 2.113332329 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 2.143759932 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.570715049 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 2.113454539 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 2.10805065 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 2.107869887 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 2.110376848 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 2.113832462 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 2.110056758 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 2.117991346 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.12584405 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.128275961 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.565043833 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 2.130753907 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 2.109714009 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 2.110297434 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 2.125106112 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 2.110089936 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 2.115226642 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.127008057 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 2.130182658 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.12634409 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.406612104 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 2.149357473 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 2.11588394 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 2.129452379 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 2.119045468 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.603009375 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 2.113392906 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 2.118782838 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.573732046 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 2.124459672 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.604867959 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 2.127966666 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 2.114657646 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 2.12529615 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 2.138721803 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.421132297 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 2.14204507 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 2.107805125 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 2.119968326 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 2.10757486 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 2.12069651 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.12978048 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 2.117731508 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 2.117572295 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.128073193 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.154922019 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 2.126263733 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 2.112846922 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 2.123491953 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 2.132846859 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 2.120994076 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 2.123051982 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 2.117391206 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 2.11073937 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 2.124354535 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 2.11532611 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 2.111099115 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 2.117276578 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 2.111047122 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 2.125048325 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.570612279 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.138329051 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 2.112335768 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 2.110175098 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 2.112185458 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 2.121122375 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.569622365 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 2.115587195 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 2.135025707 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.162795524 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 2.110339869 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.409433744 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 2.14727387 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.131202973 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 2.120218962 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 2.11631408 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 2.111093163 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.408636974 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.601679524 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 2.136729688 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 2.114101654 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 2.108145052 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.131823042 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 2.114970671 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 2.111559524 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.426007638 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 2.149641937 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.134604019 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.237614028 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 2.123527626 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 2.147431923 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 2.108937891 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 2.116438616 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 2.158292788 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.134231234 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 2.144720065 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 2.11266021 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.133002385 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 2.131991448 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 2.109022672 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 2.125353217 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 2.127307339 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 2.115887091 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 2.122979791 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 2.112406981 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 2.16099429 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.131014624 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.13116709 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 2.135761303 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.237494201 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 2.114395049 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.411668878 seconds)
done (took 331.277858855 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.202682102 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 7.122092095 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.244619744 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 2.114769647 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.21073819 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.193984705 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 2.117393387 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 2.11513576 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 2.115833617 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.615899337 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 2.11789479 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 2.115960329 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 7.12245025 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 2.113556221 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.189823543 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 2.116275268 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 2.115112263 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.400612571 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 2.120455633 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.201740675 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 7.119547668 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 2.114565826 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 2.115356377 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.619518299 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 7.120546955 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 7.11978062 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.199907626 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 2.118745752 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.40496961 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 7.117195213 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 7.120693982 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.409827736 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.200676709 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 2.126367415 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 2.126200279 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 2.12238809 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.208345587 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 2.121758105 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.190597001 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.187323665 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.241357868 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 2.156777273 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 7.121641585 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 7.123046324 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 2.122693017 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 2.126934876 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 2.116276816 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 2.149927516 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 7.122067145 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 2.125369726 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.402248111 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 2.121889123 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 2.122161925 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 2.117627578 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 2.11656595 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 2.138664491 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 2.117557375 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 2.126775305 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.203888507 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 2.125659507 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.191633583 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.623417671 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.618638793 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 2.119804724 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 7.1247718 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 2.117864738 seconds)
  done (took 201.366179306 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.189228496 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.194146417 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.190116376 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 2.131010287 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.174305716 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.192894673 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 2.129940227 seconds)
  done (took 17.238733217 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 2.13123261 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.116748857 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.183477267 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.181415148 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 2.125896393 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.349791675 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 2.136660884 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 2.121680595 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 2.154346054 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 2.118663995 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.789743489 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.184222217 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 2.122462721 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 7.126539807 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 2.13753136 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 2.190382312 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 2.127433785 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.125985932 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.235627754 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.275307801 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 2.122185817 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 2.124127951 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 2.153298945 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 2.136855453 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 2.120059026 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.124163709 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 2.129369329 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 2.131711583 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.115897091 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 2.122501047 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.119631531 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 2.174757513 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 2.119616169 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 7.123857081 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.117434931 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 2.123387894 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 2.128082525 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.119118904 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 2.122859821 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 7.12677609 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 2.119935976 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 2.121584965 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 2.121414572 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 2.122345425 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 2.122091123 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 2.151079883 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 2.12114657 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 2.120507865 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 2.120499447 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 2.119617157 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 2.149946324 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 2.118950128 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 2.120492231 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 2.124685409 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.17274547 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 2.127752798 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 2.127905199 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 2.117870493 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.120432313 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 2.120628973 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.118403421 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.272113785 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.186758604 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 2.119243559 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.184365829 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.278272312 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.117841861 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 2.119290129 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 2.119520484 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.211049665 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 2.120372755 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.186985106 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 2.120462708 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.255711239 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 2.120339389 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.348046071 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 2.149392735 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 2.128809964 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 2.128072572 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 7.12328725 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 2.13297537 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 2.121157352 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 2.126050974 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 2.137068395 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 2.124447272 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.118914084 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 2.119326567 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 2.126904981 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 2.135620511 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 2.121108598 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.178333572 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 2.121807927 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 2.1296909 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.262532258 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 2.12017064 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.237239873 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 2.155158722 seconds)
  done (took 230.95448696 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 2.134210423 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 2.134393428 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 2.130969629 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 2.144055537 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 2.132987507 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 2.1291519 seconds)
  done (took 14.849711876 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 2.133209821 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 2.128921443 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 2.125389299 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 2.122246048 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 2.131325009 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 2.130773299 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 2.122907804 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.131328886 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 2.135433616 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 2.1212503 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 2.133124231 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 2.123718582 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 2.13089407 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 2.127605668 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 2.123771593 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 2.123917323 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 2.124561507 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 2.124025262 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 2.121352615 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.129684662 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.26509701 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 2.132113289 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.13322792 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 2.128279557 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 2.133470609 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 2.124615444 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.14231435 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 2.123416404 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 2.120559577 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 2.139117851 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 2.134483233 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 2.13051966 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 2.125779594 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 2.137227343 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 2.129495491 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 2.127545965 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.127945926 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 2.121405226 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.122934829 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 2.130162102 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 2.122714246 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.134019614 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 2.124891564 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 2.122909567 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 2.129737287 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 2.133353774 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 2.126374573 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 2.142464565 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 2.124070994 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 2.123938218 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 2.122732766 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 2.123188475 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 2.128914455 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 2.122436499 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 2.128361018 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.138034837 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 2.125939823 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 2.123362441 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 2.12970171 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 2.128019183 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 2.128422552 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 2.13098173 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.132083974 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 2.127678988 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 2.130998122 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 2.121732106 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 2.131551634 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.138456251 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.129166718 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 2.121408933 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 2.122600657 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 2.124850198 seconds)
  done (took 156.419227571 seconds)
done (took 622.886572566 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.459175056 seconds)
  done (took 9.503456004 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.33639772 seconds)
  done (took 9.455926973 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 9.099526727 seconds)
  done (took 11.147586895 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 7.139423975 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.15525786 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 7.127992363 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 7.136584852 seconds)
  done (took 30.617306643 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.339641475 seconds)
  done (took 9.38496351 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 7.137321824 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 7.124461339 seconds)
  done (took 16.361080549 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.152469753 seconds)
  done (took 9.200260646 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.553640846 seconds)
  done (took 9.616822362 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 7.146221006 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 7.151017876 seconds)
  done (took 16.363960368 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 7.130704736 seconds)
  done (took 9.179364683 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.889915849 seconds)
  done (took 10.007805749 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 7.143879901 seconds)
  done (took 9.205397318 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.151437439 seconds)
  done (took 9.198254615 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.239015599 seconds)
  done (took 9.287913451 seconds)
done (took 170.579531314 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 7.143001305 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 7.13045484 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 7.12982895 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 7.126566508 seconds)
  done (took 30.578207325 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 2.160968257 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 2.160444085 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 2.167038793 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 2.155205281 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 2.150148443 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 2.148965247 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 2.161965973 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.161485379 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 2.15257854 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 2.156718764 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.158268844 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 2.158797322 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 2.161118768 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 2.167925148 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 2.170629197 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 2.159200448 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 2.159103864 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 2.158439222 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 2.153116753 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 2.168200938 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 2.15561312 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 2.159519153 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 2.125797328 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 2.127741763 seconds)
  done (took 53.805418397 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.319115411 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.196927201 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.286234213 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.1784113 seconds)
  done (took 11.029607785 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 2.126292366 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.188549798 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 2.174001925 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 2.171541635 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.221039452 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.228486545 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 2.179050354 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.336386929 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.240523991 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.254348981 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 2.134591059 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 2.145198484 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 2.151017769 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 2.18067088 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.226695949 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 2.126282939 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 2.125231206 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.242334344 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 2.188828712 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.33602122 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 2.125810631 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 2.182370571 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.209702265 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 2.177075114 seconds)
  done (took 54.720135137 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 2.127201367 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 2.135279187 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 2.133371739 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 2.126487792 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 2.128705984 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 2.125804721 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 2.130888321 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 2.12943768 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 2.149712489 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 2.12756046 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 2.127011787 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 2.129175325 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 2.137296756 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 2.126709728 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 2.127534067 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 2.139939635 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 2.143701484 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 2.126460751 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 2.130848874 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 2.134128021 seconds)
  done (took 44.686751021 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 7.131280725 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.979460032 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.479239065 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.380149211 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 7.131008646 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 7.132070615 seconds)
  done (took 33.283565027 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 2.145732748 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 2.140128984 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 2.132718948 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.188676175 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.277039809 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 2.141408044 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 2.134390551 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 2.146336161 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.182617796 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.203961523 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.155866985 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 2.162612887 seconds)
  done (took 28.062959753 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 7.13407572 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 7.137800842 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 7.138572391 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 2.148539068 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 2.145839033 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 2.145911454 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 2.144296453 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 7.132742776 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.146284294 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 2.157081793 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 2.147436308 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 2.145546165 seconds)
  done (took 47.777732519 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.34148496 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.352967461 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.327743305 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.736791908 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.127533073 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 5.028868007 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.763357395 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.856942215 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.419961602 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 4.096575184 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.095670632 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.209147432 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.370420627 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.137587971 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.378155829 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.045431383 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 2.130268168 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.397449206 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.129286757 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.128651978 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.420785032 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.169933105 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.342090626 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.170969044 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.336787445 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.612670147 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.379798712 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.383756968 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.460211846 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 7.167899308 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.356716931 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.182366662 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.138539522 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 2.136875719 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 7.129066663 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 2.141989272 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.398134171 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.12983998 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 7.135510151 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.134986545 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.052941545 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.414216081 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.233806864 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.554943867 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.259397235 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.371307331 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.13300302 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.340604052 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.19704956 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.353977714 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.221279303 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.339349889 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.053550166 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.453698371 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.243011211 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 2.133036697 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.133887784 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.827947535 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.366315406 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.210409401 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.414124438 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.229169852 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.134312232 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.218328912 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 7.129012974 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.24252686 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.32904608 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.138701698 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 7.134183809 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.135723894 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.225140474 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.34507283 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 2.13332567 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.130627147 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 2.147923295 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.131138938 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.480809949 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.715223717 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.13000701 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.689325764 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.66883083 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.103689157 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.620006769 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.183255935 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.389876574 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.32948411 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.216788758 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.375371183 seconds)
    (89/481) benchmarking "5d"...
    done (took 4.013255595 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.134374979 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.934824447 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.20960081 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.192884301 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.129262208 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.336826255 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.394151976 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.240140194 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.12675462 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.056497649 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 2.140559172 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.332634438 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.631139608 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.197577005 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.128310144 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.129466171 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.13210988 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 2.131457283 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.144702654 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 2.144997031 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.046639997 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.441763273 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.231558371 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.381508009 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 5.116852931 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.824884562 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.396884037 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.247943564 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.698344502 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.244055023 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.129977991 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.27348314 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.143890289 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.132539214 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.328637757 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.586851777 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.353200727 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.382488559 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.159428875 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.158465326 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.136536238 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.212589287 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.356767255 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 7.141164242 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.363135425 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.359878223 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.834515051 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.155569893 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.203492714 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.141224707 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.344779178 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.214387278 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.672122029 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.338041138 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.722320208 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 5.124106594 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.730402742 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.353659771 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.50263707 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.147212652 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.344771453 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.173380274 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.83364614 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 4.058576841 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.136016897 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.45390304 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 7.16037339 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.165258386 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 2.131576654 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 2.131010344 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.139605948 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.213082392 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.20732052 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.207983626 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.058855797 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.132067744 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 2.135489422 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.132117433 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.680338309 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.78534247 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.420163404 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.133220421 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.205152271 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 2.13699033 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.746624882 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.136056843 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.168187236 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 7.13899316 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.862352589 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.165019824 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.365125746 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.515718909 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.245281417 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.131731992 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.13454418 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.833063409 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.142080778 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.833032623 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.439745116 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 5.122610016 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.567895996 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.183115302 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.220747821 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 2.148563233 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.134001361 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 2.134068783 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.134502988 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.335389306 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.650771714 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.422527509 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.466490802 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.2173287 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.398318663 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.31698453 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.633165541 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.816787837 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.637014746 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.360375153 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.135049291 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.137623424 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.59715348 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.143339727 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.351713037 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.337791413 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.389337584 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.41405048 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.533325375 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.13799303 seconds)
    (218/481) benchmarking "4d"...
    done (took 3.150125444 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.375178905 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.135012347 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.57463712 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.166488797 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.46873071 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.932398336 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.393063679 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 2.189882282 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 2.146216018 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.769273032 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.253838735 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.084232748 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.26509837 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 4.061136725 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.832577973 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.42801251 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.407865763 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.107486628 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.471864792 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.422097446 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.363011588 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.75205808 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 7.134287699 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.187639531 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.216423395 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.144000248 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.700428311 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.185451445 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.192330729 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.140870951 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.136797526 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.149053221 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.829161834 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.218318253 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.267965745 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.845863492 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.65823184 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.056967726 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.403284564 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.183821404 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.584482601 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.161712423 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.349635369 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.140714821 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.73361368 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.195788208 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.390404744 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.080065774 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.349995347 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.323112113 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.151795836 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.143885454 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.063534503 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 3.028691104 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.140593407 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.357080831 seconds)
    (275/481) benchmarking "3d"...
    done (took 3.031279842 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 2.138913386 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.427981656 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.778549767 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.182473541 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.138947586 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.417452872 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.530207683 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.310618384 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.146632752 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.351071 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.287235512 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.060555243 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.630070955 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.722534098 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.837513452 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 2.149238569 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.342308814 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.440770856 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.452012012 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.1872055 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.210224086 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.399455683 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.109430168 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.139603823 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.659964187 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.235714362 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.379147795 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.429120059 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.651542464 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.526041296 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.376306418 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.131103933 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.333573836 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.483671072 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.368077491 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.071695824 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.228894808 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.352978932 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.400671881 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.003675177 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.849292876 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.380927545 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 2.145931228 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.062912151 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.349016941 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.650699748 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.532904489 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.682787679 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.359480289 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.175666423 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.629726544 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.157972279 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.07622722 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.142074037 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.093628241 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.354707295 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.359536649 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.18779353 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.696452666 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.369052283 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.527515206 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.40380936 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.188614661 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.067321573 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.854444149 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 4.089562402 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.16589419 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.177251933 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.213371062 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 2.1442673 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.34362279 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.579843765 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.198720596 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.687330942 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.330260612 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.428731412 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.409264907 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.417653478 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.086917183 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.414094983 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.087672773 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.673610963 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.236058811 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.216309507 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.144688477 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.146086525 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.413759069 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.440039183 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.755554023 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.189507317 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.445904722 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.233142659 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.147461864 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.147720319 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.662657801 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.38630685 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.357428016 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.22099667 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 7.345872877 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.217640771 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.659103544 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.152327503 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.147929555 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.282576365 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.145079887 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.828326861 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.43348678 seconds)
    (383/481) benchmarking "6d"...
    done (took 3.882398908 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.349412019 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.664600129 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 3.045745904 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.370456815 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.196485065 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.144770206 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 7.150151585 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.155821154 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.386490243 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.410024636 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.901263423 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.152959378 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.146421753 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 3.030808534 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.851222038 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.377588468 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 7.213260717 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.149156952 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.15313714 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.261183204 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.14635085 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.412129945 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.19463786 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.14083228 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.152452802 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.359070044 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.660477681 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.161601911 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.846109796 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.347995595 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.155054913 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.634718336 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.598722165 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.424991919 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 2.196093002 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.372064024 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.393372135 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.663817556 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.375823255 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.150859571 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.372825887 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.146877829 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.417520758 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.419829889 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 2.146319544 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.36489194 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.636593406 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.44535989 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.161041967 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 3.027293372 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.149484812 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.410257791 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.20427984 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.14619449 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.156221562 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 7.154705624 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.802564297 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.613884129 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.290220742 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.443904025 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.946065103 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.905357389 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.148360009 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 2.15153691 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.851447106 seconds)
    (449/481) benchmarking "2d"...
    done (took 2.883873483 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.362576294 seconds)
    (451/481) benchmarking "7d"...
    done (took 2.438729836 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.097994602 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.351474605 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.853320201 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 7.148621143 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.414817044 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.075771783 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.154307665 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.681940504 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.430543894 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.085510163 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.153859906 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.729455902 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 7.155639952 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.235200782 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.154567614 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.276495548 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.412113227 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.492949348 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 2.253234435 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.790959503 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.805840959 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.088088479 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.200985692 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.95628659 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.714856558 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.882763294 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.17263339 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.167810803 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.076516944 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.152168541 seconds)
  done (took 1767.328346776 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.173969936 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.176291565 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.183012968 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.213827244 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.185660211 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.278712415 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.190961112 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 7.184519609 seconds)
  done (took 59.661742815 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 7.1559455 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.175152108 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 2.161315029 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.157536022 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.179176611 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 7.157445443 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.317593218 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.169417506 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.162198582 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 2.166115425 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 7.158266259 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 7.156302223 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.420623984 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.180391913 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 7.158228003 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.149719343 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.161972262 seconds)
  done (took 79.275041231 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.153312631 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.398503721 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.210678576 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.153563776 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 9.145355284 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.167351142 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.210878706 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.201092211 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.161131227 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.405394641 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.45211176 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.19639974 seconds)
  done (took 93.933668103 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.167311051 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 2.155649173 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.158141976 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 2.159091011 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 2.160166618 seconds)
  done (took 12.883216566 seconds)
done (took 2319.13909427 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.439417298 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.216552047 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.254224186 seconds)
  done (took 6.545366276 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.305490102 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.352261031 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.466185009 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.223886542 seconds)
  done (took 11.430534204 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.418816312 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.537032819 seconds)
  done (took 7.032239344 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.527196475 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.174347791 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.531030252 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 7.156748465 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.160756918 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.164662953 seconds)
  done (took 23.567944852 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.15835153 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.157622827 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.155772102 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.15568698 seconds)
  done (took 10.703795733 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 7.155564112 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.878134507 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 7.156128668 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.165000125 seconds)
  done (took 22.431120939 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.311149238 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.269129012 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.3499232 seconds)
  done (took 9.009699794 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.312995585 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.002342575 seconds)
  done (took 7.398078856 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.301064139 seconds)
  done (took 4.379500331 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.185507033 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.428744481 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.668578976 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 3.138899475 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.806766979 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.255249658 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.536643253 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.421757453 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.562010452 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.605637549 seconds)
  done (took 28.688493634 seconds)
done (took 147.93694089 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.692807131 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.195010643 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.368626378 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.550522469 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.398688317 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.368022709 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.375101559 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.551712692 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.256165724 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.257293126 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.608446353 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.401664945 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.331156432 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.18738481 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.337382345 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.186869395 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.396897955 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.55425829 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.221208021 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.442223045 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.389432002 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.186936701 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.381212114 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.205293017 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.400949471 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.316428982 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.733752954 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.186823364 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.370018298 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.745465154 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.320379168 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.583751372 seconds)
  done (took 178.584132808 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.167240421 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.168504724 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.165846603 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.168157469 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.473516599 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.170075754 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.168871652 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.166307414 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.381394964 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.369013114 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.167610223 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.461971196 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.168752869 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.16753003 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.166150371 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.169638181 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.532715982 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.169058361 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.165222162 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.164202142 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.171529539 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.30637047 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.167984292 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.312709184 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.517789115 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.166343197 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.163625449 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.166284145 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.168894978 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.167055037 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.165599583 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.169824061 seconds)
  done (took 217.460682571 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.167205834 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.172352189 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.172949191 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.168998834 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.168300092 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.170522244 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.172954699 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.169533984 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.970603355 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.949343702 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.167135014 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.172873132 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.176609881 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.169069317 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.170468575 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.168993661 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.170672447 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.17031525 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.172913031 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.168123665 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.169940454 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.918027288 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.167917072 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.910348516 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.170913861 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.166952108 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.170771992 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.166444129 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.169165983 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.169405829 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.172981262 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.169106761 seconds)
  done (took 230.599979463 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.406177335 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.166408449 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.161351469 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 3.213850159 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.164913011 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.160306941 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.173181162 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.412929092 seconds)
  done (took 21.94515192 seconds)
done (took 650.693027148 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.515062641 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.893040033 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.308752594 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.19184328 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.421887533 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.238785786 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.184475712 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.250223146 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 3.026714268 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.259162477 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.581409264 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.199829194 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.947660131 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.217471722 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.312293989 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.245243018 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.535054405 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.845269063 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.3331772 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.854194396 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.352839891 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.153209797 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.267962801 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 3.074008556 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.611281313 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.1740456 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.232353944 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.538372279 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.192505877 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.354897993 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.819440531 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.464541152 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.205189141 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.193410019 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.240536673 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.219706502 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.402478379 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.202365253 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.309955792 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.942032926 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.84189328 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.910220183 seconds)
  done (took 113.153833564 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.179726365 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.173548095 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.175512456 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.176541263 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.183987286 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.17502387 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.173570756 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.176750606 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.175439973 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.174296652 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.174364401 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.182963552 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.174274706 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.187106285 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.171171958 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.175720838 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.175509675 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.180752375 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.176064894 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.1780754 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.175783993 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.175831713 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.177210673 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.173455395 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.17424735 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.176325154 seconds)
  done (took 58.697329988 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.165243771 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.368856322 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.421293235 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.194735614 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.177812222 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.177920903 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.204461217 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.174322719 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.177463578 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.178984384 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.27670566 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.175397877 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.188977388 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.419475641 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.193734824 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.16699154 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.167235923 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.177537089 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.372682515 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.19310954 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.205242037 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.177916163 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.204106838 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.189358143 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.175548787 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.178742066 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.180801393 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.613320845 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.190335864 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.276036667 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.251717232 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.211704222 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.507923966 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.432076663 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.234303901 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.177251567 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.170922497 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.283220009 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.18687431 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.1815273 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.209673552 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.18835347 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.427086593 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.707786644 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.193822694 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.173880284 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.61029137 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.296543752 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.220389046 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.194742768 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.433184317 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.197039092 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.174130999 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.176370917 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.215557483 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.196103446 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.180874972 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.435051306 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.199701697 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.205891242 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.178579906 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.181479187 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.381889833 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.187237468 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.367164179 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.191220085 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.188088399 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.180171136 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.429028178 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.196285866 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.716714752 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.19646983 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.172772322 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.279880601 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.376427916 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.637987402 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.194483606 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.381631778 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.527912897 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.218021839 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.190729382 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.597386213 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.218708548 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.186962303 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.173103846 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.174729299 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.172864316 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.222177753 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.210202711 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.629866553 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.718363377 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.451220783 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.222907447 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.194367009 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.18374314 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.433120118 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.18759327 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.176706113 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.417423984 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.730993012 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.194761003 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.186040213 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.700217387 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.19616866 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.209110766 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.190659604 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.442504397 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.200758991 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.218323535 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.174331671 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.186690594 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.187334733 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.213736483 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.192910435 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.174653402 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.689981477 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.301623489 seconds)
  done (took 268.671532143 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.178513388 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.178011998 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.18228818 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.17803345 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.182636845 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.181835517 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.182427016 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.181476013 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.184527771 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.18266259 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.181439406 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.180495184 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.18196652 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.182338198 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.219737733 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.185750416 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.67486365 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.184240257 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.180525346 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.182804527 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.741707398 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.187147876 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.18218968 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.184635609 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.183964403 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.18450709 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.190485236 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.217320423 seconds)
  done (took 176.336958357 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.177813199 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.239569436 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.19829986 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.232837375 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.192626143 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.179901425 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.281396033 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.20218452 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.189617654 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.178613569 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.175860657 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.215883361 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.184504406 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.273272214 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.214695947 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.283448559 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.288538389 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.186780949 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.179864061 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.180415703 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.235243514 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.189147344 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.216121881 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.244809625 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.190006101 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.241156281 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.188764799 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.17805986 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.182790076 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.299455577 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.195471572 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.206438034 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.219436638 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.206549791 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.303038772 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.298262632 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.279850882 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.276983687 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.193075789 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.179451653 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.181270831 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.176993386 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.240274771 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.192660742 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.185149189 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.295176935 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.195821752 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.181749836 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.178150434 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.17847276 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.197333879 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.203508167 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.218155334 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.309567659 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.225556742 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.205231921 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.280685709 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.302469605 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.188002104 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.283739529 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.18696748 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.292800258 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.197118387 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.179023315 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.181323378 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.184236635 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.2241254 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.292710677 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.286896824 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.191337389 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.280911374 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.231751005 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.194359416 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.179045967 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.181439289 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.242991542 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.297380817 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.232903501 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.247005432 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.223459619 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.188171746 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.189310365 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.177808623 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.213565696 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.187276603 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.292463517 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.302494023 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.188465428 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.184766564 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.178856898 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.183340681 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.213718171 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.248889131 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.227244715 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.288206954 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.224497621 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.228706546 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.186450983 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.194367446 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.184200316 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.220416486 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.190231049 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.190496638 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.45949984 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.216540313 seconds)
  done (took 235.391569121 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.591477648 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.229984156 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.260310991 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.466340372 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.565664132 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 4.097511304 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.225501824 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.231132701 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.254172356 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.362453826 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.301576903 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.27283209 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.228597839 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.208869265 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.229282862 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.261251558 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.25824168 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.537811357 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.429082764 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.757520942 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.225355573 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.533276456 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.56029241 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.592709672 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.28293123 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.635743215 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.85759312 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.323864536 seconds)
  done (took 71.888614745 seconds)
done (took 926.230074232 seconds)
SAVING RESULT...
DONE!
